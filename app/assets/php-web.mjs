
var PHP = (() => {
  var _scriptDir = import.meta.url;
  
  return (
function(moduleArg = {}) {

var Module = moduleArg;

var readyPromiseResolve, readyPromiseReject;

Module["ready"] = new Promise(((resolve, reject) => {
 readyPromiseResolve = resolve;
 readyPromiseReject = reject;
}));

[ "_pib_init", "_pib_storage_init", "_pib_destroy", "_pib_run", "_pib_exec", "_pib_refresh", "_pib_flush", "_main", "_malloc", "_free", "_php_time", "_gettimeofday", "_time", "_php_date_get_date_ce", "_php_date_get_immutable_ce", "_php_date_get_interface_ce", "_php_date_get_timezone_ce", "_php_date_get_interval_ce", "_php_date_get_period_ce", "_zend_register_ini_entries_ex", "_zend_unregister_ini_entries_ex", "__efree", "_php_info_print_table_start", "_php_info_print_table_row", "_php_info_print_table_end", "_display_ini_entries", "_zend_hash_destroy", "__efree_48", "_zend_register_string_constant", "_zend_register_long_constant", "_strlen", "_cfg_get_entry", "__emalloc_48", "__zend_hash_init", "_zend_hash_str_find", "_zend_hash_str_add", "_get_timezone_info", "_zend_throw_error", "_php_format_date", "__estrdup", "__emalloc_16", "_abs", "_ap_php_snprintf", "_ap_php_slprintf", "_strcmp", "_smart_str_realloc", "_smart_str_erealloc", "_php_idate", "_zend_wrong_parameters_count_error", "_zend_parse_arg_str_slow", "_zend_parse_arg_long_slow", "_zend_wrong_parameter_error", "_php_error_docref", "_php_date_set_tzdb", "_php_version_compare", "_php_parse_date", "_php_mktime", "_php_strftime", "___zend_malloc", "__emalloc", "___zend_realloc", "__erealloc", "_zend_wrong_parameters_none_error", "_zend_parse_arg_bool_slow", "__zend_new_array_0", "_add_assoc_long_ex", "_add_next_index_long", "_add_assoc_string_ex", "_add_index_long", "__emalloc_96", "_zend_iterator_init", "_zend_hash_str_update", "_php_date_instantiate", "_object_init_ex", "_php_date_initialize", "_zend_throw_exception_ex", "_instanceof_function_slow", "_zval_ptr_dtor", "_zend_string_concat3", "_zend_std_get_properties", "_zend_hash_add", "_add_index_string", "_add_assoc_zval_ex", "_add_assoc_bool_ex", "_add_assoc_double_ex", "_zend_parse_method_parameters", "_memset", "_zend_parse_parameters", "_zend_value_error", "__ecalloc", "_zend_replace_error_handling", "_zend_restore_error_handling", "_add_assoc_str_ex", "_zend_hash_next_index_insert", "_zval_get_long_func", "_zval_get_double_func", "_zend_dval_to_lval_slow", "_zval_get_string_func", "_strtoll", "_zend_parse_parameters_ex", "_zend_type_error", "_get_active_function_or_method_name", "_rebuild_object_properties", "_zend_create_internal_iterator_zval", "_zend_argument_value_error", "_add_next_index_string", "_strncasecmp", "_add_assoc_null_ex", "__estrndup", "_zend_parse_arg_double_slow", "_zend_ini_double", "_zend_strpprintf", "_OnUpdateString", "_zend_std_write_property", "_zend_register_internal_interface", "_zend_declare_class_constant_ex", "_zend_error", "_zend_register_internal_class_ex", "_zend_class_implements", "_zend_object_std_init", "_object_properties_init", "_zend_object_std_dtor", "_zend_objects_clone_members", "_zend_std_compare_objects", "_zend_std_get_properties_for", "_zend_array_dup", "_zend_std_has_property", "_zend_is_true", "_zend_std_read_property", "_zend_std_get_property_ptr_ptr", "_zend_declare_typed_property", "_zend_unmangle_property_name_ex", "_zend_lookup_class", "_zend_update_property", "_sin", "_cos", "_acos", "_atan2", "_isdigit", "_strtol", "_isspace", "_pow", "_strchr", "_strtod", "_printf", "_snprintf", "__emalloc_8", "_toupper", "_llabs", "_php_libxml_initialize", "_php_libxml_error_handler", "_xmlSetGenericErrorFunc", "_xmlParserInputBufferCreateFilenameDefault", "_xmlOutputBufferCreateFilenameDefault", "_php_libxml_shutdown", "_rc_dtor_func", "_xmlSetStructuredErrorFunc", "_zend_llist_destroy", "_xmlResetLastError", "_php_libxml_node_free_list", "_xmlRemoveID", "_xmlUnlinkNode", "_xmlFreeProp", "_xmlFreeNs", "_xmlFreeNode", "_php_libxml_issue_error", "_xmlCopyError", "_xmlStrdup", "_zend_llist_add_element", "_php_libxml_ctx_error", "_zend_vspprintf", "_php_libxml_ctx_warning", "_php_libxml_structured_error_handler", "_xmlInitParser", "_xmlGetExternalEntityLoader", "_xmlSetExternalEntityLoader", "_xmlRelaxNGCleanupTypes", "_php_libxml_switch_context", "__emalloc_32", "_zend_llist_init", "_xmlResetError", "_xmlGetLastError", "_add_property_long_ex", "_add_property_string_ex", "_add_property_stringl_ex", "_zend_llist_get_first_ex", "_zend_llist_get_next_ex", "_zend_llist_clean", "_php_libxml_disable_entity_loader", "_zend_fcall_info_init", "_zend_release_fcall_info_cache", "_php_libxml_xmlCheckUTF8", "_php_libxml_register_export", "_php_libxml_import_node", "_zend_hash_find", "_php_libxml_increment_node_ptr", "_php_libxml_decrement_node_ptr", "_php_libxml_increment_doc_ref", "_php_libxml_decrement_doc_ref", "_xmlFreeDoc", "_php_libxml_node_free_resource", "_php_libxml_node_decrement_resource", "_zend_call_function", "_php_file_le_stream", "_php_file_le_pstream", "_zend_fetch_resource2_ex", "_xmlAllocParserInputBuffer", "_xmlNewIOInputStream", "_xmlFreeParserInputBuffer", "__try_convert_to_string", "_xmlNewInputFromFile", "__php_stream_read", "__php_stream_free", "_zend_binary_strncasecmp", "_php_stristr", "_xmlParseCharEncoding", "_strstr", "_xmlParseURI", "_xmlURIUnescapeString", "_xmlFreeURI", "_xmlAllocOutputBuffer", "_xmlStrncmp", "_php_stream_locate_url_wrapper", "_php_le_stream_context", "_zend_fetch_resource_ex", "_php_stream_context_alloc", "__php_stream_open_wrapper_ex", "__php_stream_write", "_zend_objects_not_comparable", "_OPENSSL_init_ssl", "_CRYPTO_get_ex_new_index", "_getenv", "_X509_get_default_cert_area", "_strlcpy", "_php_stream_xport_register", "_php_register_url_stream_wrapper", "_php_unregister_url_stream_wrapper", "_php_stream_xport_unregister", "_php_stream_generic_socket_factory", "_OpenSSL_version", "_ERR_get_error", "___zend_calloc", "_expand_filepath", "_php_check_open_basedir", "_zend_argument_error_variadic", "_get_active_function_arg_name", "_php_verror", "_SSL_get_ex_data", "_X509_free", "_X509_REQ_free", "_EVP_PKEY_free", "_zend_add_attribute", "_X509_get_default_cert_file", "_X509_get_default_cert_file_env", "_X509_get_default_cert_dir", "_X509_get_default_cert_dir_env", "_X509_get_default_private_dir", "_zend_ini_string", "_BIO_new_file", "_X509_print", "_PEM_write_bio_X509", "_BIO_free", "_NETSCAPE_SPKI_new", "_ASN1_STRING_set", "_NETSCAPE_SPKI_set_pubkey", "_NETSCAPE_SPKI_sign", "_NETSCAPE_SPKI_b64_encode", "_sprintf", "_CRYPTO_free", "_NETSCAPE_SPKI_free", "_zend_hash_index_find", "_EVP_PKEY_up_ref", "_BIO_new_mem_buf", "_PEM_read_bio_PUBKEY", "_PEM_read_bio_PrivateKey", "_X509_get_pubkey", "_EVP_sha1", "_EVP_md5", "_EVP_md4", "_EVP_sha224", "_EVP_sha256", "_EVP_sha384", "_EVP_sha512", "_EVP_ripemd160", "_NETSCAPE_SPKI_b64_decode", "_X509_PUBKEY_get", "_NETSCAPE_SPKI_verify", "_BIO_s_mem", "_BIO_new", "_PEM_write_bio_PUBKEY", "_BIO_ctrl", "_BIO_free_all", "_ASN1_STRING_get0_data", "_zend_try_assign_typed_ref_stringl", "_EVP_get_digestbyname", "_X509_digest", "_make_digest_ex", "_X509_check_private_key", "_X509_verify", "_X509_get_subject_name", "_X509_NAME_oneline", "_X509_subject_name_hash", "_X509_get_issuer_name", "_X509_get_version", "_X509_get_serialNumber", "_ASN1_INTEGER_to_BN", "_BN_bn2hex", "_BN_free", "_i2s_ASN1_INTEGER", "_X509_getm_notBefore", "_X509_getm_notAfter", "_X509_alias_get0", "_X509_get_signature_nid", "_OBJ_nid2sn", "_OBJ_nid2ln", "_X509_PURPOSE_get_count", "_X509_PURPOSE_get0", "_X509_PURPOSE_get_id", "_X509_check_purpose", "_add_index_bool", "_X509_PURPOSE_get0_sname", "_X509_PURPOSE_get0_name", "_zend_hash_index_update", "_X509_get_ext_count", "_X509_get_ext", "_X509_EXTENSION_get_object", "_OBJ_obj2nid", "_OBJ_obj2txt", "_add_assoc_stringl_ex", "_zend_array_destroy", "_X509V3_EXT_print", "_X509_EXTENSION_get_data", "_X509_NAME_entry_count", "_X509_NAME_get_entry", "_X509_NAME_ENTRY_get_object", "_X509_NAME_ENTRY_get_data", "_ASN1_STRING_type", "_ASN1_STRING_to_UTF8", "_ASN1_STRING_length", "_add_next_index_stringl", "_add_next_index_str", "_atoi", "_mktime", "_X509V3_EXT_get", "_ASN1_item_d2i", "_BIO_puts", "_BIO_write", "_GENERAL_NAME_print", "_GENERAL_NAME_free", "_X509_STORE_free", "_PEM_X509_INFO_read_bio", "_X509_INFO_free", "_X509_STORE_new", "_zval_try_get_string_func", "_stat", "_X509_LOOKUP_file", "_X509_STORE_add_lookup", "_X509_LOOKUP_ctrl", "_X509_LOOKUP_hash_dir", "_X509_STORE_CTX_new", "_X509_STORE_CTX_init", "_X509_STORE_CTX_set_purpose", "_X509_verify_cert", "_X509_STORE_CTX_free", "_OPENSSL_sk_pop_free", "_X509_dup", "_PKCS12_create", "_i2d_PKCS12_bio", "_PKCS12_free", "_d2i_PKCS12_bio", "_PKCS12_parse", "__zend_new_array", "_zend_try_assign_typed_ref_arr", "_PEM_write_bio_PrivateKey", "_OPENSSL_sk_num", "_OPENSSL_sk_pop", "_OPENSSL_sk_free", "_X509_REQ_print", "_PEM_write_bio_X509_REQ", "_X509_REQ_get_pubkey", "_X509_REQ_verify", "_X509_new", "_X509_set_version", "_ASN1_INTEGER_set_int64", "_X509_REQ_get_subject_name", "_X509_set_subject_name", "_X509_set_issuer_name", "_X509_gmtime_adj", "_X509_set_pubkey", "_X509V3_set_ctx", "_X509V3_set_nconf", "_X509V3_EXT_add_nconf", "_X509_sign", "_NCONF_new", "_NCONF_load", "_OBJ_create_objects", "_OBJ_sn2nid", "_ASN1_STRING_set_default_mask_asc", "_NCONF_free", "_X509_REQ_new", "_X509V3_EXT_REQ_add_nconf", "_X509_REQ_sign", "_zend_try_assign_typed_ref", "_EVP_PKEY_CTX_new_id", "_EVP_PKEY_paramgen_init", "_EVP_PKEY_CTX_ctrl", "_EVP_PKEY_paramgen", "_EVP_PKEY_CTX_free", "_EVP_PKEY_CTX_new", "_EVP_PKEY_keygen_init", "_RSA_pkey_ctx_ctrl", "_EVP_PKEY_keygen", "_NCONF_get_string", "_NCONF_get_section", "_X509_REQ_set_version", "_OBJ_txt2nid", "_X509_NAME_add_entry_by_NID", "_X509_NAME_get_index_by_NID", "_X509_NAME_add_entry_by_txt", "_X509_REQ_get_attr_by_NID", "_X509_REQ_add1_attr_by_txt", "_X509_REQ_set_pubkey", "_EVP_PKEY_new", "_RSA_new", "_EVP_PKEY_assign", "_RSA_free", "_DSA_new", "_DSA_free", "_DH_new", "_DH_free", "_EC_KEY_new", "_EC_KEY_free", "_EVP_des_ede3_cbc", "_EVP_PKEY_bits", "_EVP_PKEY_base_id", "_EVP_PKEY_get0_RSA", "_RSA_get0_key", "_RSA_get0_factors", "_RSA_get0_crt_params", "_EVP_PKEY_get0_DSA", "_DSA_get0_pqg", "_DSA_get0_key", "_EVP_PKEY_get0_DH", "_DH_get0_pqg", "_DH_get0_key", "_EVP_PKEY_get0_EC_KEY", "_BN_new", "_EC_KEY_get0_group", "_EC_GROUP_get_curve_name", "_OBJ_nid2obj", "_ASN1_OBJECT_free", "_EC_KEY_get0_public_key", "_EC_POINT_get_affine_coordinates_GFp", "_EC_KEY_get0_private_key", "_BN_num_bits", "_BN_bn2bin", "_BN_bin2bn", "_DH_size", "_DH_compute_key", "_EVP_PKEY_derive_init", "_EVP_PKEY_derive_set_peer", "_EVP_PKEY_derive", "_PKCS5_PBKDF2_HMAC", "_SMIME_read_PKCS7", "_PKCS7_verify", "_PKCS7_get0_signers", "_PEM_write_bio_PKCS7", "_PKCS7_free", "_OPENSSL_sk_value", "_PKCS7_encrypt", "_BIO_printf", "_SMIME_write_PKCS7", "_OPENSSL_sk_new_null", "_OPENSSL_sk_push", "_EVP_rc2_40_cbc", "_EVP_rc2_64_cbc", "_EVP_rc2_cbc", "_EVP_des_cbc", "_EVP_aes_128_cbc", "_EVP_aes_192_cbc", "_EVP_aes_256_cbc", "_PEM_read_bio_PKCS7", "_PEM_write_bio_X509_CRL", "_PKCS7_sign", "_PKCS7_decrypt", "_PEM_read_bio_CMS", "_d2i_CMS_bio", "_SMIME_read_CMS", "_CMS_verify", "_CMS_get0_signers", "_PEM_write_bio_CMS", "_CMS_ContentInfo_free", "_CMS_encrypt", "_SMIME_write_CMS", "_CMS_final", "_i2d_CMS_bio", "_PEM_write_bio_CMS_stream", "_CMS_get0_type", "_CMS_get1_certs", "_CMS_get1_crls", "_X509_CRL_free", "_CMS_sign", "_CMS_decrypt", "_EVP_PKEY_sign_init", "_EVP_PKEY_sign", "_zend_try_assign_typed_ref_str", "_EVP_PKEY_decrypt_init", "_EVP_PKEY_decrypt", "_EVP_PKEY_encrypt_init", "_EVP_PKEY_encrypt", "_EVP_PKEY_verify_recover_init", "_EVP_PKEY_verify_recover", "_ERR_error_string_n", "_zend_parse_arg_str_or_long_slow", "_EVP_PKEY_size", "_EVP_MD_CTX_new", "_EVP_DigestInit", "_EVP_DigestUpdate", "_EVP_SignFinal", "_EVP_MD_CTX_free", "_EVP_VerifyFinal", "_EVP_get_cipherbyname", "_EVP_CIPHER_iv_length", "__safe_emalloc", "_EVP_CIPHER_CTX_new", "_EVP_EncryptInit", "_EVP_CIPHER_CTX_free", "_EVP_CIPHER_CTX_block_size", "_EVP_CIPHER_CTX_reset", "_EVP_SealInit", "_EVP_EncryptUpdate", "_EVP_SealFinal", "_EVP_OpenInit", "_EVP_DecryptUpdate", "_EVP_OpenFinal", "_OBJ_NAME_do_all_sorted", "_EC_get_builtin_curves", "_EVP_MD_size", "_EVP_DigestFinal", "_php_openssl_encrypt", "_EVP_EncryptFinal", "_php_base64_encode", "_EVP_CIPHER_CTX_ctrl", "_zend_try_assign_typed_ref_null", "_EVP_CIPHER_flags", "_EVP_CIPHER_nid", "_EVP_CipherInit_ex", "_EVP_CIPHER_key_length", "_EVP_CIPHER_CTX_set_key_length", "_EVP_CIPHER_CTX_set_padding", "_EVP_CipherUpdate", "_EVP_CIPHER_block_size", "_php_openssl_decrypt", "_EVP_DecryptFinal", "_php_base64_decode_ex", "_php_openssl_cipher_iv_length", "_php_openssl_cipher_key_length", "_php_openssl_random_pseudo_bytes", "_RAND_bytes", "_zend_throw_exception", "_zend_try_assign_typed_ref_bool", "_PEM_read_bio_X509", "_d2i_X509", "_PEM_ASN1_read_bio", "_OPENSSL_sk_shift", "_PEM_read_bio_X509_REQ", "_ERR_set_mark", "_ERR_pop_to_mark", "_OBJ_ln2nid", "_OBJ_create", "_NCONF_get_number_e", "_RAND_file_name", "_RAND_load_file", "_RAND_status", "_RAND_write_file", "_RSA_set0_key", "_RSA_set0_factors", "_RSA_set0_crt_params", "_DSA_set0_pqg", "_DSA_set0_key", "_DSA_generate_key", "_BN_is_zero", "_DH_set0_pqg", "_DH_set0_key", "_DH_generate_key", "_BN_CTX_new", "_BN_with_flags", "_BN_mod_exp_mont", "_BN_CTX_free", "_EC_GROUP_new_by_curve_name", "_EC_GROUP_set_asn1_flag", "_EC_GROUP_set_point_conversion_form", "_EC_KEY_set_group", "_EC_KEY_set_private_key", "_EC_POINT_new", "_EC_POINT_mul", "_EC_POINT_set_affine_coordinates_GFp", "_EC_KEY_set_public_key", "_EC_POINT_free", "_EC_KEY_check_key", "_EC_KEY_generate_key", "_EC_GROUP_free", "_ERR_clear_error", "_TLS_client_method", "_TLS_server_method", "_SSL_CTX_new", "_php_stream_context_get_option", "_SSL_CTX_set_default_passwd_cb_userdata", "_SSL_CTX_set_default_passwd_cb", "_SSL_CTX_set_cipher_list", "_SSL_CTX_set_security_level", "_SSL_CTX_free", "_SSL_CTX_set_alpn_protos", "_zend_strndup", "_SSL_CTX_set_alpn_select_cb", "_SSL_CTX_set_options", "_SSL_CTX_ctrl", "_SSL_new", "_SSL_set_ex_data", "_SSL_set_fd", "_SSL_ctrl", "_SSL_copy_session_id", "_SSL_CTX_set_verify", "_SSL_load_client_CA_file", "_SSL_CTX_set_client_CA_list", "_SSL_CTX_load_verify_locations", "_SSL_CTX_get_cert_store", "_SSL_CTX_set_default_verify_paths", "_SSL_select_next_proto", "_SSL_CTX_use_certificate_chain_file", "_SSL_CTX_use_PrivateKey_file", "_SSL_CTX_check_private_key", "_SSL_CTX_get_options", "_SSL_get_error", "_ERR_peek_error", "_SSL_set_shutdown", "_php_socket_strerror", "__safe_malloc", "___zend_strdup", "_SSL_CTX_callback_ctrl", "__emalloc_24", "_SSL_set_info_callback", "_SSL_shutdown", "_SSL_free", "_close", "_fdopen", "_SSL_pending", "__php_stream_fill_read_buffer", "_SSL_version", "_SSL_get_current_cipher", "_SSL_CIPHER_get_name", "_SSL_CIPHER_get_bits", "_SSL_CIPHER_get_version", "_SSL_get0_alpn_selected", "_SSL_peek", "_recv", "_php_stream_xport_crypto_setup", "_php_stream_xport_crypto_enable", "__emalloc_112", "__php_stream_alloc", "_strncmp", "_php_url_parse_ex", "_php_url_free", "__php_stream_get_line", "_X509_STORE_add_cert", "_X509_STORE_CTX_get_error", "_X509_STORE_CTX_get_error_depth", "_SSL_get_ex_data_X509_STORE_CTX_idx", "_X509_STORE_CTX_get_ex_data", "_X509_STORE_CTX_set_error", "_PEM_read_bio_DHparams", "_strcasecmp", "_zend_binary_strcasecmp", "_SSL_get_servername", "_SSL_set_SSL_CTX", "_memchr", "__call_user_function_impl", "_php_set_sock_blocking", "_SSL_read", "_php_stream_xport_shutdown", "_SSL_write", "_php_stream_notification_notify", "_poll", "_SSL_set_connect_state", "_SSL_set_accept_state", "_SSL_connect", "_SSL_accept", "_SSL_get_peer_certificate", "_php_network_accept_incoming", "_php_stream_context_set_option", "_SSL_get_peer_cert_chain", "_SSL_get_verify_result", "_X509_verify_cert_error_string", "_X509_get_ext_d2i", "_inet_pton", "_X509_NAME_get_text_by_NID", "_php_pcre2_code_copy", "_php_pcre2_code_copy_with_tables", "_php_pcre2_code_free", "_php_pcre2_compile", "_memmove", "_tolower", "_php_pcre2_config", "_php_pcre2_general_context_create", "_php_pcre2_compile_context_create", "_php_pcre2_match_context_create", "_php_pcre2_convert_context_create", "_php_pcre2_general_context_copy", "_php_pcre2_compile_context_copy", "_php_pcre2_match_context_copy", "_php_pcre2_convert_context_copy", "_php_pcre2_general_context_free", "_php_pcre2_compile_context_free", "_php_pcre2_match_context_free", "_php_pcre2_convert_context_free", "_php_pcre2_set_character_tables", "_php_pcre2_set_bsr", "_php_pcre2_set_max_pattern_length", "_php_pcre2_set_newline", "_php_pcre2_set_parens_nest_limit", "_php_pcre2_set_compile_extra_options", "_php_pcre2_set_compile_recursion_guard", "_php_pcre2_set_callout", "_pcre2_set_substitute_callout_8", "_php_pcre2_set_heap_limit", "_php_pcre2_set_match_limit", "_php_pcre2_set_depth_limit", "_php_pcre2_set_offset_limit", "_php_pcre2_set_recursion_limit", "_php_pcre2_set_recursion_memory_management", "_php_pcre2_set_glob_separator", "_php_pcre2_set_glob_escape", "_ispunct", "_php_pcre2_dfa_match", "_php_pcre2_get_error_message", "_php_pcre2_jit_compile", "_php_pcre2_jit_match", "_php_pcre2_jit_free_unused_memory", "_php_pcre2_jit_stack_create", "_php_pcre2_jit_stack_assign", "_php_pcre2_jit_stack_free", "_php_pcre2_maketables", "_islower", "_isupper", "_isalnum", "_isxdigit", "_isgraph", "_isprint", "_iscntrl", "_isalpha", "_pcre2_maketables_free_8", "_php_pcre2_match", "_php_pcre2_match_data_create", "_php_pcre2_match_data_create_from_pattern", "_php_pcre2_match_data_free", "_php_pcre2_get_mark", "_php_pcre2_get_ovector_pointer", "_php_pcre2_get_ovector_count", "_php_pcre2_get_startchar", "_pcre2_get_match_data_size_8", "_php_pcre2_pattern_info", "_php_pcre2_callout_enumerate", "_php_pcre2_serialize_encode", "_php_pcre2_serialize_decode", "_php_pcre2_serialize_get_number_of_codes", "_php_pcre2_serialize_free", "_php_pcre2_substitute", "_php_pcre2_substring_nametable_scan", "_php_pcre2_substring_length_bynumber", "_php_pcre2_substring_copy_byname", "_php_pcre2_substring_copy_bynumber", "_php_pcre2_substring_get_byname", "_php_pcre2_substring_get_bynumber", "_php_pcre2_substring_free", "_php_pcre2_substring_length_byname", "_php_pcre2_substring_list_get", "_php_pcre2_substring_list_free", "_php_pcre2_substring_number_from_name", "_pcre2_pattern_convert_8", "_pcre2_converted_pattern_free_8", "_pcre_get_compiled_regex_cache_ex", "_zend_string_concat2", "_zend_hash_apply_with_argument", "_zend_hash_add_new", "_pcre_get_compiled_regex_cache", "_pcre_get_compiled_regex", "_pcre_get_compiled_regex_ex", "_php_pcre_create_match_data", "_php_pcre_free_match_data", "_php_pcre_match_impl", "_zend_hash_next_index_insert_new", "_add_next_index_null", "_zend_hash_update", "__is_numeric_string_ex", "_zend_new_pair", "_php_pcre_replace", "_php_pcre_replace_impl", "_zend_error_noreturn", "_zend_argument_type_error", "_zend_hash_index_add_new", "_zend_try_assign_typed_ref_long", "_zend_is_callable_ex", "_php_pcre_split_impl", "_php_pcre_grep_impl", "_php_pcre_mctx", "_php_pcre_gctx", "_php_pcre_cctx", "_php_pcre_pce_incref", "_php_pcre_pce_decref", "_php_pcre_pce_re", "_zend_register_bool_constant", "_OnUpdateLong", "_sqlite3_open_v2", "_sqlite3_errmsg", "_sqlite3_close", "_sqlite3_set_authorizer", "_sqlite3_db_config", "_zend_fcall_info_args_clear", "_sqlite3_exec", "_sqlite3_free", "_sqlite3_libversion", "_sqlite3_libversion_number", "_sqlite3_last_insert_rowid", "_sqlite3_errcode", "_sqlite3_extended_errcode", "_sqlite3_extended_result_codes", "_sqlite3_busy_timeout", "_zend_spprintf", "_tsrm_realpath", "_sqlite3_enable_load_extension", "_sqlite3_load_extension", "_sqlite3_changes", "_sqlite3_mprintf", "_sqlite3_prepare_v2", "_sqlite3_step", "_sqlite3_reset", "_sqlite3_finalize", "_sqlite3_data_count", "_sqlite3_column_name", "_sqlite3_column_type", "_sqlite3_column_int64", "_sqlite3_column_text", "_sqlite3_column_bytes", "_sqlite3_column_double", "_sqlite3_column_blob", "_sqlite3_create_function", "_sqlite3_user_data", "_sqlite3_aggregate_context", "_sqlite3_create_collation", "_sqlite3_blob_open", "_sqlite3_blob_bytes", "_sqlite3_backup_init", "_sqlite3_backup_step", "_sqlite3_backup_finish", "_sqlite3_bind_parameter_count", "_zend_llist_del_element", "_sqlite3_db_handle", "_sqlite3_clear_bindings", "_sqlite3_stmt_readonly", "_sqlite3_sql", "_sqlite3_bind_null", "_convert_to_long", "_sqlite3_bind_int", "_convert_to_double", "_sqlite3_bind_double", "__php_stream_copy_to_mem", "_sqlite3_bind_blob", "_sqlite3_bind_text", "_sqlite3_column_count", "__zend_handle_numeric_str_ex", "_zend_std_get_gc", "_zend_get_gc_buffer_create", "_zend_get_gc_buffer_grow", "_php_info_print_table_header", "_sqlite3_value_type", "_sqlite3_value_int", "_sqlite3_value_double", "_sqlite3_value_text", "_sqlite3_value_bytes", "_sqlite3_result_int", "_sqlite3_result_null", "_sqlite3_result_double", "_sqlite3_result_text", "_sqlite3_result_error", "_sqlite3_blob_write", "_sqlite3_blob_read", "_sqlite3_blob_close", "_sqlite3_bind_parameter_index", "_zend_hash_index_del", "_OnUpdateBool", "_zend_ini_boolean_displayer_cb", "_zend_ini_parse_quantity_warn", "_zend_long_to_str", "_zend_alter_ini_entry", "_putchar", "_strcpy", "_localtime_r", "_zend_zval_type_name", "_zend_hash_del", "_dom_object_get_node", "_php_dom_object_get_data", "_zend_get_property_info", "_zend_verify_property_type", "_php_dom_create_object", "_zend_hash_merge", "_xmlDocCopyNode", "_zend_declare_property_ex", "_xmlXPathFreeContext", "__emalloc_40", "_xmlStrEqual", "_xmlNodeGetContent", "_xmlNodeAddContent", "_xmlSearchNsByHref", "_xmlDOMWrapReconcileNamespaces", "_xmlSplitQName2", "_xmlValidateQName", "_xmlNewNs", "_xmlNewDocNode", "_zend_hash_copy", "_xmlValidateName", "_xmlNewProp", "_xmlNodeSetContentLen", "_xmlGetIntSubset", "_xmlDocGetRootElement", "_xmlFindCharEncodingHandler", "_xmlCharEncCloseFunc", "_xmlNewDocFragment", "_xmlNewDocText", "_xmlNewDocComment", "_xmlNewCDataBlock", "_xmlNewPI", "_xmlNewDocProp", "_xmlNewReference", "_xmlCharStrndup", "_xmlSetNs", "_xmlGetID", "_xmlNewDoc", "_xmlCreateURI", "_xmlURIEscapeStr", "_xmlParseURIReference", "_xmlSaveFormatFileEnc", "_xmlBufferCreate", "_xmlNodeDump", "_xmlBufferContent", "_xmlBufferFree", "_xmlDocDumpFormatMemory", "_xmlPedanticParserDefault", "_xmlSubstituteEntitiesDefault", "_xmlLineNumbersDefault", "_xmlKeepBlanksDefault", "_xmlXIncludeProcessFlags", "_xmlNewValidCtxt", "_xmlValidateDocument", "_xmlFreeValidCtxt", "_xmlSchemaNewParserCtxt", "_xmlSchemaNewMemParserCtxt", "_xmlSchemaSetParserErrors", "_xmlSchemaParse", "_xmlSchemaFreeParserCtxt", "_xmlSchemaNewValidCtxt", "_xmlSchemaFree", "_xmlSchemaSetValidOptions", "_xmlSchemaSetValidErrors", "_xmlSchemaValidateDoc", "_xmlSchemaFreeValidCtxt", "_xmlRelaxNGNewParserCtxt", "_xmlRelaxNGNewMemParserCtxt", "_xmlRelaxNGSetParserErrors", "_xmlRelaxNGParse", "_xmlRelaxNGFreeParserCtxt", "_xmlRelaxNGNewValidCtxt", "_xmlRelaxNGFree", "_xmlRelaxNGSetValidErrors", "_xmlRelaxNGValidateDoc", "_xmlRelaxNGFreeValidCtxt", "_htmlCreateFileParserCtxt", "_htmlCreateMemoryParserCtxt", "_htmlCtxtUseOptions", "_htmlParseDocument", "_htmlFreeParserCtxt", "_htmlGetMetaEncoding", "_htmlSaveFileFormat", "_xmlOutputBufferCreateBuffer", "_htmlNodeDumpFormatOutput", "_xmlOutputBufferFlush", "_xmlBufferLength", "_xmlOutputBufferClose", "_htmlDocDumpMemoryFormat", "_zend_argument_error", "_xmlCreateFileParserCtxt", "_xmlCreateMemoryParserCtxt", "_getcwd", "_xmlCanonicPath", "_xmlCtxtUseOptions", "_xmlParseDocument", "_xmlFreeParserCtxt", "_xmlSetTreeDoc", "_xmlCopyNode", "_xmlAddChild", "_xmlParseBalancedChunkMemory", "_xmlAddChildList", "_xmlStrchr", "_xmlCreateIntSubset", "_xmlDocSetRootElement", "_xmlNewNode", "_xmlStrcat", "_xmlNodeListGetString", "_xmlSplitQName3", "_xmlStrndup", "_xmlSearchNs", "_xmlHasNsProp", "_xmlSetProp", "_xmlHasProp", "_xmlGetNsProp", "_xmlReconciliateNs", "_xmlSetNsProp", "_xmlAddID", "_xmlNodeGetBase", "_xmlNewText", "_xmlNodeSetContent", "_xmlAddPrevSibling", "_xmlReplaceNode", "_xmlCopyNamespaceList", "_xmlCopyPropList", "_xmlXPathNewContext", "_xmlXPathEvalExpression", "_xmlXPathFreeObject", "_xmlXPathRegisterNs", "_xmlOutputBufferCreateFilename", "_xmlC14NDocSaveTo", "_xmlOutputBufferGetSize", "_xmlOutputBufferGetContent", "_xmlGetNodePath", "_xmlGetLineNo", "_xmlUTF8Strlen", "_xmlUTF8Strsub", "_xmlTextConcat", "_xmlUTF8Strndup", "_xmlNodeDumpOutput", "_xmlHashSize", "_xmlAddNextSibling", "_xmlIsBlankNode", "_xmlNewComment", "_xmlXPathRegisterFuncNS", "_xmlGetNsList", "_zend_is_executing", "_valuePop", "_xmlXPathCastToString", "_zend_make_callable", "_xmlXPathNewNodeSet", "_valuePush", "_xmlXPathNewBoolean", "_xmlXPathNewString", "_xmlHashScan", "_zend_hash_internal_pointer_reset_ex", "_zend_hash_get_current_data_ex", "_xmlStrlen", "_zend_hash_move_forward_ex", "_xmlHashLookup", "_sapi_register_input_filter", "_php_register_variable_ex", "_zend_is_auto_global", "__convert_to_string", "_php_strip_tags_ex", "_php_escape_html_entities_ex", "_php_addslashes", "_get_active_function_name", "_strpbrk", "_zend_is_callable", "_php_hash_fetch_ops", "_zend_string_tolower_ex", "_php_hash_register_algo", "_zend_str_tolower_dup", "_php_hash_copy", "_php_hash_serialize_spec", "_php_hash_unserialize_spec", "_php_hash_serialize", "_php_hash_unserialize", "_explicit_bzero", "_php_safe_bcmp", "_object_properties_load", "_PHP_MD4InitArgs", "_PHP_MD4Update", "_PHP_MD4Final", "_PHP_MD2InitArgs", "_PHP_MD2Update", "_PHP_MD2Final", "_PHP_MD5InitArgs", "_PHP_MD5Update", "_PHP_MD5Final", "_PHP_SHA256InitArgs", "_PHP_SHA256Update", "_PHP_SHA256Final", "_PHP_SHA224InitArgs", "_PHP_SHA224Update", "_PHP_SHA224Final", "_PHP_SHA384InitArgs", "_PHP_SHA384Update", "_PHP_SHA384Final", "_PHP_SHA512InitArgs", "_PHP_SHA512_256InitArgs", "_PHP_SHA512_224InitArgs", "_PHP_SHA512Update", "_PHP_SHA512Final", "_PHP_SHA512_256Final", "_PHP_SHA512_224Final", "_PHP_SHA1InitArgs", "_PHP_SHA1Update", "_PHP_SHA1Final", "_PHP_RIPEMD128Init", "_PHP_RIPEMD128Update", "_PHP_RIPEMD128Final", "_PHP_RIPEMD160Init", "_PHP_RIPEMD160Update", "_PHP_RIPEMD160Final", "_PHP_RIPEMD256Init", "_PHP_RIPEMD256Update", "_PHP_RIPEMD256Final", "_PHP_RIPEMD320Init", "_PHP_RIPEMD320Update", "_PHP_RIPEMD320Final", "_PHP_3HAVAL128Init", "_PHP_HAVALUpdate", "_PHP_HAVAL128Final", "_PHP_3HAVAL160Init", "_PHP_HAVAL160Final", "_PHP_3HAVAL192Init", "_PHP_HAVAL192Final", "_PHP_3HAVAL224Init", "_PHP_HAVAL224Final", "_PHP_3HAVAL256Init", "_PHP_HAVAL256Final", "_PHP_4HAVAL128Init", "_PHP_4HAVAL160Init", "_PHP_4HAVAL192Init", "_PHP_4HAVAL224Init", "_PHP_4HAVAL256Init", "_PHP_5HAVAL128Init", "_PHP_5HAVAL160Init", "_PHP_5HAVAL192Init", "_PHP_5HAVAL224Init", "_PHP_5HAVAL256Init", "_PHP_3TIGERInit", "_PHP_4TIGERInit", "_PHP_TIGERUpdate", "_PHP_TIGER128Final", "_PHP_TIGER160Final", "_PHP_TIGER192Final", "_PHP_GOSTInit", "_PHP_GOSTInitCrypto", "_PHP_GOSTUpdate", "_PHP_GOSTFinal", "_PHP_SNEFRUInit", "_PHP_SNEFRUUpdate", "_PHP_SNEFRUFinal", "_PHP_WHIRLPOOLInit", "_PHP_WHIRLPOOLUpdate", "_PHP_WHIRLPOOLFinal", "_PHP_ADLER32Init", "_PHP_ADLER32Update", "_PHP_ADLER32Final", "_PHP_ADLER32Copy", "_PHP_CRC32Init", "_PHP_CRC32Update", "_PHP_CRC32BUpdate", "_PHP_CRC32CUpdate", "_PHP_CRC32LEFinal", "_PHP_CRC32BEFinal", "_PHP_CRC32Copy", "_PHP_FNV132Init", "_PHP_FNV132Update", "_PHP_FNV132Final", "_PHP_FNV1a32Update", "_PHP_FNV164Init", "_PHP_FNV164Update", "_PHP_FNV164Final", "_PHP_FNV1a64Update", "_PHP_JOAATInit", "_PHP_JOAATUpdate", "_PHP_JOAATFinal", "_PHP_SHA3224Init", "_PHP_SHA3224Update", "_PHP_SHA3256Init", "_PHP_SHA3256Update", "_PHP_SHA3384Init", "_PHP_SHA3384Update", "_PHP_SHA3512Init", "_PHP_SHA3512Update", "_PHP_MURMUR3AInit", "_PHP_MURMUR3AUpdate", "_PHP_MURMUR3AFinal", "_PHP_MURMUR3ACopy", "_PHP_MURMUR3CInit", "_PHP_MURMUR3CUpdate", "_PHP_MURMUR3CFinal", "_PHP_MURMUR3CCopy", "_PHP_MURMUR3FInit", "_PHP_MURMUR3FUpdate", "_PHP_MURMUR3FFinal", "_PHP_MURMUR3FCopy", "_PHP_XXH32Init", "_PHP_XXH32Update", "_PHP_XXH32Final", "_PHP_XXH32Copy", "_PHP_XXH64Init", "_PHP_XXH64Update", "_PHP_XXH64Final", "_PHP_XXH64Copy", "_PHP_XXH3_64_Init", "_PHP_XXH3_64_Update", "_PHP_XXH3_64_Final", "_PHP_XXH3_64_Copy", "_PHP_XXH3_128_Init", "_PHP_XXH3_128_Update", "_PHP_XXH3_128_Final", "_PHP_XXH3_128_Copy", "_php_output_handler_alias_register", "_php_output_handler_conflict_register", "_zend_get_constant_str", "_php_stream_filter_register_factory", "_php_output_handler_create_internal", "_php_output_get_level", "_php_output_handler_conflict", "_php_stream_filter_unregister_factory", "_php_iconv_string", "_libiconv_open", "_libiconv", "_libiconv_close", "_php_get_internal_encoding", "_php_quot_print_decode", "_php_get_input_encoding", "_php_get_output_encoding", "_php_output_get_status", "_sapi_add_header_ex", "_php_output_handler_hook", "__emalloc_160", "__php_stream_filter_alloc", "_php_stream_bucket_unlink", "_php_stream_bucket_delref", "_php_stream_bucket_new", "_php_stream_bucket_append", "_php_json_encode_string", "_php_json_encode_ex", "_php_json_encode", "_php_json_decode_ex", "_php_json_parser_init", "_php_json_parser_error_code", "_php_next_utf8_char", "___extenddftf2", "___fpclassifyl", "_zend_gcvt", "_zend_get_properties_for", "_object_init", "_php_json_parser_init_ex", "_php_json_parse", "_zend_strtod", "_mbstr_treat_data", "_sapi_register_treat_data", "_sapi_register_post_entries", "_zend_multibyte_set_functions", "_php_rfc1867_set_multibyte_callbacks", "_zend_multibyte_restore_functions", "_zend_multibyte_set_internal_encoding", "_mbfl_buffer_illegalchars", "_mbfl_buffer_converter_delete", "_php_mb_mbchar_bytes", "_php_mb_safe_strrchr", "_mbfl_no2encoding", "_mbfl_no_language2name", "_mbfl_name2encoding", "_mbfl_memory_device_init", "_mbfl_memory_device_strcat", "_mbfl_memory_device_output", "_mbfl_memory_device_unput", "_mbfl_memory_device_result", "_mbfl_string_clear", "_mbfl_name2no_encoding", "_mbfl_no2preferred_mime_name", "_mbfl_buffer_converter_new", "_mbfl_buffer_converter_illegal_mode", "_mbfl_buffer_converter_illegal_substchar", "_mbfl_string_init", "_mbfl_buffer_converter_feed", "_mbfl_buffer_converter_flush", "_mbfl_buffer_converter_result", "_mbfl_convert_filter_new", "_mbfl_convert_filter_delete", "_mbfl_memory_device_clear", "_mbfl_convert_filter_flush", "_mbfl_strpos", "_php_mb_stripos", "_mbfl_string_init_set", "_mbfl_substr", "_mbfl_substr_count", "_mbfl_strlen", "_mbfl_strcut", "_php_mb_convert_encoding_ex", "_mb_fast_convert", "_php_mb_convert_encoding", "_mbfl_identify_encoding", "_php_mb_convert_encoding_recursive", "_zend_hash_index_add", "_php_unicode_convert_case", "_php_mb_check_encoding", "_mbfl_get_supported_encodings", "_mbfl_no2language", "_mbfl_mime_header_encode", "_mbfl_mime_header_decode", "_mbfl_encoding_detector_new", "_mbfl_encoding_detector_judge", "_mbfl_encoding_detector_delete", "_mbfl_encoding_detector_feed", "_mbfl_buffer_converter_feed_result", "_zend_ini_string_ex", "_php_trim", "_php_mail_build_headers", "_strtok_r", "_mbfl_convert_encoding", "_mbfl_memory_device_strncat", "_mbfl_encoding_preferred_mime_name", "_php_escape_shell_cmd", "_php_mail", "_zend_str_tolower", "_mbfl_no_encoding2name", "_mbfl_name2no_language", "_sapi_unregister_post_entry", "_sapi_read_standard_form_data", "_rfc1867_post_handler", "_php_std_post_handler", "_php_unicode_is_prop1", "_php_unicode_is_prop", "_php_default_treat_data", "_sapi_handle_post", "_php_url_decode", "_php_register_variable_safe", "__php_stream_seek", "_mbfl_filt_conv_illegal_output", "_mb_illegal_output", "_mbfl_filt_conv_common_ctor", "_mbfl_filt_conv_common_flush", "_mbfl_convert_filter_get_vtbl", "_mbfl_memory_device_realloc", "_zend_memnstr_ex", "_memrchr", "_zend_memnrstr_ex", "_mbfl_wchar_device_init", "_mbfl_wchar_device_output", "_mbfl_convert_filter_feed_string", "_mbfl_wchar_device_clear", "_mbfl_filter_output_null", "_mbfl_convert_filter_copy", "_mime_header_encoder_result", "_mbfl_memory_device_devcat", "_mbfl_memory_device_reset", "_mime_header_encoder_new", "__emalloc_256", "_mbfl_filter_output_pipe", "_mime_header_encoder_delete", "_mbfl_convert_filter_devcat", "_mime_header_decoder_result", "_mime_header_decoder_new", "__emalloc_64", "_mime_header_decoder_delete", "_mbfl_convert_filter_reset", "_mbfl_filt_conv_pass", "_mbfl_convert_filter_new2", "_mbfl_convert_filter_feed", "_mbfl_convert_filter_strcat", "_mbfl_name2language", "_php_pdo_get_dbh_ce", "_php_pdo_get_exception", "_zend_register_list_destructors_ex", "_php_pdo_register_driver", "_php_pdo_unregister_driver", "_zend_hash_str_del", "_php_pdo_parse_data_source", "_pdo_throw_exception", "_zend_update_property_long", "_zend_update_property_string", "_zend_throw_exception_object", "_pdo_raise_impl_error", "_pdo_handle_error", "_zend_update_property_str", "_cfg_get_string", "_zend_list_close", "_zend_register_persistent_resource", "_pdo_get_long_param", "_pdo_get_bool_param", "_zend_fcall_info_args", "_is_numeric_str_function", "_zend_internal_run_time_cache_reserved_size", "_zend_set_function_arg_flags", "_zend_str_tolower_copy", "_zend_std_get_method", "_php_pdo_stmt_set_column_count", "_pdo_parse_params", "_convert_to_boolean", "_zend_update_property_ex", "_zend_parse_arg_class", "_convert_to_null", "__php_stream_memory_open", "_zend_fetch_class", "_zend_argument_count_error", "_zend_fcall_info_args_ex", "__php_stream_printf", "_php_pdo_free_statement", "_zend_objects_store_del", "_gc_possible_root", "_zend_std_unset_property", "_zend_std_cast_object_tostring", "_zend_object_is_true", "_strncpy", "_zend_declare_class_constant_long", "_sqlite3_snprintf", "_zend_i64_to_str", "_sqlite3_column_decltype", "_putenv", "_php_embed_init", "_php_embed_shutdown", "_php_output_flush_all", "_saveSetjmp", "_zend_eval_string", "_testSetjmp", "_emscripten_longjmp", "_sapi_send_headers", "_zend_exception_error", "_pib_tokenize", "_php_random_status_alloc", "_php_random_status_copy", "_php_random_status_free", "_php_random_engine_common_init", "_php_random_engine_common_free_object", "_php_random_engine_common_clone_object", "_php_random_range", "_php_random_default_algo", "_php_random_default_status", "_php_random_mt19937_seed_default", "_php_random_bin2hex_le", "_php_random_hex2bin_le", "_php_combined_lcg", "_php_random_combinedlcg_seed_default", "_php_mt_srand", "_php_mt_rand", "_php_mt_rand_range", "_php_mt_rand_common", "_php_srand", "_php_rand", "_php_random_bytes", "_open", "_strerror", "_fstat", "_read", "_php_random_int", "_getpid", "_php_random_pcgoneseq128xslrr64_advance", "___multi3", "_php_random_xoshiro256starstar_jump", "_php_random_xoshiro256starstar_jump_long", "_zend_call_known_function", "_php_array_data_shuffle", "_php_binary_string_shuffle", "_php_array_pick_keys", "_zend_read_property", "_zend_reflection_class_factory", "_zend_get_closure_method_def", "_zend_fetch_function", "_smart_str_append_printf", "_zend_type_to_string", "_zend_get_closure_this_ptr", "_zend_create_fake_closure", "_zval_update_constant_ex", "_zval_add_ref", "__efree_32", "_zend_generator_update_root", "_zend_generator_update_current", "_zend_fetch_debug_backtrace", "_zend_get_closure_invoke_method", "_zend_get_default_from_internal_arg_info", "_zend_separate_class_constants_table", "_zval_copy_ctor_func", "_zend_update_class_constants", "_zend_class_init_statics", "_zend_std_get_static_property", "_zend_std_get_static_property_with_info", "_zend_clear_exception", "_zend_verify_ref_assignable_zval", "_zend_fetch_class_by_name", "_zend_read_static_property_ex", "_zend_read_property_ex", "_zend_update_static_property_ex", "_php_info_print_module", "_zend_get_extension", "_smart_str_append_scalar", "_smart_str_append_escaped", "_zend_ast_export", "_zend_is_attribute_repeated", "_zend_get_attribute_value", "_zend_get_attribute_str", "_zend_get_attribute_target_names", "_zend_vm_stack_extend", "_zend_lookup_class_ex", "__zend_bailout", "_php_session_destroy", "_php_add_session_var", "_php_set_session_var", "_php_get_session_var", "_php_session_create_id", "_php_session_valid_key", "_php_var_serialize_init", "_php_var_serialize", "_php_var_serialize_destroy", "_php_var_unserialize_init", "_php_var_unserialize", "_php_var_unserialize_destroy", "_zend_hash_update_ind", "_var_tmp_var", "_php_session_register_serializer", "_php_session_register_module", "_php_session_validate_sid", "_php_session_update_timestamp", "__php_find_ps_module", "__php_find_ps_serializer", "_php_session_reset_id", "_zend_register_stringl_constant", "_php_url_scanner_reset_session_var", "_php_url_scanner_add_session_var", "_php_output_get_start_filename", "_php_output_get_start_lineno", "_php_url_encode", "_php_session_start", "_php_session_flush", "_session_adapt_url", "_php_url_scanner_adapt_single_url", "_zend_alter_ini_entry_chars", "_register_user_shutdown_function", "_remove_user_shutdown_function", "_zend_wrong_param_count", "_zend_get_callable_name", "_zend_hash_clean", "_zend_alter_ini_entry_ex", "_append_user_shutdown_function", "_zend_register_auto_global", "_sapi_free_header", "_zend_delete_global_variable", "_gmtime_r", "_sapi_get_request_time", "_OnUpdateStringUnempty", "_atol", "_OnUpdateLongGEZero", "_OnUpdateReal", "_php_get_temporary_directory", "_lseek", "_unlink", "_access", "_utime", "_getuid", "_geteuid", "_flock", "_fcntl", "_ftruncate", "_write", "_opendir", "_closedir", "_readdir", "_sxe_get_element_class_entry", "_xmlXPathEval", "_xmlSaveFile", "_xmlDocDumpMemoryEnc", "_xmlNewChild", "_xmlNewNsProp", "_php_sxe_rewind_iterator", "_php_sxe_move_forward_iterator", "_sxe_object_new", "_xmlReadFile", "_xmlReadMemory", "__emalloc_80", "_xmlStrcmp", "_xmlCopyDoc", "_zend_call_method", "_convert_scalar_to_number", "_xmlNewTextChild", "_xmlEncodeEntitiesReentrant", "_zend_stream_init_filename_ex", "_php_stream_open_for_zend_ex", "_zend_execute", "_destroy_op_array", "_zend_destroy_file_handle", "_zend_hash_real_init_mixed", "_zend_hash_rehash", "_zend_hash_del_bucket", "_add_next_index_object", "_php_spl_object_hash", "_zend_mangle_property_name", "_zend_iterator_dtor", "_zend_call_known_instance_method_with_2_params", "_array_set_zval_key", "_spl_iterator_apply", "_zend_is_iterable", "_zend_array_to_list", "_zend_fcall_info_call", "_zend_hash_iterator_del", "_zend_hash_get_current_key_type_ex", "_zend_hash_get_current_key_zval_ex", "_zend_proptable_to_symtable", "_zend_compare_symbol_tables", "_zend_use_resource_as_offset", "_zend_incompatible_double_to_long_error", "_zend_hash_get_current_key_ex", "_zend_ref_add_type_source", "_zend_hash_get_current_pos", "_zend_hash_iterator_add", "_spl_filesystem_object_get_path", "__php_glob_stream_get_path", "__php_stream_opendir", "__php_stream_readdir", "_php_basename", "_php_stat", "_expand_filepath_with_mode", "_readlink", "_php_dirname", "__php_glob_stream_get_count", "__php_stream_eof", "_php_fgetcsv", "_php_bc_fgetcsv_empty_line", "_php_fputcsv", "_php_flock_common", "__php_stream_flush", "__php_stream_tell", "__php_stream_getc", "__php_stream_passthru", "_php_sscanf_internal", "_php_stream_read_to_str", "_php_fstat", "__php_stream_set_option", "__php_stream_truncate_set_size", "_zend_objects_destroy_object", "_zend_hash_index_lookup", "_php_count_recursive", "_var_push_dtor", "_var_replace", "_zend_is_identical", "_zend_hash_compare", "_zend_std_read_dimension", "_zend_std_write_dimension", "_zend_std_has_dimension", "_zend_std_unset_dimension", "_zend_compare", "__safe_erealloc", "_zend_user_it_invalidate_current", "_zend_hash_packed_to_hash", "_strtoul", "_strcspn", "_realloc", "_strcat", "_zend_sort", "_zend_hash_sort_ex", "_zend_hash_internal_pointer_end_ex", "_zend_hash_move_backwards_ex", "_zend_hash_minmax", "_is_smaller_function", "_is_smaller_or_equal_function", "_zend_hash_iterator_pos_ex", "_zend_hash_iterator_pos", "_zendi_smart_streq", "_php_prefix_varname", "_zend_rebuild_symbol_table", "_zend_hash_find_known_hash", "_zend_try_assign_typed_ref_zval_ex", "_zend_get_this_object", "_zend_hash_real_init_packed", "_zend_parse_arg_number_slow", "__php_math_round", "_zend_hash_to_packed", "_zend_hash_iterators_lower_pos", "__zend_hash_iterators_update", "_zend_hash_packed_del_val", "_zend_hash_iterators_advance", "_convert_to_array", "_php_array_merge_recursive", "_zend_cannot_add_element", "_php_array_merge", "_zend_hash_extend", "_php_array_replace_recursive", "_zend_string_hash_func", "_zend_string_toupper_ex", "_zend_hash_add_empty_element", "_zend_hash_bucket_swap", "_php_multisort_compare", "_add_function", "_zend_hash_real_init", "_zend_binary_strcasecmp_l", "_zend_binary_strcmp", "_strcoll", "_zendi_smart_strcmp", "_strnatcmp_ex", "_numeric_compare_function", "_string_case_compare_function", "_string_compare_function", "_string_locale_compare_function", "_php_register_incomplete_class_handlers", "_umask", "_setlocale", "_zend_reset_lc_ctype_locale", "_zend_update_current_locale", "_php_get_nan", "_php_get_inf", "_zend_register_double_constant", "_unsetenv", "_tzset", "_zend_get_executed_scope", "_zend_get_constant_ex", "_inet_ntop", "_ntohl", "_php_getenv", "_sapi_getenv", "_php_getopt", "_sapi_flush", "_usleep", "_nanosleep", "_php_get_current_user", "_cfg_get_entry_ex", "__php_error_log_ex", "_php_log_err_with_severity", "__php_error_log", "_zend_get_called_scope", "_php_call_shutdown_functions", "_zend_hash_apply", "_php_free_shutdown_functions", "_zend_fcall_info_argp", "_php_get_highlight_struct", "_php_output_start_default", "_highlight_file", "_php_output_end", "_php_output_get_contents", "_php_output_discard", "_zend_save_lexical_state", "_open_file_for_scanning", "_zend_restore_lexical_state", "_zend_strip", "_zend_make_compiled_string_description", "_highlight_string", "_zend_ini_parse_quantity", "_zend_ini_get_value", "_zend_ini_sort_entries", "_zend_restore_ini_entry", "_zend_print_zval_r_to_str", "_zend_print_zval_r", "_getservbyname", "_getservbyport", "_php_add_tick_function", "_zend_llist_apply", "_zend_binary_zval_strcmp", "_zend_compare_arrays", "_zend_compare_objects", "_rename", "_chmod", "_php_copy_file_ex", "_zend_parse_ini_file", "_zend_parse_ini_string", "_add_index_double", "_zif_rewind", "_zif_fclose", "_zif_feof", "_zif_fgetc", "_zif_fgets", "_zif_fread", "_zif_fpassthru", "_zif_fseek", "_zif_ftell", "_zif_fflush", "_zif_fwrite", "_fopen", "_zend_stream_init_fp", "_object_and_properties_init", "__safe_realloc", "_php_crc32_bulk_update", "_php_crc32_stream_bulk_update", "_php_crypt", "__emalloc_128", "_php_std_date", "_zend_fetch_resource", "_zend_list_delete", "_chroot", "_php_clear_stat_cache", "_chdir", "_glob", "_php_check_open_basedir_ex", "_globfree", "_php_stream_dirent_alphasort", "__php_stream_scandir", "_php_stream_dirent_alphasortr", "_zif_dl", "_php_dl", "_php_load_extension", "_php_load_shlib", "_dlopen", "_dlerror", "_dlsym", "_dlclose", "_zend_next_free_module", "_zend_register_module_ex", "_zend_startup_module_ex", "_gethostname", "_php_network_gethostbyname", "_sysconf", "_php_exec", "_popen", "__php_stream_fopen_from_pipe", "__emalloc_large", "_php_output_write", "_mblen", "_php_escape_shell_arg", "_nice", "_php_stream_context_free", "_zend_fetch_resource2", "__php_stream_copy_to_stream_ex", "_php_stream_locate_eol", "_add_index_stringl", "_php_open_temporary_fd_ex", "__php_stream_fopen_tmpfile", "_php_error_docref2", "_php_mkdir_ex", "_mkdir", "_php_mkdir", "__php_stream_mkdir", "__php_stream_rmdir", "__php_stream_sync", "__php_stream_stat", "_zend_hash_str_add_new", "_php_copy_file_ctx", "__php_stream_stat_path", "_php_copy_file", "_fnmatch", "_zend_ini_parse_bool", "_statvfs", "_php_get_gid_by_name", "_getgrnam", "_lchown", "_chown", "_php_get_uid_by_name", "_getpwnam", "_fclose", "_realpath_cache_del", "_realpath_cache_clean", "_getgid", "_getgroups", "_realpath_cache_size", "_realpath_cache_get_buckets", "_realpath_cache_max_buckets", "_php_flock", "_localeconv", "_php_conv_fp", "__php_stream_xport_create", "_zend_try_assign_typed_ref_empty_string", "_sapi_header_op", "_php_header", "_php_setcookie", "_php_raw_url_encode", "_difftime", "_zend_try_assign_typed_ref_string", "_zend_llist_apply_with_argument", "_php_unescape_html_entities", "_php_escape_html_entities", "_php_is_image_avif", "_php_image_type_to_mime_type", "_php_getimagetype", "_sscanf", "_strrchr", "_php_info_print_style", "_php_info_print_css", "_php_info_html_esc", "_php_get_uname", "_uname", "_php_print_info_htmlhead", "_php_print_info", "_get_zend_version", "_php_info_print_box_start", "_php_info_print_box_end", "_is_zend_mm", "_zend_multibyte_get_functions", "__php_stream_get_url_stream_wrappers_hash", "_php_stream_xport_get_hash", "__php_get_stream_filters_hash", "_zend_html_puts", "_php_info_print_hr", "_php_print_credits", "_php_info_print_table_colspan_header", "_php_info_print_table_row_ex", "_zend_get_module_version", "_fgetc", "_getc", "_lstat", "_expand_filepath_ex", "_symlink", "_link", "_zend_get_executed_filename", "_zend_get_executed_lineno", "_pclose", "_fprintf", "_php_syslog", "_log10", "_tan", "_asin", "_atan", "_sinh", "_cosh", "_tanh", "_asinh", "_acosh", "_atanh", "_pow_function", "_exp", "_expm1", "_log1p", "_log", "_log2", "_hypot", "__php_math_basetolong", "__php_math_basetozval", "__php_math_longtobase", "__php_math_zvaltobase", "_fmod", "__php_math_number_format", "__php_math_number_format_ex", "_make_digest", "_getrusage", "_php_statpage", "_sapi_get_stat", "_php_getlastmod", "_php_quot_print_encode", "_localeconv_r", "_php_strspn", "_php_strcspn", "_nl_langinfo", "_php_explode", "_zend_hash_packed_grow", "_php_explode_negative_limit", "_php_implode", "_php_strtoupper", "_zend_str_toupper", "_php_string_toupper", "_php_strtolower", "_php_string_tolower", "_zend_dirname", "_add_index_str", "_php_strtr", "_php_str_to_str", "_zend_try_assign_typed_ref_double", "_php_addcslashes_str", "_php_stripcslashes", "_php_stripslashes", "_php_addcslashes", "_zend_str_tolower_dup_ex", "__emalloc_1024", "_php_strip_tags", "_zend_binary_strncmp", "_zend_binary_strncasecmp_l", "_ValidateFormat", "_php_openlog", "_php_closelog", "_php_syslog_str", "_zend_zval_get_legacy_type", "_zend_rsrc_list_get_rsrc_type", "_convert_to_object", "_zend_is_countable", "_php_replace_controlchars_ex", "_php_replace_controlchars", "_php_url_parse", "_php_url_parse_ex2", "_php_raw_url_decode", "_php_var_dump", "_php_printf", "_php_printf_unchecked", "_zend_array_count", "_php_debug_zval_dump", "_php_var_export_ex", "_smart_str_append_double", "_php_var_export", "_php_lookup_class_name", "_php_unserialize_with_options", "_php_var_unserialize_get_allowed_classes", "_php_var_unserialize_get_max_depth", "_php_var_unserialize_get_cur_depth", "_php_var_unserialize_set_allowed_classes", "_php_var_unserialize_set_max_depth", "_php_var_unserialize_set_cur_depth", "_zend_memory_usage", "_zend_memory_peak_usage", "_zend_memory_reset_peak_usage", "_php_canonicalize_version", "_zend_throw_exception_internal", "_zend_throw_unwind_exit", "_zend_objects_new", "_php_store_class_name", "_php_output_start_internal", "_php_url_scanner_add_var", "_php_url_scanner_reset_session_vars", "_php_url_scanner_reset_vars", "_php_url_scanner_reset_var", "_php_stream_wrapper_log_error", "_php_stream_context_set", "__php_stream_sock_open_host", "_zend_set_local_var_str", "_php_stream_filter_create", "_php_stream_filter_free", "__php_stream_filter_append", "_sapi_read_post_block", "_php_stream_mode_from_str", "__php_stream_temp_create", "__php_stream_memory_create", "__php_stream_temp_create_ex", "_dup", "__php_stream_sock_open_from_socket", "__php_stream_fopen_from_file", "__php_stream_fopen_from_fd", "_var_destroy", "__efree_large", "_zend_is_valid_class_name", "_zend_hash_lookup", "_zend_ref_del_type_source", "_zend_verify_prop_assignable_by_ref", "_make_sha1_digest", "_zend_register_resource", "_php_stream_bucket_make_writeable", "_add_property_zval_ex", "_php_stream_bucket_prepend", "_php_stream_filter_register_factory_volatile", "_add_property_null_ex", "_zend_call_method_if_exists", "_php_uuencode", "_php_uudecode", "_waitpid", "_kill", "_fork", "__exit", "_execvp", "_execle", "_execl", "__php_stream_cast", "_dup2", "_pipe", "_socketpair", "_php_socket_error_str", "_openpty", "_add_next_index_resource", "_php_stream_xport_accept", "_php_stream_xport_get_name", "_php_network_parse_network_address_with_port", "_php_stream_xport_sendto", "_php_stream_xport_recvfrom", "_select", "__php_emit_fd_setsize_warning", "_php_stream_notification_free", "_php_stream_notification_alloc", "_php_stream_filter_append_ex", "_php_stream_filter_prepend_ex", "_php_stream_filter_remove", "_php_file_le_stream_filter", "__php_stream_filter_flush", "_php_stream_get_record", "_isatty", "_php_url_encode_hash_ex", "_zend_check_property_access", "_php_password_algo_register", "_php_password_algo_unregister", "_php_password_algo_default", "_php_password_algo_find", "_php_password_algo_extract_ident", "_php_password_algo_identify_ex", "_php_inet_ntop", "_getifaddrs", "_freeifaddrs", "_clock_gettime", "_php_hrtime_current", "_tidySetMallocCall", "_tidySetReallocCall", "_tidySetFreeCall", "_tidySetPanicCall", "_zend_ini_long", "_tidyLibraryVersion", "_tidyReleaseDate", "_tidyLoadConfig", "_tidySetCharEncoding", "_tidyBufInit", "_tidyBufAttach", "_tidyParseBuffer", "_tidySaveBuffer", "_tidyBufFree", "_tidyCleanAndRepair", "_zend_update_property_stringl", "_tidyCreate", "_tidySetErrorBuffer", "_tidyRelease", "_tidyOptSetBool", "_tidyRunDiagnostics", "_tidyGetOptionByName", "_tidyOptGetDoc", "_tidyGetOptionList", "_tidyGetNextOption", "_tidyOptGetName", "_tidyOptGetType", "_tidyOptGetId", "_tidyOptGetValue", "_tidyOptGetInt", "_tidyOptGetBool", "_tidyStatus", "_tidyDetectedHtmlVersion", "_tidyDetectedXhtml", "_tidyDetectedGenericXml", "_tidyErrorCount", "_tidyWarningCount", "_tidyAccessWarningCount", "_tidyConfigErrorCount", "_tidyGetRoot", "_tidyGetHtml", "_tidyGetHead", "_tidyGetBody", "_tidyGetChild", "_tidyGetNext", "_tidyNodeGetType", "_tidyGetParent", "_tidyNodeGetText", "_tidyNodeGetName", "_tidyNodeLine", "_tidyNodeColumn", "_tidyNodeIsProp", "_zend_update_property_bool", "_zend_update_property_null", "_tidyNodeGetId", "_tidyAttrFirst", "_tidyAttrName", "_tidyAttrValue", "_tidyAttrNext", "_php_output_handler_started", "_php_output_handler_start", "_tidyOptIsReadOnly", "_tidyOptSetValue", "_tidyOptSetInt", "_zend_prepare_string_for_scanning", "_lex_scan", "_zendparse", "_zend_ast_destroy", "_vrzno_expose_inc_zrefcount", "_vrzno_expose_dec_zrefcount", "_vrzno_expose_zrefcount", "_vrzno_expose_inc_crefcount", "_vrzno_expose_dec_crefcount", "_vrzno_expose_crefcount", "_vrzno_expose_efree", "_vrzno_expose_create_bool", "_vrzno_expose_create_null", "_vrzno_expose_create_undef", "_vrzno_expose_create_long", "_vrzno_expose_create_double", "_vrzno_expose_create_string", "_vrzno_expose_create_object_for_target", "_vrzno_expose_create_params", "_vrzno_expose_set_param", "_vrzno_expose_zval_is_target", "_vrzno_expose_object_keys", "_vrzno_expose_zval_dump", "_vrzno_expose_type", "_vrzno_expose_callable", "_vrzno_expose_long", "_vrzno_expose_double", "_vrzno_expose_string", "_vrzno_expose_property_pointer", "_zend_register_internal_class", "_vrzno_exec_callback", "_vrzno_del_callback", "_zend_ulong_to_str", "_php_XML_ParserFree", "_XML_GetUserData", "_php_XML_ParserCreate_MM", "_php_XML_SetUserData", "_php_XML_SetElementHandler", "_php_XML_SetCharacterDataHandler", "_php_XML_SetProcessingInstructionHandler", "_php_XML_SetDefaultHandler", "_php_XML_SetUnparsedEntityDeclHandler", "_php_XML_SetNotationDeclHandler", "_php_XML_SetExternalEntityRefHandler", "_php_XML_SetStartNamespaceDeclHandler", "_php_XML_SetEndNamespaceDeclHandler", "_php_XML_Parse", "_php_XML_GetErrorCode", "_php_XML_ErrorString", "_php_XML_GetCurrentLineNumber", "_php_XML_GetCurrentColumnNumber", "_php_XML_GetCurrentByteIndex", "_php_XML_ParserCreate", "_xmlCreatePushParserCtxt", "_php_XML_ParserCreateNS", "_php_XML_SetCommentHandler", "_xmlParseChunk", "_php_XML_GetCurrentByteCount", "_php_XML_ExpatVersion", "_xmlGetPredefinedEntity", "_xmlGetDocEntity", "_xmlStrncatNew", "_xmlStrncat", "_xmlStopParser", "_zip_libzip_version", "_zip_open", "_zip_get_num_entries", "_zip_stat_index", "_zip_fopen_index", "_zip_fread", "_zip_close", "_zip_set_default_password", "_zip_strerror", "_zip_get_error", "_zip_error_code_zip", "_zip_error_code_system", "_zip_error_fini", "_zip_discard", "_zip_error_clear", "_zip_error_strerror", "_zip_error_init", "_zip_error_set", "_zip_dir_add", "_zip_set_file_compression", "_zip_source_file", "_zip_file_replace", "_zip_source_free", "_zip_file_add", "_zip_source_buffer", "_zip_stat", "_zip_name_locate", "_zip_get_name", "_zip_set_archive_comment", "_zip_get_archive_comment", "_zip_file_set_comment", "_zip_file_set_external_attributes", "_zip_file_get_external_attributes", "_zip_file_get_comment", "_zip_delete", "_zip_file_rename", "_zip_unchange", "_zip_unchange_all", "_zip_unchange_archive", "_virtual_file_ex", "_zip_fopen", "_zip_fclose", "_zip_file_get_error", "_zip_fseek", "_zip_ftell", "_zip_file_is_seekable", "_php_during_module_startup", "_php_during_module_shutdown", "_php_get_module_initialized", "_php_write", "_get_active_class_name", "_zend_error_zstr", "_php_error_docref1", "_php_html_puts", "_getpwuid", "_zend_alter_ini_entry_chars_ex", "_php_request_startup", "_zend_interned_strings_activate", "_php_output_activate", "_zend_activate", "_sapi_activate", "_zend_set_timeout", "_php_output_start_user", "_php_output_set_implicit_flush", "_php_hash_environment", "_zend_activate_modules", "_php_request_shutdown", "_zend_observer_fcall_end_all", "_zend_call_destructors", "_php_output_end_all", "_zend_unset_timeout", "_php_output_deactivate", "_zend_deactivate_modules", "_shutdown_memory_manager", "_zend_set_memory_limit", "_zend_interned_strings_deactivate", "_sapi_deactivate_module", "_sapi_deactivate_destroy", "_virtual_cwd_deactivate", "_zend_post_deactivate_modules", "_zend_deactivate", "_php_com_initialize", "_php_register_extensions", "_zend_register_internal_module", "_php_module_startup", "_sapi_initialize_empty_request", "_php_output_startup", "_php_printf_to_smart_string", "_php_printf_to_smart_str", "_zend_observer_startup", "_php_output_register_constants", "_zend_startup_modules", "_zend_collect_module_handlers", "_zend_register_functions", "_zend_disable_functions", "_zend_observer_post_startup", "_cfg_get_long", "_sapi_deactivate", "_virtual_cwd_activate", "_zend_interned_strings_switch_storage", "_zend_throw_error_exception", "_zend_alloc_in_memory_limit_error_reporting", "_php_output_discard_all", "_zend_objects_store_mark_destructed", "__php_stream_open_wrapper_as_file", "_php_strip_url_passwd", "_asctime_r", "_php_resolve_path", "_strdup", "_zend_disable_class", "_php_module_shutdown_wrapper", "_php_module_shutdown", "_zend_ini_shutdown", "_php_output_shutdown", "_zend_interned_strings_dtor", "_zend_observer_shutdown", "_php_execute_script", "_virtual_chdir_file", "_zend_stream_init_filename", "_zend_execute_scripts", "_php_execute_simple_script", "_php_handle_aborted_connection", "_php_output_set_status", "_php_handle_auth_data", "_php_lint_script", "_zend_ini_parse_uquantity_warn", "_php_register_internal_extensions", "_zend_ini_color_displayer_cb", "_OnUpdateBaseDir", "_ap_php_conv_10", "_ap_php_conv_p2", "_ap_php_vslprintf", "_ap_php_vsnprintf", "_ap_php_vasprintf", "_ap_php_asprintf", "_vasprintf", "_zend_dtoa", "_zend_freedtoa", "_isascii", "___trunctfdf2", "__smart_string_alloc_persistent", "__smart_string_alloc", "_strnlen", "_php_check_specific_open_basedir", "_php_fopen_primary_script", "_zend_stream_open", "_zend_get_executed_filename_ex", "_php_fopen_with_path", "_php_ini_builder_prepend", "_php_ini_builder_unquoted", "_php_ini_builder_quoted", "_php_ini_builder_define", "_config_zval_dtor", "_free_estring", "_strlcat", "_alphasort", "_scandir", "_zend_load_extension", "_zend_load_extension_handle", "_php_parse_user_ini_file", "_php_ini_activate_config", "_php_ini_has_per_dir_config", "_php_ini_activate_per_dir_config", "_php_ini_has_per_host_config", "_php_ini_activate_per_host_config", "_cfg_get_double", "_php_ini_get_configuration_hash", "_sapi_startup", "_sapi_shutdown", "_sapi_get_default_content_type", "_sapi_get_default_content_type_header", "_sapi_apply_default_charset", "_sapi_activate_headers_only", "_destroy_uploaded_files_hash", "_sapi_register_post_entry", "_sapi_register_default_post_reader", "_sapi_get_fd", "_sapi_force_http_10", "_sapi_get_target_uid", "_sapi_get_target_gid", "_sapi_terminate_process", "_sapi_add_request_header", "_zend_multibyte_get_internal_encoding", "_zend_multibyte_encoding_converter", "_zend_multibyte_encoding_detector", "_zend_hash_str_add_empty_element", "_php_default_post_reader", "_php_default_input_filter", "_php_register_variable", "_zend_hash_str_update_ind", "_php_register_known_variable", "_php_build_argv", "_zend_activate_auto_globals", "_php_remove_tick_function", "_php_network_freeaddresses", "_php_network_getaddresses", "_socket", "_gai_strerror", "_freeaddrinfo", "_php_network_connect_socket", "_connect", "_getsockopt", "_php_network_bind_socket_to_local_addr", "_setsockopt", "_bind", "_php_network_populate_name_from_sockaddr", "_php_network_get_peer_name", "_getpeername", "_php_network_get_sock_name", "_getsockname", "_accept", "_php_network_connect_socket_to_host", "_php_any_addr", "_php_sockaddr_size", "_mkstemp", "_php_open_temporary_fd", "_php_open_temporary_file", "_php_odbc_connstr_is_quoted", "_php_odbc_connstr_should_quote", "_php_odbc_connstr_estimate_quote_length", "_php_odbc_connstr_quote", "_fwrite", "_zend_stack_init", "_zend_stack_top", "_php_output_handler_free", "_zend_stack_del_top", "_zend_stack_destroy", "_zend_is_compiling", "_zend_get_compiled_filename", "_zend_get_compiled_lineno", "_php_output_handler_dtor", "_php_output_write_unbuffered", "_zend_stack_count", "_zend_stack_apply_with_argument", "_php_output_flush", "_zend_stack_push", "_zend_fcall_info_argn", "_php_output_clean", "_php_output_clean_all", "_php_output_get_length", "_php_output_get_active_handler", "_php_output_start_devnull", "_php_output_handler_create_user", "_php_output_handler_alias", "_php_output_handler_set_context", "_zend_stack_base", "_php_output_handler_reverse_conflict_register", "_syslog", "_openlog", "_closelog", "_zend_vstrpprintf", "_php_stream_get_url_stream_wrappers_hash_global", "_php_stream_encloses", "_php_stream_from_persistent_id", "__php_stream_free_enclosed", "__php_stream_putc", "__php_stream_puts", "_fflush", "__php_stream_mmap_range", "__php_stream_mmap_unmap_ex", "__php_stream_mmap_unmap", "__php_stream_copy_to_stream", "_php_get_stream_filters_hash_global", "_php_register_url_stream_wrapper_volatile", "_php_unregister_url_stream_wrapper_volatile", "_zend_llist_count", "__php_stream_make_seekable", "_qsort", "_fopencookie", "_fseek", "__php_stream_mode_to_str", "__php_stream_memory_get_buffer", "__php_stream_fopen_temporary_file", "__php_stream_temp_open", "_php_stream_bucket_split", "__emalloc_56", "__php_stream_filter_prepend", "_php_stream_parse_fopen_modes", "_ftell", "_fread", "_feof", "_munmap", "_setvbuf", "_mmap", "__php_stream_fopen", "__php_stream_fopen_with_path", "_fdatasync", "_fsync", "_rmdir", "_rewinddir", "_add_property_resource_ex", "_php_stream_xport_connect", "_php_stream_xport_bind", "_php_stream_xport_listen", "_send", "_listen", "_shutdown", "_sendto", "_recvfrom", "__php_glob_stream_get_pattern", "_zend_lex_tstring", "_zend_ast_create_zval", "_zend_ast_list_add", "_zend_ast_create_list_0", "_zend_ast_create_2", "_zend_ast_create_list_1", "_zend_get_scanned_file_offset", "_zend_ast_create_zval_from_long", "_zend_ast_create_1", "_zend_ast_create_4", "_zend_ast_create_3", "_zend_ast_create_decl", "_zend_ast_create_zval_from_str", "_zend_ast_create_5", "_zend_ast_create_0", "_zend_ast_create_list_2", "_zend_ast_create_zval_ex", "_zend_ast_create_class_const_or_name", "_zend_ptr_stack_init", "_zend_ptr_stack_clean", "_zend_ptr_stack_destroy", "_zend_restore_compiled_filename", "_zend_multibyte_set_filter", "_zend_multibyte_check_lexer_compatibility", "_zend_stream_fixup", "_zend_multibyte_get_encoding_name", "_zend_set_compiled_filename", "_compile_file", "_zend_message_dispatcher", "_init_op_array", "_pass_two", "_zend_compile_string_to_ast", "_compile_filename", "_compile_string", "_zend_highlight", "_zend_multibyte_yyinput_again", "_zend_stack_is_empty", "_zend_ptr_stack_reverse_apply", "_zend_exception_save", "_zend_exception_restore", "_zend_bin_strtod", "_zend_oct_strtod", "_zend_hex_strtod", "_zend_ast_create_zval_with_lineno", "_zend_get_configuration_directive", "_zend_get_constant", "_zend_mm_gc", "_zend_mm_shutdown", "__zend_mm_alloc", "__zend_mm_free", "__zend_mm_realloc", "__zend_mm_realloc2", "__zend_mm_block_size", "_is_zend_ptr", "__emalloc_192", "__emalloc_224", "__emalloc_320", "__emalloc_384", "__emalloc_448", "__emalloc_512", "__emalloc_640", "__emalloc_768", "__emalloc_896", "__emalloc_1280", "__emalloc_1536", "__emalloc_1792", "__emalloc_2048", "__emalloc_2560", "__emalloc_3072", "__emalloc_huge", "__efree_8", "__efree_16", "__efree_24", "__efree_40", "__efree_56", "__efree_64", "__efree_80", "__efree_96", "__efree_112", "__efree_128", "__efree_160", "__efree_192", "__efree_224", "__efree_256", "__efree_320", "__efree_384", "__efree_448", "__efree_512", "__efree_640", "__efree_768", "__efree_896", "__efree_1024", "__efree_1280", "__efree_1536", "__efree_1792", "__efree_2048", "__efree_2560", "__efree_3072", "__efree_huge", "__erealloc2", "__zend_mem_block_size", "_start_memory_manager", "_zend_mm_set_heap", "_zend_mm_get_heap", "_zend_mm_is_custom_heap", "_zend_mm_set_custom_handlers", "_zend_mm_get_custom_handlers", "_zend_mm_get_storage", "_zend_mm_startup", "_zend_mm_startup_ex", "_madvise", "_zend_init_rsrc_list", "_zend_create_member_string", "_zend_hash_str_find_ptr_lc", "_zend_hash_find_ptr_lc", "_function_add_ref", "_do_bind_function", "__zend_observer_function_declared_notify", "_zend_bind_class_in_slot", "_zend_hash_set_bucket_key", "_zend_get_object_type_case", "_zend_do_link_class", "__zend_observer_class_linked_notify", "_do_bind_class", "_zend_is_auto_global_str", "_zend_initialize_class_data", "_zend_function_dtor", "_zend_get_compiled_variable_name", "_zend_is_smart_branch", "_zend_get_call_op", "_execute_ex", "_zend_vm_set_opcode_handler", "_zend_multibyte_fetch_encoding", "_zend_is_op_long_compatible", "_zend_binary_op_produces_error", "_zend_unary_op_produces_error", "_zend_ast_copy", "_zend_ast_apply", "_zend_check_magic_method_implementation", "_zend_alloc_ce_cache", "_zend_map_ptr_new", "_zend_try_early_bind", "_zend_ast_create_constant", "__zend_get_special_const", "_zend_add_magic_method", "_zend_internal_attribute_get", "_zend_get_type_by_const", "_zend_type_release", "_zend_ast_create_znode", "_zend_check_protected", "_concat_function", "_get_binary_op", "_get_unary_op", "_zval_internal_ptr_dtor", "_zend_register_null_constant", "_zend_register_constant", "_zend_verify_const_access", "_zend_get_class_constant_ex", "_zend_init_fpu", "_zend_vm_stack_init", "_zend_objects_store_init", "_zend_hash_reverse_apply", "_zend_objects_store_call_destructors", "_zend_shutdown_executor_values", "_zend_hash_graceful_reverse_destroy", "_zend_hash_discard", "_zend_cleanup_internal_class_data", "_zend_stack_clean", "_zend_cleanup_mutable_class_data", "_zend_objects_store_free_object_storage", "_zend_vm_stack_destroy", "_destroy_zend_class", "_zend_objects_store_destroy", "_zend_shutdown_fpu", "_get_function_or_method_name", "_get_function_arg_name", "_zend_ast_evaluate", "_zval_update_constant", "_zend_get_callable_name_ex", "_zend_deprecated_function", "_zend_handle_undef_args", "_zend_init_func_execute_data", "_zend_observer_fcall_begin", "_zend_observer_fcall_end", "_zend_timeout", "_zend_hash_index_add_empty_element", "_zend_eval_stringl", "_zend_destroy_static_vars", "_zend_eval_stringl_ex", "_zend_eval_string_ex", "_setitimer", "_zend_signal", "_zend_fetch_class_with_scope", "_zend_hash_del_ind", "_zend_attach_symbol_table", "_zend_detach_symbol_table", "_zend_set_local_var", "_zend_hash_func", "_zend_html_putc", "_zend_llist_prepend_element", "_zend_llist_remove_tail", "_zend_llist_copy", "_zend_llist_apply_with_del", "_zend_llist_sort", "_zend_llist_apply_with_arguments", "_zend_llist_get_last_ex", "_zend_llist_get_prev_ex", "_zend_get_opcode_name", "_zend_get_opcode_flags", "_zend_get_opcode_id", "_destroy_zend_function", "_zend_recalc_live_ranges", "_bitwise_not_function", "_boolean_not_function", "_sub_function", "_mul_function", "_div_function", "_mod_function", "_shift_left_function", "_shift_right_function", "_is_identical_function", "_is_not_identical_function", "_is_equal_function", "_is_not_equal_function", "_compare_function", "_bitwise_or_function", "_bitwise_and_function", "_bitwise_xor_function", "_boolean_xor_function", "_zend_atol", "_zend_atoi", "_zend_double_to_str", "_zend_std_build_object_properties_array", "_zend_symtable_to_proptable", "_zend_error_unchecked", "_zend_incompatible_string_to_long_error", "_string_compare_function_ex", "_zend_class_implements_interface", "_increment_function", "_decrement_function", "___ctype_get_mb_cur_max", "_zend_str_toupper_copy", "_zend_str_toupper_dup", "_zend_str_toupper_dup_ex", "_zend_binary_zval_strncmp", "_zend_u64_to_str", "_zend_ptr_stack_init_ex", "_zend_ptr_stack_n_push", "_zend_ptr_stack_n_pop", "_zend_ptr_stack_apply", "_zend_ptr_stack_num_elements", "_zend_stack_int_top", "_zend_stack_apply", "_zend_list_free", "_zend_ast_ref_destroy", "_zend_spprintf_unchecked", "_zend_strpprintf_unchecked", "_zend_make_printable_zval", "_zend_print_zval", "_zend_print_flat_zval_r", "_virtual_cwd_startup", "_zend_startup_strtod", "_zend_gc_collect_cycles", "_zend_interned_strings_init", "_zend_ini_startup", "_zend_destroy_modules", "_virtual_cwd_shutdown", "_zend_shutdown_strtod", "_zend_output_debug_string", "_gc_protect", "_zend_get_page_size", "_zend_append_version_info", "_strncat", "_zend_init_internal_run_time_cache", "_zend_observer_activate", "_zend_ini_deactivate", "_zend_map_ptr_reset", "_zend_error_zstr_at", "__zend_observer_error_notify", "_zend_error_at", "_zend_error_at_noreturn", "_zend_strerror_noreturn", "_strerror_r", "_zend_begin_record_errors", "_zend_emit_recorded_errors", "_zend_free_recorded_errors", "_zend_user_exception_handler", "_zend_is_unwind_exit", "_zend_map_ptr_extend", "_gc_enable", "_gc_enabled", "_zend_multibyte_set_script_encoding_by_string", "_zend_get_parameters_array_ex", "_zend_copy_parameters_array", "_zend_wrong_property_read", "_zend_wrong_callback_error", "_zend_wrong_callback_or_null_error", "_zend_wrong_parameter_class_error", "_zend_wrong_parameter_class_or_null_error", "_zend_wrong_parameter_class_or_string_error", "_zend_wrong_parameter_class_or_string_or_null_error", "_zend_wrong_parameter_class_or_long_error", "_zend_wrong_parameter_class_or_long_or_null_error", "_zend_wrong_parameter_type_error", "_zend_unexpected_extra_named_error", "_zend_parse_arg_bool_weak", "_zend_parse_arg_long_weak", "_zend_parse_arg_double_weak", "_zend_parse_arg_str_weak", "_zend_parse_parameter", "_zend_parse_method_parameters_ex", "_zend_merge_properties", "_object_properties_init_ex", "_add_assoc_resource_ex", "_add_assoc_array_ex", "_add_assoc_object_ex", "_add_assoc_reference_ex", "_add_index_null", "_add_index_resource", "_add_index_array", "_add_index_object", "_add_index_reference", "_add_next_index_bool", "_add_next_index_double", "_add_next_index_array", "_add_next_index_reference", "_add_property_bool_ex", "_add_property_double_ex", "_add_property_str_ex", "_add_property_array_ex", "_add_property_object_ex", "_add_property_reference_ex", "_zend_unregister_functions", "_zend_startup_module", "_zend_get_module_started", "_zend_do_inheritance_ex", "_zend_do_implement_interface", "_zend_register_class_alias_ex", "_zend_set_hash_symbol", "_zend_is_callable_at_frame", "_zend_get_call_trampoline_func", "_zend_std_get_static_method", "_zend_fcall_info_args_save", "_zend_fcall_info_args_restore", "_zend_fcall_info_argv", "_zend_try_assign_typed_ref_ex", "_zend_try_assign_typed_ref_res", "_zend_try_assign_typed_ref_zval", "_zend_declare_property", "_zend_declare_property_null", "_zend_declare_property_bool", "_zend_declare_property_long", "_zend_declare_property_double", "_zend_declare_property_string", "_zend_declare_property_stringl", "_zend_declare_class_constant", "_zend_declare_class_constant_null", "_zend_declare_class_constant_bool", "_zend_declare_class_constant_double", "_zend_declare_class_constant_stringl", "_zend_declare_class_constant_string", "_zend_unset_property", "_zend_update_property_double", "_zend_assign_to_typed_ref", "_zend_update_static_property", "_zend_update_static_property_null", "_zend_update_static_property_bool", "_zend_update_static_property_long", "_zend_update_static_property_double", "_zend_update_static_property_string", "_zend_update_static_property_stringl", "_zend_read_static_property", "_zend_save_error_handling", "_zend_register_extension", "_zend_extension_dispatch_message", "_zend_get_resource_handle", "_zend_add_system_entropy", "_zend_get_op_array_extension_handle", "_zend_get_op_array_extension_handles", "_zend_extensions_op_array_persist_calc", "_zend_extensions_op_array_persist", "_zend_hash_add_or_update", "_zend_hash_str_add_or_update", "_zend_hash_index_add_or_update", "_zend_hash_str_del_ind", "_gc_remove_from_buffer", "_zend_symtable_clean", "_zend_hash_graceful_destroy", "_zend_hash_apply_with_arguments", "_zend_hash_merge_ex", "__zend_hash_index_find", "_zend_hash_bucket_renum_swap", "_zend_hash_bucket_packed_swap", "_zend_list_insert", "_zend_fetch_list_dtor_id", "_zend_register_persistent_resource_ex", "_zend_register_default_classes", "_zend_gc_get_status", "_zend_trace_to_string", "_zend_generator_check_placeholder_frame", "_zend_std_get_class_name", "_zend_get_parameter_attribute_str", "_zend_get_attribute", "_zend_get_parameter_attribute", "_zend_mark_internal_attribute", "_zend_internal_attribute_register", "_zend_vm_stack_init_ex", "_zend_get_compiled_variable_value", "_zend_gcc_global_regs", "_zend_cannot_pass_by_reference", "_zend_verify_arg_error", "_zend_verify_scalar_type_hint", "_zend_readonly_property_modification_error", "_zend_readonly_property_indirect_modification_error", "_zend_check_user_type_slow", "_zend_missing_arg_error", "_zend_verify_return_error", "_zend_verify_never_error", "_zend_wrong_string_offset_error", "_zend_false_to_array_deprecated", "_zend_undefined_offset_write", "_zend_undefined_index_write", "_zend_fetch_dimension_const", "_zend_verify_ref_array_assignable", "_zend_throw_ref_type_error_type", "_zend_throw_ref_type_error_zval", "_zend_throw_conflicting_coercion_error", "_execute_internal", "_zend_clean_and_cache_symbol_table", "_zend_free_compiled_variables", "_zend_fetch_function_str", "_zend_init_func_run_time_cache", "_zend_init_code_execute_data", "_zend_init_execute_data", "_zend_unfinished_calls_gc", "_zend_cleanup_unfinished_execution", "_zend_free_extra_named_params", "_zend_unfinished_execution_gc", "_zend_unfinished_execution_gc_ex", "_zend_fiber_switch_block", "_zend_fiber_switch_unblock", "_zend_iterator_unwrap", "_zend_create_closure", "_zend_generator_close", "_zend_std_unset_static_property", "_zend_serialize_opcode_handler", "_zend_deserialize_opcode_handler", "_zend_get_opcode_handler_func", "_zend_get_halt_op", "_zend_vm_kind", "_zend_vm_set_opcode_handler_ex", "_zend_vm_call_opcode_handler", "_zend_set_user_opcode_handler", "_zend_get_user_opcode_handler", "_zend_get_zval_ptr", "_zend_is_graceful_exit", "_zend_exception_set_previous", "_zend_ini_dtor", "_zend_ini_global_shutdown", "_zend_register_ini_entries", "_zend_unregister_ini_entries", "_zend_ini_register_displayer", "_zend_ini_parse_uquantity", "_display_link_numbers", "_OnUpdateStr", "_OnUpdateStrNotEmpty", "_zend_insert_sort", "_zend_multibyte_set_script_encoding", "_zend_multibyte_parse_encoding_list", "_zend_multibyte_get_script_encoding", "_zend_register_iterator_wrapper", "_zend_user_it_new_iterator", "_zend_user_it_valid", "_zend_user_it_get_current_data", "_zend_user_it_get_current_key", "_zend_user_it_move_forward", "_zend_user_it_rewind", "_zend_user_it_get_gc", "_zend_user_it_get_new_iterator", "_zend_user_serialize", "_zend_user_unserialize", "_zend_register_interfaces", "_zend_get_exception_base", "_zend_exception_get_default", "_zend_get_error_exception", "_zend_create_unwind_exit", "_zend_create_graceful_exit", "_zend_throw_graceful_exit", "_gc_protected", "_zend_weakrefs_hash_add", "_zend_weakrefs_hash_del", "_zend_weakrefs_notify", "_zend_ensure_fpu_mode", "_zend_interned_string_find_permanent", "_zend_interned_strings_set_request_storage_handlers", "__vgr00000ZU_NONE_zend_string_equal_val", "_sigaction", "_sigemptyset", "_sigaddset", "_sigprocmask", "_zend_signal_handler_unblock", "_zend_sigaction", "_zend_signal_startup", "_sigfillset", "_sigdelset", "_zend_generator_restore_call_stack", "_zend_generator_freeze_call_stack", "_zend_generator_resume", "_zend_observer_generator_resume", "_virtual_getcwd_ex", "_virtual_getcwd", "_realpath_cache_lookup", "_virtual_chdir", "_virtual_realpath", "_virtual_filepath_ex", "_virtual_filepath", "_virtual_fopen", "_virtual_access", "_virtual_utime", "_virtual_chmod", "_virtual_chown", "_virtual_open", "_virtual_creat", "_creat", "_virtual_rename", "_virtual_stat", "_virtual_lstat", "_virtual_unlink", "_virtual_mkdir", "_virtual_rmdir", "_virtual_opendir", "_virtual_popen", "_zend_objects_store_put", "_zend_objects_clone_obj", "_zend_std_get_debug_info", "_zend_get_property_guard", "_zend_std_get_constructor", "_zend_std_get_closure", "_smart_str_append_escaped_truncated", "_zend_cpu_supports", "___jit_debug_register_code", "_zend_gdb_register_code", "_zend_gdb_unregister_all", "_zend_gdb_present", "_zend_observer_fcall_register", "_zend_observer_add_begin_handler", "_zend_observer_remove_begin_handler", "_zend_observer_add_end_handler", "_zend_observer_remove_end_handler", "_zend_observer_function_declared_register", "_zend_observer_class_linked_register", "_zend_observer_error_register", "_zend_observer_fiber_init_register", "_zend_observer_fiber_switch_register", "_zend_observer_fiber_destroy_register", "_zend_observer_fiber_init_notify", "_zend_observer_fiber_switch_notify", "_zend_observer_fiber_destroy_notify", "_zend_enum_get_case_by_value", "_zend_register_internal_enum", "_zend_enum_add_case", "_zend_enum_add_case_cstr", "_zend_enum_get_case", "_zend_enum_get_case_cstr", "_zend_fiber_switch_blocked", "_zend_fiber_init_context", "_mprotect", "_zend_fiber_destroy_context", "_zend_fiber_switch_context", "_zend_atomic_bool_init", "_zend_atomic_bool_exchange", "_zend_atomic_bool_store", "_zend_atomic_bool_load", "_zend_optimize_script", "_zend_build_call_graph", "_zend_analyze_call_graph", "_zend_build_call_map", "_zend_init_func_return_info", "_zend_dump_op_array", "_zend_array_type_info", "_zend_optimizer_register_pass", "_zend_optimizer_unregister_pass", "_zend_build_cfg", "_zend_cfg_build_predecessors", "_zend_cfg_compute_dominators_tree", "_zend_cfg_identify_loops", "_zend_dfg_add_use_def_op", "_zend_build_ssa", "_zend_ssa_compute_use_def_chains", "_zend_ssa_find_false_dependencies", "_zend_ssa_find_sccs", "_zend_ssa_inference", "_zend_may_throw", "_zend_ssa_rename_op", "_zend_inference_propagate_range", "_zend_array_element_type", "_zend_fetch_arg_info_type", "_zend_update_type_info", "_zend_get_func_info", "_zend_may_throw_ex", "_zend_analyze_calls", "_zend_dump_var", "_zend_dump_ssa_var", "_zend_dump_op", "_zend_dump_op_line", "_signal", "_zip_source_error", "_zip_error_set_from_source", "_zip_source_begin_write_cloning", "_zip_source_begin_write", "_zip_source_tell_write", "_zip_source_zip_file_create", "_zip_source_seek", "_zip_source_commit_write", "_zip_source_rollback_write", "_zip_source_stat", "_zip_source_keep", "_zip_stat_init", "_zip_source_open", "_zip_source_read", "_zip_source_close", "_zip_source_get_file_attributes", "_zip_source_seek_write", "_crc32", "_zip_error_init_with_code", "_zip_error_system_type", "_zip_error_to_data", "_zip_error_get", "_zError", "_zip_fopen_index_encrypted", "_zip_source_is_seekable", "_zip_source_tell", "_zip_encryption_method_supported", "_calloc", "_zip_source_write", "_zip_source_file_create", "_zip_open_from_source", "_zip_register_progress_callback_with_state", "_zip_register_cancel_callback_with_state", "_zip_register_progress_callback", "_zip_compression_method_supported", "_zip_source_buffer_create", "_zip_file_attributes_init", "_zip_source_function_create", "_zip_source_buffer_fragment", "_zip_source_buffer_fragment_create", "_zip_source_seek_compute_offset", "_zip_source_make_command_bitmap", "_deflateInit2_", "_inflateInit2_", "_deflateEnd", "_inflateEnd", "_deflate", "_inflate", "_zip_source_layered", "_zip_source_pass_to_lower_layer", "_zip_source_layered_create", "_zip_source_filep", "_zip_source_filep_create", "_zip_source_function", "_zip_secure_random", "_zip_source_window_create", "_zip_source_zip_file", "_fchmod", "_remove", "_clearerr", "_ferror", "_fseeko", "_ftello", "_srand", "_rand", "_dtls1_default_timeout", "_dtls1_new", "_dtls1_clear_received_buffer", "_dtls1_clear_sent_buffer", "_dtls1_free", "_dtls1_clear", "_dtls1_ctrl", "_dtls1_handle_timeout", "_dtls1_get_timeout", "_dtls1_start_timer", "_dtls1_is_timer_expired", "_dtls1_stop_timer", "_dtls1_check_timeout_num", "_DTLSv1_listen", "_dtls1_shutdown", "_dtls1_query_mtu", "_dtls1_min_mtu", "_DTLS_get_data_mtu", "_DTLS_set_timer_cb", "_dtls1_write_app_data_bytes", "_dtls1_dispatch_alert", "_TLS_method", "_tlsv1_3_method", "_tlsv1_2_method", "_tlsv1_1_method", "_tlsv1_method", "_tlsv1_3_server_method", "_tlsv1_2_server_method", "_tlsv1_1_server_method", "_tlsv1_server_method", "_tlsv1_3_client_method", "_tlsv1_2_client_method", "_tlsv1_1_client_method", "_tlsv1_client_method", "_dtlsv1_method", "_dtlsv1_2_method", "_DTLS_method", "_dtlsv1_server_method", "_dtlsv1_2_server_method", "_DTLS_server_method", "_dtlsv1_client_method", "_dtls_bad_ver_client_method", "_dtlsv1_2_client_method", "_DTLS_client_method", "_TLSv1_2_method", "_TLSv1_2_server_method", "_TLSv1_2_client_method", "_TLSv1_1_method", "_TLSv1_1_server_method", "_TLSv1_1_client_method", "_TLSv1_method", "_TLSv1_server_method", "_TLSv1_client_method", "_DTLSv1_2_method", "_DTLSv1_2_server_method", "_DTLSv1_2_client_method", "_DTLSv1_method", "_DTLSv1_server_method", "_DTLSv1_client_method", "_tls1_new", "_tls1_clear", "_tls1_free", "_ossl_statem_accept", "_ossl_statem_connect", "_ssl3_read", "_ssl3_peek", "_ssl3_write", "_ssl3_shutdown", "_ssl3_renegotiate", "_ssl3_renegotiate_check", "_ssl3_read_bytes", "_ssl3_write_bytes", "_ssl3_dispatch_alert", "_ssl3_ctrl", "_ssl3_ctx_ctrl", "_ssl3_get_cipher_by_char", "_ssl3_put_cipher_by_char", "_ssl3_pending", "_ssl3_num_ciphers", "_ssl3_get_cipher", "_tls1_default_timeout", "_ssl_undefined_void_function", "_ssl3_callback_ctrl", "_ssl3_ctx_callback_ctrl", "_ssl_undefined_function", "_dtls1_do_write", "_DTLS_RECORD_LAYER_new", "_ssl3_new", "_CRYPTO_zalloc", "_ssl3_free", "_pqueue_new", "_pqueue_free", "_pqueue_pop", "_dtls1_hm_fragment_free", "_pitem_free", "_DTLS_RECORD_LAYER_free", "_DTLS_RECORD_LAYER_clear", "_SSL_get_options", "_ssl3_clear", "_SSL_get_wbio", "_ossl_statem_fatal", "_dtls1_retransmit_buffered_messages", "_SSL_get_rbio", "_SSL_clear", "_ERR_put_error", "_ssl3_setup_buffers", "_BIO_read", "_ssl_get_max_send_fragment", "_WPACKET_init_static_len", "_WPACKET_put_bytes__", "_WPACKET_memcpy", "_WPACKET_start_sub_packet_len__", "_dtls_raw_hello_verify_request", "_WPACKET_close", "_WPACKET_get_total_written", "_WPACKET_finish", "_WPACKET_cleanup", "_BIO_ADDR_new", "_BIO_ADDR_free", "_BIO_test_flags", "_DTLS_RECORD_LAYER_set_write_sequence", "_SSL_set_options", "_ossl_statem_set_hello_verify_done", "_BIO_ADDR_clear", "_dtls_buffer_listen_record", "_ssl_cipher_get_overhead", "_tls1_enc", "_tls1_mac", "_tls1_setup_key_block", "_tls1_generate_master_secret", "_tls1_change_cipher_state", "_tls1_final_finish_mac", "_tls1_alert_code", "_tls1_export_keying_material", "_dtls1_set_handshake_header", "_dtls1_close_construct_packet", "_dtls1_read_bytes", "_SSL_in_init", "_ossl_statem_get_in_handshake", "_dtls1_write_bytes", "_do_dtls1_write", "_WPACKET_allocate_bytes", "_WPACKET_reserve_bytes", "_WPACKET_sub_allocate_bytes__", "_BUF_MEM_grow", "_WPACKET_get_curr", "_WPACKET_sub_reserve_bytes__", "_WPACKET_init_len", "_WPACKET_init", "_WPACKET_set_flags", "_WPACKET_fill_lengths", "_WPACKET_start_sub_packet", "_WPACKET_set_max_size", "_WPACKET_memset", "_WPACKET_sub_memcpy__", "_WPACKET_get_length", "_pitem_new", "_CRYPTO_malloc", "_pqueue_insert", "_pqueue_peek", "_pqueue_find", "_pqueue_iterator", "_pqueue_next", "_pqueue_size", "_dtls1_record_replay_check", "_dtls1_record_bitmap_update", "_DTLS_RECORD_LAYER_set_saved_w_epoch", "_dtls1_buffer_record", "_dtls1_retrieve_buffered_record", "_SSL3_BUFFER_release", "_dtls1_process_buffered_records", "_SSL3_RECORD_set_seq_num", "_dtls1_process_record", "_ossl_statem_in_error", "_dtls1_get_bitmap", "_SSL_is_init_finished", "_dtls1_get_record", "_dtls1_read_failed", "_BIO_snprintf", "_ERR_add_error_data", "_SSL_CTX_remove_session", "_dtls1_get_message_header", "_BIO_clear_flags", "_BIO_set_flags", "_ossl_statem_set_in_init", "_ossl_statem_app_data_allowed", "_EVP_MD_CTX_md", "_EVP_CIPHER_CTX_cipher", "_EVP_CIPHER_CTX_iv_length", "_ssl3_do_compress", "_ssl3_record_sequence_update", "_ssl3_write_pending", "_dtls1_reset_seq_numbers", "_RECORD_LAYER_init", "_RECORD_LAYER_clear", "_RECORD_LAYER_reset_read_sequence", "_RECORD_LAYER_reset_write_sequence", "_RECORD_LAYER_release", "_RECORD_LAYER_read_pending", "_RECORD_LAYER_processed_read_pending", "_RECORD_LAYER_write_pending", "_SSL3_RECORD_clear", "_SSL3_BUFFER_clear", "_ssl3_release_write_buffer", "_ssl3_release_read_buffer", "_SSL3_RECORD_release", "_SSL_CTX_set_default_read_buffer_len", "_SSL_set_default_read_buffer_len", "_SSL_rstate_string_long", "_SSL_rstate_string", "_ssl3_read_n", "_ssl3_setup_read_buffer", "_early_data_count_ok", "_ssl_get_split_send_fragment", "_do_ssl3_write", "_ssl3_setup_write_buffer", "_SSL_get_state", "_tls13_enc", "_ssl3_get_record", "_ossl_statem_skip_early_data", "_RECORD_LAYER_is_sslv2_record", "_RECORD_LAYER_get_rrec_length", "_SSL3_BUFFER_set_data", "_ssl_allow_compression", "_CRYPTO_memcmp", "_ssl3_cbc_copy_mac", "_COMP_expand_block", "_ssl3_do_uncompress", "_COMP_compress_block", "_ssl3_enc", "_EVP_Cipher", "_ssl3_cbc_remove_padding", "_tls1_cbc_remove_padding", "_n_ssl3_mac", "_ssl3_cbc_record_digest_supported", "_ssl3_cbc_digest_record", "_EVP_MD_CTX_copy_ex", "_EVP_DigestFinal_ex", "_EVP_MD_CTX_copy", "_EVP_DigestSignFinal", "_EVP_CipherFinal_ex", "_EVP_MD_type", "_MD5_Init", "_MD5_Transform", "_SHA1_Init", "_SHA1_Transform", "_SHA224_Init", "_SHA256_Transform", "_SHA256_Init", "_SHA384_Init", "_SHA512_Transform", "_SHA512_Init", "_EVP_DigestInit_ex", "_ssl3_change_cipher_state", "_ssl3_setup_key_block", "_ssl3_cleanup_key_block", "_ssl3_init_finished_mac", "_ssl3_free_digest_list", "_ssl3_finish_mac", "_ssl3_digest_cached_records", "_ssl3_final_finish_mac", "_ssl3_generate_master_secret", "_ssl3_alert_code", "_ssl_sort_cipher_list", "_ssl3_set_handshake_header", "_ssl3_handshake_write", "_ssl3_default_timeout", "_ssl3_do_write", "_SSL_SRP_CTX_init", "_ssl_replace_hash", "_COMP_CTX_free", "_COMP_CTX_new", "_ssl_cipher_get_evp", "_CRYPTO_clear_free", "_EVP_MD_CTX_set_flags", "_OPENSSL_cleanse", "_ssl_handshake_md", "_EVP_MD_CTX_ctrl", "_X509_NAME_free", "_SSL_SRP_CTX_free", "_ssl_free_wbio_buffer", "_ssl_dh_to_pkey", "_EVP_PKEY_security_bits", "_ssl_security", "_tls1_set_groups", "_CRYPTO_strdup", "_ssl_cert_set1_chain", "_ssl_cert_set0_chain", "_ssl_cert_add1_chain_cert", "_ssl_cert_add0_chain_cert", "_ssl_cert_select_current", "_ssl_cert_set_current", "_tls1_group_id_lookup", "_tls1_set_groups_list", "_tls1_shared_group", "_tls1_set_sigalgs", "_tls1_set_sigalgs_list", "_ssl_build_cert_chain", "_ssl_cert_set_cert_store", "_ssl_cert_get_cert_store", "_EVP_PKEY_set1_DH", "_CRYPTO_memdup", "_ssl_ctx_security", "_ssl3_get_cipher_by_id", "_OBJ_bsearch_ssl_cipher_id", "_ssl3_get_cipher_by_std_name", "_ssl3_choose_cipher", "_OPENSSL_sk_new_reserve", "_tls1_set_cert_validity", "_ssl_set_masks", "_tls1_check_ec_tmp_key", "_OPENSSL_sk_find", "_ssl3_get_req_cert_type", "_ssl_set_sig_mask", "_SSL_in_before", "_ssl3_send_alert", "_ossl_statem_set_renegotiate", "_ossl_statem_set_in_handshake", "_ssl_get_algorithm2", "_ssl_fill_hello_random", "_ssl_generate_master_secret", "_ssl_generate_pkey", "_ssl_generate_pkey_group", "_ssl_generate_param_group", "_EVP_PKEY_set_type", "_ssl_derive", "_tls13_generate_secret", "_tls13_generate_handshake_secret", "_tls_close_construct_packet", "_ssl3_do_change_cipher_spec", "_tls13_alert_code", "_i2d_SSL_SESSION", "_d2i_SSL_SESSION", "_CRYPTO_THREAD_run_once", "_ssl_cert_new", "_CRYPTO_THREAD_lock_new", "_SSL_CTX_get_security_level", "_SSL_get_security_level", "_ssl_cert_dup", "_X509_up_ref", "_X509_chain_up_ref", "_X509_STORE_up_ref", "_custom_exts_copy", "_ssl_cert_free", "_ssl_cert_clear_certs", "_custom_exts_free", "_CRYPTO_THREAD_lock_free", "_ssl_security_cert", "_X509_cmp", "_ssl_cert_set_cert_cb", "_ssl_verify_cert_chain", "_X509_STORE_CTX_get0_param", "_X509_VERIFY_PARAM_set_auth_level", "_X509_STORE_CTX_set_flags", "_X509_STORE_CTX_set_ex_data", "_X509_STORE_CTX_set0_dane", "_X509_STORE_CTX_set_default", "_X509_VERIFY_PARAM_set1", "_X509_STORE_CTX_set_verify_cb", "_X509_STORE_CTX_get0_chain", "_X509_STORE_CTX_get1_chain", "_X509_VERIFY_PARAM_move_peername", "_SSL_dup_CA_list", "_X509_NAME_dup", "_SSL_set0_CA_list", "_SSL_CTX_set0_CA_list", "_SSL_CTX_get0_CA_list", "_SSL_get0_CA_list", "_SSL_CTX_get_client_CA_list", "_SSL_set_client_CA_list", "_SSL_get0_peer_CA_list", "_SSL_get_client_CA_list", "_SSL_add1_to_CA_list", "_SSL_CTX_add1_to_CA_list", "_SSL_add_client_CA", "_SSL_CTX_add_client_CA", "_BIO_s_file", "_OPENSSL_LH_new", "_OPENSSL_LH_retrieve", "_OPENSSL_LH_insert", "_OPENSSL_LH_free", "_X509_NAME_hash", "_i2d_X509_NAME", "_SSL_add_file_cert_subjects_to_stack", "_OPENSSL_sk_set_cmp_func", "_SSL_add_dir_cert_subjects_to_stack", "_OPENSSL_DIR_read", "_OPENSSL_DIR_end", "_X509_get_extension_flags", "_ssl_get_security_level_bits", "_ssl_cert_lookup_by_nid", "_ssl_cert_lookup_by_pkey", "_EVP_PKEY_id", "_ssl_cert_lookup_by_idx", "_ssl_load_ciphers", "_EVP_PKEY_asn1_find_str", "_EVP_PKEY_asn1_get0_info", "_EVP_enc_null", "_ssl_md", "_ssl_prf_md", "_SSL_CTX_set_ciphersuites", "_CONF_parse_list", "_OPENSSL_sk_dup", "_OPENSSL_sk_delete", "_OPENSSL_sk_insert", "_ssl_cipher_ptr_id_cmp", "_OPENSSL_sk_sort", "_SSL_set_ciphersuites", "_SSL_get_ciphers", "_ssl_create_cipher_list", "_SSL_CIPHER_description", "_ssl_protocol_to_string", "_SSL_CIPHER_standard_name", "_OPENSSL_cipher_name", "_SSL_CIPHER_get_id", "_SSL_CIPHER_get_protocol_id", "_ssl3_comp_find", "_SSL_COMP_get_compression_methods", "_SSL_COMP_set0_compression_methods", "_ssl_comp_free_compression_methods_int", "_SSL_COMP_add_compression_method", "_COMP_get_type", "_CRYPTO_mem_ctrl", "_SSL_COMP_get_name", "_COMP_get_name", "_SSL_COMP_get0_name", "_SSL_COMP_get_id", "_ssl_get_cipher_by_char", "_SSL_CIPHER_find", "_SSL_CIPHER_get_cipher_nid", "_SSL_CIPHER_get_digest_nid", "_SSL_CIPHER_get_kx_nid", "_SSL_CIPHER_get_auth_nid", "_SSL_CIPHER_get_handshake_digest", "_SSL_CIPHER_is_aead", "_ssl_cert_is_disabled", "_COMP_zlib", "_OPENSSL_sk_new", "_SSL_CONF_cmd", "_SSL_CONF_cmd_argv", "_SSL_CONF_cmd_value_type", "_SSL_CONF_CTX_new", "_SSL_CONF_CTX_finish", "_SSL_CONF_CTX_free", "_SSL_CONF_CTX_set_flags", "_SSL_CONF_CTX_clear_flags", "_SSL_CONF_CTX_set1_prefix", "_SSL_CONF_CTX_set_ssl", "_SSL_CONF_CTX_set_ssl_ctx", "_OPENSSL_init_crypto", "_EVP_add_cipher", "_EVP_idea_cbc", "_EVP_rc4", "_EVP_rc4_hmac_md5", "_EVP_aes_128_gcm", "_EVP_aes_256_gcm", "_EVP_aes_128_ccm", "_EVP_aes_256_ccm", "_EVP_aes_128_cbc_hmac_sha1", "_EVP_aes_256_cbc_hmac_sha1", "_EVP_aes_128_cbc_hmac_sha256", "_EVP_aes_256_cbc_hmac_sha256", "_EVP_aria_128_gcm", "_EVP_aria_256_gcm", "_EVP_camellia_128_cbc", "_EVP_camellia_256_cbc", "_EVP_chacha20_poly1305", "_EVP_seed_cbc", "_EVP_add_digest", "_OBJ_NAME_add", "_EVP_md5_sha1", "_OPENSSL_atexit", "_ssl_clear_bad_session", "_SSL_SESSION_free", "_ossl_statem_clear", "_BUF_MEM_free", "_SSL_CTX_set_ssl_version", "_X509_VERIFY_PARAM_new", "_X509_VERIFY_PARAM_inherit", "_CRYPTO_new_ex_data", "_SSL_set_ct_validation_callback", "_SSL_CTX_up_ref", "_SSL_CTX_has_client_custom_ext", "_X509_VERIFY_PARAM_free", "_CRYPTO_free_ex_data", "_BIO_pop", "_X509_EXTENSION_free", "_SCT_LIST_free", "_ASYNC_WAIT_CTX_free", "_SSL_is_dtls", "_SSL_up_ref", "_SSL_CTX_set_session_id_context", "_SSL_set_session_id_context", "_SSL_CTX_set_generate_session_id", "_CRYPTO_THREAD_write_lock", "_CRYPTO_THREAD_unlock", "_SSL_set_generate_session_id", "_SSL_has_matching_session_id", "_CRYPTO_THREAD_read_lock", "_SSL_CTX_set_purpose", "_X509_VERIFY_PARAM_set_purpose", "_SSL_set_purpose", "_SSL_CTX_set_trust", "_X509_VERIFY_PARAM_set_trust", "_SSL_set_trust", "_SSL_set1_host", "_X509_VERIFY_PARAM_set1_host", "_SSL_add1_host", "_X509_VERIFY_PARAM_add1_host", "_SSL_set_hostflags", "_X509_VERIFY_PARAM_set_hostflags", "_SSL_get0_peername", "_X509_VERIFY_PARAM_get0_peername", "_SSL_CTX_dane_enable", "_SSL_CTX_dane_set_flags", "_SSL_CTX_dane_clear_flags", "_SSL_dane_enable", "_ssl_set_version_bound", "_SSL_dane_set_flags", "_SSL_dane_clear_flags", "_SSL_get0_dane_authority", "_SSL_get0_dane_tlsa", "_SSL_get0_dane", "_SSL_dane_tlsa_add", "_X509_get0_pubkey", "_d2i_PUBKEY", "_SSL_CTX_dane_mtype_set", "_CRYPTO_realloc", "_SSL_CTX_set1_param", "_SSL_set1_param", "_SSL_CTX_get0_param", "_SSL_get0_param", "_SSL_certs_clear", "_SSL_CTX_flush_sessions", "_CTLOG_STORE_free", "_SSL_CTX_SRP_CTX_free", "_CRYPTO_secure_free", "_SSL_set0_rbio", "_SSL_set0_wbio", "_BIO_push", "_SSL_set_bio", "_BIO_next", "_BIO_up_ref", "_SSL_get_fd", "_BIO_find_type", "_SSL_get_rfd", "_SSL_get_wfd", "_BIO_s_socket", "_BIO_int_ctrl", "_SSL_set_wfd", "_BIO_method_type", "_SSL_set_rfd", "_SSL_get_finished", "_SSL_get_peer_finished", "_SSL_get_verify_mode", "_SSL_get_verify_depth", "_X509_VERIFY_PARAM_get_depth", "_SSL_get_verify_callback", "_SSL_CTX_get_verify_mode", "_SSL_CTX_get_verify_depth", "_SSL_CTX_get_verify_callback", "_SSL_set_verify", "_SSL_set_verify_depth", "_X509_VERIFY_PARAM_set_depth", "_SSL_set_read_ahead", "_SSL_get_read_ahead", "_SSL_has_pending", "_SSL_get_session", "_SSL_set_session", "_SSL_check_private_key", "_SSL_waiting_for_async", "_SSL_get_all_async_fds", "_ASYNC_WAIT_CTX_get_all_fds", "_SSL_get_changed_async_fds", "_ASYNC_WAIT_CTX_get_changed_fds", "_SSL_do_handshake", "_ossl_statem_check_finish_init", "_ASYNC_get_current_job", "_SSL_get_default_timeout", "_ssl_read_internal", "_ASYNC_WAIT_CTX_new", "_ASYNC_start_job", "_SSL_read_ex", "_SSL_read_early_data", "_SSL_get_early_data_status", "_SSL_peek_ex", "_ssl_write_internal", "_SSL_write_ex", "_SSL_write_early_data", "_statem_flush", "_SSL_key_update", "_SSL_get_key_update_type", "_SSL_renegotiate", "_SSL_renegotiate_abbreviated", "_SSL_renegotiate_pending", "_SSL_callback_ctrl", "_SSL_CTX_sessions", "_OPENSSL_LH_num_items", "_ssl_cipher_id_cmp", "_SSL_get_client_ciphers", "_SSL_get1_supported_ciphers", "_ssl_set_client_disabled", "_ssl_cipher_disabled", "_ssl_get_ciphers_by_id", "_SSL_get_cipher_list", "_SSL_CTX_get_ciphers", "_SSL_set_cipher_list", "_SSL_get_shared_ciphers", "_SSL_get_servername_type", "_SSL_get0_next_proto_negotiated", "_SSL_CTX_set_next_protos_advertised_cb", "_SSL_CTX_set_next_proto_select_cb", "_SSL_set_alpn_protos", "_SSL_export_keying_material", "_SSL_export_keying_material_early", "_tls13_export_keying_material_early", "_CTLOG_STORE_new", "_CRYPTO_secure_zalloc", "_RAND_priv_bytes", "_SSL_CTX_SRP_CTX_init", "_ssl_ctx_system_config", "_SSL_CTX_get_default_passwd_cb", "_SSL_CTX_get_default_passwd_cb_userdata", "_SSL_set_default_passwd_cb", "_SSL_set_default_passwd_cb_userdata", "_SSL_get_default_passwd_cb", "_SSL_get_default_passwd_cb_userdata", "_SSL_CTX_set_cert_verify_callback", "_SSL_CTX_set_verify_depth", "_SSL_CTX_set_cert_cb", "_SSL_set_cert_cb", "_X509_get_key_usage", "_ssl_check_srvr_ecc_cert_and_alg", "_ssl_get_server_cert_serverinfo", "_ssl_update_cache", "_SSL_CTX_add_session", "_SSL_SESSION_up_ref", "_SSL_CTX_get_ssl_method", "_SSL_get_ssl_method", "_SSL_set_ssl_method", "_BIO_get_retry_reason", "_SSL_want", "_ssl_undefined_const_function", "_ssl_bad_method", "_SSL_get_version", "_SSL_dup", "_CRYPTO_dup_ex_data", "_SSL_get_SSL_CTX", "_SSL_get_info_callback", "_ssl_clear_cipher_ctx", "_SSL_get_certificate", "_SSL_get_privatekey", "_SSL_CTX_get0_certificate", "_SSL_CTX_get0_privatekey", "_SSL_get_pending_cipher", "_SSL_get_current_compression", "_COMP_CTX_get_method", "_SSL_get_current_expansion", "_ssl_init_wbio_buffer", "_BIO_f_buffer", "_SSL_CTX_set_quiet_shutdown", "_SSL_CTX_get_quiet_shutdown", "_SSL_set_quiet_shutdown", "_SSL_get_quiet_shutdown", "_SSL_get_shutdown", "_SSL_client_version", "_custom_exts_copy_flags", "_X509_STORE_set_default_paths", "_SSL_CTX_set_default_verify_dir", "_SSL_CTX_set_default_verify_file", "_X509_STORE_load_locations", "_SSL_set_verify_result", "_SSL_get_client_random", "_SSL_get_server_random", "_SSL_SESSION_get_master_key", "_SSL_SESSION_set1_master_key", "_CRYPTO_set_ex_data", "_CRYPTO_get_ex_data", "_SSL_CTX_set_ex_data", "_SSL_CTX_get_ex_data", "_SSL_CTX_set_cert_store", "_SSL_CTX_set1_cert_store", "_SSL_CTX_set_tmp_dh_callback", "_SSL_set_tmp_dh_callback", "_SSL_set_psk_find_session_callback", "_SSL_CTX_set_psk_find_session_callback", "_SSL_set_psk_use_session_callback", "_SSL_CTX_set_psk_use_session_callback", "_SSL_CTX_set_msg_callback", "_SSL_set_msg_callback", "_SSL_CTX_set_not_resumable_session_callback", "_SSL_set_not_resumable_session_callback", "_SSL_CTX_set_record_padding_callback", "_SSL_CTX_set_record_padding_callback_arg", "_SSL_CTX_get_record_padding_callback_arg", "_SSL_CTX_set_block_padding", "_SSL_set_record_padding_callback", "_SSL_set_record_padding_callback_arg", "_SSL_get_record_padding_callback_arg", "_SSL_set_block_padding", "_SSL_set_num_tickets", "_SSL_get_num_tickets", "_SSL_CTX_set_num_tickets", "_SSL_CTX_get_num_tickets", "_ssl_clear_hash_ctx", "_ssl_handshake_hash", "_SSL_session_reused", "_SSL_is_server", "_SSL_set_debug", "_SSL_set_security_level", "_SSL_set_security_callback", "_SSL_get_security_callback", "_SSL_set0_security_ex_data", "_SSL_get0_security_ex_data", "_SSL_CTX_set_security_callback", "_SSL_CTX_get_security_callback", "_SSL_CTX_set0_security_ex_data", "_SSL_CTX_get0_security_ex_data", "_SSL_CTX_clear_options", "_SSL_clear_options", "_SSL_get0_verified_chain", "_OBJ_bsearch_", "_SSL_get0_peer_scts", "_o2i_SCT_LIST", "_SSL_CTX_set_ct_validation_callback", "_SSL_ct_is_enabled", "_SSL_CTX_ct_is_enabled", "_ssl_validate_ct", "_CT_POLICY_EVAL_CTX_new", "_CT_POLICY_EVAL_CTX_set1_cert", "_CT_POLICY_EVAL_CTX_set1_issuer", "_CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE", "_SSL_SESSION_get_time", "_CT_POLICY_EVAL_CTX_set_time", "_SCT_LIST_validate", "_CT_POLICY_EVAL_CTX_free", "_SSL_CTX_enable_ct", "_SCT_get_validation_status", "_SSL_enable_ct", "_SSL_CTX_set_default_ctlog_list_file", "_CTLOG_STORE_load_default_file", "_SSL_CTX_set_ctlog_list_file", "_CTLOG_STORE_load_file", "_SSL_CTX_set0_ctlog_store", "_SSL_CTX_get0_ctlog_store", "_SSL_CTX_set_client_hello_cb", "_SSL_client_hello_isv2", "_SSL_client_hello_get0_legacy_version", "_SSL_client_hello_get0_random", "_SSL_client_hello_get0_session_id", "_SSL_client_hello_get0_ciphers", "_SSL_client_hello_get0_compression_methods", "_SSL_client_hello_get1_extensions_present", "_SSL_client_hello_get0_ext", "_SSL_free_buffers", "_SSL_alloc_buffers", "_SSL_CTX_set_keylog_callback", "_SSL_CTX_get_keylog_callback", "_ssl_log_rsa_client_key_exchange", "_siprintf", "_ssl_log_secret", "_ssl_cache_cipherlist", "_SSL_bytes_to_cipher_list", "_bytes_to_cipher_list", "_SSL_CTX_set_max_early_data", "_SSL_CTX_get_max_early_data", "_SSL_set_max_early_data", "_SSL_get_max_early_data", "_SSL_CTX_set_recv_max_early_data", "_SSL_CTX_get_recv_max_early_data", "_SSL_set_recv_max_early_data", "_SSL_get_recv_max_early_data", "_SSL_stateless", "_SSL_CTX_set_post_handshake_auth", "_SSL_set_post_handshake_auth", "_SSL_verify_client_post_handshake", "_send_certificate_request", "_SSL_CTX_set_session_ticket_cb", "_SSL_CTX_set_allow_early_data_cb", "_SSL_set_allow_early_data_cb", "_SCT_set_source", "_SSL_add_ssl_module", "_SSL_config", "_SSL_CTX_config", "_conf_ssl_name_find", "_conf_ssl_get", "_SSL_use_PrivateKey_file", "_EC_curve_nist2nid", "_EC_KEY_new_by_curve_name", "_SSL_use_certificate_chain_file", "_SSL_CTX_use_serverinfo_file", "_conf_ssl_get_cmd", "_SSL_use_certificate", "_SSL_use_certificate_file", "_SSL_use_certificate_ASN1", "_SSL_use_RSAPrivateKey", "_SSL_use_RSAPrivateKey_file", "_SSL_use_RSAPrivateKey_ASN1", "_SSL_use_PrivateKey", "_EC_KEY_can_sign", "_EVP_PKEY_copy_parameters", "_d2i_X509_bio", "_RSA_up_ref", "_PEM_read_bio_RSAPrivateKey", "_d2i_RSAPrivateKey_bio", "_d2i_RSAPrivateKey", "_d2i_PrivateKey_bio", "_SSL_use_PrivateKey_ASN1", "_d2i_PrivateKey", "_SSL_CTX_use_certificate", "_SSL_CTX_use_certificate_file", "_SSL_CTX_use_certificate_ASN1", "_SSL_CTX_use_RSAPrivateKey", "_SSL_CTX_use_RSAPrivateKey_file", "_SSL_CTX_use_RSAPrivateKey_ASN1", "_SSL_CTX_use_PrivateKey", "_SSL_CTX_use_PrivateKey_ASN1", "_PEM_read_bio_X509_AUX", "_ERR_peek_last_error", "_SSL_CTX_use_serverinfo_ex", "_SSL_CTX_add_server_custom_ext", "_SSL_CTX_add_custom_ext", "_SSL_CTX_use_serverinfo", "_PEM_read_bio", "_SSL_use_cert_and_key", "_EVP_PKEY_missing_parameters", "_EVP_PKEY_cmp", "_SSL_CTX_use_cert_and_key", "_SSL_get1_session", "_SSL_SESSION_set_ex_data", "_SSL_SESSION_get_ex_data", "_SSL_SESSION_new", "_SSL_SESSION_dup", "_ssl_session_dup", "_SSL_SESSION_get_id", "_SSL_SESSION_get0_id_context", "_SSL_SESSION_get_compress_id", "_ssl_generate_session_id", "_ssl_get_new_session", "_lookup_sess_in_cache", "_ssl_get_prev_session", "_tls_parse_extension", "_tls_get_ticket_from_client", "_OPENSSL_LH_delete", "_SSL_SESSION_set1_id", "_SSL_SESSION_set_timeout", "_SSL_SESSION_get_timeout", "_SSL_SESSION_set_time", "_SSL_SESSION_get_protocol_version", "_SSL_SESSION_set_protocol_version", "_SSL_SESSION_get0_cipher", "_SSL_SESSION_set_cipher", "_SSL_SESSION_get0_hostname", "_SSL_SESSION_set1_hostname", "_SSL_SESSION_has_ticket", "_SSL_SESSION_get_ticket_lifetime_hint", "_SSL_SESSION_get0_ticket", "_SSL_SESSION_get_max_early_data", "_SSL_SESSION_set_max_early_data", "_SSL_SESSION_get0_alpn_selected", "_SSL_SESSION_set1_alpn_selected", "_SSL_SESSION_get0_peer", "_SSL_SESSION_set1_id_context", "_SSL_SESSION_is_resumable", "_SSL_CTX_set_timeout", "_SSL_CTX_get_timeout", "_SSL_set_session_secret_cb", "_SSL_set_session_ticket_ext_cb", "_SSL_set_session_ticket_ext", "_OPENSSL_LH_get_down_load", "_OPENSSL_LH_set_down_load", "_OPENSSL_LH_doall_arg", "_SSL_CTX_sess_set_new_cb", "_SSL_CTX_sess_get_new_cb", "_SSL_CTX_sess_set_remove_cb", "_SSL_CTX_sess_get_remove_cb", "_SSL_CTX_sess_set_get_cb", "_SSL_CTX_sess_get_get_cb", "_SSL_CTX_set_info_callback", "_SSL_CTX_get_info_callback", "_SSL_CTX_set_client_cert_cb", "_SSL_CTX_get_client_cert_cb", "_SSL_CTX_set_cookie_generate_cb", "_SSL_CTX_set_cookie_verify_cb", "_SSL_SESSION_set1_ticket_appdata", "_SSL_SESSION_get0_ticket_appdata", "_SSL_CTX_set_stateless_cookie_generate_cb", "_SSL_CTX_set_stateless_cookie_verify_cb", "_PEM_read_bio_SSL_SESSION", "_ASN1_item_i2d", "_ASN1_item_free", "_CRYPTO_strndup", "_PEM_write_bio_SSL_SESSION", "_PEM_ASN1_write_bio", "_tls_validate_all_contexts", "_extension_is_relevant", "_tls_collect_extensions", "_custom_ext_find", "_custom_ext_init", "_custom_ext_parse", "_tls_parse_all_extensions", "_should_add_extension", "_tls_construct_extensions", "_ssl_get_min_max_version", "_custom_ext_add", "_tls_psk_do_binder", "_tls13_hkdf_expand", "_tls13_derive_finishedkey", "_EVP_PKEY_new_raw_private_key", "_EVP_DigestSignInit", "_tls_handle_alpn", "_tls1_get_supported_groups", "_check_in_list", "_tls13_change_cipher_state", "_parse_ca_names", "_get_ca_names", "_construct_ca_names", "_tls_parse_ctos_renegotiate", "_tls_parse_stoc_renegotiate", "_tls_construct_stoc_renegotiate", "_tls_construct_ctos_renegotiate", "_tls_parse_ctos_server_name", "_tls_parse_stoc_server_name", "_tls_construct_stoc_server_name", "_tls_construct_ctos_server_name", "_tls_parse_ctos_maxfragmentlen", "_tls_parse_stoc_maxfragmentlen", "_tls_construct_stoc_maxfragmentlen", "_tls_construct_ctos_maxfragmentlen", "_tls_parse_ctos_srp", "_tls_construct_ctos_srp", "_tls_parse_ctos_ec_pt_formats", "_tls_parse_stoc_ec_pt_formats", "_tls_construct_stoc_ec_pt_formats", "_tls_construct_ctos_ec_pt_formats", "_tls_parse_ctos_supported_groups", "_tls_construct_stoc_supported_groups", "_tls_construct_ctos_supported_groups", "_tls_parse_ctos_session_ticket", "_tls_parse_stoc_session_ticket", "_tls_construct_stoc_session_ticket", "_tls_construct_ctos_session_ticket", "_tls_parse_ctos_npn", "_tls_parse_stoc_npn", "_tls_construct_stoc_next_proto_neg", "_tls_construct_ctos_npn", "_tls_parse_ctos_alpn", "_tls_parse_stoc_alpn", "_tls_construct_stoc_alpn", "_tls_construct_ctos_alpn", "_tls_parse_ctos_etm", "_tls_parse_stoc_etm", "_tls_construct_stoc_etm", "_tls_construct_ctos_etm", "_tls_parse_stoc_sct", "_tls_construct_ctos_sct", "_tls_parse_ctos_ems", "_tls_parse_stoc_ems", "_tls_construct_stoc_ems", "_tls_construct_ctos_ems", "_tls_parse_ctos_sig_algs_cert", "_tls_parse_ctos_post_handshake_auth", "_tls_construct_ctos_post_handshake_auth", "_tls_parse_ctos_sig_algs", "_tls_construct_ctos_sig_algs", "_tls_parse_stoc_supported_versions", "_tls_construct_stoc_supported_versions", "_tls_construct_ctos_supported_versions", "_tls_parse_ctos_psk_kex_modes", "_tls_construct_ctos_psk_kex_modes", "_tls_parse_ctos_key_share", "_tls_parse_stoc_key_share", "_tls_construct_stoc_key_share", "_tls_construct_ctos_key_share", "_tls_parse_ctos_cookie", "_tls_parse_stoc_cookie", "_tls_construct_stoc_cookie", "_tls_construct_ctos_cookie", "_tls_construct_stoc_cryptopro_bug", "_tls_parse_ctos_early_data", "_tls_parse_stoc_early_data", "_tls_construct_stoc_early_data", "_tls_construct_ctos_early_data", "_tls_construct_ctos_padding", "_tls_parse_ctos_psk", "_tls_parse_stoc_psk", "_tls_construct_stoc_psk", "_tls_construct_ctos_psk", "_tls1_get_formatlist", "_tls_curve_allowed", "_tls_use_ticket", "_tls12_get_psigalgs", "_tls12_copy_sigalgs", "_EVP_PKEY_get1_tls_encodedpoint", "_EVP_PKEY_set1_tls_encodedpoint", "_SSL_CTX_add_client_custom_ext", "_SSL_extension_supported", "_tls1_save_sigalgs", "_EVP_DigestSign", "_create_synthetic_message_hash", "_tls1_save_u16", "_tls_decrypt_ticket", "_BUF_MEM_new", "_tls_setup_handshake", "_ossl_statem_client_max_message_size", "_ossl_statem_server_max_message_size", "_ossl_statem_client_post_process_message", "_ossl_statem_server_post_process_message", "_ossl_statem_client_process_message", "_ossl_statem_server_process_message", "_ossl_statem_client_read_transition", "_ossl_statem_server_read_transition", "_dtls_get_message", "_tls_get_message_header", "_BUF_MEM_grow_clean", "_tls_get_message_body", "_ossl_statem_client_construct_message", "_ossl_statem_server_construct_message", "_ossl_statem_client_post_work", "_ossl_statem_server_post_work", "_ossl_statem_client_pre_work", "_ossl_statem_server_pre_work", "_ossl_statem_client_write_transition", "_ossl_statem_server_write_transition", "_ossl_statem_export_allowed", "_ossl_statem_export_early_allowed", "_tls13_restore_handshake_digest_for_pha", "_tls_finish_handshake", "_tls_client_key_exchange_post_work", "_tls13_save_handshake_digest_for_pha", "_tls13_update_key", "_srp_generate_client_master_secret", "_tls_construct_change_cipher_spec", "_dtls_construct_change_cipher_spec", "_tls_construct_client_hello", "_tls_construct_end_of_early_data", "_tls_construct_client_certificate", "_tls_construct_client_key_exchange", "_tls_construct_cert_verify", "_tls_construct_next_proto", "_tls_construct_finished", "_tls_construct_key_update", "_ssl_set_client_hello_version", "_ssl_version_supported", "_ssl3_output_cert_chain", "_tls_process_server_hello", "_tls_process_server_certificate", "_tls_process_cert_verify", "_tls_process_cert_status_body", "_tls_process_key_exchange", "_tls_process_certificate_request", "_SRP_Calc_A_param", "_tls_process_initial_server_flight", "_tls_process_change_cipher_spec", "_tls_process_new_session_ticket", "_tls_process_finished", "_tls_process_key_update", "_ssl_choose_client_version", "_dtls_process_hello_verify", "_ssl_x509err2alert", "_tls_process_cert_status", "_srp_verify_server_param", "_DH_check_params", "_tls1_set_peer_legacy_sigalg", "_tls12_check_peer_sigalg", "_tls1_lookup_md", "_EVP_DigestVerifyInit", "_construct_key_exchange_tbs", "_EVP_DigestVerify", "_ssl3_check_cert_and_algorithm", "_tls1_process_sigalgs", "_tls_process_server_done", "_EVP_Digest", "_tls_process_hello_req", "_tls_prepare_client_certificate", "_tls_choose_sigalg", "_tls1_check_chain", "_tls1_check_group_id", "_ssl_do_client_cert_cb", "_ssl3_take_mac", "_dtls1_get_queue_priority", "_dtls1_retransmit_message", "_dtls1_buffer_message", "_dtls1_set_message_header", "_BUF_reverse", "_EVP_DigestVerifyFinal", "_ssl_security_cert_chain", "_tls_check_sigalg_curve", "_ssl_check_version_downgrade", "_ssl_choose_server_version", "_d2i_X509_NAME", "_X509_NAME_cmp", "_i2d_X509", "_d2i_GOST_KX_MESSAGE", "_i2d_GOST_KX_MESSAGE", "_GOST_KX_MESSAGE_new", "_GOST_KX_MESSAGE_free", "_ASN1_item_new", "_dtls_construct_hello_verify_request", "_tls_construct_server_hello", "_tls_construct_server_certificate", "_tls_construct_server_key_exchange", "_tls_construct_certificate_request", "_tls_construct_server_done", "_tls_construct_new_session_ticket", "_tls_construct_cert_status", "_ssl_get_auto_dh", "_HMAC_CTX_new", "_HMAC_CTX_free", "_EVP_EncryptInit_ex", "_HMAC_Init_ex", "_HMAC_Update", "_HMAC_Final", "_tls_process_client_hello", "_tls_process_end_of_early_data", "_tls_process_client_certificate", "_tls_process_client_key_exchange", "_tls_process_next_proto", "_RSA_size", "_RSA_private_decrypt", "_tls_post_process_client_hello", "_tls1_set_server_sigalgs", "_SSL_srp_server_param_with_username", "_tls_post_process_client_key_exchange", "_BN_ucmp", "_srp_generate_server_master_secret", "_ASN1_TYPE_get", "_tls_construct_cert_status_body", "_EVP_PKEY_new_mac_key", "_EC_KEY_get_conv_form", "_EC_GROUP_method_of", "_EC_METHOD_get_field_type", "_SSL_get_peer_signature_type_nid", "_SSL_get_signature_type_nid", "_EVP_DecryptInit_ex", "_HMAC_size", "_SSL_get_sigalgs", "_SSL_get_shared_sigalgs", "_tls1_set_raw_sigalgs", "_X509_chain_check_suiteb", "_EVP_PKEY_get0", "_SSL_check_chain", "_BN_set_word", "_BN_get_rfc3526_prime_8192", "_BN_get_rfc3526_prime_4096", "_BN_get_rfc3526_prime_3072", "_BN_get_rfc3526_prime_2048", "_BN_get_rfc2409_prime_1024", "_X509_get_signature_info", "_SSL_CTX_set_tlsext_max_fragment_length", "_SSL_set_tlsext_max_fragment_length", "_SSL_SESSION_get_max_fragment_length", "_EVP_PKEY_get_default_digest_nid", "_tls13_setup_key_block", "_tls13_generate_master_secret", "_tls13_final_finish_mac", "_tls13_export_keying_material", "_tls13_derive_key", "_tls13_derive_iv", "_BN_dup", "_SRP_Calc_B", "_SSL_set_srp_server_param_pw", "_SRP_get_default_gN", "_BN_clear_free", "_SRP_create_verifier_BN", "_SSL_set_srp_server_param", "_BN_copy", "_SRP_Verify_A_mod_N", "_SRP_Calc_u", "_SRP_Calc_server_key", "_SRP_Verify_B_mod_N", "_SRP_Calc_x", "_SRP_Calc_client_key", "_SRP_check_known_gN_param", "_SRP_Calc_A", "_SSL_get_srp_g", "_SSL_get_srp_N", "_SSL_get_srp_username", "_SSL_get_srp_userinfo", "_SSL_CTX_set_srp_username", "_SSL_CTX_set_srp_password", "_SSL_CTX_set_srp_strength", "_SSL_CTX_set_srp_verify_param_callback", "_SSL_CTX_set_srp_cb_arg", "_SSL_CTX_set_srp_username_callback", "_SSL_CTX_set_srp_client_pwd_callback", "_AES_cbc_encrypt", "_AES_set_encrypt_key", "_AES_set_decrypt_key", "_AES_encrypt", "_AES_decrypt", "_AES_wrap_key", "_AES_unwrap_key", "_aria_encrypt", "_aria_set_encrypt_key", "_aria_set_decrypt_key", "_ASN1_BIT_STRING_set", "_i2c_ASN1_BIT_STRING", "_c2i_ASN1_BIT_STRING", "_ASN1_BIT_STRING_set_bit", "_ASN1_BIT_STRING_get_bit", "_ASN1_BIT_STRING_check", "_ASN1_d2i_bio", "_asn1_d2i_read_bio", "_ASN1_item_d2i_bio", "_ASN1_digest", "_ASN1_item_digest", "_ASN1_dup", "_ASN1_item_dup", "_asn1_generalizedtime_to_tm", "_ASN1_GENERALIZEDTIME_check", "_ASN1_GENERALIZEDTIME_set_string", "_ASN1_GENERALIZEDTIME_set", "_ASN1_GENERALIZEDTIME_adj", "_ASN1_GENERALIZEDTIME_print", "_ASN1_i2d_bio", "_ASN1_item_i2d_bio", "_ASN1_INTEGER_dup", "_ASN1_INTEGER_cmp", "_i2c_ASN1_INTEGER", "_c2i_ASN1_INTEGER", "_d2i_ASN1_UINTEGER", "_ASN1_INTEGER_get_int64", "_ASN1_STRING_dup", "_ASN1_STRING_cmp", "_ASN1_INTEGER_new", "_ASN1_INTEGER_free", "_ASN1_get_object", "_ASN1_INTEGER_get_uint64", "_ASN1_INTEGER_set_uint64", "_ASN1_INTEGER_set", "_ASN1_INTEGER_get", "_BN_to_ASN1_INTEGER", "_ASN1_STRING_type_new", "_BN_is_negative", "_BN_set_negative", "_ASN1_ENUMERATED_get_int64", "_ASN1_ENUMERATED_set_int64", "_ASN1_ENUMERATED_set", "_ASN1_ENUMERATED_get", "_BN_to_ASN1_ENUMERATED", "_ASN1_ENUMERATED_to_BN", "_c2i_uint64_int", "_i2c_uint64_int", "_ASN1_mbstring_copy", "_ASN1_mbstring_ncopy", "_i2d_ASN1_OBJECT", "_a2d_ASN1_OBJECT", "_i2t_ASN1_OBJECT", "_i2a_ASN1_OBJECT", "_d2i_ASN1_OBJECT", "_c2i_ASN1_OBJECT", "_ASN1_object_size", "_ASN1_put_object", "_ossl_ctype_check", "_BN_mul_word", "_BN_add_word", "_BN_div_word", "_BIO_dump", "_ASN1_OBJECT_new", "_ASN1_OBJECT_create", "_OBJ_dup", "_ASN1_OCTET_STRING_dup", "_ASN1_OCTET_STRING_cmp", "_ASN1_OCTET_STRING_set", "_ASN1_PRINTABLE_type", "_ASN1_UNIVERSALSTRING_to_string", "_ASN1_STRING_print", "_ASN1_sign", "_ASN1_item_sign", "_ASN1_item_sign_ctx", "_X509_NAME_print_ex", "_ASN1_STRING_print_ex", "_X509_NAME_print", "_X509_NAME_ENTRY_set", "_ASN1_tag2str", "_i2d_ASN1_TYPE", "_UTF8_getc", "_ASN1_STRING_free", "_UTF8_putc", "_ASN1_STRING_set_default_mask", "_ASN1_STRING_get_default_mask", "_ASN1_STRING_set_by_NID", "_ASN1_STRING_TABLE_get", "_ASN1_STRING_TABLE_add", "_ASN1_STRING_TABLE_cleanup", "_d2i_ASN1_TIME", "_i2d_ASN1_TIME", "_ASN1_TIME_new", "_ASN1_TIME_free", "_asn1_time_to_tm", "_asn1_time_from_tm", "_ASN1_TIME_set", "_ASN1_TIME_adj", "_ASN1_TIME_check", "_ASN1_TIME_to_generalizedtime", "_ASN1_TIME_to_tm", "_ASN1_TIME_set_string", "_ASN1_TIME_set_string_X509", "_ASN1_TIME_diff", "_ASN1_TIME_print", "_ASN1_TIME_cmp_time_t", "_ASN1_TIME_normalize", "_ASN1_TIME_compare", "_ASN1_TYPE_set", "_asn1_primitive_free", "_ASN1_TYPE_set1", "_ASN1_TYPE_cmp", "_OBJ_cmp", "_ASN1_TYPE_pack_sequence", "_ASN1_item_pack", "_ASN1_TYPE_new", "_ASN1_OCTET_STRING_free", "_ASN1_TYPE_unpack_sequence", "_ASN1_item_unpack", "_asn1_utctime_to_tm", "_ASN1_UTCTIME_check", "_ASN1_UTCTIME_set_string", "_ASN1_UTCTIME_set", "_ASN1_UTCTIME_adj", "_ASN1_UTCTIME_cmp_time_t", "_ASN1_UTCTIME_print", "_ASN1_verify", "_ASN1_item_verify", "_EVP_PKEY_asn1_get_count", "_EVP_PKEY_asn1_get0", "_EVP_PKEY_asn1_find", "_EVP_PKEY_asn1_add0", "_EVP_PKEY_asn1_add_alias", "_EVP_PKEY_asn1_new", "_EVP_PKEY_asn1_free", "_EVP_PKEY_get0_asn1", "_EVP_PKEY_asn1_copy", "_EVP_PKEY_asn1_set_public", "_EVP_PKEY_asn1_set_private", "_EVP_PKEY_asn1_set_param", "_EVP_PKEY_asn1_set_free", "_EVP_PKEY_asn1_set_ctrl", "_EVP_PKEY_asn1_set_security_bits", "_EVP_PKEY_asn1_set_item", "_EVP_PKEY_asn1_set_siginf", "_EVP_PKEY_asn1_set_check", "_EVP_PKEY_asn1_set_public_check", "_EVP_PKEY_asn1_set_param_check", "_EVP_PKEY_asn1_set_set_priv_key", "_EVP_PKEY_asn1_set_set_pub_key", "_EVP_PKEY_asn1_set_get_priv_key", "_EVP_PKEY_asn1_set_get_pub_key", "_ASN1_generate_nconf", "_ASN1_generate_v3", "_ASN1_str2mask", "_ASN1_check_infinite_end", "_ASN1_const_check_infinite_end", "_ASN1_put_eoc", "_ASN1_STRING_copy", "_ASN1_STRING_new", "_ASN1_STRING_set0", "_asn1_string_embed_free", "_ASN1_STRING_clear_free", "_ASN1_STRING_length_set", "_ASN1_STRING_data", "_ASN1_parse", "_ASN1_parse_dump", "_d2i_ASN1_OCTET_STRING", "_d2i_ASN1_INTEGER", "_d2i_ASN1_ENUMERATED", "_ASN1_ENUMERATED_free", "_BIO_dump_indent", "_BIO_indent", "_i2d_ASN1_bio_stream", "_SMIME_crlf_copy", "_PEM_write_bio_ASN1_stream", "_SMIME_write_ASN1", "_SMIME_read_ASN1", "_SMIME_text", "_ASN1_add_oid_module", "_ASN1_add_stable_module", "_BIO_f_asn1", "_BIO_asn1_set_prefix", "_BIO_asn1_get_prefix", "_BIO_asn1_set_suffix", "_BIO_asn1_get_suffix", "_BIO_new_NDEF", "_d2i_PKCS8_PRIV_KEY_INFO", "_EVP_PKCS82PKEY", "_PKCS8_PRIV_KEY_INFO_free", "_EVP_PKEY_type", "_d2i_AutoPrivateKey", "_ERR_clear_last_mark", "_d2i_ASN1_SEQUENCE_ANY", "_ASN1_TYPE_free", "_ASN1_TYPE_set_octetstring", "_ASN1_TYPE_get_octetstring", "_ASN1_TYPE_set_int_octetstring", "_ASN1_TYPE_get_int_octetstring", "_i2a_ASN1_INTEGER", "_a2i_ASN1_INTEGER", "_i2a_ASN1_ENUMERATED", "_a2i_ASN1_ENUMERATED", "_i2d_PrivateKey", "_d2i_NETSCAPE_CERT_SEQUENCE", "_i2d_NETSCAPE_CERT_SEQUENCE", "_NETSCAPE_CERT_SEQUENCE_new", "_NETSCAPE_CERT_SEQUENCE_free", "_d2i_PBEPARAM", "_i2d_PBEPARAM", "_PBEPARAM_new", "_PBEPARAM_free", "_PKCS5_pbe_set0_algor", "_PKCS5_pbe_set", "_d2i_PBE2PARAM", "_i2d_PBE2PARAM", "_PBE2PARAM_new", "_PBE2PARAM_free", "_d2i_PBKDF2PARAM", "_i2d_PBKDF2PARAM", "_PBKDF2PARAM_new", "_PBKDF2PARAM_free", "_PKCS5_pbe2_set_iv", "_PKCS5_pbkdf2_set", "_PKCS5_pbe2_set", "_d2i_SCRYPT_PARAMS", "_i2d_SCRYPT_PARAMS", "_SCRYPT_PARAMS_new", "_SCRYPT_PARAMS_free", "_PKCS5_pbe2_set_scrypt", "_PKCS5_v2_scrypt_keyivgen", "_i2d_PKCS8_PRIV_KEY_INFO", "_PKCS8_PRIV_KEY_INFO_new", "_PKCS8_pkey_set0", "_X509_ALGOR_set0", "_PKCS8_pkey_get0", "_PKCS8_pkey_get0_attrs", "_PKCS8_pkey_add1_attr_by_NID", "_X509at_add1_attr_by_NID", "_ASN1_buf_print", "_ASN1_bn_print", "_ASN1_tag2bit", "_ASN1_item_ex_free", "_ASN1_item_ex_d2i", "_asn1_get_choice_selector", "_asn1_get_field_ptr", "_asn1_template_free", "_asn1_set_choice_selector", "_ASN1_item_ex_new", "_asn1_do_adb", "_asn1_enc_save", "_ASN1_BIT_STRING_new", "_ASN1_BIT_STRING_free", "_CRYPTO_clear_realloc", "_ASN1_item_ndef_i2d", "_ASN1_item_ex_i2d", "_asn1_enc_restore", "_OPENSSL_sk_set", "_asn1_item_embed_free", "_asn1_do_lock", "_asn1_enc_free", "_asn1_enc_init", "_ASN1_PCTX_new", "_ASN1_PCTX_free", "_ASN1_PCTX_get_flags", "_ASN1_PCTX_set_flags", "_ASN1_PCTX_get_nm_flags", "_ASN1_PCTX_set_nm_flags", "_ASN1_PCTX_get_cert_flags", "_ASN1_PCTX_set_cert_flags", "_ASN1_PCTX_get_oid_flags", "_ASN1_PCTX_set_oid_flags", "_ASN1_PCTX_get_str_flags", "_ASN1_PCTX_set_str_flags", "_ASN1_item_print", "_i2d_ASN1_OCTET_STRING", "_ASN1_OCTET_STRING_new", "_i2d_ASN1_INTEGER", "_i2d_ASN1_ENUMERATED", "_ASN1_ENUMERATED_new", "_d2i_ASN1_BIT_STRING", "_i2d_ASN1_BIT_STRING", "_d2i_ASN1_UTF8STRING", "_i2d_ASN1_UTF8STRING", "_ASN1_UTF8STRING_new", "_ASN1_UTF8STRING_free", "_d2i_ASN1_PRINTABLESTRING", "_i2d_ASN1_PRINTABLESTRING", "_ASN1_PRINTABLESTRING_new", "_ASN1_PRINTABLESTRING_free", "_d2i_ASN1_T61STRING", "_i2d_ASN1_T61STRING", "_ASN1_T61STRING_new", "_ASN1_T61STRING_free", "_d2i_ASN1_IA5STRING", "_i2d_ASN1_IA5STRING", "_ASN1_IA5STRING_new", "_ASN1_IA5STRING_free", "_d2i_ASN1_GENERALSTRING", "_i2d_ASN1_GENERALSTRING", "_ASN1_GENERALSTRING_new", "_ASN1_GENERALSTRING_free", "_d2i_ASN1_UTCTIME", "_i2d_ASN1_UTCTIME", "_ASN1_UTCTIME_new", "_ASN1_UTCTIME_free", "_d2i_ASN1_GENERALIZEDTIME", "_i2d_ASN1_GENERALIZEDTIME", "_ASN1_GENERALIZEDTIME_new", "_ASN1_GENERALIZEDTIME_free", "_d2i_ASN1_VISIBLESTRING", "_i2d_ASN1_VISIBLESTRING", "_ASN1_VISIBLESTRING_new", "_ASN1_VISIBLESTRING_free", "_d2i_ASN1_UNIVERSALSTRING", "_i2d_ASN1_UNIVERSALSTRING", "_ASN1_UNIVERSALSTRING_new", "_ASN1_UNIVERSALSTRING_free", "_d2i_ASN1_BMPSTRING", "_i2d_ASN1_BMPSTRING", "_ASN1_BMPSTRING_new", "_ASN1_BMPSTRING_free", "_d2i_ASN1_NULL", "_i2d_ASN1_NULL", "_ASN1_NULL_new", "_ASN1_NULL_free", "_d2i_ASN1_TYPE", "_d2i_ASN1_PRINTABLE", "_i2d_ASN1_PRINTABLE", "_ASN1_PRINTABLE_new", "_ASN1_PRINTABLE_free", "_d2i_DISPLAYTEXT", "_i2d_DISPLAYTEXT", "_DISPLAYTEXT_new", "_DISPLAYTEXT_free", "_d2i_DIRECTORYSTRING", "_i2d_DIRECTORYSTRING", "_DIRECTORYSTRING_new", "_DIRECTORYSTRING_free", "_i2d_ASN1_SEQUENCE_ANY", "_d2i_ASN1_SET_ANY", "_i2d_ASN1_SET_ANY", "_d2i_X509_ALGOR", "_i2d_X509_ALGOR", "_X509_ALGOR_new", "_X509_ALGOR_free", "_d2i_X509_ALGORS", "_i2d_X509_ALGORS", "_X509_ALGOR_dup", "_X509_ALGOR_get0", "_X509_ALGOR_set_md", "_X509_ALGOR_cmp", "_X509_ALGOR_copy", "_X509_INFO_new", "_X509_PKEY_free", "_X509_PKEY_new", "_d2i_X509_SIG", "_i2d_X509_SIG", "_X509_SIG_new", "_X509_SIG_free", "_X509_SIG_get0", "_X509_SIG_getm", "_d2i_NETSCAPE_SPKAC", "_i2d_NETSCAPE_SPKAC", "_NETSCAPE_SPKAC_new", "_NETSCAPE_SPKAC_free", "_d2i_NETSCAPE_SPKI", "_i2d_NETSCAPE_SPKI", "_d2i_X509_VAL", "_i2d_X509_VAL", "_X509_VAL_new", "_X509_VAL_free", "_ASYNC_is_capable", "_async_local_cleanup", "_async_get_ctx", "_async_start_func", "_CRYPTO_THREAD_get_local", "_ossl_init_thread_start", "_CRYPTO_THREAD_set_local", "_ASYNC_init_thread", "_ASYNC_pause_job", "_async_init", "_CRYPTO_THREAD_init_local", "_CRYPTO_THREAD_cleanup_local", "_async_deinit", "_async_delete_thread_state", "_ASYNC_cleanup_thread", "_ASYNC_get_wait_ctx", "_ASYNC_block_pause", "_ASYNC_unblock_pause", "_ASYNC_WAIT_CTX_set_wait_fd", "_ASYNC_WAIT_CTX_get_fd", "_ASYNC_WAIT_CTX_clear_fd", "_async_wait_ctx_reset_counts", "_BF_cfb64_encrypt", "_BF_options", "_BF_ecb_encrypt", "_BF_encrypt", "_BF_decrypt", "_BF_cbc_encrypt", "_BF_ofb64_encrypt", "_BF_set_key", "_BIO_ADDR_make", "_BIO_ADDR_rawmake", "_BIO_ADDR_family", "_BIO_ADDR_rawaddress", "_BIO_ADDR_rawport", "_BIO_ADDR_hostname_string", "_BIO_sock_init", "_BIO_ADDR_service_string", "_BIO_ADDR_path_string", "_BIO_ADDR_sockaddr", "_BIO_ADDR_sockaddr_noconst", "_BIO_ADDR_sockaddr_size", "_BIO_ADDRINFO_next", "_BIO_ADDRINFO_family", "_BIO_ADDRINFO_socktype", "_BIO_ADDRINFO_protocol", "_BIO_ADDRINFO_sockaddr_size", "_BIO_ADDRINFO_sockaddr", "_BIO_ADDRINFO_address", "_BIO_ADDRINFO_free", "_BIO_parse_hostserv", "_BIO_lookup", "_BIO_lookup_ex", "_BIO_dump_cb", "_BIO_dump_indent_cb", "_BIO_hex_string", "_BIO_vprintf", "_OPENSSL_strnlen", "_BIO_vsnprintf", "_BIO_get_host_ip", "_BIO_get_port", "_BIO_sock_error", "_BIO_gethostbyname", "_bio_sock_cleanup_int", "_BIO_socket_ioctl", "_ioctl", "_BIO_get_accept_socket", "_BIO_socket", "_BIO_listen", "_BIO_closesocket", "_BIO_accept", "_BIO_accept_ex", "_BIO_sock_should_retry", "_BIO_set_tcp_ndelay", "_BIO_socket_nbio", "_BIO_sock_info", "_BIO_connect", "_BIO_bind", "_BIO_copy_next_retry", "_BIO_callback_ctrl", "_bwrite_conv", "_bread_conv", "_BIO_set_data", "_BIO_get_data", "_BIO_set_init", "_BIO_get_init", "_BIO_set_shutdown", "_BIO_get_shutdown", "_BIO_vfree", "_BIO_get_callback", "_BIO_set_callback", "_BIO_get_callback_ex", "_BIO_set_callback_ex", "_BIO_set_callback_arg", "_BIO_get_callback_arg", "_BIO_method_name", "_BIO_read_ex", "_BIO_write_ex", "_BIO_gets", "_BIO_ptr_ctrl", "_BIO_ctrl_pending", "_BIO_ctrl_wpending", "_BIO_get_retry_BIO", "_BIO_set_retry_reason", "_BIO_set_next", "_BIO_dup_chain", "_BIO_set_ex_data", "_BIO_get_ex_data", "_BIO_number_read", "_BIO_number_written", "_bio_free_ex_data", "_bio_cleanup", "_BIO_get_new_index", "_BIO_meth_new", "_BIO_meth_free", "_BIO_meth_get_write", "_BIO_meth_get_write_ex", "_BIO_meth_set_write", "_BIO_meth_set_write_ex", "_BIO_meth_get_read", "_BIO_meth_get_read_ex", "_BIO_meth_set_read", "_BIO_meth_set_read_ex", "_BIO_meth_get_puts", "_BIO_meth_set_puts", "_BIO_meth_get_gets", "_BIO_meth_set_gets", "_BIO_meth_get_ctrl", "_BIO_meth_set_ctrl", "_BIO_meth_get_create", "_BIO_meth_set_create", "_BIO_meth_get_destroy", "_BIO_meth_set_destroy", "_BIO_meth_get_callback_ctrl", "_BIO_meth_set_callback_ctrl", "_BIO_s_secmem", "_BUF_MEM_new_ex", "_BIO_s_null", "_BIO_new_socket", "_BIO_sock_non_fatal_error", "_BLAKE2b_Init", "_BLAKE2b_Update", "_BLAKE2b_Final", "_BLAKE2s_Init", "_BLAKE2s_Update", "_BLAKE2s_Final", "_EVP_blake2b512", "_EVP_blake2s256", "_BN_add", "_BN_usub", "_BN_uadd", "_BN_sub", "_bn_mul_add_words", "_bn_mul_words", "_bn_sqr_words", "_bn_div_words", "_bn_add_words", "_bn_sub_words", "_bn_mul_comba8", "_bn_mul_comba4", "_bn_sqr_comba8", "_bn_sqr_comba4", "_bn_mul_mont", "_BN_BLINDING_new", "_BN_BLINDING_set_current_thread", "_BN_BLINDING_free", "_BN_BLINDING_update", "_BN_BLINDING_create_param", "_BN_BLINDING_convert", "_BN_BLINDING_convert_ex", "_BN_BLINDING_invert", "_BN_BLINDING_invert_ex", "_BN_BLINDING_is_current_thread", "_BN_BLINDING_lock", "_BN_BLINDING_unlock", "_BN_BLINDING_get_flags", "_BN_BLINDING_set_flags", "_BN_get_rfc2409_prime_768", "_BN_get_rfc3526_prime_1536", "_BN_get_rfc3526_prime_6144", "_BN_CTX_secure_new", "_BN_CTX_start", "_BN_CTX_end", "_BN_CTX_get", "_bn_init", "_BN_set_flags", "_BN_div", "_bn_div_fixed_top", "_BN_exp", "_BN_mod_exp", "_BN_mod_exp_mont_word", "_BN_get_flags", "_BN_is_odd", "_BN_sqr", "_BN_is_bit_set", "_BN_mul", "_BN_mod_exp_recp", "_BN_abs_is_word", "_BN_MONT_CTX_new", "_BN_MONT_CTX_set", "_BN_to_montgomery", "_bn_correct_top", "_BN_num_bits_word", "_bn_lshift_fixed_top", "_bn_wexpand", "_bn_rshift_fixed_top", "_BN_mod_mul_montgomery", "_BN_from_montgomery", "_BN_MONT_CTX_free", "_BN_mod_exp_mont_consttime", "_BN_nnmod", "_bn_to_mont_fixed_top", "_bn_mul_mont_fixed_top", "_BN_value_one", "_BN_RECP_CTX_init", "_BN_RECP_CTX_set", "_BN_mod_mul_reciprocal", "_BN_RECP_CTX_free", "_BN_mod_exp_simple", "_BN_mod_mul", "_BN_mod_exp2_mont", "_int_bn_mod_inverse", "_BN_mod_inverse", "_BN_gcd", "_BN_GF2m_add", "_BN_GF2m_mod_arr", "_BN_GF2m_mod", "_BN_GF2m_poly2arr", "_BN_GF2m_mod_mul_arr", "_BN_GF2m_mod_sqr_arr", "_BN_GF2m_mod_mul", "_BN_GF2m_mod_sqr", "_BN_GF2m_mod_inv", "_BN_GF2m_mod_inv_arr", "_BN_GF2m_arr2poly", "_BN_GF2m_mod_div", "_BN_GF2m_mod_div_arr", "_BN_GF2m_mod_exp_arr", "_BN_GF2m_mod_exp", "_BN_GF2m_mod_sqrt_arr", "_BN_GF2m_mod_sqrt", "_BN_GF2m_mod_solve_quad_arr", "_BN_GF2m_mod_solve_quad", "_bn_compute_wNAF", "_bn_get_top", "_bn_get_dmax", "_bn_set_all_zero", "_bn_copy_words", "_bn_get_words", "_bn_set_static_words", "_bn_set_words", "_BN_kronecker", "_BN_set_params", "_BN_get_params", "_CRYPTO_secure_clear_free", "_BN_secure_new", "_bn_expand2", "_BN_swap", "_BN_clear", "_BN_get_word", "_BN_bn2binpad", "_BN_lebin2bn", "_BN_bn2lebinpad", "_BN_cmp", "_BN_set_bit", "_BN_clear_bit", "_BN_mask_bits", "_bn_cmp_words", "_bn_cmp_part_words", "_BN_consttime_swap", "_BN_security_bits", "_BN_zero_ex", "_BN_is_one", "_BN_is_word", "_BN_GENCB_new", "_BN_GENCB_free", "_BN_GENCB_set_old", "_BN_GENCB_set", "_BN_GENCB_get_arg", "_bn_correct_top_consttime", "_BN_mod_add", "_bn_mod_add_fixed_top", "_BN_mod_add_quick", "_BN_mod_sub", "_bn_mod_sub_fixed_top", "_BN_mod_sub_quick", "_BN_mod_sqr", "_BN_mod_lshift1", "_BN_lshift1", "_BN_mod_lshift1_quick", "_BN_mod_lshift", "_BN_mod_lshift_quick", "_BN_lshift", "_bn_sqr_fixed_top", "_bn_mul_fixed_top", "_bn_from_mont_fixed_top", "_BN_MONT_CTX_init", "_BN_rshift1", "_BN_rshift", "_BN_sub_word", "_BN_MONT_CTX_copy", "_BN_MONT_CTX_set_locked", "_bn_sub_part_words", "_bn_mul_recursive", "_bn_mul_normal", "_bn_mul_part_recursive", "_bn_mul_low_recursive", "_bn_mul_low_normal", "_BN_get0_nist_prime_192", "_BN_get0_nist_prime_224", "_BN_get0_nist_prime_256", "_BN_get0_nist_prime_384", "_BN_get0_nist_prime_521", "_BN_nist_mod_192", "_BN_nist_mod_224", "_BN_nist_mod_256", "_BN_nist_mod_384", "_BN_nist_mod_521", "_BN_nist_mod_func", "_BN_GENCB_call", "_BN_generate_prime_ex", "_BN_is_prime_fasttest_ex", "_BN_is_prime_ex", "_BN_bn2dec", "_BN_hex2bn", "_OPENSSL_hexchar2int", "_BN_dec2bn", "_BN_asc2bn", "_BN_print", "_BN_options", "_BN_rand", "_BN_bntest_rand", "_BN_priv_rand", "_BN_rand_range", "_BN_priv_rand_range", "_BN_pseudo_rand", "_BN_pseudo_rand_range", "_BN_generate_dsa_nonce", "_BN_RECP_CTX_new", "_BN_div_recp", "_BN_reciprocal", "_bn_sqr_normal", "_bn_sqr_recursive", "_BN_mod_sqrt", "_BN_mod_word", "_CRYPTO_secure_malloc", "_Camellia_Ekeygen", "_Camellia_EncryptBlock_Rounds", "_Camellia_EncryptBlock", "_Camellia_DecryptBlock_Rounds", "_Camellia_DecryptBlock", "_Camellia_cbc_encrypt", "_Camellia_set_key", "_Camellia_encrypt", "_Camellia_decrypt", "_CAST_cfb64_encrypt", "_CAST_ecb_encrypt", "_CAST_encrypt", "_CAST_decrypt", "_CAST_cbc_encrypt", "_CAST_ofb64_encrypt", "_CAST_set_key", "_ChaCha20_ctr32", "_CMAC_CTX_free", "_CMAC_CTX_new", "_CMAC_CTX_cleanup", "_CMAC_CTX_get0_cipher_ctx", "_CMAC_CTX_copy", "_EVP_CIPHER_CTX_copy", "_CMAC_Init", "_CMAC_Update", "_CMAC_Final", "_CMAC_resume", "_CMS_SharedInfo_encode", "_CMS_signed_get_attr_count", "_CMS_signed_get_attr_by_NID", "_CMS_signed_get_attr_by_OBJ", "_CMS_signed_get_attr", "_CMS_signed_delete_attr", "_CMS_signed_add1_attr", "_CMS_signed_add1_attr_by_OBJ", "_CMS_signed_add1_attr_by_NID", "_CMS_signed_add1_attr_by_txt", "_CMS_signed_get0_data_by_OBJ", "_CMS_unsigned_get_attr_count", "_CMS_unsigned_get_attr_by_NID", "_CMS_unsigned_get_attr_by_OBJ", "_CMS_unsigned_get_attr", "_CMS_unsigned_delete_attr", "_CMS_unsigned_add1_attr", "_CMS_unsigned_add1_attr_by_OBJ", "_CMS_unsigned_add1_attr_by_NID", "_CMS_unsigned_add1_attr_by_txt", "_CMS_unsigned_get0_data_by_OBJ", "_CMS_si_check_attributes", "_cms_DigestedData_create", "_cms_DigestedData_init_bio", "_cms_DigestedData_do_final", "_cms_EncryptedContent_init_bio", "_cms_EncryptedContent_init", "_CMS_EncryptedData_set1_key", "_cms_EncryptedData_init_bio", "_cms_get0_enveloped", "_cms_env_asn1_ctrl", "_CMS_get0_RecipientInfos", "_CMS_RecipientInfo_type", "_CMS_RecipientInfo_get0_pkey_ctx", "_CMS_EnvelopedData_create", "_CMS_add1_recipient_cert", "_cms_pkey_get_ri_type", "_CMS_RecipientInfo_ktri_get0_algs", "_CMS_RecipientInfo_ktri_get0_signer_id", "_CMS_RecipientInfo_ktri_cert_cmp", "_CMS_RecipientInfo_set0_pkey", "_CMS_RecipientInfo_kekri_id_cmp", "_CMS_add0_recipient_key", "_CMS_RecipientInfo_kekri_get0_id", "_CMS_RecipientInfo_set0_key", "_CMS_RecipientInfo_decrypt", "_CMS_RecipientInfo_encrypt", "_cms_EnvelopedData_init_bio", "_d2i_CMS_ReceiptRequest", "_i2d_CMS_ReceiptRequest", "_CMS_ReceiptRequest_new", "_CMS_ReceiptRequest_free", "_CMS_get1_ReceiptRequest", "_CMS_ReceiptRequest_create0", "_CMS_add1_ReceiptRequest", "_CMS_ReceiptRequest_get0_values", "_cms_msgSigDigest_add1", "_cms_Receipt_verify", "_cms_encode_Receipt", "_CMS_stream", "_CMS_get0_content", "_EVP_CIPHER_CTX_set_flags", "_CMS_dataInit", "_CMS_dataFinal", "_d2i_CMS_ContentInfo", "_i2d_CMS_ContentInfo", "_BIO_new_CMS", "_i2d_CMS_bio_stream", "_BIO_f_base64", "_ossl_tolower", "_CMS_get0_eContentType", "_CMS_RecipientInfo_kari_get0_alg", "_CMS_RecipientInfo_kari_get0_reks", "_CMS_RecipientInfo_kari_get0_orig_id", "_CMS_RecipientInfo_kari_orig_id_cmp", "_CMS_RecipientEncryptedKey_get0_id", "_CMS_RecipientEncryptedKey_cert_cmp", "_CMS_RecipientInfo_kari_set0_pkey", "_CMS_RecipientInfo_kari_get0_ctx", "_CMS_RecipientInfo_kari_decrypt", "_cms_RecipientInfo_kari_init", "_cms_RecipientInfo_kari_encrypt", "_CMS_ContentInfo_new", "_CMS_ContentInfo_print_ctx", "_ascii_isdigit", "_OPENSSL_gmtime_adj", "_OPENSSL_gmtime", "_OPENSSL_gmtime_diff", "_cms_Data_create", "_CMS_set_detached", "_cms_content_bio", "_cms_DigestAlgorithm_init_bio", "_cms_DigestAlgorithm_find_ctx", "_BIO_f_cipher", "_EVP_CIPHER_type", "_EVP_CIPHER_asn1_to_param", "_EVP_CIPHER_CTX_key_length", "_EVP_CIPHER_CTX_rand_key", "_EVP_CIPHER_param_to_asn1", "_EVP_PKEY_CTX_get0_pkey", "_cms_set1_SignerIdentifier", "_cms_ias_cert_cmp", "_cms_keyid_cert_cmp", "_cms_set1_keyid", "_cms_set1_ias", "_EVP_des_ede3_wrap", "_EVP_aes_128_wrap", "_EVP_aes_192_wrap", "_EVP_aes_256_wrap", "_cms_SignerIdentifier_get0_signer_id", "_cms_SignerIdentifier_cert_cmp", "_CRYPTO_128_wrap", "_CRYPTO_128_unwrap", "_cms_RecipientInfo_pwri_crypt", "_cms_SignedData_init_bio", "_cms_SignedData_final", "_CMS_set1_eContentType", "_CMS_is_detached", "_BIO_f_md", "_EVP_MD_pkey_type", "_CMS_add0_CertificateChoices", "_CMS_add0_cert", "_CMS_add1_cert", "_CMS_add0_RevocationInfoChoice", "_CMS_add0_crl", "_CMS_add1_crl", "_X509_CRL_up_ref", "_X509_get0_subject_key_id", "_X509_NAME_set", "_CMS_RecipientInfo_set0_password", "_CMS_add0_recipient_password", "_EVP_PBE_CipherInit", "_CMS_SignedData_init", "_CMS_add1_signer", "_CMS_add_standard_smimecap", "_CMS_add_smimecap", "_X509at_get_attr_count", "_X509at_get_attr_by_NID", "_X509at_get_attr_by_OBJ", "_X509at_get_attr", "_X509at_delete_attr", "_X509at_add1_attr", "_X509at_add1_attr_by_OBJ", "_X509at_add1_attr_by_txt", "_X509at_get0_data_by_OBJ", "_X509_ATTRIBUTE_count", "_CMS_SignerInfo_sign", "_CMS_add_simple_smimecap", "_EVP_MD_CTX_reset", "_CMS_SignerInfo_get0_pkey_ctx", "_CMS_SignerInfo_get0_md_ctx", "_CMS_get0_SignerInfos", "_CMS_SignerInfo_set1_signer_cert", "_CMS_SignerInfo_get0_signer_id", "_CMS_SignerInfo_cert_cmp", "_CMS_set1_signers_certs", "_CMS_SignerInfo_get0_algs", "_CMS_SignerInfo_get0_signature", "_CMS_SignerInfo_verify", "_CMS_SignerInfo_verify_content", "_EVP_PKEY_verify_init", "_EVP_PKEY_verify", "_CMS_data", "_CMS_data_create", "_CMS_digest_verify", "_CMS_digest_create", "_CMS_EncryptedData_decrypt", "_CMS_EncryptedData_encrypt", "_X509_STORE_CTX_set0_crls", "_CMS_verify_receipt", "_GENERAL_NAMES_free", "_CMS_sign_receipt", "_CMS_decrypt_set1_pkey", "_CMS_decrypt_set1_key", "_CMS_decrypt_set1_password", "_CMS_uncompress", "_CMS_compress", "_comp_zlib_cleanup_int", "_COMP_CTX_get_type", "__CONF_get_section", "__CONF_get_section_values", "__CONF_add_string", "__CONF_get_string", "__CONF_new_data", "__CONF_free_data", "__CONF_new_section", "_NCONF_default", "_NCONF_WIN32", "_CONF_set_nconf", "_CONF_set_default_method", "_CONF_load", "_CONF_load_bio", "_NCONF_load_bio", "_CONF_get_section", "_OPENSSL_sk_delete_ptr", "_ossl_safe_getenv", "_OPENSSL_LH_strhash", "_OPENSSL_LH_doall", "_OPENSSL_LH_error", "_CONF_free", "_OPENSSL_strlcpy", "_OPENSSL_strlcat", "_CONF_get_string", "_CONF_get_number", "_NCONF_free_data", "_CONF_dump_bio", "_NCONF_dump_bio", "_OPENSSL_INIT_new", "_OPENSSL_INIT_free", "_OPENSSL_load_builtin_modules", "_CONF_modules_load", "_CONF_modules_load_file", "_CONF_get1_default_config_file", "_CONF_modules_unload", "_CONF_modules_finish", "_CONF_module_add", "_conf_modules_free_int", "_CONF_imodule_get_name", "_CONF_imodule_get_value", "_CONF_imodule_get_usr_data", "_CONF_imodule_set_usr_data", "_CONF_imodule_get_module", "_CONF_imodule_get_flags", "_CONF_imodule_set_flags", "_CONF_module_get_usr_data", "_CONF_module_set_usr_data", "_DSO_load", "_DSO_bind_func", "_DSO_free", "_OPENSSL_config", "_openssl_config_int", "_openssl_no_config_int", "_conf_add_ssl_module", "_OPENSSL_cpuid_setup", "_OPENSSL_showfatal", "_OPENSSL_isservice", "_OPENSSL_die", "_OPENSSL_rdtsc", "_OPENSSL_instrument_bus", "_OPENSSL_instrument_bus2", "_SCT_new_from_base64", "_CTLOG_new_from_base64", "_CTLOG_free", "_SCT_new", "_SCT_set_version", "_SCT_set0_log_id", "_SCT_set0_extensions", "_o2i_SCT_signature", "_SCT_set_timestamp", "_SCT_set_log_entry_type", "_SCT_free", "_EVP_DecodeBlock", "_CTLOG_new", "_i2d_PUBKEY", "_SHA256", "_CTLOG_get0_name", "_CTLOG_get0_log_id", "_CTLOG_get0_public_key", "_CTLOG_STORE_get0_log_by_id", "_SCT_get_signature_nid", "_SCT_set1_signature", "_o2i_SCT", "_i2o_SCT_signature", "_SCT_signature_is_complete", "_i2o_SCT", "_SCT_is_complete", "_i2o_SCT_LIST", "_d2i_SCT_LIST", "_i2d_SCT_LIST", "_CT_POLICY_EVAL_CTX_get0_cert", "_CT_POLICY_EVAL_CTX_get0_issuer", "_CT_POLICY_EVAL_CTX_get0_log_store", "_CT_POLICY_EVAL_CTX_get_time", "_SCT_validation_status_string", "_SCT_print", "_SCT_LIST_print", "_SCT_set1_log_id", "_SCT_set_signature_nid", "_SCT_set1_extensions", "_SCT_set0_signature", "_SCT_get_version", "_SCT_get_log_entry_type", "_SCT_get0_log_id", "_SCT_get_timestamp", "_SCT_get0_extensions", "_SCT_get0_signature", "_SCT_get_source", "_SCT_validate", "_SCT_CTX_new", "_X509_PUBKEY_set", "_SCT_CTX_set1_pubkey", "_SCT_CTX_set1_issuer_pubkey", "_SCT_CTX_set_time", "_SCT_CTX_set1_cert", "_SCT_CTX_verify", "_X509_PUBKEY_free", "_SCT_CTX_free", "_X509_get_ext_by_NID", "_X509_delete_ext", "_i2d_re_X509_tbs", "_X509_EXTENSION_set_data", "_SCT_CTX_set1_issuer", "_X509_get_X509_PUBKEY", "_i2d_X509_PUBKEY", "_ossl_toupper", "_OpenSSL_version_num", "_DES_ede3_cfb64_encrypt", "_DES_ede3_cfb_encrypt", "_DES_cfb64_encrypt", "_DES_cfb_encrypt", "_DES_encrypt1", "_DES_encrypt2", "_DES_encrypt3", "_DES_decrypt3", "_DES_ncbc_encrypt", "_DES_ede3_cbc_encrypt", "_DES_ecb3_encrypt", "_DES_options", "_DES_ecb_encrypt", "_DES_ede3_ofb64_encrypt", "_DES_ofb64_encrypt", "_DES_set_odd_parity", "_DES_check_key_parity", "_DES_is_weak_key", "_DES_set_key", "_DES_set_key_unchecked", "_DES_set_key_checked", "_DES_key_sched", "_DES_xcbc_encrypt", "_DHparams_dup", "_DHparams_print", "_X509_PUBKEY_get0_param", "_d2i_DHxparams", "_d2i_DHparams", "_i2d_DHxparams", "_i2d_DHparams", "_X509_PUBKEY_set0_param", "_DH_security_bits", "_DH_check_pub_key_ex", "_DH_check_ex", "_EVP_PKEY_CTX_get0_peerkey", "_d2i_int_dhx", "_i2d_int_dhx", "_DH_check_params_ex", "_DH_check", "_SHA512_Update", "_SHA512_Final", "_DH_check_pub_key", "_DH_generate_parameters_ex", "_DH_KDF_X9_42", "_DH_compute_key_padded", "_DH_OpenSSL", "_DH_set_default_method", "_DH_get_default_method", "_DH_set_method", "_DH_new_method", "_DH_up_ref", "_DH_set_ex_data", "_DH_get_ex_data", "_DH_bits", "_DH_get_length", "_DH_set_length", "_DH_get0_p", "_DH_get0_q", "_DH_get0_g", "_DH_get0_priv_key", "_DH_get0_pub_key", "_DH_clear_flags", "_DH_test_flags", "_DH_set_flags", "_DH_get0_engine", "_DH_get_1024_160", "_DH_get_2048_224", "_DH_get_2048_256", "_DH_new_by_nid", "_DH_get_nid", "_d2i_DSAparams", "_i2d_DSAparams", "_DSA_size", "_DSA_bits", "_DSA_security_bits", "_d2i_DSA_SIG", "_DSA_SIG_get0", "_DSA_SIG_free", "_X509_signature_dump", "_PKCS7_SIGNER_INFO_get0_algs", "_OBJ_find_sigid_by_algs", "_d2i_DSAPrivateKey", "_i2d_DSAPrivateKey", "_i2d_DSA_SIG", "_DSA_SIG_new", "_DSA_SIG_set0", "_d2i_DSAPublicKey", "_i2d_DSAPublicKey", "_DSAparams_dup", "_DSA_sign", "_DSA_do_sign", "_DSA_verify", "_DSA_do_verify", "_DSA_generate_parameters_ex", "_dsa_builtin_paramgen", "_dsa_builtin_paramgen2", "_DSA_new_method", "_DSA_get_default_method", "_DSA_set_method", "_DSA_get_method", "_DSA_up_ref", "_DSA_set_ex_data", "_DSA_get_ex_data", "_DSA_dup_DH", "_DSA_get0_p", "_DSA_get0_q", "_DSA_get0_g", "_DSA_get0_pub_key", "_DSA_get0_priv_key", "_DSA_clear_flags", "_DSA_test_flags", "_DSA_set_flags", "_DSA_get0_engine", "_DSA_set_default_method", "_DSA_OpenSSL", "_DSA_sign_setup", "_DSO_new", "_DSO_METHOD_openssl", "_DSO_flags", "_DSO_up_ref", "_DSO_ctrl", "_DSO_set_filename", "_DSO_get_filename", "_DSO_merge", "_DSO_convert_filename", "_DSO_pathbyaddr", "_DSO_dsobyaddr", "_DSO_global_lookup", "_ED25519_sign", "_ED25519_verify", "_ED25519_public_from_private", "_X25519", "_X25519_public_from_private", "_gf_mul", "_gf_mulw_unsigned", "_gf_sqr", "_curve448_point_double", "_curve448_point_eq", "_curve448_point_valid", "_curve448_precomputed_scalarmul", "_curve448_point_mul_by_ratio_and_encode_like_eddsa", "_curve448_point_destroy", "_curve448_point_decode_like_eddsa_and_mul_by_ratio", "_x448_int", "_curve448_point_mul_by_ratio_and_encode_like_x448", "_x448_derive_public_key", "_curve448_base_double_scalarmul_non_secret", "_X448", "_X448_public_from_private", "_c448_ed448_convert_private_key_to_x448", "_c448_ed448_derive_public_key", "_c448_ed448_sign", "_c448_ed448_sign_prehash", "_c448_ed448_verify", "_c448_ed448_verify_prehash", "_ED448_sign", "_ED448_verify", "_ED448ph_sign", "_ED448ph_verify", "_ED448_public_from_private", "_gf_serialize", "_gf_strong_reduce", "_gf_hibit", "_gf_add", "_gf_lobit", "_gf_deserialize", "_gf_sub", "_gf_eq", "_gf_isr", "_curve448_scalar_mul", "_curve448_scalar_sub", "_curve448_scalar_add", "_curve448_scalar_decode", "_curve448_scalar_destroy", "_curve448_scalar_decode_long", "_curve448_scalar_encode", "_curve448_scalar_halve", "_ec_GF2m_simple_set_compressed_coordinates", "_ec_GF2m_simple_point2oct", "_ec_GF2m_simple_oct2point", "_ec_GF2m_simple_group_init", "_ec_GF2m_simple_group_finish", "_ec_GF2m_simple_group_clear_finish", "_ec_GF2m_simple_group_copy", "_ec_GF2m_simple_group_set_curve", "_ec_GF2m_simple_group_get_curve", "_ec_GF2m_simple_group_get_degree", "_ec_GF2m_simple_group_check_discriminant", "_ec_GF2m_simple_point_init", "_ec_GF2m_simple_point_finish", "_ec_GF2m_simple_point_clear_finish", "_ec_GF2m_simple_point_copy", "_ec_GF2m_simple_point_set_to_infinity", "_ec_GF2m_simple_point_set_affine_coordinates", "_ec_GF2m_simple_point_get_affine_coordinates", "_ec_GF2m_simple_add", "_ec_GF2m_simple_dbl", "_ec_GF2m_simple_invert", "_ec_GF2m_simple_is_at_infinity", "_ec_GF2m_simple_is_on_curve", "_ec_GF2m_simple_cmp", "_ec_GF2m_simple_make_affine", "_ec_GF2m_simple_points_make_affine", "_ec_GF2m_simple_field_mul", "_ec_GF2m_simple_field_sqr", "_ec_GF2m_simple_field_div", "_EC_GF2m_simple_method", "_EC_KEY_print", "_ECParameters_print", "_o2i_ECPublicKey", "_i2o_ECPublicKey", "_EC_POINT_cmp", "_d2i_ECPrivateKey", "_EC_KEY_get_enc_flags", "_EC_KEY_set_enc_flags", "_i2d_ECPrivateKey", "_ECDSA_size", "_EC_GROUP_order_bits", "_d2i_ECParameters", "_i2d_ECParameters", "_EC_GROUP_dup", "_EC_GROUP_cmp", "_EVP_PKEY_set1_EC_KEY", "_OBJ_find_sigid_algs", "_EC_KEY_oct2key", "_EC_KEY_key2buf", "_EC_GROUP_check", "_EC_KEY_priv2buf", "_ECPKParameters_print", "_EC_GROUP_get_asn1_flag", "_OBJ_length", "_EC_GROUP_get_basis_type", "_EC_GROUP_get_trinomial_basis", "_EC_GROUP_get_pentanomial_basis", "_X9_62_PENTANOMIAL_new", "_X9_62_PENTANOMIAL_free", "_X9_62_CHARACTERISTIC_TWO_new", "_X9_62_CHARACTERISTIC_TWO_free", "_ECPARAMETERS_new", "_ECPARAMETERS_free", "_d2i_ECPKPARAMETERS", "_i2d_ECPKPARAMETERS", "_ECPKPARAMETERS_new", "_ECPKPARAMETERS_free", "_d2i_EC_PRIVATEKEY", "_i2d_EC_PRIVATEKEY", "_EC_PRIVATEKEY_new", "_EC_PRIVATEKEY_free", "_EC_GROUP_get_ecparameters", "_EC_GROUP_get_ecpkparameters", "_EC_GROUP_new_from_ecparameters", "_EC_GROUP_new_from_ecpkparameters", "_d2i_ECPKParameters", "_i2d_ECPKParameters", "_EC_GROUP_get_curve", "_EC_GROUP_get_degree", "_EC_GROUP_get0_generator", "_EC_GROUP_get_point_conversion_form", "_EC_POINT_point2buf", "_EC_GROUP_get0_order", "_EC_GROUP_get0_cofactor", "_EC_GROUP_new_curve_GF2m", "_EC_GROUP_new_curve_GFp", "_EC_POINT_oct2point", "_EC_GROUP_set_generator", "_EC_GROUP_set_seed", "_ec_curve_nid_from_params", "_EC_KEY_oct2priv", "_EC_POINT_clear_free", "_EC_POINT_point2oct", "_d2i_ECDSA_SIG", "_i2d_ECDSA_SIG", "_ECDSA_SIG_new", "_ECDSA_SIG_free", "_ECDSA_SIG_get0", "_ECDSA_SIG_get0_r", "_ECDSA_SIG_get0_s", "_ECDSA_SIG_set0", "_EC_GROUP_check_discriminant", "_EC_POINT_is_on_curve", "_EC_POINT_is_at_infinity", "_EC_GROUP_set_curve_name", "_EC_POINT_set_affine_coordinates", "_EC_curve_nid2nist", "_EC_GROUP_get_seed_len", "_EC_GROUP_get0_seed", "_EC_POINT_get_affine_coordinates", "_EC_GROUP_get_order", "_EC_GFp_nist_method", "_EC_GFp_mont_method", "_EC_GROUP_new", "_EC_GROUP_set_curve", "_EC_GROUP_clear_free", "_EC_POINT_copy", "_EC_POINT_set_to_infinity", "_EC_POINT_make_affine", "_ec_wNAF_mul", "_ec_scalar_mul_ladder", "_EC_POINT_add", "_EC_POINT_invert", "_ec_group_simple_order_bits", "_ec_key_simple_priv2oct", "_ec_key_simple_oct2priv", "_ec_key_simple_generate_key", "_ec_key_simple_check_key", "_ec_key_simple_generate_public_key", "_ecdh_simple_compute_key", "_EC_KEY_new_method", "_EC_KEY_copy", "_EC_GROUP_copy", "_EC_KEY_dup", "_EC_KEY_up_ref", "_EC_KEY_get0_engine", "_ossl_ec_key_gen", "_EC_KEY_set_public_key_affine_coordinates", "_EC_POINT_dup", "_EC_KEY_set_conv_form", "_EC_KEY_set_asn1_flag", "_EC_KEY_precompute_mult", "_EC_GROUP_precompute_mult", "_EC_KEY_get_flags", "_EC_KEY_set_flags", "_EC_KEY_clear_flags", "_EC_KEY_decoded_from_explicit_params", "_EC_KEY_priv2oct", "_EC_KEY_OpenSSL", "_EC_KEY_get_default_method", "_EC_KEY_set_default_method", "_EC_KEY_get_method", "_EC_KEY_set_method", "_ECDH_compute_key", "_EC_KEY_METHOD_new", "_EC_KEY_METHOD_free", "_EC_KEY_METHOD_set_init", "_EC_KEY_METHOD_set_keygen", "_EC_KEY_METHOD_set_compute_key", "_EC_KEY_METHOD_set_sign", "_EC_KEY_METHOD_set_verify", "_EC_KEY_METHOD_get_init", "_EC_KEY_METHOD_get_keygen", "_EC_KEY_METHOD_get_compute_key", "_EC_KEY_METHOD_get_sign", "_EC_KEY_METHOD_get_verify", "_ossl_ecdh_compute_key", "_ossl_ecdsa_sign", "_ossl_ecdsa_sign_setup", "_ossl_ecdsa_sign_sig", "_ossl_ecdsa_verify", "_ossl_ecdsa_verify_sig", "_EC_pre_comp_free", "_EC_ec_pre_comp_free", "_EC_ec_pre_comp_dup", "_EC_GROUP_get_mont_data", "_EC_GROUP_get_cofactor", "_EC_GROUP_set_curve_GFp", "_EC_GROUP_get_curve_GFp", "_EC_GROUP_set_curve_GF2m", "_EC_GROUP_get_curve_GF2m", "_EC_POINT_method_of", "_EC_POINT_set_Jprojective_coordinates_GFp", "_EC_POINT_get_Jprojective_coordinates_GFp", "_EC_POINT_set_affine_coordinates_GF2m", "_EC_POINT_get_affine_coordinates_GF2m", "_EC_POINT_dbl", "_EC_POINTs_make_affine", "_EC_POINTs_mul", "_ec_wNAF_precompute_mult", "_EC_GROUP_have_precompute_mult", "_ec_wNAF_have_precompute_mult", "_EC_KEY_set_ex_data", "_EC_KEY_get_ex_data", "_ec_group_do_inverse_ord", "_ec_point_blind_coordinates", "_EC_POINT_set_compressed_coordinates", "_EC_POINT_set_compressed_coordinates_GFp", "_EC_POINT_set_compressed_coordinates_GF2m", "_ec_GFp_simple_set_compressed_coordinates", "_ec_GFp_simple_point2oct", "_ec_GFp_simple_oct2point", "_EC_POINT_point2bn", "_EC_POINT_bn2point", "_EC_POINT_point2hex", "_EC_POINT_hex2point", "_ecdh_KDF_X9_63", "_ECDH_KDF_X9_62", "_ECDSA_do_sign_ex", "_ECDSA_do_verify", "_ECDSA_do_sign", "_ECDSA_sign", "_ECDSA_sign_ex", "_ECDSA_sign_setup", "_ECDSA_verify", "_ec_GFp_mont_group_init", "_ec_GFp_simple_group_init", "_ec_GFp_mont_group_finish", "_ec_GFp_simple_group_finish", "_ec_GFp_mont_group_clear_finish", "_ec_GFp_simple_group_clear_finish", "_ec_GFp_mont_group_copy", "_ec_GFp_simple_group_copy", "_ec_GFp_mont_group_set_curve", "_ec_GFp_simple_group_set_curve", "_ec_GFp_mont_field_mul", "_ec_GFp_mont_field_sqr", "_ec_GFp_mont_field_inv", "_ec_GFp_mont_field_encode", "_ec_GFp_mont_field_decode", "_ec_GFp_mont_field_set_to_one", "_ec_GFp_simple_group_get_curve", "_ec_GFp_simple_group_get_degree", "_ec_GFp_simple_group_check_discriminant", "_ec_GFp_simple_point_init", "_ec_GFp_simple_point_finish", "_ec_GFp_simple_point_clear_finish", "_ec_GFp_simple_point_copy", "_ec_GFp_simple_point_set_to_infinity", "_ec_GFp_simple_set_Jprojective_coordinates_GFp", "_ec_GFp_simple_get_Jprojective_coordinates_GFp", "_ec_GFp_simple_point_set_affine_coordinates", "_ec_GFp_simple_point_get_affine_coordinates", "_ec_GFp_simple_add", "_ec_GFp_simple_dbl", "_ec_GFp_simple_invert", "_ec_GFp_simple_is_at_infinity", "_ec_GFp_simple_is_on_curve", "_ec_GFp_simple_cmp", "_ec_GFp_simple_make_affine", "_ec_GFp_simple_points_make_affine", "_ec_GFp_simple_blind_coordinates", "_ec_GFp_simple_ladder_pre", "_ec_GFp_simple_ladder_step", "_ec_GFp_simple_ladder_post", "_ec_GFp_nist_group_copy", "_ec_GFp_nist_group_set_curve", "_ec_GFp_nist_field_mul", "_ec_GFp_nist_field_sqr", "_ec_GFp_simple_field_inv", "_EC_GFp_simple_method", "_ec_GFp_simple_field_mul", "_ec_GFp_simple_field_sqr", "_X509_SIG_INFO_set", "_SHA512", "_EVP_md_null", "_EVP_MD_CTX_pkey_ctx", "_EVP_shake256", "_EVP_DigestFinalXOF", "_err_cleanup", "_ERR_load_ERR_strings", "_ERR_load_strings", "_ERR_load_strings_const", "_ERR_unload_strings", "_err_free_strings_int", "_ERR_get_state", "_ERR_get_error_line", "_ERR_get_error_line_data", "_ERR_peek_error_line", "_ERR_peek_error_line_data", "_ERR_peek_last_error_line", "_ERR_peek_last_error_line_data", "_ERR_lib_error_string", "_ERR_func_error_string", "_ERR_reason_error_string", "_ERR_error_string", "_err_delete_thread_state", "_ERR_remove_thread_state", "_ERR_remove_state", "_err_shelve_state", "_err_unshelve_state", "_ERR_get_next_error_library", "_ERR_set_error_data", "_ERR_add_error_vdata", "_err_clear_last_constant_time", "_ERR_print_errors_cb", "_ERR_print_errors", "_EVP_EncodeInit", "_EVP_EncodeBlock", "_EVP_EncodeUpdate", "_EVP_DecodeInit", "_EVP_DecodeUpdate", "_EVP_ENCODE_CTX_num", "_EVP_EncodeFinal", "_EVP_ENCODE_CTX_new", "_EVP_ENCODE_CTX_free", "_BIO_set_cipher", "_EVP_CIPHER_CTX_encrypting", "_openssl_add_all_ciphers_int", "_openssl_add_all_digests_int", "_EVP_MD_CTX_test_flags", "_EVP_MD_CTX_clear_flags", "_EVP_PKEY_CTX_dup", "_EVP_aes_128_ecb", "_EVP_aes_128_ofb", "_EVP_aes_128_cfb128", "_EVP_aes_128_cfb1", "_EVP_aes_128_cfb8", "_EVP_aes_128_ctr", "_EVP_aes_192_ecb", "_EVP_aes_192_ofb", "_EVP_aes_192_cfb128", "_EVP_aes_192_cfb1", "_EVP_aes_192_cfb8", "_EVP_aes_192_ctr", "_EVP_aes_256_ecb", "_EVP_aes_256_ofb", "_EVP_aes_256_cfb128", "_EVP_aes_256_cfb1", "_EVP_aes_256_cfb8", "_EVP_aes_256_ctr", "_EVP_aes_192_gcm", "_EVP_aes_128_xts", "_EVP_aes_256_xts", "_EVP_aes_192_ccm", "_EVP_aes_128_wrap_pad", "_EVP_aes_192_wrap_pad", "_EVP_aes_256_wrap_pad", "_EVP_aes_128_ocb", "_EVP_aes_192_ocb", "_EVP_aes_256_ocb", "_EVP_CIPHER_CTX_get_cipher_data", "_CRYPTO_cbc128_encrypt", "_CRYPTO_cbc128_decrypt", "_EVP_CIPHER_CTX_iv_noconst", "_EVP_CIPHER_CTX_num", "_CRYPTO_ofb128_encrypt", "_EVP_CIPHER_CTX_set_num", "_CRYPTO_cfb128_encrypt", "_EVP_CIPHER_CTX_test_flags", "_CRYPTO_cfb128_1_encrypt", "_CRYPTO_cfb128_8_encrypt", "_EVP_CIPHER_CTX_buf_noconst", "_CRYPTO_ctr128_encrypt_ctr32", "_CRYPTO_ctr128_encrypt", "_CRYPTO_gcm128_init", "_CRYPTO_gcm128_setiv", "_CRYPTO_gcm128_aad", "_CRYPTO_gcm128_encrypt_ctr32", "_CRYPTO_gcm128_encrypt", "_CRYPTO_gcm128_tag", "_CRYPTO_gcm128_decrypt_ctr32", "_CRYPTO_gcm128_decrypt", "_CRYPTO_gcm128_finish", "_CRYPTO_xts128_encrypt", "_CRYPTO_ccm128_init", "_CRYPTO_ccm128_setiv", "_CRYPTO_ccm128_aad", "_CRYPTO_ccm128_encrypt_ccm64", "_CRYPTO_ccm128_encrypt", "_CRYPTO_ccm128_tag", "_CRYPTO_ccm128_decrypt_ccm64", "_CRYPTO_ccm128_decrypt", "_is_partially_overlapping", "_CRYPTO_128_wrap_pad", "_CRYPTO_128_unwrap_pad", "_CRYPTO_ocb128_init", "_CRYPTO_ocb128_setiv", "_CRYPTO_ocb128_aad", "_CRYPTO_ocb128_encrypt", "_CRYPTO_ocb128_decrypt", "_CRYPTO_ocb128_finish", "_CRYPTO_ocb128_tag", "_CRYPTO_ocb128_cleanup", "_CRYPTO_ocb128_copy_ctx", "_EVP_aria_128_cbc", "_EVP_aria_128_cfb128", "_EVP_aria_128_ofb", "_EVP_aria_128_ecb", "_EVP_aria_192_cbc", "_EVP_aria_192_cfb128", "_EVP_aria_192_ofb", "_EVP_aria_192_ecb", "_EVP_aria_256_cbc", "_EVP_aria_256_cfb128", "_EVP_aria_256_ofb", "_EVP_aria_256_ecb", "_EVP_aria_128_cfb1", "_EVP_aria_192_cfb1", "_EVP_aria_256_cfb1", "_EVP_aria_128_cfb8", "_EVP_aria_192_cfb8", "_EVP_aria_256_cfb8", "_EVP_aria_128_ctr", "_EVP_aria_192_ctr", "_EVP_aria_256_ctr", "_EVP_aria_192_gcm", "_EVP_aria_128_ccm", "_EVP_aria_192_ccm", "_EVP_aria_256_ccm", "_EVP_CIPHER_set_asn1_iv", "_EVP_CIPHER_get_asn1_iv", "_EVP_bf_cbc", "_EVP_bf_cfb64", "_EVP_bf_ofb", "_EVP_bf_ecb", "_EVP_camellia_128_ecb", "_EVP_camellia_128_ofb", "_EVP_camellia_128_cfb128", "_EVP_camellia_128_cfb1", "_EVP_camellia_128_cfb8", "_EVP_camellia_128_ctr", "_EVP_camellia_192_cbc", "_EVP_camellia_192_ecb", "_EVP_camellia_192_ofb", "_EVP_camellia_192_cfb128", "_EVP_camellia_192_cfb1", "_EVP_camellia_192_cfb8", "_EVP_camellia_192_ctr", "_EVP_camellia_256_ecb", "_EVP_camellia_256_ofb", "_EVP_camellia_256_cfb128", "_EVP_camellia_256_cfb1", "_EVP_camellia_256_cfb8", "_EVP_camellia_256_ctr", "_EVP_cast5_cbc", "_EVP_cast5_cfb64", "_EVP_cast5_ofb", "_EVP_cast5_ecb", "_EVP_chacha20", "_Poly1305_Init", "_Poly1305_Update", "_Poly1305_Final", "_Poly1305_ctx_size", "_EVP_des_cfb64", "_EVP_des_ofb", "_EVP_des_ecb", "_EVP_des_cfb1", "_EVP_des_cfb8", "_EVP_des_ede_cbc", "_EVP_des_ede_cfb64", "_EVP_des_ede_ofb", "_EVP_des_ede_ecb", "_EVP_des_ede3_cfb64", "_EVP_des_ede3_ofb", "_EVP_des_ede3_ecb", "_EVP_des_ede3_cfb1", "_EVP_des_ede3_cfb8", "_EVP_des_ede", "_EVP_des_ede3", "_SHA1", "_EVP_idea_cfb64", "_EVP_idea_ofb", "_EVP_idea_ecb", "_IDEA_set_encrypt_key", "_IDEA_set_decrypt_key", "_IDEA_cbc_encrypt", "_IDEA_cfb64_encrypt", "_IDEA_ofb64_encrypt", "_IDEA_ecb_encrypt", "_EVP_rc2_cfb64", "_EVP_rc2_ofb", "_EVP_rc2_ecb", "_RC2_set_key", "_RC2_cbc_encrypt", "_EVP_CIPHER_CTX_original_iv", "_RC2_cfb64_encrypt", "_RC2_ofb64_encrypt", "_RC2_ecb_encrypt", "_EVP_rc4_40", "_RC4_set_key", "_RC4", "_MD5_Update", "_MD5_Final", "_EVP_seed_cfb128", "_EVP_seed_ofb", "_EVP_seed_ecb", "_SEED_set_key", "_SEED_cbc_encrypt", "_SEED_cfb128_encrypt", "_SEED_ofb128_encrypt", "_SEED_ecb_encrypt", "_EVP_sm4_cbc", "_EVP_sm4_cfb128", "_EVP_sm4_ofb", "_EVP_sm4_ecb", "_EVP_sm4_ctr", "_EVP_desx_cbc", "_EVP_ENCODE_CTX_copy", "_evp_encode_ctx_set_flags", "_EVP_DecodeFinal", "_EVP_add_alg_module", "_EVP_CipherInit", "_EVP_EncryptFinal_ex", "_EVP_DecryptFinal_ex", "_EVP_CipherFinal", "_EVP_DecryptInit", "_EVP_set_pw_prompt", "_EVP_get_pw_prompt", "_EVP_read_pw_string", "_EVP_read_pw_string_min", "_EVP_BytesToKey", "_EVP_CIPHER_CTX_nid", "_OBJ_get0_data", "_EVP_CIPHER_impl_ctx_size", "_EVP_CIPHER_CTX_get_app_data", "_EVP_CIPHER_CTX_set_app_data", "_EVP_CIPHER_CTX_set_cipher_data", "_EVP_CIPHER_CTX_iv", "_EVP_MD_block_size", "_EVP_MD_flags", "_EVP_MD_meth_new", "_EVP_MD_meth_dup", "_EVP_MD_meth_free", "_EVP_MD_meth_set_input_blocksize", "_EVP_MD_meth_set_result_size", "_EVP_MD_meth_set_app_datasize", "_EVP_MD_meth_set_flags", "_EVP_MD_meth_set_init", "_EVP_MD_meth_set_update", "_EVP_MD_meth_set_final", "_EVP_MD_meth_set_copy", "_EVP_MD_meth_set_cleanup", "_EVP_MD_meth_set_ctrl", "_EVP_MD_meth_get_input_blocksize", "_EVP_MD_meth_get_result_size", "_EVP_MD_meth_get_app_datasize", "_EVP_MD_meth_get_flags", "_EVP_MD_meth_get_init", "_EVP_MD_meth_get_update", "_EVP_MD_meth_get_final", "_EVP_MD_meth_get_copy", "_EVP_MD_meth_get_cleanup", "_EVP_MD_meth_get_ctrl", "_EVP_MD_CTX_set_pkey_ctx", "_EVP_MD_CTX_md_data", "_EVP_MD_CTX_update_fn", "_EVP_MD_CTX_set_update_fn", "_EVP_CIPHER_CTX_clear_flags", "_EVP_PBE_find", "_EVP_PBE_alg_add_type", "_EVP_PBE_alg_add", "_EVP_PBE_cleanup", "_EVP_PBE_get", "_PKCS5_PBE_keyivgen", "_PKCS5_v2_PBKDF2_keyivgen", "_PKCS12_PBE_keyivgen", "_PKCS5_v2_PBE_keyivgen", "_EVP_PBE_scrypt", "_EVP_PKEY2PKCS8", "_EVP_PKEY_get_attr_count", "_EVP_PKEY_get_attr_by_NID", "_EVP_PKEY_get_attr_by_OBJ", "_EVP_PKEY_get_attr", "_EVP_PKEY_delete_attr", "_EVP_PKEY_add1_attr", "_EVP_PKEY_add1_attr_by_OBJ", "_EVP_PKEY_add1_attr_by_NID", "_EVP_PKEY_add1_attr_by_txt", "_MD4_Init", "_MD4_Update", "_MD4_Final", "_SHA1_Update", "_SHA1_Final", "_EVP_mdc2", "_RIPEMD160_Init", "_RIPEMD160_Update", "_RIPEMD160_Final", "_EVP_sha512_224", "_EVP_sha512_256", "_SHA224_Update", "_SHA224_Final", "_SHA256_Update", "_SHA256_Final", "_sha512_224_init", "_sha512_256_init", "_SHA384_Update", "_SHA384_Final", "_EVP_sha3_224", "_EVP_sha3_256", "_EVP_sha3_384", "_EVP_sha3_512", "_EVP_shake128", "_SHA3_absorb", "_SHA3_squeeze", "_EVP_whirlpool", "_OBJ_NAME_get", "_evp_cleanup_int", "_OBJ_NAME_cleanup", "_OBJ_sigid_free", "_evp_app_cleanup_int", "_EVP_CIPHER_do_all", "_OBJ_NAME_do_all", "_EVP_CIPHER_do_all_sorted", "_EVP_MD_do_all", "_EVP_MD_do_all_sorted", "_PKCS5_PBE_add", "_HMAC_CTX_copy", "_PKCS5_PBKDF2_HMAC_SHA1", "_EVP_PKEY_decrypt_old", "_EVP_PKEY_encrypt_old", "_EVP_PKEY_save_parameters", "_EVP_PKEY_cmp_parameters", "_X509_ATTRIBUTE_free", "_EVP_PKEY_new_raw_public_key", "_EVP_PKEY_get_raw_private_key", "_EVP_PKEY_get_raw_public_key", "_EVP_PKEY_new_CMAC_key", "_EVP_PKEY_set_type_str", "_EVP_PKEY_set_alias_type", "_EVP_PKEY_get0_hmac", "_EVP_PKEY_get0_poly1305", "_EVP_PKEY_get0_siphash", "_EVP_PKEY_set1_RSA", "_EVP_PKEY_get1_RSA", "_EVP_PKEY_set1_DSA", "_EVP_PKEY_get1_DSA", "_EVP_PKEY_get1_EC_KEY", "_EVP_PKEY_get1_DH", "_EVP_PKEY_print_public", "_EVP_PKEY_print_private", "_EVP_PKEY_print_params", "_RSA_public_encrypt", "_EVP_PKEY_CTX_set_cb", "_EVP_PKEY_CTX_get_cb", "_evp_pkey_set_cb_translate", "_EVP_PKEY_CTX_get_keygen_info", "_EVP_PKEY_check", "_EVP_PKEY_public_check", "_EVP_PKEY_param_check", "_EVP_PKEY_meth_find", "_EVP_PKEY_meth_new", "_EVP_PKEY_meth_get0_info", "_EVP_PKEY_meth_copy", "_EVP_PKEY_meth_free", "_EVP_PKEY_meth_add0", "_EVP_PKEY_meth_remove", "_EVP_PKEY_meth_get_count", "_EVP_PKEY_meth_get0", "_EVP_PKEY_CTX_ctrl_uint64", "_EVP_PKEY_CTX_ctrl_str", "_EVP_PKEY_CTX_md", "_EVP_PKEY_CTX_str2ctrl", "_EVP_PKEY_CTX_hex2ctrl", "_OPENSSL_hexstr2buf", "_EVP_PKEY_CTX_get_operation", "_EVP_PKEY_CTX_set0_keygen_info", "_EVP_PKEY_CTX_set_data", "_EVP_PKEY_CTX_get_data", "_EVP_PKEY_CTX_set_app_data", "_EVP_PKEY_CTX_get_app_data", "_EVP_PKEY_meth_set_init", "_EVP_PKEY_meth_set_copy", "_EVP_PKEY_meth_set_cleanup", "_EVP_PKEY_meth_set_paramgen", "_EVP_PKEY_meth_set_keygen", "_EVP_PKEY_meth_set_sign", "_EVP_PKEY_meth_set_verify", "_EVP_PKEY_meth_set_verify_recover", "_EVP_PKEY_meth_set_signctx", "_EVP_PKEY_meth_set_verifyctx", "_EVP_PKEY_meth_set_encrypt", "_EVP_PKEY_meth_set_decrypt", "_EVP_PKEY_meth_set_derive", "_EVP_PKEY_meth_set_ctrl", "_EVP_PKEY_meth_set_digestsign", "_EVP_PKEY_meth_set_digestverify", "_EVP_PKEY_meth_set_check", "_EVP_PKEY_meth_set_public_check", "_EVP_PKEY_meth_set_param_check", "_EVP_PKEY_meth_set_digest_custom", "_EVP_PKEY_meth_get_init", "_EVP_PKEY_meth_get_copy", "_EVP_PKEY_meth_get_cleanup", "_EVP_PKEY_meth_get_paramgen", "_EVP_PKEY_meth_get_keygen", "_EVP_PKEY_meth_get_sign", "_EVP_PKEY_meth_get_verify", "_EVP_PKEY_meth_get_verify_recover", "_EVP_PKEY_meth_get_signctx", "_EVP_PKEY_meth_get_verifyctx", "_EVP_PKEY_meth_get_encrypt", "_EVP_PKEY_meth_get_decrypt", "_EVP_PKEY_meth_get_derive", "_EVP_PKEY_meth_get_ctrl", "_EVP_PKEY_meth_get_digestsign", "_EVP_PKEY_meth_get_digestverify", "_EVP_PKEY_meth_get_check", "_EVP_PKEY_meth_get_public_check", "_EVP_PKEY_meth_get_param_check", "_EVP_PKEY_meth_get_digest_custom", "_crypto_cleanup_all_ex_data_int", "_CRYPTO_free_ex_index", "_OPENSSL_issetugid", "_HMAC_CTX_set_flags", "_HMAC_Init", "_HMAC_CTX_reset", "_HMAC", "_HMAC_CTX_get_md", "_IDEA_encrypt", "_IDEA_options", "_OPENSSL_thread_stop", "_drbg_delete_thread_state", "_openssl_init_fork_handlers", "_OPENSSL_cleanup", "_rand_cleanup_int", "_rand_drbg_cleanup_int", "_ossl_store_cleanup_int", "_obj_cleanup_int", "_CRYPTO_secure_malloc_done", "_atexit", "_SM4_set_key", "_SM4_encrypt", "_SM4_decrypt", "_MDC2_Init", "_MDC2_Update", "_MDC2_Final", "_WHIRLPOOL_Init", "_WHIRLPOOL_Update", "_WHIRLPOOL_Final", "_EVP_sm3", "_X509V3_parse_list", "_X509V3_get_section", "_X509V3_get_value_bool", "_s2i_ASN1_INTEGER", "_OBJ_txt2obj", "_X509V3_section_free", "_X509V3_conf_free", "_OPENSSL_fork_prepare", "_OPENSSL_fork_parent", "_OPENSSL_fork_child", "_openssl_lh_strcasehash", "_md4_block_data_order", "_MD4_Transform", "_md5_block_data_order", "_CRYPTO_set_mem_functions", "_CRYPTO_set_mem_debug", "_CRYPTO_get_mem_functions", "_CRYPTO_secure_malloc_init", "_mlock", "_CRYPTO_secure_malloc_initialized", "_CRYPTO_secure_allocated", "_CRYPTO_secure_used", "_CRYPTO_secure_actual_size", "_CRYPTO_gcm128_new", "_CRYPTO_gcm128_release", "_CRYPTO_ocb128_new", "_openssl_fopen", "_OPENSSL_memcmp", "_OPENSSL_buf2hexstr", "_openssl_strerror_r", "_gmtime", "_OBJ_NAME_init", "_OBJ_NAME_new_index", "_OBJ_NAME_remove", "_OBJ_new_nid", "_OBJ_add_object", "_OBJ_bsearch_ex_", "_OBJ_add_sigid", "_d2i_X509_REQ", "_i2d_X509_REQ", "_PEM_write_bio_X509_REQ_NEW", "_PEM_read_bio_X509_CRL", "_d2i_X509_CRL", "_i2d_X509_CRL", "_d2i_PKCS7", "_i2d_PKCS7", "_PEM_read_bio_NETSCAPE_CERT_SEQUENCE", "_PEM_write_bio_NETSCAPE_CERT_SEQUENCE", "_PEM_write_bio_RSAPrivateKey", "_i2d_RSAPrivateKey", "_PEM_read_bio_RSAPublicKey", "_d2i_RSAPublicKey", "_PEM_write_bio_RSAPublicKey", "_i2d_RSAPublicKey", "_PEM_read_bio_RSA_PUBKEY", "_d2i_RSA_PUBKEY", "_PEM_write_bio_RSA_PUBKEY", "_i2d_RSA_PUBKEY", "_PEM_read_bio_DSAPrivateKey", "_PEM_write_bio_DSAPrivateKey", "_PEM_read_bio_DSA_PUBKEY", "_d2i_DSA_PUBKEY", "_PEM_write_bio_DSA_PUBKEY", "_i2d_DSA_PUBKEY", "_PEM_read_bio_DSAparams", "_PEM_write_bio_DSAparams", "_PEM_read_bio_ECPrivateKey", "_PEM_read_bio_ECPKParameters", "_PEM_write_bio_ECPKParameters", "_PEM_write_bio_ECPrivateKey", "_PEM_read_bio_EC_PUBKEY", "_d2i_EC_PUBKEY", "_PEM_write_bio_EC_PUBKEY", "_i2d_EC_PUBKEY", "_PEM_write_bio_DHparams", "_PEM_write_bio_DHxparams", "_d2i_X509_AUX", "_PEM_get_EVP_CIPHER_INFO", "_PEM_do_header", "_PEM_X509_INFO_write_bio", "_PEM_proc_type", "_PEM_dek_info", "_PEM_write_bio", "_PEM_def_callback", "_UI_new", "_UI_add_input_string", "_UI_add_verify_string", "_UI_process", "_UI_free", "_PEM_bytes_read_bio", "_PEM_read_bio_ex", "_PEM_bytes_read_bio_secmem", "_strspn", "_pem_check_suffix", "_PEM_write_bio_PKCS8PrivateKey_nid", "_PEM_write_bio_PKCS8PrivateKey", "_i2d_PKCS8PrivateKey_bio", "_i2d_PKCS8PrivateKey_nid_bio", "_d2i_PKCS8PrivateKey_bio", "_PEM_read_bio_PKCS8", "_PEM_write_bio_PKCS8", "_PEM_read_bio_PKCS8_PRIV_KEY_INFO", "_PEM_write_bio_PKCS8_PRIV_KEY_INFO", "_PKCS8_decrypt", "_PKCS8_encrypt", "_i2d_PKCS8_bio", "_i2d_PKCS8_PRIV_KEY_INFO_bio", "_d2i_PKCS8_bio", "_PEM_write_bio_PrivateKey_traditional", "_PEM_read_bio_Parameters", "_PEM_write_bio_Parameters", "_PEM_write_bio_X509_AUX", "_i2d_X509_AUX", "_PKCS12_item_pack_safebag", "_PKCS12_pack_p7data", "_PKCS12_unpack_p7data", "_PKCS12_pack_p7encdata", "_PKCS12_unpack_p7encdata", "_PKCS12_decrypt_skey", "_PKCS12_pack_authsafes", "_PKCS12_unpack_authsafes", "_d2i_PKCS12", "_i2d_PKCS12", "_PKCS12_new", "_d2i_PKCS12_MAC_DATA", "_i2d_PKCS12_MAC_DATA", "_PKCS12_MAC_DATA_new", "_PKCS12_MAC_DATA_free", "_d2i_PKCS12_BAGS", "_i2d_PKCS12_BAGS", "_PKCS12_BAGS_new", "_PKCS12_BAGS_free", "_d2i_PKCS12_SAFEBAG", "_i2d_PKCS12_SAFEBAG", "_PKCS12_SAFEBAG_new", "_PKCS12_SAFEBAG_free", "_PKCS12_add_localkeyid", "_PKCS8_add_keyusage", "_PKCS12_add_friendlyname_asc", "_PKCS12_add_friendlyname_utf8", "_PKCS12_add_friendlyname_uni", "_PKCS12_add_CSPName_asc", "_PKCS12_get_attr_gen", "_PKCS12_get_friendlyname", "_PKCS12_SAFEBAG_get0_attrs", "_PKCS12_PBE_add", "_PKCS12_key_gen_utf8", "_PKCS12_add_cert", "_X509_ATTRIBUTE_get0_type", "_PKCS12_SAFEBAG_get0_attr", "_OPENSSL_uni2utf8", "_PKCS12_add_safe", "_PKCS12_add_key", "_PKCS7_new", "_PKCS7_set_type", "_PKCS12_item_i2d_encrypt", "_PKCS12_item_decrypt_d2i", "_PKCS12_init", "_PKCS12_set_mac", "_PKCS12_SAFEBAG_create_cert", "_X509_keyid_get0", "_PKCS12_SAFEBAG_create_pkcs8_encrypt", "_PKCS12_SAFEBAG_create0_p8inf", "_PKCS12_add_safes", "_PKCS12_pbe_crypt", "_PKCS12_key_gen_asc", "_PKCS12_key_gen_uni", "_OPENSSL_asc2uni", "_OPENSSL_utf82uni", "_PKCS12_verify_mac", "_PKCS12_SAFEBAG_get_nid", "_PKCS12_SAFEBAG_get0_p8inf", "_PKCS12_SAFEBAG_get_bag_nid", "_PKCS12_SAFEBAG_get1_cert", "_X509_keyid_set1", "_X509_alias_set1", "_PKCS12_SAFEBAG_get0_safes", "_PKCS12_mac_present", "_PKCS12_get0_mac", "_PKCS12_gen_mac", "_PKCS12_setup_mac", "_PKCS8_set0_pbe", "_PKCS12_get_attr", "_PKCS8_get_attr", "_PKCS12_SAFEBAG_get0_pkcs8", "_PKCS12_SAFEBAG_get0_type", "_PKCS12_SAFEBAG_get1_crl", "_PKCS12_SAFEBAG_create_crl", "_PKCS12_SAFEBAG_create0_pkcs8", "_OPENSSL_uni2asc", "_i2d_PKCS7_NDEF", "_PKCS7_dup", "_d2i_PKCS7_SIGNED", "_i2d_PKCS7_SIGNED", "_PKCS7_SIGNED_new", "_PKCS7_SIGNED_free", "_d2i_PKCS7_SIGNER_INFO", "_i2d_PKCS7_SIGNER_INFO", "_PKCS7_SIGNER_INFO_new", "_PKCS7_SIGNER_INFO_free", "_d2i_PKCS7_ISSUER_AND_SERIAL", "_i2d_PKCS7_ISSUER_AND_SERIAL", "_PKCS7_ISSUER_AND_SERIAL_new", "_PKCS7_ISSUER_AND_SERIAL_free", "_d2i_PKCS7_ENVELOPE", "_i2d_PKCS7_ENVELOPE", "_PKCS7_ENVELOPE_new", "_PKCS7_ENVELOPE_free", "_d2i_PKCS7_RECIP_INFO", "_i2d_PKCS7_RECIP_INFO", "_PKCS7_RECIP_INFO_new", "_PKCS7_RECIP_INFO_free", "_d2i_PKCS7_ENC_CONTENT", "_i2d_PKCS7_ENC_CONTENT", "_PKCS7_ENC_CONTENT_new", "_PKCS7_ENC_CONTENT_free", "_d2i_PKCS7_SIGN_ENVELOPE", "_i2d_PKCS7_SIGN_ENVELOPE", "_PKCS7_SIGN_ENVELOPE_new", "_PKCS7_SIGN_ENVELOPE_free", "_d2i_PKCS7_ENCRYPT", "_i2d_PKCS7_ENCRYPT", "_PKCS7_ENCRYPT_new", "_PKCS7_ENCRYPT_free", "_d2i_PKCS7_DIGEST", "_i2d_PKCS7_DIGEST", "_PKCS7_DIGEST_new", "_PKCS7_DIGEST_free", "_PKCS7_print_ctx", "_PKCS7_stream", "_PKCS7_dataInit", "_PKCS7_dataFinal", "_PKCS7_add_attrib_smimecap", "_PKCS7_get_smimecap", "_PKCS7_simple_smimecap", "_PKCS7_add_attrib_content_type", "_PKCS7_add0_attrib_signing_time", "_PKCS7_add1_attrib_digest", "_PKCS7_ctrl", "_PKCS7_dataDecode", "_PKCS7_add_signed_attribute", "_PKCS7_get_signed_attribute", "_PKCS7_SIGNER_INFO_sign", "_PKCS7_dataVerify", "_X509_find_by_issuer_and_serial", "_X509_STORE_CTX_cleanup", "_PKCS7_signatureVerify", "_PKCS7_digest_from_attributes", "_PKCS7_get_issuer_and_serial", "_PKCS7_get_attribute", "_PKCS7_set_signed_attributes", "_X509_ATTRIBUTE_dup", "_PKCS7_set_attributes", "_X509_ATTRIBUTE_get0_object", "_X509_ATTRIBUTE_create", "_PKCS7_add_attribute", "_PKCS7_content_new", "_PKCS7_set_content", "_PKCS7_set0_type_other", "_PKCS7_add_signer", "_PKCS7_add_certificate", "_PKCS7_add_crl", "_PKCS7_SIGNER_INFO_set", "_PKCS7_add_signature", "_PKCS7_set_digest", "_PKCS7_get_signer_info", "_PKCS7_RECIP_INFO_get0_alg", "_PKCS7_add_recipient", "_PKCS7_RECIP_INFO_set", "_PKCS7_add_recipient_info", "_PKCS7_cert_from_signer_info", "_PKCS7_set_cipher", "_i2d_PKCS7_bio_stream", "_PEM_write_bio_PKCS7_stream", "_PKCS7_sign_add_signer", "_PKCS7_final", "_drbg_ctr_init", "_RAND_DRBG_set", "_RAND_DRBG_set_defaults", "_RAND_DRBG_new", "_RAND_DRBG_secure_new", "_RAND_DRBG_free", "_RAND_DRBG_instantiate", "_RAND_DRBG_uninstantiate", "_RAND_DRBG_reseed", "_rand_drbg_restart", "_RAND_DRBG_generate", "_RAND_DRBG_bytes", "_RAND_DRBG_set_callbacks", "_RAND_DRBG_set_reseed_interval", "_RAND_DRBG_set_reseed_time_interval", "_RAND_DRBG_set_reseed_defaults", "_rand_drbg_lock", "_rand_drbg_unlock", "_rand_drbg_enable_locking", "_RAND_DRBG_set_ex_data", "_RAND_DRBG_get_ex_data", "_rand_pool_free", "_rand_drbg_cleanup_entropy", "_openssl_get_fork_id", "_rand_drbg_get_entropy", "_rand_drbg_cleanup_nonce", "_rand_drbg_get_nonce", "_rand_pool_attach", "_rand_pool_new", "_rand_drbg_get_additional_data", "_rand_drbg_cleanup_additional_data", "_rand_drbg_seedlen", "_RAND_DRBG_get0_master", "_RAND_DRBG_get0_public", "_RAND_DRBG_get0_private", "_RAND_OpenSSL", "_rand_pool_acquire_entropy", "_rand_pool_bytes_needed", "_rand_pool_add_begin", "_rand_pool_add_end", "_rand_pool_entropy_available", "_rand_pool_length", "_rand_pool_detach", "_rand_pool_add_nonce_data", "_CRYPTO_atomic_add", "_rand_pool_add", "_rand_pool_add_additional_data", "_rand_pool_reattach", "_rand_pool_cleanup", "_RAND_set_rand_method", "_RAND_keep_random_devices_open", "_rand_pool_keep_random_devices_open", "_rand_pool_init", "_RAND_poll", "_RAND_get_rand_method", "_rand_pool_buffer", "_rand_pool_entropy", "_rand_pool_entropy_needed", "_rand_pool_bytes_remaining", "_RAND_seed", "_RAND_add", "_RAND_pseudo_bytes", "_CRYPTO_THREAD_get_current_id", "_setbuf", "_RC2_encrypt", "_RC2_decrypt", "_RC4_options", "_ripemd160_block_data_order", "_RIPEMD160_Transform", "_rsa_pss_params_create", "_rsa_pss_get_param", "_RSA_PSS_PARAMS_new", "_RSA_PSS_PARAMS_free", "_RSA_flags", "_RSA_security_bits", "_RSA_OAEP_PARAMS_new", "_RSA_OAEP_PARAMS_free", "_RSA_check_key_ex", "_d2i_RSA_PSS_PARAMS", "_i2d_RSA_PSS_PARAMS", "_d2i_RSA_OAEP_PARAMS", "_i2d_RSA_OAEP_PARAMS", "_RSAPublicKey_dup", "_RSAPrivateKey_dup", "_rsa_multip_calc_product", "_RSA_check_key", "_rsa_multip_cap", "_RSA_bits", "_RSA_private_encrypt", "_RSA_public_decrypt", "_RSA_blinding_off", "_CRYPTO_THREAD_compare_id", "_RSA_blinding_on", "_RSA_setup_blinding", "_RSA_generate_key_ex", "_RSA_generate_multi_prime_key", "_RSA_new_method", "_RSA_get_default_method", "_RSA_get_method", "_RSA_set_method", "_rsa_multip_info_free", "_RSA_set_ex_data", "_RSA_get_ex_data", "_RSA_set0_multi_prime_params", "_rsa_multip_info_new", "_rsa_multip_info_free_ex", "_RSA_get_multi_prime_extra_count", "_RSA_get0_multi_prime_factors", "_RSA_get0_multi_prime_crt_params", "_RSA_get0_n", "_RSA_get0_e", "_RSA_get0_d", "_RSA_get0_p", "_RSA_get0_q", "_RSA_get0_dmp1", "_RSA_get0_dmq1", "_RSA_get0_iqmp", "_RSA_get0_pss_params", "_RSA_clear_flags", "_RSA_test_flags", "_RSA_set_flags", "_RSA_get_version", "_RSA_get0_engine", "_RSA_padding_add_none", "_RSA_padding_check_none", "_RSA_padding_add_PKCS1_OAEP", "_RSA_padding_add_PKCS1_OAEP_mgf1", "_PKCS1_MGF1", "_RSA_padding_check_PKCS1_OAEP", "_RSA_padding_check_PKCS1_OAEP_mgf1", "_RSA_set_default_method", "_RSA_PKCS1_OpenSSL", "_RSA_null_method", "_RSA_padding_add_SSLv23", "_RSA_padding_add_PKCS1_type_2", "_RSA_padding_check_X931", "_RSA_padding_check_PKCS1_type_1", "_RSA_padding_add_X931", "_RSA_padding_add_PKCS1_type_1", "_RSA_padding_check_SSLv23", "_RSA_padding_check_PKCS1_type_2", "_RSA_sign_ASN1_OCTET_STRING", "_RSA_X931_hash_id", "_RSA_sign", "_RSA_padding_add_PKCS1_PSS_mgf1", "_RSA_verify", "_RSA_verify_PKCS1_PSS_mgf1", "_int_rsa_verify", "_RSA_verify_PKCS1_PSS", "_RSA_padding_add_PKCS1_PSS", "_RSA_verify_ASN1_OCTET_STRING", "_SEED_encrypt", "_SEED_decrypt", "_SHA224", "_SHA384", "_SipHash_ctx_size", "_SipHash_hash_size", "_SipHash_set_hash_size", "_SipHash_Init", "_SipHash_Update", "_SipHash_Final", "_d2i_SM2_Ciphertext", "_i2d_SM2_Ciphertext", "_SM2_Ciphertext_new", "_SM2_Ciphertext_free", "_sm2_plaintext_size", "_sm2_ciphertext_size", "_sm2_encrypt", "_sm2_decrypt", "_sm2_sign", "_sm2_verify", "_sm2_compute_z_digest", "_sm2_do_sign", "_sm2_do_verify", "_sm3_init", "_sm3_update", "_sm3_final", "_sm3_block_data_order", "_sm3_transform", "_SRP_user_pwd_free", "_SRP_VBASE_new", "_SRP_VBASE_free", "_SRP_VBASE_init", "_SRP_VBASE_get_by_user", "_SRP_VBASE_get1_by_user", "_SRP_create_verifier", "_TXT_DB_read", "_TXT_DB_free", "_OPENSSL_sk_deep_copy", "_OPENSSL_sk_reserve", "_OPENSSL_sk_find_ex", "_OPENSSL_sk_unshift", "_OPENSSL_sk_zero", "_OPENSSL_sk_is_sorted", "_ossl_store_file_attach_pem_bio_int", "_ossl_store_file_detach_pem_bio_int", "_ossl_store_file_loader_init", "_ossl_store_init_once", "_ossl_store_register_loader_int", "_ossl_store_unregister_loader_int", "_OSSL_STORE_SEARCH_get_type", "_OSSL_STORE_SEARCH_get0_name", "_OSSL_STORE_INFO_free", "_OSSL_STORE_INFO_get_type", "_ossl_store_info_get0_EMBEDDED_pem_name", "_ossl_store_info_get0_EMBEDDED_buffer", "_OSSL_STORE_INFO_new_NAME", "_UI_set_method", "_UI_add_user_data", "_UI_construct_prompt", "_OSSL_STORE_INFO_new_PKEY", "_OSSL_STORE_INFO_new_CERT", "_ossl_store_info_new_EMBEDDED", "_OSSL_STORE_INFO_new_CRL", "_OSSL_STORE_INFO_new_PARAMS", "_ossl_store_destroy_loaders_int", "_OSSL_STORE_open", "_OSSL_STORE_ctrl", "_OSSL_STORE_vctrl", "_OSSL_STORE_expect", "_OSSL_STORE_find", "_OSSL_STORE_load", "_ossl_store_get0_loader_int", "_OSSL_STORE_eof", "_OSSL_STORE_error", "_OSSL_STORE_close", "_OSSL_STORE_INFO_set0_NAME_description", "_OSSL_STORE_INFO_get0_NAME", "_OSSL_STORE_INFO_get1_NAME", "_OSSL_STORE_INFO_get0_NAME_description", "_OSSL_STORE_INFO_get1_NAME_description", "_OSSL_STORE_INFO_get0_PARAMS", "_OSSL_STORE_INFO_get1_PARAMS", "_OSSL_STORE_INFO_get0_PKEY", "_OSSL_STORE_INFO_get1_PKEY", "_OSSL_STORE_INFO_get0_CERT", "_OSSL_STORE_INFO_get1_CERT", "_OSSL_STORE_INFO_get0_CRL", "_OSSL_STORE_INFO_get1_CRL", "_OSSL_STORE_supports_search", "_OSSL_STORE_SEARCH_by_name", "_OSSL_STORE_SEARCH_by_issuer_serial", "_OSSL_STORE_SEARCH_by_key_fingerprint", "_OSSL_STORE_SEARCH_by_alias", "_OSSL_STORE_SEARCH_free", "_OSSL_STORE_SEARCH_get0_serial", "_OSSL_STORE_SEARCH_get0_bytes", "_OSSL_STORE_SEARCH_get0_string", "_OSSL_STORE_SEARCH_get0_digest", "_ossl_store_attach_pem_bio", "_ossl_store_detach_pem_bio", "_OSSL_STORE_LOADER_new", "_OSSL_STORE_LOADER_get0_engine", "_OSSL_STORE_LOADER_get0_scheme", "_OSSL_STORE_LOADER_set_open", "_OSSL_STORE_LOADER_set_ctrl", "_OSSL_STORE_LOADER_set_expect", "_OSSL_STORE_LOADER_set_find", "_OSSL_STORE_LOADER_set_load", "_OSSL_STORE_LOADER_set_eof", "_OSSL_STORE_LOADER_set_error", "_OSSL_STORE_LOADER_set_close", "_OSSL_STORE_LOADER_free", "_OSSL_STORE_register_loader", "_OSSL_STORE_unregister_loader", "_OSSL_STORE_do_all_loaders", "_TXT_DB_get_by_index", "_TXT_DB_create_index", "_TXT_DB_write", "_TXT_DB_insert", "_UI_new_method", "_UI_get_default_method", "_UI_null", "_UI_dup_input_string", "_UI_dup_verify_string", "_UI_add_input_boolean", "_UI_dup_input_boolean", "_UI_add_info_string", "_UI_dup_info_string", "_UI_add_error_string", "_UI_dup_error_string", "_UI_dup_user_data", "_UI_get0_user_data", "_UI_get0_result", "_UI_get0_result_string", "_UI_get_result_length", "_UI_get_result_string_length", "_UI_ctrl", "_UI_set_ex_data", "_UI_get_ex_data", "_UI_get_method", "_UI_create_method", "_UI_destroy_method", "_UI_method_set_opener", "_UI_method_set_writer", "_UI_method_set_flusher", "_UI_method_set_reader", "_UI_method_set_closer", "_UI_method_set_data_duplicator", "_UI_method_set_prompt_constructor", "_UI_method_set_ex_data", "_UI_method_get_opener", "_UI_method_get_writer", "_UI_method_get_flusher", "_UI_method_get_reader", "_UI_method_get_closer", "_UI_method_get_prompt_constructor", "_UI_method_get_data_duplicator", "_UI_method_get_data_destructor", "_UI_method_get_ex_data", "_UI_get_string_type", "_UI_get_input_flags", "_UI_get0_output_string", "_UI_get0_action_string", "_UI_get0_test_string", "_UI_get_result_minsize", "_UI_get_result_maxsize", "_UI_set_result", "_UI_set_result_ex", "_UI_set_default_method", "_getegid", "_whirlpool_block", "_WHIRLPOOL_BitUpdate", "_WHIRLPOOL", "_X509_load_crl_file", "_X509_load_cert_file", "_X509_STORE_lock", "_X509_STORE_unlock", "_X509_STORE_add_crl", "_d2i_X509_CRL_bio", "_X509_load_cert_crl_file", "_X509_REQ_print_ex", "_X509_REQ_get_version", "_X509_REQ_get_X509_PUBKEY", "_X509_REQ_get0_pubkey", "_X509_REQ_get_attr_count", "_X509_REQ_get_attr", "_X509_REQ_extension_nid", "_X509_REQ_get_extensions", "_X509_EXTENSION_get_critical", "_X509_REQ_get0_signature", "_X509_signature_print", "_X509_print_ex", "_X509_get0_tbs_sigalg", "_X509_get0_notBefore", "_X509_get0_notAfter", "_X509_get0_uids", "_X509_get0_extensions", "_X509V3_extensions_print", "_X509_get0_signature", "_X509_aux_print", "_X509_trusted", "_X509_get0_trust_objects", "_X509_get0_reject_objects", "_X509_ocspid_print", "_X509_get0_pubkey_bitstr", "_X509_ATTRIBUTE_new", "_X509_ATTRIBUTE_set1_data", "_X509_ATTRIBUTE_create_by_OBJ", "_X509_ATTRIBUTE_create_by_NID", "_X509_ATTRIBUTE_create_by_txt", "_X509_ATTRIBUTE_get0_data", "_X509_ATTRIBUTE_set1_object", "_X509_issuer_and_serial_cmp", "_X509_issuer_and_serial_hash", "_X509_issuer_name_cmp", "_X509_subject_name_cmp", "_X509_CRL_cmp", "_X509_CRL_match", "_X509_issuer_name_hash", "_X509_issuer_name_hash_old", "_X509_NAME_hash_old", "_X509_get0_serialNumber", "_X509_subject_name_hash_old", "_X509_find_by_subject", "_X509_PUBKEY_get0", "_X509_CRL_check_suiteb", "_X509_CRL_get_ext_count", "_X509_CRL_get_ext_by_NID", "_X509_CRL_get_ext_by_OBJ", "_X509_CRL_get_ext_by_critical", "_X509_CRL_get_ext", "_X509_CRL_delete_ext", "_X509_CRL_get_ext_d2i", "_X509_CRL_add1_ext_i2d", "_X509_CRL_add_ext", "_X509v3_get_ext_count", "_X509v3_get_ext_by_NID", "_X509v3_get_ext_by_OBJ", "_X509v3_get_ext_by_critical", "_X509v3_get_ext", "_X509v3_delete_ext", "_X509V3_get_d2i", "_X509V3_add1_i2d", "_X509v3_add_ext", "_X509_get_ext_by_OBJ", "_X509_get_ext_by_critical", "_X509_add_ext", "_X509_add1_ext_i2d", "_X509_REVOKED_get_ext_count", "_X509_REVOKED_get_ext_by_NID", "_X509_REVOKED_get_ext_by_OBJ", "_X509_REVOKED_get_ext_by_critical", "_X509_REVOKED_get_ext", "_X509_REVOKED_delete_ext", "_X509_REVOKED_add_ext", "_X509_REVOKED_get_ext_d2i", "_X509_REVOKED_add1_ext_i2d", "_X509_LOOKUP_new", "_X509_LOOKUP_free", "_X509_LOOKUP_init", "_X509_LOOKUP_shutdown", "_X509_LOOKUP_by_subject", "_X509_LOOKUP_by_issuer_serial", "_X509_LOOKUP_by_fingerprint", "_X509_LOOKUP_by_alias", "_X509_LOOKUP_set_method_data", "_X509_LOOKUP_get_method_data", "_X509_LOOKUP_get_store", "_X509_OBJECT_free", "_X509_STORE_CTX_get_obj_by_subject", "_X509_STORE_CTX_get_by_subject", "_X509_OBJECT_new", "_X509_OBJECT_retrieve_by_subject", "_X509_OBJECT_up_ref_count", "_X509_OBJECT_retrieve_match", "_X509_OBJECT_get0_X509", "_X509_OBJECT_get0_X509_CRL", "_X509_OBJECT_get_type", "_X509_OBJECT_set1_X509", "_X509_OBJECT_set1_X509_CRL", "_X509_OBJECT_idx_by_subject", "_X509_STORE_get0_objects", "_X509_STORE_CTX_get1_certs", "_X509_STORE_CTX_get1_crls", "_X509_STORE_CTX_get1_issuer", "_x509_check_cert_time", "_X509_STORE_set_flags", "_X509_VERIFY_PARAM_set_flags", "_X509_STORE_set_depth", "_X509_STORE_set_purpose", "_X509_STORE_set_trust", "_X509_STORE_set1_param", "_X509_STORE_get0_param", "_X509_STORE_set_verify", "_X509_STORE_get_verify", "_X509_STORE_set_verify_cb", "_X509_STORE_get_verify_cb", "_X509_STORE_set_get_issuer", "_X509_STORE_get_get_issuer", "_X509_STORE_set_check_issued", "_X509_STORE_get_check_issued", "_X509_STORE_set_check_revocation", "_X509_STORE_get_check_revocation", "_X509_STORE_set_get_crl", "_X509_STORE_get_get_crl", "_X509_STORE_set_check_crl", "_X509_STORE_get_check_crl", "_X509_STORE_set_cert_crl", "_X509_STORE_get_cert_crl", "_X509_STORE_set_check_policy", "_X509_STORE_get_check_policy", "_X509_STORE_set_lookup_certs", "_X509_STORE_get_lookup_certs", "_X509_STORE_set_lookup_crls", "_X509_STORE_get_lookup_crls", "_X509_STORE_set_cleanup", "_X509_STORE_get_cleanup", "_X509_STORE_set_ex_data", "_X509_STORE_get_ex_data", "_X509_STORE_CTX_get0_store", "_X509_to_X509_REQ", "_X509_REQ_set_subject_name", "_X509_REQ_check_private_key", "_X509_REQ_get_extension_nids", "_X509_REQ_set_extension_nids", "_X509_REQ_add_extensions_nid", "_X509_REQ_add1_attr_by_NID", "_X509_REQ_add_extensions", "_X509_REQ_get_attr_by_OBJ", "_X509_REQ_delete_attr", "_X509_REQ_add1_attr", "_X509_REQ_add1_attr_by_OBJ", "_X509_REQ_set0_signature", "_X509_REQ_set1_signature_algo", "_X509_REQ_get_signature_nid", "_i2d_re_X509_REQ_tbs", "_i2d_X509_REQ_INFO", "_X509_set_serialNumber", "_x509_set1_time", "_X509_set1_notBefore", "_X509_set1_notAfter", "_X509_get_signature_type", "_X509_SIG_INFO_get", "_x509_init_sig_info", "_X509_TRUST_set_default", "_X509_check_trust", "_X509_TRUST_get_by_id", "_X509_TRUST_get0", "_X509_TRUST_get_count", "_X509_TRUST_set", "_X509_TRUST_add", "_X509_TRUST_cleanup", "_X509_TRUST_get_flags", "_X509_TRUST_get0_name", "_X509_TRUST_get_trust", "_X509_EXTENSION_dup", "_X509_EXTENSION_create_by_NID", "_X509_EXTENSION_create_by_OBJ", "_X509_EXTENSION_new", "_X509_EXTENSION_set_object", "_X509_EXTENSION_set_critical", "_X509_get_pubkey_parameters", "_X509_check_ca", "_X509_NAME_delete_entry", "_X509_NAME_ENTRY_free", "_NAME_CONSTRAINTS_check", "_NAME_CONSTRAINTS_check_CN", "_X509v3_asid_validate_path", "_X509v3_addr_validate_path", "_X509_cmp_time", "_X509_cmp_current_time", "_X509_time_adj", "_X509_time_adj_ex", "_X509_CRL_diff", "_X509_CRL_get_issuer", "_X509_CRL_verify", "_X509_CRL_new", "_X509_CRL_set_version", "_X509_CRL_set_issuer_name", "_X509_CRL_get0_lastUpdate", "_X509_CRL_set1_lastUpdate", "_X509_CRL_get0_nextUpdate", "_X509_CRL_set1_nextUpdate", "_X509_CRL_get_REVOKED", "_X509_CRL_get0_by_serial", "_X509_REVOKED_dup", "_X509_CRL_add0_revoked", "_X509_REVOKED_free", "_X509_CRL_sign", "_X509_STORE_CTX_set_error_depth", "_X509_STORE_CTX_get_current_cert", "_X509_STORE_CTX_set_current_cert", "_X509_STORE_CTX_get0_current_issuer", "_X509_STORE_CTX_get0_current_crl", "_X509_STORE_CTX_get0_parent_ctx", "_X509_STORE_CTX_set_cert", "_X509_STORE_CTX_purpose_inherit", "_X509_PURPOSE_get_by_id", "_X509_STORE_CTX_set_trust", "_X509_policy_tree_free", "_X509_VERIFY_PARAM_lookup", "_X509_PURPOSE_get_trust", "_x509_likely_issued", "_x509_signing_allowed", "_X509_CRL_get0_by_cert", "_X509_policy_check", "_X509_STORE_CTX_set0_trusted_stack", "_X509_STORE_CTX_set_depth", "_X509_STORE_CTX_set_time", "_X509_VERIFY_PARAM_set_time", "_X509_STORE_CTX_get0_cert", "_X509_STORE_CTX_get0_untrusted", "_X509_STORE_CTX_set0_untrusted", "_X509_STORE_CTX_set0_verified_chain", "_X509_STORE_CTX_get_verify_cb", "_X509_STORE_CTX_set_verify", "_X509_STORE_CTX_get_verify", "_X509_STORE_CTX_get_get_issuer", "_X509_STORE_CTX_get_check_issued", "_X509_STORE_CTX_get_check_revocation", "_X509_STORE_CTX_get_get_crl", "_X509_STORE_CTX_get_check_crl", "_X509_STORE_CTX_get_cert_crl", "_X509_STORE_CTX_get_check_policy", "_X509_STORE_CTX_get_lookup_certs", "_X509_STORE_CTX_get_lookup_crls", "_X509_STORE_CTX_get_cleanup", "_X509_STORE_CTX_get0_policy_tree", "_X509_STORE_CTX_get_explicit_policy", "_X509_STORE_CTX_get_num_untrusted", "_X509_STORE_CTX_set0_param", "_X509_check_host", "_X509_check_email", "_X509_check_ip", "_X509_check_akid", "_GENERAL_NAME_cmp", "_X509_VERIFY_PARAM_set1_policies", "_X509_VERIFY_PARAM_set1_email", "_X509_VERIFY_PARAM_set1_ip", "_X509_VERIFY_PARAM_set1_name", "_X509_VERIFY_PARAM_clear_flags", "_X509_VERIFY_PARAM_get_flags", "_X509_VERIFY_PARAM_get_inh_flags", "_X509_VERIFY_PARAM_set_inh_flags", "_X509_PURPOSE_set", "_X509_VERIFY_PARAM_get_time", "_X509_VERIFY_PARAM_add0_policy", "_X509_VERIFY_PARAM_get_hostflags", "_X509_VERIFY_PARAM_set1_ip_asc", "_a2i_ipadd", "_X509_VERIFY_PARAM_get_auth_level", "_X509_VERIFY_PARAM_get0_name", "_X509_VERIFY_PARAM_add0_table", "_X509_VERIFY_PARAM_get_count", "_X509_VERIFY_PARAM_get0", "_X509_VERIFY_PARAM_table_cleanup", "_X509_CRL_sort", "_X509_CRL_get_version", "_X509_CRL_get_lastUpdate", "_X509_CRL_get_nextUpdate", "_X509_CRL_get0_extensions", "_X509_CRL_get0_signature", "_X509_CRL_get_signature_nid", "_X509_REVOKED_get0_revocationDate", "_X509_REVOKED_set_revocationDate", "_X509_REVOKED_get0_serialNumber", "_X509_REVOKED_set_serialNumber", "_X509_REVOKED_get0_extensions", "_i2d_re_X509_CRL_tbs", "_i2d_X509_CRL_INFO", "_X509_NAME_get_text_by_OBJ", "_X509_NAME_get_index_by_OBJ", "_X509_NAME_add_entry_by_OBJ", "_X509_NAME_ENTRY_new", "_X509_NAME_ENTRY_set_data", "_X509_NAME_add_entry", "_X509_NAME_ENTRY_create_by_OBJ", "_X509_NAME_ENTRY_dup", "_X509_NAME_ENTRY_create_by_NID", "_X509_NAME_ENTRY_create_by_txt", "_X509_NAME_ENTRY_set_object", "_NETSCAPE_SPKI_get_pubkey", "_X509_sign_ctx", "_X509_REQ_sign_ctx", "_X509_CRL_sign_ctx", "_i2d_X509_bio", "_i2d_X509_CRL_bio", "_d2i_PKCS7_bio", "_i2d_PKCS7_bio", "_d2i_X509_REQ_bio", "_i2d_X509_REQ_bio", "_i2d_RSAPrivateKey_bio", "_d2i_RSAPublicKey_bio", "_d2i_RSA_PUBKEY_bio", "_i2d_RSAPublicKey_bio", "_i2d_RSA_PUBKEY_bio", "_d2i_DSAPrivateKey_bio", "_i2d_DSAPrivateKey_bio", "_d2i_DSA_PUBKEY_bio", "_i2d_DSA_PUBKEY_bio", "_d2i_EC_PUBKEY_bio", "_i2d_EC_PUBKEY_bio", "_d2i_ECPrivateKey_bio", "_i2d_ECPrivateKey_bio", "_X509_pubkey_digest", "_X509_CRL_digest", "_X509_REQ_digest", "_X509_NAME_digest", "_PKCS7_ISSUER_AND_SERIAL_digest", "_d2i_PKCS8_PRIV_KEY_INFO_bio", "_i2d_PKCS8PrivateKeyInfo_bio", "_i2d_PrivateKey_bio", "_i2d_PUBKEY_bio", "_d2i_PUBKEY_bio", "_d2i_X509_ATTRIBUTE", "_i2d_X509_ATTRIBUTE", "_d2i_X509_REVOKED", "_i2d_X509_REVOKED", "_X509_REVOKED_new", "_d2i_X509_CRL_INFO", "_X509_CRL_INFO_new", "_X509_CRL_INFO_free", "_X509_CRL_dup", "_X509_CRL_set_default_method", "_X509_CRL_METHOD_new", "_X509_CRL_METHOD_free", "_X509_CRL_set_meth_data", "_X509_CRL_get_meth_data", "_AUTHORITY_KEYID_free", "_ISSUING_DIST_POINT_free", "_DIST_POINT_set_dpname", "_d2i_X509_EXTENSION", "_i2d_X509_EXTENSION", "_d2i_X509_EXTENSIONS", "_i2d_X509_EXTENSIONS", "_d2i_X509_NAME_ENTRY", "_i2d_X509_NAME_ENTRY", "_X509_NAME_new", "_X509_NAME_get0_der", "_d2i_X509_PUBKEY", "_X509_PUBKEY_new", "_d2i_X509_REQ_INFO", "_X509_REQ_INFO_new", "_X509_REQ_INFO_free", "_X509_REQ_dup", "_d2i_X509_CINF", "_i2d_X509_CINF", "_X509_CINF_new", "_X509_CINF_free", "_X509_set_ex_data", "_X509_get_ex_data", "_d2i_X509_CERT_AUX", "_i2d_X509_CERT_AUX", "_X509_CERT_AUX_free", "_CRL_DIST_POINTS_free", "_policy_cache_free", "_NAME_CONSTRAINTS_free", "_IPAddressFamily_free", "_ASIdentifiers_free", "_X509_CERT_AUX_new", "_X509_add1_trust_object", "_X509_add1_reject_object", "_X509_trust_clear", "_X509_reject_clear", "_policy_data_free", "_policy_cache_set", "_policy_data_new", "_POLICYINFO_free", "_policy_cache_set_mapping", "_POLICY_CONSTRAINTS_free", "_policy_cache_find_data", "_POLICYQUALINFO_free", "_X509_policy_tree_level_count", "_X509_policy_tree_get0_level", "_X509_policy_tree_get0_policies", "_X509_policy_tree_get0_user_policies", "_X509_policy_level_node_count", "_X509_policy_level_get0_node", "_X509_policy_node_get0_policy", "_X509_policy_node_get0_qualifiers", "_X509_policy_node_get0_parent", "_POLICY_MAPPING_free", "_policy_node_cmp_new", "_tree_find_sk", "_level_find_node", "_level_add_node", "_policy_node_free", "_policy_node_match", "_d2i_IPAddressRange", "_i2d_IPAddressRange", "_IPAddressRange_new", "_IPAddressRange_free", "_d2i_IPAddressOrRange", "_i2d_IPAddressOrRange", "_IPAddressOrRange_new", "_IPAddressOrRange_free", "_d2i_IPAddressChoice", "_i2d_IPAddressChoice", "_IPAddressChoice_new", "_IPAddressChoice_free", "_d2i_IPAddressFamily", "_i2d_IPAddressFamily", "_IPAddressFamily_new", "_X509v3_addr_get_afi", "_X509v3_addr_add_inherit", "_X509v3_addr_add_prefix", "_X509v3_addr_add_range", "_X509v3_addr_get_range", "_X509v3_addr_is_canonical", "_X509v3_addr_canonize", "_name_cmp", "_X509v3_addr_inherits", "_X509v3_addr_subset", "_X509v3_addr_validate_resource_set", "_d2i_NAMING_AUTHORITY", "_i2d_NAMING_AUTHORITY", "_NAMING_AUTHORITY_new", "_NAMING_AUTHORITY_free", "_d2i_PROFESSION_INFO", "_i2d_PROFESSION_INFO", "_PROFESSION_INFO_new", "_PROFESSION_INFO_free", "_d2i_ADMISSIONS", "_i2d_ADMISSIONS", "_ADMISSIONS_new", "_ADMISSIONS_free", "_d2i_ADMISSION_SYNTAX", "_i2d_ADMISSION_SYNTAX", "_ADMISSION_SYNTAX_new", "_ADMISSION_SYNTAX_free", "_NAMING_AUTHORITY_get0_authorityId", "_NAMING_AUTHORITY_set0_authorityId", "_NAMING_AUTHORITY_get0_authorityURL", "_NAMING_AUTHORITY_set0_authorityURL", "_NAMING_AUTHORITY_get0_authorityText", "_NAMING_AUTHORITY_set0_authorityText", "_ADMISSION_SYNTAX_get0_admissionAuthority", "_ADMISSION_SYNTAX_set0_admissionAuthority", "_ADMISSION_SYNTAX_get0_contentsOfAdmissions", "_ADMISSION_SYNTAX_set0_contentsOfAdmissions", "_ADMISSIONS_get0_admissionAuthority", "_ADMISSIONS_set0_admissionAuthority", "_ADMISSIONS_get0_namingAuthority", "_ADMISSIONS_set0_namingAuthority", "_ADMISSIONS_get0_professionInfos", "_ADMISSIONS_set0_professionInfos", "_PROFESSION_INFO_get0_addProfessionInfo", "_PROFESSION_INFO_set0_addProfessionInfo", "_PROFESSION_INFO_get0_namingAuthority", "_PROFESSION_INFO_set0_namingAuthority", "_PROFESSION_INFO_get0_professionItems", "_PROFESSION_INFO_set0_professionItems", "_PROFESSION_INFO_get0_professionOIDs", "_PROFESSION_INFO_set0_professionOIDs", "_PROFESSION_INFO_get0_registrationNumber", "_PROFESSION_INFO_set0_registrationNumber", "_d2i_AUTHORITY_KEYID", "_i2d_AUTHORITY_KEYID", "_AUTHORITY_KEYID_new", "_i2v_GENERAL_NAMES", "_i2v_GENERAL_NAME", "_v2i_GENERAL_NAME_ex", "_X509V3_EXT_d2i", "_X509V3_add_value", "_x509v3_add_len_value_uchar", "_v2i_GENERAL_NAMES", "_v2i_GENERAL_NAME", "_a2i_GENERAL_NAME", "_GENERAL_NAME_new", "_a2i_IPADDRESS_NC", "_a2i_IPADDRESS", "_X509V3_NAME_from_section", "_OTHERNAME_new", "_d2i_ASRange", "_i2d_ASRange", "_ASRange_new", "_ASRange_free", "_d2i_ASIdOrRange", "_i2d_ASIdOrRange", "_ASIdOrRange_new", "_ASIdOrRange_free", "_d2i_ASIdentifierChoice", "_i2d_ASIdentifierChoice", "_ASIdentifierChoice_new", "_ASIdentifierChoice_free", "_d2i_ASIdentifiers", "_i2d_ASIdentifiers", "_ASIdentifiers_new", "_X509v3_asid_add_inherit", "_X509v3_asid_add_id_or_range", "_X509v3_asid_is_canonical", "_X509v3_asid_canonize", "_X509V3_get_value_int", "_X509v3_asid_inherits", "_X509v3_asid_subset", "_X509v3_asid_validate_resource_set", "_d2i_BASIC_CONSTRAINTS", "_i2d_BASIC_CONSTRAINTS", "_BASIC_CONSTRAINTS_new", "_BASIC_CONSTRAINTS_free", "_i2v_ASN1_BIT_STRING", "_v2i_ASN1_BIT_STRING", "_X509V3_EXT_nconf", "_X509V3_EXT_nconf_nid", "_X509V3_EXT_i2d", "_X509V3_EXT_add_nconf_sk", "_X509V3_EXT_get_nid", "_X509V3_EXT_CRL_add_nconf", "_X509V3_get_string", "_X509V3_string_free", "_X509V3_EXT_conf", "_X509V3_EXT_conf_nid", "_X509V3_set_conf_lhash", "_X509V3_EXT_add_conf", "_X509V3_EXT_CRL_add_conf", "_X509V3_EXT_REQ_add_conf", "_d2i_CERTIFICATEPOLICIES", "_i2d_CERTIFICATEPOLICIES", "_CERTIFICATEPOLICIES_new", "_CERTIFICATEPOLICIES_free", "_d2i_POLICYINFO", "_i2d_POLICYINFO", "_POLICYINFO_new", "_d2i_POLICYQUALINFO", "_i2d_POLICYQUALINFO", "_POLICYQUALINFO_new", "_d2i_USERNOTICE", "_i2d_USERNOTICE", "_USERNOTICE_new", "_USERNOTICE_free", "_d2i_NOTICEREF", "_i2d_NOTICEREF", "_NOTICEREF_new", "_NOTICEREF_free", "_X509_POLICY_NODE_print", "_DIST_POINT_free", "_d2i_DIST_POINT_NAME", "_i2d_DIST_POINT_NAME", "_DIST_POINT_NAME_new", "_DIST_POINT_NAME_free", "_d2i_DIST_POINT", "_i2d_DIST_POINT", "_DIST_POINT_new", "_d2i_CRL_DIST_POINTS", "_i2d_CRL_DIST_POINTS", "_CRL_DIST_POINTS_new", "_GENERAL_NAMES_new", "_d2i_ISSUING_DIST_POINT", "_i2d_ISSUING_DIST_POINT", "_ISSUING_DIST_POINT_new", "_i2s_ASN1_ENUMERATED_TABLE", "_d2i_EXTENDED_KEY_USAGE", "_i2d_EXTENDED_KEY_USAGE", "_EXTENDED_KEY_USAGE_new", "_EXTENDED_KEY_USAGE_free", "_d2i_OTHERNAME", "_i2d_OTHERNAME", "_OTHERNAME_free", "_d2i_EDIPARTYNAME", "_i2d_EDIPARTYNAME", "_EDIPARTYNAME_new", "_EDIPARTYNAME_free", "_d2i_GENERAL_NAME", "_i2d_GENERAL_NAME", "_d2i_GENERAL_NAMES", "_i2d_GENERAL_NAMES", "_GENERAL_NAME_dup", "_OTHERNAME_cmp", "_GENERAL_NAME_set0_value", "_GENERAL_NAME_get0_value", "_GENERAL_NAME_set0_othername", "_GENERAL_NAME_get0_otherName", "_i2s_ASN1_IA5STRING", "_s2i_ASN1_IA5STRING", "_ACCESS_DESCRIPTION_free", "_d2i_ACCESS_DESCRIPTION", "_i2d_ACCESS_DESCRIPTION", "_ACCESS_DESCRIPTION_new", "_d2i_AUTHORITY_INFO_ACCESS", "_i2d_AUTHORITY_INFO_ACCESS", "_AUTHORITY_INFO_ACCESS_new", "_AUTHORITY_INFO_ACCESS_free", "_i2a_ACCESS_DESCRIPTION", "_X509V3_EXT_add", "_X509V3_EXT_add_list", "_X509V3_EXT_add_alias", "_X509V3_EXT_cleanup", "_X509V3_add_standard_extensions", "_X509V3_add_value_bool", "_X509V3_add_value_int", "_i2s_ASN1_ENUMERATED", "_GENERAL_SUBTREE_new", "_GENERAL_SUBTREE_free", "_NAME_CONSTRAINTS_new", "_PROXY_CERT_INFO_EXTENSION_new", "_PROXY_CERT_INFO_EXTENSION_free", "_d2i_PROXY_POLICY", "_i2d_PROXY_POLICY", "_PROXY_POLICY_new", "_PROXY_POLICY_free", "_d2i_PROXY_CERT_INFO_EXTENSION", "_i2d_PROXY_CERT_INFO_EXTENSION", "_POLICY_CONSTRAINTS_new", "_d2i_PKEY_USAGE_PERIOD", "_i2d_PKEY_USAGE_PERIOD", "_PKEY_USAGE_PERIOD_new", "_PKEY_USAGE_PERIOD_free", "_POLICY_MAPPING_new", "_X509V3_EXT_val_prn", "_X509_PURPOSE_get_by_sname", "_X509_PURPOSE_add", "_X509_PURPOSE_cleanup", "_X509_supported_extension", "_X509_set_proxy_flag", "_X509_set_proxy_pathlen", "_X509_check_issued", "_X509_get_extended_key_usage", "_X509_get0_authority_key_id", "_X509_get0_authority_issuer", "_X509_get0_authority_serial", "_X509_get_pathlen", "_X509_get_proxy_pathlen", "_i2s_ASN1_OCTET_STRING", "_s2i_ASN1_OCTET_STRING", "_SXNET_add_id_INTEGER", "_d2i_SXNETID", "_i2d_SXNETID", "_SXNETID_new", "_SXNETID_free", "_d2i_SXNET", "_i2d_SXNET", "_SXNET_new", "_SXNET_free", "_SXNET_add_id_asc", "_SXNET_add_id_ulong", "_SXNET_get_id_INTEGER", "_SXNET_get_id_asc", "_SXNET_get_id_ulong", "_TLS_FEATURE_new", "_TLS_FEATURE_free", "_X509V3_add_value_uchar", "_X509V3_add_value_bool_nf", "_X509_get1_email", "_X509_get1_ocsp", "_X509_REQ_get1_email", "_X509_email_free", "_X509_check_ip_asc", "_prvTidyAccessibilityChecks", "_prvTidyNodeAttributeVersions", "_prvTidyAttributeIsProprietary", "_prvTidyAttributeIsMismatched", "_prvTidyAttrGetById", "_prvTidyFindAttribute", "_prvTidyGetAttrByName", "_prvTidyDropAttrByName", "_prvTidyAddAttribute", "_prvTidyRepairAttrValue", "_prvTidyFreeAttrPriorityList", "_prvTidyDefinePriorityAttribute", "_prvTidygetPriorityAttrList", "_prvTidygetNextPriorityAttr", "_prvTidyIsUrl", "_prvTidyCheckUrl", "_prvTidyIsScript", "_prvTidyIsAnchorElement", "_prvTidyIsCSS1Selector", "_prvTidyRemoveAnchorByNode", "_prvTidyFreeAnchors", "_prvTidyInitAttrs", "_prvTidyFreeAttrTable", "_prvTidyAppendToClassAttr", "_prvTidyRepairDuplicateAttributes", "_prvTidyCheckAttribute", "_prvTidyIsBoolAttribute", "_prvTidyattrIsEvent", "_prvTidyIsValidHTMLID", "_prvTidyIsValidXMLID", "_prvTidySortAttributes", "_prvTidyDupAttrs", "_prvTidyPushInline", "_prvTidyIsPushed", "_prvTidyPopInline", "_prvTidyIsPushedLast", "_prvTidyInlineDup", "_prvTidyDeferDup", "_prvTidyInsertedToken", "_prvTidySwitchInline", "_prvTidyInlineDup1", "_prvTidyCheckNodeIntegrity", "_prvTidyIsNewNode", "_prvTidyCoerceNode", "_prvTidyRemoveNode", "_prvTidyDiscardElement", "_prvTidyInsertNodeAtStart", "_prvTidyInsertNodeAtEnd", "_prvTidyInsertNodeBeforeElement", "_prvTidyInsertNodeAfterElement", "_prvTidyTrimEmptyElement", "_prvTidyDropEmptyElements", "_prvTidyIsBlank", "_prvTidyParseBlock", "_prvTidyParseList", "_prvTidyParsePre", "_prvTidyParseNamespace", "_prvTidyParseInline", "_prvTidyParseEmpty", "_prvTidyParseDefList", "_prvTidyParseRow", "_prvTidyParseRowGroup", "_prvTidyParseColGroup", "_prvTidyParseTableTag", "_prvTidyParseOptGroup", "_prvTidyParseSelect", "_prvTidyParseDatalist", "_prvTidyParseText", "_prvTidyParseTitle", "_prvTidyParseScript", "_prvTidyIsJavaScript", "_prvTidyParseHead", "_prvTidyFindNodeWithId", "_prvTidyFindNodeById", "_prvTidyParseBody", "_prvTidyParseNoFrames", "_prvTidyParseFrameSet", "_prvTidyParseHTML", "_prvTidyParseDocument", "_prvTidyXMLPreserveWhiteSpace", "_prvTidyParseXMLDocument", "_prvTidyDeclareUserTag", "_prvTidyDefineTag", "_prvTidyFindTag", "_prvTidynodeIsAutonomousCustomTag", "_prvTidyLookupTagDef", "_prvTidyFindParser", "_prvTidyGetDeclaredTagList", "_prvTidyGetNextDeclaredTag", "_prvTidyInitTags", "_prvTidyFreeDeclaredTags", "_prvTidyAdjustTags", "_prvTidyIsHTML5Mode", "_prvTidyResetTags", "_prvTidyFreeTags", "_prvTidyCheckAttributes", "_prvTidynodeIsText", "_prvTidynodeHasText", "_prvTidynodeIsElement", "_prvTidyelementIsAutonomousCustomFormat", "_prvTidynodeIsAutonomousCustomFormat", "_prvTidynodeHasCM", "_prvTidynodeCMIsBlock", "_prvTidynodeCMIsInline", "_prvTidynodeCMIsEmpty", "_prvTidynodeIsHeader", "_prvTidynodeHeaderLevel", "_prvTidyTraverseNodeTree", "_prvTidyEntityInfo", "_prvTidyEntityName", "_prvTidyHTMLVersion", "_prvTidyConstrainVersion", "_prvTidyIsWhite", "_prvTidyIsNewline", "_prvTidyIsDigit", "_prvTidyIsLetter", "_prvTidyIsHTMLSpace", "_prvTidyIsNamechar", "_prvTidyIsXMLLetter", "_prvTidyIsXMLNamechar", "_prvTidyIsUpper", "_prvTidyToLower", "_prvTidyToUpper", "_prvTidyNewLexer", "_prvTidyFreeLexer", "_prvTidyFreeNode", "_prvTidyAddCharToLexer", "_prvTidyNewNode", "_prvTidyCloneNode", "_prvTidyFreeAttrs", "_prvTidyFreeAttribute", "_prvTidyDetachAttribute", "_prvTidyRemoveAttribute", "_prvTidyTextToken", "_prvTidyNewLineNode", "_prvTidyNewLiteralTextNode", "_prvTidyAddStringLiteral", "_prvTidyFindDocType", "_prvTidyFindContainer", "_prvTidyFindHTML", "_prvTidyFindXmlDecl", "_prvTidyFindHEAD", "_prvTidyFindTITLE", "_prvTidyFindBody", "_prvTidyAddGenerator", "_prvTidyInferredTag", "_prvTidyApparentVersion", "_prvTidyHTMLVersionNameFromCode", "_prvTidyHTMLVersionNumberFromCode", "_prvTidyWarnMissingSIInEmittedDocType", "_prvTidySetXHTMLDocType", "_prvTidyFixDocType", "_prvTidyFixXmlDecl", "_prvTidyUngetToken", "_prvTidyGetToken", "_prvTidyInitMap", "_prvTidyNewAttribute", "_prvTidyNewAttributeEx", "_prvTidyInsertAttributeAtEnd", "_prvTidyInsertAttributeAtStart", "_prvTidyPPrintTabs", "_prvTidyPPrintSpaces", "_prvTidyInitPrintBuf", "_prvTidyFreePrintBuf", "_prvTidyPFlushLine", "_prvTidyPFlushLineSmart", "_prvTidyTextNodeEndWithSpace", "_prvTidyPrintBody", "_prvTidyPPrintTree", "_prvTidyPPrintXMLTree", "_prvTidyFreeStyles", "_prvTidyAddStyleAsClass", "_prvTidyFixNodeLinks", "_prvTidyAddStyleProperty", "_prvTidyCleanDocument", "_prvTidyNestedEmphasis", "_prvTidyEmFromI", "_prvTidyList2BQ", "_prvTidyBQ2Div", "_prvTidyDropSections", "_prvTidyNormalizeSpaces", "_prvTidyCleanWord2000", "_prvTidyIsWord2000", "_prvTidyBumpObject", "_prvTidyTidyMetaCharset", "_prvTidyDropComments", "_prvTidyDropFontElements", "_prvTidyWbrToSpace", "_prvTidyDowngradeTypography", "_prvTidyReplacePreformattedSpaces", "_prvTidyConvertCDATANodes", "_prvTidyFixLanguageInformation", "_prvTidyFixXhtmlNamespace", "_prvTidyFixAnchors", "_prvTidyCleanStyle", "_prvTidyReleaseDate", "_prvTidytidyLibraryVersion", "_prvTidyReport", "_prvTidyReportAccessError", "_prvTidyReportAttrError", "_prvTidyReportBadArgument", "_prvTidyReportEntityError", "_prvTidyReportFileError", "_prvTidyReportEncodingError", "_prvTidyReportEncodingWarning", "_prvTidyReportMissingAttr", "_prvTidyReportSurrogateError", "_prvTidyReportUnknownOption", "_formatDialogue", "_prvTidyDialogue", "_prvTidyErrorSummary", "_prvTidyReportMarkupVersion", "_prvTidyReportNumWarnings", "_prvTidyFreeMutedMessageList", "_prvTidyDefineMutedMessage", "_prvTidytidyErrorCodeFromKey", "_prvTidygetMutedMessageList", "_prvTidygetNextMutedMessage", "_prvTidytidyErrorCodeAsKey", "_prvTidygetErrorCodeList", "_prvTidygetNextErrorCode", "_prvTidyOptGetDocDesc", "_prvTidyInitConfig", "_prvTidyResetConfigToDefault", "_prvTidyFreeConfig", "_prvTidyTakeConfigSnapshot", "_prvTidylookupOption", "_prvTidygetOption", "_prvTidygetOptionIsList", "_prvTidyDeclareListItem", "_prvTidyGetPickListLabelForPick", "_prvTidySetOptionInt", "_prvTidySetOptionBool", "_prvTidyResetOptionToDefault", "_prvTidyResetConfigToSnapshot", "_prvTidyParseConfigValue", "_prvTidyCopyConfig", "_tidyFileExists", "_prvTidyParseConfigFile", "_prvTidyParseConfigFileEnc", "_prvTidyCharEncodingId", "_prvTidyParseConfigOption", "_prvTidyAdjustCharEncoding", "_prvTidyAdjustConfig", "_prvTidyCharEncodingName", "_prvTidyCharEncodingOptName", "_prvTidygetOptionList", "_prvTidygetNextOption", "_prvTidygetOptionPickList", "_prvTidygetNextOptionPick", "_prvTidyConfigDiffThanSnapshot", "_prvTidyConfigDiffThanDefault", "_prvTidySaveConfigFile", "_prvTidySaveConfigSink", "_fiprintf", "_tidyInitInputBuffer", "_tidyInitOutputBuffer", "_tidyBufInitWithAllocator", "_tidyBufAlloc", "_tidyBufAllocWithAllocator", "_tidyBufCheckAlloc", "_tidyBufClear", "_tidyBufDetach", "_tidyBufAppend", "_tidyBufPutByte", "_tidyBufPopByte", "_tidyBufGetByte", "_tidyBufEndOfInput", "_tidyBufUngetByte", "_prvTidyinitStdIOFileSource", "_prvTidyfreeStdIOFileSource", "_prvTidyfilesink_putByte", "_prvTidyinitFileSink", "_prvTidyStdErrOutput", "_prvTidyReleaseStreamOut", "_prvTidyinitStreamIn", "_prvTidyfreeStreamIn", "_prvTidyFileInput", "_prvTidyBufferInput", "_prvTidyUserInput", "_prvTidyReadBOMEncoding", "_prvTidyReadChar", "_prvTidyUngetChar", "_prvTidyDecodeMacRoman", "_prvTidyDecodeWin1252", "_prvTidyFileOutput", "_prvTidyBufferOutput", "_prvTidyUserOutput", "_prvTidyWriteChar", "_tidyInitSource", "_tidyInitSink", "_tidyGetByte", "_tidyIsEOF", "_tidyUngetByte", "_tidyPutByte", "_prvTidyIsEOF", "_prvTidyoutBOM", "_prvTidyGetEncodingNameFromTidyId", "_prvTidyGetEncodingOptNameFromTidyId", "_prvTidyGetCharEncodingFromOptName", "_prvTidytmbstrdup", "_prvTidytmbstrlen", "_prvTidytmbstrndup", "_prvTidytmbstrncpy", "_prvTidytmbstrcpy", "_prvTidytmbstrcat", "_prvTidytmbstrcmp", "_prvTidytmbstrcasecmp", "_prvTidytmbstrncmp", "_prvTidytmbstrncasecmp", "_prvTidytmbsubstrn", "_prvTidytmbsubstr", "_prvTidytmbstrtolower", "_prvTidytmbstrtoupper", "_prvTidytmbvsnprintf", "_prvTidytmbsnprintf", "_prvTidyDecodeUTF8BytesToChar", "_prvTidyEncodeCharToUTF8Bytes", "_prvTidyGetUTF8", "_prvTidyPutUTF8", "_prvTidyIsValidUTF16FromUCS4", "_prvTidyIsHighSurrogate", "_prvTidyIsLowSurrogate", "_prvTidyCombineSurrogatePair", "_prvTidySplitSurrogatePair", "_prvTidyIsValidCombinedChar", "_prvTidyIsCombinedChar", "_vsnprintf", "_prvTidytidyMessageCreate", "_tidyLocalizedStringN", "_prvTidyinitFileSource", "_fputc", "_prvTidytidyMessageRelease", "_tidyLocalizedString", "_prvTidytidyMessageCreateWithNode", "_prvTidytidyMessageCreateWithLexer", "_prvTidyfreeFileSource", "_strtok", "_prvTidytidyGetLanguageSetByUser", "_prvTidytidySetLanguage", "_tidyCreateWithAllocator", "_tidySetAppData", "_tidyGetAppData", "_tidyPlatform", "_tidySetOptionCallback", "_tidySetConfigCallback", "_tidySetConfigChangeCallback", "_tidyLoadConfigEnc", "_tidySetInCharEncoding", "_tidySetOutCharEncoding", "_tidyOptGetIdForName", "_tidyGetOption", "_tidyOptionIsList", "_tidyOptGetCategory", "_tidyOptGetDefault", "_tidyOptGetDefaultInt", "_tidyOptGetDefaultBool", "_tidyOptGetPickList", "_tidyOptGetNextPick", "_tidyOptParseValue", "_tidyOptGetEncName", "_tidyOptGetCurrPick", "_tidyOptGetDeclTagList", "_tidyOptGetNextDeclTag", "_tidyOptGetPriorityAttrList", "_tidyOptGetNextPriorityAttr", "_tidyOptGetMutedMessageList", "_tidyOptGetNextMutedMessage", "_prvTidytidyLocalizedString", "_tidyOptGetDocLinksList", "_tidyOptGetNextDocLinks", "_tidyOptSaveFile", "_tidyOptSaveSink", "_tidyOptSnapshot", "_tidyOptResetToSnapshot", "_tidyOptResetAllToDefault", "_tidyOptResetToDefault", "_tidyOptDiffThanDefault", "_tidyOptDiffThanSnapshot", "_tidyOptCopyConfig", "_tidySetEmacsFile", "_tidyGetEmacsFile", "_tidySetReportFilter", "_tidySetReportCallback", "_tidySetMessageCallback", "_tidyGetMessageDoc", "_prvTidygetMessageDoc", "_tidyGetMessageCode", "_prvTidygetMessageCode", "_tidyGetMessageKey", "_prvTidygetMessageKey", "_tidyGetMessageLine", "_prvTidygetMessageLine", "_tidyGetMessageColumn", "_prvTidygetMessageColumn", "_tidyGetMessageLevel", "_prvTidygetMessageLevel", "_tidyGetMessageIsMuted", "_prvTidygetMessageIsMuted", "_tidyGetMessageFormatDefault", "_prvTidygetMessageFormatDefault", "_tidyGetMessageFormat", "_prvTidygetMessageFormat", "_tidyGetMessageDefault", "_prvTidygetMessageDefault", "_tidyGetMessage", "_prvTidygetMessage", "_tidyGetMessagePosDefault", "_prvTidygetMessagePosDefault", "_tidyGetMessagePos", "_prvTidygetMessagePos", "_tidyGetMessagePrefixDefault", "_prvTidygetMessagePrefixDefault", "_tidyGetMessagePrefix", "_prvTidygetMessagePrefix", "_tidyGetMessageOutputDefault", "_prvTidygetMessageOutputDefault", "_tidyGetMessageOutput", "_prvTidygetMessageOutput", "_tidyGetMessageArguments", "_prvTidygetMessageArguments", "_tidyGetNextMessageArgument", "_prvTidygetNextMessageArgument", "_tidyGetArgType", "_prvTidygetArgType", "_tidyGetArgFormat", "_prvTidygetArgFormat", "_tidyGetArgValueString", "_prvTidygetArgValueString", "_tidyGetArgValueUInt", "_prvTidygetArgValueUInt", "_tidyGetArgValueInt", "_prvTidygetArgValueInt", "_tidyGetArgValueDouble", "_prvTidygetArgValueDouble", "_tidySetErrorFile", "_tidySetErrorSink", "_tidySetPrettyPrinterCallback", "_tidyErrorSummary", "_tidyGeneralInfo", "_tidyParseFile", "_prvTidyDocParseStream", "_tidyParseStdin", "_tidyParseString", "_tidyParseSource", "_tidySaveFile", "_tidySaveStdout", "_tidySaveString", "_tidySaveSink", "_prvTidyCleanGoogleDocument", "_prvTidyCheckHTML5", "_prvTidyCheckHTMLTagsAttribsVersions", "_tidyReportDoctype", "_inRemovedInfo", "_tidyDiscardElement", "_tidyGetPrev", "_tidyNodeHasText", "_tidyNodeGetValue", "_tidyAttrDiscard", "_tidyAttrGetId", "_tidyAttrGetById", "_tidyAttrIsEvent", "_tidyErrorCodeAsKey", "_tidyErrorCodeFromKey", "_getErrorCodeList", "_getNextErrorCode", "_tidySetLanguage", "_prvTidytidySetLanguageSetByUser", "_tidyGetLanguage", "_prvTidytidyGetLanguage", "_prvTidytidyLocalizedStringN", "_tidyDefaultString", "_prvTidytidyDefaultString", "_getStringKeyList", "_prvTidygetStringKeyList", "_getNextStringKey", "_prvTidygetNextStringKey", "_getWindowsLanguageList", "_prvTidygetWindowsLanguageList", "_getNextWindowsLanguage", "_prvTidygetNextWindowsLanguage", "_TidyLangWindowsName", "_prvTidyTidyLangWindowsName", "_TidyLangPosixName", "_prvTidyTidyLangPosixName", "_getInstalledLanguageList", "_prvTidygetInstalledLanguageList", "_getNextInstalledLanguage", "_prvTidygetNextInstalledLanguage", "_prvTidytidyNormalizedLocaleName", "_prvTidytidyTestLanguage", "_locale_charset", "_mbrtowc", "_wcrtomb", "_libiconv_open_into", "_libiconvctl", "_libiconvlist", "_iconv_canonicalize", "_initxmlDefaultSAXHandler", "_inithtmlDefaultSAXHandler", "_initdocbDefaultSAXHandler", "_xmlAddDtdEntity", "___xmlSimpleError", "_xmlHashCreateDict", "_xmlHashAddEntry", "_xmlAddDocEntity", "_xmlNewEntity", "_xmlDictLookup", "_xmlGetParameterEntity", "_xmlGetDtdEntity", "_xmlEncodeAttributeEntities", "_xmlStrstr", "_xmlEncodeSpecialChars", "_xmlCreateEntitiesTable", "_xmlHashCreate", "_xmlFreeEntitiesTable", "_xmlHashFree", "_xmlCopyEntitiesTable", "_xmlHashCopy", "_xmlDumpEntityDecl", "_xmlBufferWriteChar", "_xmlBufferWriteCHAR", "_xmlBufferWriteQuotedString", "_xmlBufferCCat", "_xmlBufferAdd", "_xmlDumpEntitiesTable", "_xmlFreeNodeList", "_xmlDictOwns", "_isolat1ToUTF8", "_UTF8Toisolat1", "_xmlDetectCharEncoding", "_xmlCleanupEncodingAliases", "_xmlGetEncodingAlias", "_xmlAddEncodingAlias", "_xmlDelEncodingAlias", "_xmlGetCharEncodingName", "_xmlNewCharEncodingHandler", "_xmlInitCharEncodingHandlers", "___xmlRaiseError", "_xmlRegisterCharEncodingHandler", "_UTF8ToHtml", "_xmlCleanupCharEncodingHandlers", "_xmlGetCharEncodingHandler", "_iconv_open", "_iconv_close", "_xmlCharEncFirstLineInt", "_xmlBufferGrow", "_xmlBufferShrink", "_xmlCharEncFirstLine", "_xmlCharEncFirstLineInput", "_xmlBufUse", "_xmlBufAvail", "_xmlBufGrow", "_xmlBufEnd", "_xmlBufContent", "_xmlBufShrink", "_xmlBufAddLen", "_xmlCharEncInput", "_xmlCharEncInFunc", "_xmlCharEncOutput", "_xmlGetUTF8Char", "_xmlBufGetAllocationScheme", "_xmlCharEncOutFunc", "_xmlByteConsumed", "_iconv", "_xmlGenericErrorDefaultFunc", "_initGenericErrorDefaultFunc", "_vfprintf", "_xmlParserPrintFileInfo", "_xmlParserPrintFileContext", "_xmlGetProp", "_xmlParserValidityWarning", "_xmlParserValidityError", "_xmlParserError", "_xmlParserWarning", "_xmlCtxtGetLastError", "_xmlCtxtResetLastError", "_xmlCheckVersion", "_xmlErrMemory", "___xmlErrEncoding", "_xmlIsLetter", "_xmlParserInputRead", "_xmlParserInputGrow", "_xmlParserInputShrink", "_xmlNextChar", "_xmlCurrentChar", "_xmlStringCurrentChar", "_xmlCopyCharMultiByte", "_xmlCopyChar", "_xmlSwitchEncoding", "_xmlSwitchInputEncoding", "_xmlSwitchToEncoding", "_xmlFreeInputStream", "_xmlNewInputStream", "_xmlCharInRange", "_xmlParserInputBufferGrow", "_xmlParserInputBufferRead", "_xmlBufIsEmpty", "_xmlBufCreate", "_xmlBufResetInput", "_xmlNewEntityInputStream", "_xmlLoadExternalEntity", "_xmlNewStringInputStream", "_xmlParserInputBufferCreateFilename", "___xmlLoaderErr", "_xmlCheckHTTPInput", "_xmlParserGetDirectory", "_xmlInitParserCtxt", "_xmlDefaultSAXHandlerInit", "_xmlDictCreate", "_xmlDictSetLimit", "_xmlSAXVersion", "_inputPop", "_xmlSAX2IgnorableWhitespace", "_xmlInitNodeInfoSeq", "_xmlDictFree", "_xmlHashDefaultDeallocator", "_xmlCatalogFreeLocal", "_xmlNewParserCtxt", "_xmlClearParserCtxt", "_xmlCtxtReset", "_xmlClearNodeInfoSeq", "_xmlParserFindNodeInfo", "_xmlParserFindNodeInfoIndex", "_xmlParserAddNodeInfo", "_xmlHasFeature", "_xmlCheckLanguageID", "_inputPush", "_nodePush", "_nodePop", "_namePush", "_namePop", "_xmlSkipBlankChars", "_xmlParsePEReference", "_xmlPopInput", "_xmlParseName", "_xmlPushInput", "_xmlParseTextDecl", "_xmlInputReadCallbackNop", "_xmlParseCharRef", "_xmlParserHandlePEReference", "_xmlStringLenDecodeEntities", "_xmlSAX2GetEntity", "_xmlStringDecodeEntities", "_xmlSplitQName", "_xmlParseNmtoken", "_xmlParseEntityValue", "_xmlParseAttValue", "_xmlParseEntityRef", "_xmlParseSystemLiteral", "_xmlParsePubidLiteral", "_xmlParseCharData", "_xmlIsMixedElement", "_xmlGetLastChild", "_xmlNodeIsText", "_xmlParseExternalID", "_xmlParseComment", "_xmlParsePITarget", "_xmlParsePI", "_xmlCatalogGetDefaults", "_xmlCatalogAddLocal", "_xmlParseNotationDecl", "_xmlParseEntityDecl", "_xmlNewDtd", "_xmlSAX2EntityDecl", "_xmlParseDefaultDecl", "_xmlParseNotationType", "_xmlCreateEnumeration", "_xmlFreeEnumeration", "_xmlParseEnumerationType", "_xmlParseEnumeratedType", "_xmlParseAttributeType", "_xmlParseAttributeListDecl", "_xmlHashLookup2", "_xmlHashUpdateEntry2", "_xmlHashAddEntry2", "_xmlParseElementMixedContentDecl", "_xmlNewDocElementContent", "_xmlFreeDocElementContent", "_xmlParseElementChildrenContentDecl", "_xmlParseElementContentDecl", "_xmlParseElementDecl", "_xmlParseMarkupDecl", "_xmlParseVersionInfo", "_xmlCharStrdup", "_xmlParseEncodingDecl", "_xmlParseVersionNum", "_xmlParseEncName", "_xmlStrcasecmp", "_xmlParseExternalSubset", "_xmlParseReference", "_xmlDictReference", "_xmlParseContent", "_xmlValidateElement", "_xmlParseDocTypeDecl", "_xmlParseAttribute", "_xmlParseStartTag", "_xmlParseEndTag", "_xmlParseCDSect", "_xmlValidateRoot", "_xmlParseElement", "_xmlParseSDDecl", "_xmlParseXMLDecl", "_xmlParseMisc", "_xmlInitThreads", "_xmlInitGlobals", "_xmlInitMemory", "_xmlInitializeDict", "_xmlRegisterDefaultInputCallbacks", "_xmlRegisterDefaultOutputCallbacks", "_htmlInitAutoClose", "_htmlDefaultSAXHandlerInit", "_xmlXPathInit", "_xmlHashScanFull", "_xmlParseExtParsedEnt", "_xmlBufGetInputBase", "_xmlStrcasestr", "_xmlParserInputBufferPush", "_xmlBufSetInputBaseCur", "_xmlCreateIOParserCtxt", "_xmlParserInputBufferCreateIO", "_xmlIOParseDTD", "_xmlSAXParseDTD", "_xmlParseDTD", "_xmlParseCtxtExternalEntity", "_xmlBuildURI", "_xmlParseExternalEntity", "_xmlParseBalancedChunkMemoryRecover", "_xmlParseInNodeContext", "___htmlParseContent", "_xmlParserInputBufferCreateMem", "_xmlSAX2EndElement", "_xmlSAX2StartElement", "_xmlSAXParseEntity", "_xmlCreateURLParserCtxt", "_xmlParseEntity", "_xmlCreateEntityParserCtxt", "_xmlSAXParseFileWithData", "_xmlSAXParseFile", "_xmlRecoverDoc", "_xmlSAXParseDoc", "_xmlParseFile", "_xmlRecoverFile", "_xmlSetupParserForBuffer", "_xmlSAXUserParseFile", "_xmlSAXParseMemoryWithData", "_xmlSAXParseMemory", "_xmlParseMemory", "_xmlRecoverMemory", "_xmlSAXUserParseMemory", "_xmlCreateDocParserCtxt", "_xmlParseDoc", "_xmlSetEntityReferenceFunc", "_xmlCleanupParser", "_xmlCatalogCleanup", "_xmlDictCleanup", "_xmlCleanupInputCallbacks", "_xmlCleanupOutputCallbacks", "_xmlSchemaCleanupTypes", "_xmlCleanupGlobals", "_xmlCleanupThreads", "_xmlCleanupMemory", "_xmlCtxtResetPush", "_xmlReadDoc", "_xmlReadFd", "_xmlParserInputBufferCreateFd", "_xmlReadIO", "_xmlCtxtReadDoc", "_xmlCtxtReadFile", "_xmlCtxtReadMemory", "_xmlCtxtReadFd", "_xmlCtxtReadIO", "_xmlHashQLookup2", "_xmlBuildQName", "_xmlHashRemoveEntry2", "_xmlValidateNCName", "_xmlValidateNMToken", "_xmlSetBufferAllocationScheme", "_xmlGetBufferAllocationScheme", "_xmlFreeNsList", "_xmlFreeDtd", "_xmlFreeNotationTable", "_xmlFreeElementTable", "_xmlFreeAttributeTable", "_xmlHashRemoveEntry", "_xmlFreeIDTable", "_xmlFreeRefTable", "_xmlStringLenGetNodeList", "_xmlBufCreateSize", "_xmlBufSetAllocationScheme", "_xmlBufAdd", "_xmlBufCat", "_xmlBufDetach", "_xmlStringGetNodeList", "_xmlBufFree", "_xmlNodeAddContentLen", "_xmlNodeListGetRawString", "_xmlCheckUTF8", "_xmlIsID", "_xmlNewNsPropEatName", "_xmlFreePropList", "_xmlRemoveProp", "_xmlNewDocPI", "_xmlNewNodeEatName", "_xmlNewDocNodeEatName", "_xmlNewDocRawNode", "_xmlNewCharRef", "_xmlNewTextLen", "_xmlNewDocTextLen", "_xmlSetListDoc", "_xmlAddSibling", "_xmlChildElementCount", "_xmlFirstElementChild", "_xmlLastElementChild", "_xmlPreviousElementSibling", "_xmlNextElementSibling", "_xmlCopyNamespace", "_xmlCopyProp", "_xmlCopyDtd", "_xmlDocCopyNodeList", "_xmlCopyNodeList", "_xmlCopyNotationTable", "_xmlCopyElementTable", "_xmlCopyAttributeTable", "_xmlGetDtdQElementDesc", "_xmlGetDtdQAttrDesc", "_xmlNodeSetLang", "_xmlNodeGetLang", "_xmlNodeSetSpacePreserve", "_xmlNodeGetSpacePreserve", "_xmlNodeSetName", "_xmlNodeSetBase", "_xmlPathToURI", "_xmlNodeBufGetContent", "_xmlBufFromBuffer", "_xmlBufGetNodeContent", "_xmlBufBackToBuffer", "_xmlTextMerge", "_xmlGetDtdAttrDesc", "_xmlGetNoNsProp", "_xmlUnsetProp", "_xmlUnsetNsProp", "_xmlBufferCreateSize", "_xmlBufferDetach", "_xmlBufferCreateStatic", "_xmlBufferSetAllocationScheme", "_xmlBufferEmpty", "_xmlBufferDump", "_xmlBufferResize", "_xmlBufferAddHead", "_xmlBufferCat", "_xmlGetDocCompressMode", "_xmlSetDocCompressMode", "_xmlGetCompressMode", "_xmlSetCompressMode", "_xmlDOMWrapNewCtxt", "_xmlDOMWrapFreeCtxt", "_xmlDOMWrapRemoveNode", "_xmlDOMWrapCloneNode", "_xmlDOMWrapAdoptNode", "___xmlRandom", "_xmlHashAddEntry3", "_xmlHashUpdateEntry", "_xmlHashUpdateEntry3", "_xmlHashLookup3", "_xmlHashQLookup", "_xmlHashQLookup3", "_xmlStrQEqual", "_xmlHashScan3", "_xmlHashScanFull3", "_xmlHashRemoveEntry3", "_xmlListCreate", "_xmlListSearch", "_xmlListReverseSearch", "_xmlListInsert", "_xmlListAppend", "_xmlListDelete", "_xmlListClear", "_xmlListRemoveFirst", "_xmlListRemoveLast", "_xmlListRemoveAll", "_xmlListEmpty", "_xmlListFront", "_xmlListEnd", "_xmlListSize", "_xmlListPopFront", "_xmlListPopBack", "_xmlListPushFront", "_xmlListPushBack", "_xmlLinkGetData", "_xmlListReverse", "_xmlListSort", "_xmlListCopy", "_xmlListDup", "_xmlListMerge", "_xmlListWalk", "_xmlListReverseWalk", "___xmlIOErr", "_xmlNormalizeWindowsPath", "_xmlPopInputCallbacks", "_xmlCheckFilename", "_xmlFileMatch", "_xmlFileOpen", "_xmlStrncasecmp", "_xmlFileRead", "_xmlFileClose", "_xmlRegisterInputCallbacks", "_xmlRegisterOutputCallbacks", "_xmlAllocOutputBufferInternal", "___xmlParserInputBufferCreateFilename", "___xmlOutputBufferCreateFilename", "_xmlParserInputBufferCreateFile", "_xmlOutputBufferCreateFile", "_xmlOutputBufferCreateIO", "_xmlParserInputBufferCreateStatic", "_xmlBufCreateStatic", "_xmlOutputBufferCreateFd", "_xmlOutputBufferWrite", "_xmlOutputBufferWriteEscape", "_xmlOutputBufferWriteString", "_xmlNoNetExternalEntityLoader", "_xmlCatalogLocalResolve", "_xmlCatalogResolve", "_xmlCatalogLocalResolveURI", "_xmlCatalogResolveURI", "_xmlMallocBreakpoint", "_xmlMallocLoc", "_xmlNewMutex", "_xmlMutexLock", "_xmlMutexUnlock", "_xmlMemoryDump", "_xmlMallocAtomicLoc", "_xmlMemMalloc", "_xmlReallocLoc", "_xmlMemRealloc", "_xmlMemFree", "_xmlMemStrdupLoc", "_xmlMemoryStrdup", "_xmlMemUsed", "_xmlMemBlocks", "_xmlMemDisplayLast", "_xmlMemDisplay", "_xmlMemShow", "_xmlFreeMutex", "_xmlMemSetup", "_xmlMemGet", "_xmlGcMemSetup", "_xmlGcMemGet", "_xmlParseURIRaw", "_xmlSaveUri", "_xmlPrintURI", "_fputs", "_xmlNormalizeURIPath", "_xmlURIEscape", "_xmlBuildRelativeURI", "_xmlValidBuildContentModel", "_xmlSnprintfElementContent", "_xmlRegexpIsDeterminist", "_xmlNewAutomata", "_xmlAutomataGetInitState", "_xmlAutomataSetFinalState", "_xmlAutomataCompile", "_xmlFreeAutomata", "_xmlAutomataNewTransition", "_xmlAutomataNewEpsilon", "_xmlAutomataNewState", "_xmlNewElementContent", "_xmlCopyDocElementContent", "_xmlCopyElementContent", "_xmlFreeElementContent", "_xmlSprintfElementContent", "_xmlAddElementDecl", "_xmlRegFreeRegexp", "_xmlDumpElementDecl", "_xmlDumpElementTable", "_xmlCopyEnumeration", "_xmlAddAttributeDecl", "_xmlDumpAttributeDecl", "_xmlDumpAttributeTable", "_xmlAddNotationDecl", "_xmlDumpNotationDecl", "_xmlDumpNotationTable", "_xmlAddRef", "_xmlIsRef", "_xmlRemoveRef", "_xmlGetRefs", "_xmlGetDtdElementDesc", "_xmlGetDtdNotationDesc", "_xmlValidateNotationUse", "_xmlValidateNameValue", "_xmlValidateNamesValue", "_xmlValidateNmtokenValue", "_xmlValidateNmtokensValue", "_xmlValidateNotationDecl", "_xmlValidateAttributeValue", "_xmlValidCtxtNormalizeAttributeValue", "_xmlValidNormalizeAttributeValue", "_xmlValidateAttributeDecl", "_xmlValidateElementDecl", "_xmlValidateOneAttribute", "_xmlValidateOneNamespace", "_xmlValidatePushElement", "_xmlRegExecPushString", "_xmlRegNewExecCtxt", "_xmlValidatePushCData", "_xmlValidatePopElement", "_xmlRegFreeExecCtxt", "_xmlValidateOneElement", "_xmlValidateDocumentFinal", "_xmlValidateDtd", "_xmlValidateDtdFinal", "_xmlValidGetPotentialChildren", "_xmlValidGetValidElements", "_htmlTagLookup", "_htmlAutoCloseTag", "_htmlIsAutoClosed", "_htmlIsScriptAttribute", "_htmlEntityLookup", "_htmlEntityValueLookup", "_htmlEncodeEntities", "_htmlNewDocNoDtD", "_htmlNewDoc", "_htmlParseEntityRef", "_htmlParseCharRef", "_htmlParseElement", "_htmlNewParserCtxt", "_htmlParseChunk", "_htmlCreatePushParserCtxt", "_htmlSAXParseDoc", "_htmlParseDoc", "_htmlSAXParseFile", "_htmlParseFile", "_htmlHandleOmittedElem", "_htmlElementAllowedHere", "_htmlElementStatusHere", "_htmlAttrAllowed", "_htmlNodeStatus", "_htmlCtxtReset", "_htmlReadDoc", "_htmlReadFile", "_htmlReadMemory", "_htmlReadFd", "_htmlReadIO", "_htmlCtxtReadDoc", "_htmlCtxtReadFile", "_htmlCtxtReadMemory", "_htmlCtxtReadFd", "_htmlCtxtReadIO", "_htmlSetMetaEncoding", "_htmlIsBooleanAttr", "_htmlNodeDump", "_htmlNodeDumpFileFormat", "_htmlDocContentDumpFormatOutput", "_xmlNsListDumpOutput", "_htmlNodeDumpFile", "_xmlBufWriteQuotedString", "_htmlDocDumpMemory", "_htmlDocContentDumpOutput", "_xmlBufCCat", "_htmlNodeDumpOutput", "_htmlDocDump", "_htmlSaveFile", "_htmlSaveFileEnc", "_xmlDebugDumpString", "_xmlDebugDumpAttr", "_xmlDebugDumpEntities", "_xmlDebugDumpAttrList", "_xmlDebugDumpOneNode", "_xmlDebugDumpNode", "_xmlDebugDumpNodeList", "_xmlDebugDumpDocumentHead", "_xmlDebugDumpDocument", "_xmlDebugDumpDTD", "_xmlDebugCheckDocument", "_xmlLsCountNode", "_xmlLsOneNode", "_xmlBoolToText", "_xmlShellPrintXPathError", "_xmlShellPrintNode", "_xmlShellPrintXPathResult", "_xmlShellList", "_xmlShellBase", "_xmlShellDir", "_xmlShellCat", "_xmlShellLoad", "_xmlShellWrite", "_xmlShellSave", "_xmlShellValidate", "_xmlShellDu", "_xmlShellPwd", "_xmlShell", "_libxml_domnode_binary_insertion_sort", "_libxml_domnode_tim_sort", "_xmlXPathIsNaN", "_xmlXPathIsInf", "_xmlXPathErr", "_xmlXPatherror", "_xmlXPathFreeCompExpr", "_xmlFreePatternList", "_xmlXPtrFreeLocationSet", "_xmlXPathDebugDumpObject", "_xmlDocDump", "_xmlElemDump", "___small_fprintf", "_xmlXPathDebugDumpCompExpr", "_xmlXPathContextSetCache", "_xmlXPathPopBoolean", "_xmlXPathCastToBoolean", "_xmlXPathFreeNodeSet", "_xmlXPathNodeSetFreeNs", "_xmlXPathPopNumber", "_xmlXPathCastToNumber", "_xmlXPathStringEvalNumber", "_xmlXPathPopString", "_xmlXPathCastNumberToString", "_xmlXPathPopNodeSet", "_xmlXPathPopExternal", "_xmlXPathOrderDocElems", "_xmlXPathCmpNodes", "_xmlXPathNodeSetSort", "_xmlXPathNodeSetCreate", "_xmlStrPrintf", "_xmlXPathNodeSetContains", "_xmlXPathNodeSetAddNs", "_xmlXPathNodeSetAdd", "_xmlXPathNodeSetAddUnique", "_xmlXPathNodeSetMerge", "_xmlXPathNodeSetDel", "_xmlXPathNodeSetRemove", "_xmlXPathNewValueTree", "_xmlXPathNewNodeSetList", "_xmlXPathWrapNodeSet", "_xmlXPathFreeNodeSetList", "_xmlXPathDifference", "_xmlXPathIntersection", "_xmlXPathDistinctSorted", "_xmlXPathCastNodeToString", "_xmlXPathDistinct", "_xmlXPathHasSameNodes", "_xmlXPathNodeLeadingSorted", "_xmlXPathNodeLeading", "_xmlXPathLeadingSorted", "_xmlXPathLeading", "_xmlXPathNodeTrailingSorted", "_xmlXPathNodeTrailing", "_xmlXPathTrailingSorted", "_xmlXPathTrailing", "_xmlXPathRegisterFunc", "_xmlXPathRegisterFuncLookup", "_xmlXPathFunctionLookup", "_xmlXPathFunctionLookupNS", "_xmlXPathRegisteredFuncsCleanup", "_xmlXPathRegisterVariable", "_xmlXPathRegisterVariableNS", "_xmlXPathRegisterVariableLookup", "_xmlXPathVariableLookup", "_xmlXPathVariableLookupNS", "_xmlXPathObjectCopy", "_xmlXPathRegisteredVariablesCleanup", "_xmlXPathNsLookup", "_xmlXPathRegisteredNsCleanup", "_xmlXPathNewFloat", "_xmlXPathWrapString", "_xmlXPathNewCString", "_xmlXPathWrapCString", "_xmlXPathWrapExternal", "_xmlXPtrLocationSetMerge", "_xmlXPathCastBooleanToString", "_xmlXPathCastNodeSetToString", "_xmlXPathConvertString", "_xmlXPathCastBooleanToNumber", "_xmlXPathCastStringToNumber", "_xmlXPathCastNodeToNumber", "_xmlXPathCastNodeSetToNumber", "_xmlXPathConvertNumber", "_xmlXPathCastNumberToBoolean", "_xmlXPathCastStringToBoolean", "_xmlXPathCastNodeSetToBoolean", "_xmlXPathConvertBoolean", "_xmlXPathRegisterAllFunctions", "_xmlXPathBooleanFunction", "_xmlXPathCeilingFunction", "_xmlXPathCountFunction", "_xmlXPathConcatFunction", "_xmlXPathContainsFunction", "_xmlXPathIdFunction", "_xmlXPathFalseFunction", "_xmlXPathFloorFunction", "_xmlXPathLastFunction", "_xmlXPathLangFunction", "_xmlXPathLocalNameFunction", "_xmlXPathNotFunction", "_xmlXPathNamespaceURIFunction", "_xmlXPathNormalizeFunction", "_xmlXPathNumberFunction", "_xmlXPathPositionFunction", "_xmlXPathRoundFunction", "_xmlXPathStringFunction", "_xmlXPathStringLengthFunction", "_xmlXPathStartsWithFunction", "_xmlXPathSubstringFunction", "_xmlXPathSubstringBeforeFunction", "_xmlXPathSubstringAfterFunction", "_xmlXPathSumFunction", "_xmlXPathTrueFunction", "_xmlXPathTranslateFunction", "_xmlXPathNewParserContext", "_xmlXPathFreeParserContext", "_xmlXPathEqualValues", "_xmlXPathNotEqualValues", "_xmlXPathCompareValues", "_xmlXPathValueFlipSign", "_xmlXPathAddValues", "_xmlXPathSubValues", "_xmlXPathMultValues", "_xmlXPathDivValues", "_xmlXPathModValues", "_xmlXPathNextSelf", "_xmlXPathNextChild", "_xmlXPathNextDescendant", "_xmlXPathNextDescendantOrSelf", "_xmlXPathNextParent", "_xmlXPathNextAncestor", "_xmlXPathNextAncestorOrSelf", "_xmlXPathNextFollowingSibling", "_xmlXPathNextPrecedingSibling", "_xmlXPathNextFollowing", "_xmlXPathNextPreceding", "_xmlXPathNextNamespace", "_xmlXPathNextAttribute", "_xmlXPathRoot", "_xmlUTF8Strloc", "_xmlUTF8Strpos", "_xmlUTF8Strsize", "_xmlXPathParseNCName", "_xmlXPathParseName", "_xmlXPathIsNodeType", "_xmlXPathEvalPredicate", "_xmlXPathEvaluatePredicateResult", "_xmlXPathCtxtCompile", "_xmlPatterncompile", "_xmlPatternStreamable", "_xmlFreePattern", "_xmlXPathCompile", "_xmlXPathCompiledEval", "_xmlXPathCompiledEvalToBoolean", "_xmlXPathEvalExpr", "_xmlXPathSetContextNode", "_xmlXPathNodeEval", "_xmlPatternMaxDepth", "_xmlPatternMinDepth", "_xmlPatternFromRoot", "_xmlPatternGetStreamCtxt", "_xmlStreamWantsAnyNode", "_xmlStreamPush", "_xmlStreamPop", "_xmlStreamPushNode", "_xmlFreeStreamCtxt", "_xmlXPtrLocationSetCreate", "_xmlXPtrNewRange", "_xmlXPtrLocationSetAdd", "_xmlXPtrNewRangeNodeObject", "_xmlXPtrWrapLocationSet", "_xmlXPtrNewRangePoints", "_xmlXPtrNewRangePointNode", "_xmlXPtrNewRangeNodePoint", "_xmlXPtrNewRangeNodes", "_xmlXPtrNewCollapsedRange", "_xmlXPtrLocationSetDel", "_xmlXPtrLocationSetRemove", "_xmlXPtrNewLocationSetNodes", "_xmlXPtrNewLocationSetNodeSet", "_xmlXPtrNewContext", "_xmlXPtrEval", "_xmlXPtrBuildNodeList", "_xmlXPtrRangeToFunction", "_xmlXPtrAdvanceNode", "_xmlXPtrEvalRangePredicate", "_xmlXIncludeNewContext", "_xmlXIncludeFreeContext", "_xmlXIncludeSetFlags", "_xmlXIncludeProcessTreeFlagsData", "_xmlXIncludeProcessFlagsData", "_xmlBufLength", "_xmlXIncludeProcess", "_xmlXIncludeProcessTreeFlags", "_xmlXIncludeProcessTree", "_xmlXIncludeProcessNode", "_xmlFreeCatalog", "_xmlConvertSGMLCatalog", "_xmlParseCatalogFile", "_xmlLoadSGMLSuperCatalog", "_xmlLoadACatalog", "_xmlACatalogResolveSystem", "_xmlACatalogResolvePublic", "_xmlACatalogResolve", "_xmlACatalogResolveURI", "_xmlACatalogDump", "_xmlACatalogAdd", "_xmlACatalogRemove", "_xmlNewCatalog", "_xmlCatalogIsEmpty", "_xmlInitializeCatalog", "_xmlLoadCatalog", "_xmlLoadCatalogs", "_xmlSaveFormatFileTo", "_xmlNewRMutex", "_xmlRMutexLock", "_xmlRMutexUnlock", "_xmlFreeRMutex", "_xmlCatalogResolveSystem", "_xmlCatalogResolvePublic", "_xmlCatalogDump", "_xmlCatalogAdd", "_xmlCatalogRemove", "_xmlCatalogConvert", "_xmlCatalogSetDefaults", "_xmlCatalogSetDefaultPrefer", "_xmlCatalogSetDebug", "_xmlCatalogGetSystem", "_xmlCatalogGetPublic", "_xmlGetThreadId", "___xmlGlobalInitMutexDestroy", "_xmlInitializeGlobalState", "_xmlSAX2ExternalSubset", "_xmlSAX2InternalSubset", "_xmlSAX2GetParameterEntity", "_xmlSAX2ResolveEntity", "_xmlSAX2HasExternalSubset", "_xmlSAX2HasInternalSubset", "_xmlSAX2IsStandalone", "_xmlSAX2ElementDecl", "_xmlSAX2AttributeDecl", "_xmlSAX2CDataBlock", "_xmlSAX2Characters", "_xmlSAX2Reference", "_xmlSAX2EndDocument", "_xmlSAX2StartDocument", "_xmlSAX2SetDocumentLocator", "_xmlSAX2UnparsedEntityDecl", "_xmlSAX2NotationDecl", "_xmlSAX2ProcessingInstruction", "_xmlSAX2Comment", "_xmlSAX2GetColumnNumber", "_xmlSAX2GetLineNumber", "_xmlSAX2GetSystemId", "_xmlSAX2GetPublicId", "_xmlThrDefSetGenericErrorFunc", "_xmlThrDefSetStructuredErrorFunc", "_xmlRegisterNodeDefault", "_xmlThrDefRegisterNodeDefault", "_xmlDeregisterNodeDefault", "_xmlThrDefDeregisterNodeDefault", "_xmlThrDefParserInputBufferCreateFilenameDefault", "_xmlThrDefOutputBufferCreateFilenameDefault", "___docbDefaultSAXHandler", "___htmlDefaultSAXHandler", "___xmlLastError", "___oldXMLWDcompatibility", "___xmlBufferAllocScheme", "_xmlThrDefBufferAllocScheme", "___xmlDefaultBufferSize", "_xmlThrDefDefaultBufferSize", "___xmlDefaultSAXHandler", "___xmlDefaultSAXLocator", "___xmlDoValidityCheckingDefaultValue", "_xmlThrDefDoValidityCheckingDefaultValue", "___xmlGenericError", "___xmlStructuredError", "___xmlGenericErrorContext", "___xmlStructuredErrorContext", "___xmlGetWarningsDefaultValue", "_xmlThrDefGetWarningsDefaultValue", "___xmlIndentTreeOutput", "_xmlThrDefIndentTreeOutput", "___xmlTreeIndentString", "_xmlThrDefTreeIndentString", "___xmlKeepBlanksDefaultValue", "_xmlThrDefKeepBlanksDefaultValue", "___xmlLineNumbersDefaultValue", "_xmlThrDefLineNumbersDefaultValue", "___xmlLoadExtDtdDefaultValue", "_xmlThrDefLoadExtDtdDefaultValue", "___xmlParserDebugEntities", "_xmlThrDefParserDebugEntities", "___xmlParserVersion", "___xmlPedanticParserDefaultValue", "_xmlThrDefPedanticParserDefaultValue", "___xmlSaveNoEmptyTags", "_xmlThrDefSaveNoEmptyTags", "___xmlSubstituteEntitiesDefaultValue", "_xmlThrDefSubstituteEntitiesDefaultValue", "___xmlRegisterNodeDefaultValue", "___xmlDeregisterNodeDefaultValue", "___xmlParserInputBufferCreateFilenameValue", "___xmlOutputBufferCreateFilenameValue", "___xmlGlobalInitMutexLock", "___xmlGlobalInitMutexUnlock", "_xmlGetGlobalState", "_xmlIsMainThread", "_xmlLockLibrary", "_xmlUnlockLibrary", "_xmlC14NExecute", "_xmlC14NDocDumpMemory", "_xmlC14NDocSave", "_xmlStrsub", "_xmlStrVPrintf", "_xmlUTF8Size", "_xmlUTF8Charcmp", "_xmlEscapeFormatString", "_xmlBufEmpty", "_xmlBufInflate", "_xmlBufDump", "_xmlBufErase", "_xmlBufResize", "_xmlBufAddHead", "_xmlBufWriteCHAR", "_xmlBufWriteChar", "_xmlBufMergeBuffer", "_xmlRegExecPushString2", "_xmlRegExecNextValues", "_xmlRegExecErrInfo", "_xmlRegexpPrint", "_xmlRegexpCompile", "_xmlRegexpExec", "_xmlAutomataSetFlags", "_xmlAutomataNewTransition2", "_xmlAutomataNewNegTrans", "_xmlAutomataNewCountTrans2", "_xmlAutomataNewCountTrans", "_xmlAutomataNewOnceTrans2", "_xmlAutomataNewOnceTrans", "_xmlAutomataNewAllTrans", "_xmlAutomataNewCounter", "_xmlAutomataNewCountedTrans", "_xmlAutomataNewCounterTrans", "_xmlAutomataIsDeterminist", "_puts", "_xmlUCSIsCatNd", "_xmlUCSIsCatP", "_xmlUCSIsCatZ", "_xmlUCSIsCatC", "_xmlUCSIsCatL", "_xmlUCSIsCatLu", "_xmlUCSIsCatLl", "_xmlUCSIsCatLt", "_xmlUCSIsCatLm", "_xmlUCSIsCatLo", "_xmlUCSIsCatM", "_xmlUCSIsCatMn", "_xmlUCSIsCatMc", "_xmlUCSIsCatMe", "_xmlUCSIsCatN", "_xmlUCSIsCatNl", "_xmlUCSIsCatNo", "_xmlUCSIsCatPc", "_xmlUCSIsCatPd", "_xmlUCSIsCatPs", "_xmlUCSIsCatPe", "_xmlUCSIsCatPi", "_xmlUCSIsCatPf", "_xmlUCSIsCatPo", "_xmlUCSIsCatZs", "_xmlUCSIsCatZl", "_xmlUCSIsCatZp", "_xmlUCSIsCatS", "_xmlUCSIsCatSm", "_xmlUCSIsCatSc", "_xmlUCSIsCatSk", "_xmlUCSIsCatSo", "_xmlUCSIsCatCc", "_xmlUCSIsCatCf", "_xmlUCSIsCatCo", "_xmlUCSIsBlock", "_xmlSchemaNewFacet", "_xmlSchemaFreeWildcard", "_xmlSchemaFreeFacet", "_xmlSchemaFreeType", "_xmlSchemaFreeValue", "_xmlSchemaDump", "_xmlSchemaNewDocParserCtxt", "_xmlSchemaCheckFacet", "_xmlSchemaGetBuiltInType", "_xmlSchemaValidatePredefinedType", "_xmlSchemaCollapseString", "_xmlSchemaWhiteSpaceReplace", "_xmlSchemaNewQNameValue", "_xmlSchemaValPredefTypeNodeNoNorm", "_xmlSchemaValueAppend", "_xmlSchemaInitTypes", "_xmlSchemaSetParserStructuredErrors", "_xmlSchemaSetValidStructuredErrors", "_xmlSchemaGetParserErrors", "_xmlSchemaValidateSetFilename", "_xmlSchemaIsValid", "_xmlSchemaGetValidErrors", "_xmlSchemaValidCtxtGetOptions", "_xmlSchemaValidateOneElement", "_xmlSchemaSAXPlug", "_xmlSchemaSAXUnplug", "_xmlSchemaValidateSetLocator", "_xmlSchemaValidateStream", "_xmlSchemaValidateFile", "_xmlSchemaValidCtxtGetParserCtxt", "_xmlSchemaValPredefTypeNode", "_xmlSchemaGetPredefinedType", "_xmlSchemaIsBuiltInTypeFacet", "_xmlSchemaCompareValues", "_xmlSchemaGetValType", "_xmlSchemaValueGetAsString", "_xmlSchemaCompareValuesWhtsp", "_xmlSchemaValueGetNext", "_xmlSchemaNewNOTATIONValue", "_xmlSchemaValidateLengthFacetWhtsp", "_xmlSchemaValidateFacetWhtsp", "_xmlSchemaValidateListSimpleTypeFacet", "_xmlTextReaderLookupNamespace", "_xmlSchemaGetFacetValueAsULong", "_xmlSchemaGetCanonValue", "_xmlSchemaValueGetAsBoolean", "_xmlStreamPushAttr", "_xmlSchemaCopyValue", "_xmlSchemaNewStringValue", "_xmlSchemaGetBuiltInListSimpleTypeItemType", "_xmlSchemaValidateFacet", "_xmlSchemaValidateLengthFacet", "_xmlSchemaGetCanonValueWhtsp", "_xmlUCSIsAegeanNumbers", "_xmlUCSIsAlphabeticPresentationForms", "_xmlUCSIsArabic", "_xmlUCSIsArabicPresentationFormsA", "_xmlUCSIsArabicPresentationFormsB", "_xmlUCSIsArmenian", "_xmlUCSIsArrows", "_xmlUCSIsBasicLatin", "_xmlUCSIsBengali", "_xmlUCSIsBlockElements", "_xmlUCSIsBopomofo", "_xmlUCSIsBopomofoExtended", "_xmlUCSIsBoxDrawing", "_xmlUCSIsBraillePatterns", "_xmlUCSIsBuhid", "_xmlUCSIsByzantineMusicalSymbols", "_xmlUCSIsCJKCompatibility", "_xmlUCSIsCJKCompatibilityForms", "_xmlUCSIsCJKCompatibilityIdeographs", "_xmlUCSIsCJKCompatibilityIdeographsSupplement", "_xmlUCSIsCJKRadicalsSupplement", "_xmlUCSIsCJKSymbolsandPunctuation", "_xmlUCSIsCJKUnifiedIdeographs", "_xmlUCSIsCJKUnifiedIdeographsExtensionA", "_xmlUCSIsCJKUnifiedIdeographsExtensionB", "_xmlUCSIsCherokee", "_xmlUCSIsCombiningDiacriticalMarks", "_xmlUCSIsCombiningDiacriticalMarksforSymbols", "_xmlUCSIsCombiningHalfMarks", "_xmlUCSIsCombiningMarksforSymbols", "_xmlUCSIsControlPictures", "_xmlUCSIsCurrencySymbols", "_xmlUCSIsCypriotSyllabary", "_xmlUCSIsCyrillic", "_xmlUCSIsCyrillicSupplement", "_xmlUCSIsDeseret", "_xmlUCSIsDevanagari", "_xmlUCSIsDingbats", "_xmlUCSIsEnclosedAlphanumerics", "_xmlUCSIsEnclosedCJKLettersandMonths", "_xmlUCSIsEthiopic", "_xmlUCSIsGeneralPunctuation", "_xmlUCSIsGeometricShapes", "_xmlUCSIsGeorgian", "_xmlUCSIsGothic", "_xmlUCSIsGreek", "_xmlUCSIsGreekExtended", "_xmlUCSIsGreekandCoptic", "_xmlUCSIsGujarati", "_xmlUCSIsGurmukhi", "_xmlUCSIsHalfwidthandFullwidthForms", "_xmlUCSIsHangulCompatibilityJamo", "_xmlUCSIsHangulJamo", "_xmlUCSIsHangulSyllables", "_xmlUCSIsHanunoo", "_xmlUCSIsHebrew", "_xmlUCSIsHighPrivateUseSurrogates", "_xmlUCSIsHighSurrogates", "_xmlUCSIsHiragana", "_xmlUCSIsIPAExtensions", "_xmlUCSIsIdeographicDescriptionCharacters", "_xmlUCSIsKanbun", "_xmlUCSIsKangxiRadicals", "_xmlUCSIsKannada", "_xmlUCSIsKatakana", "_xmlUCSIsKatakanaPhoneticExtensions", "_xmlUCSIsKhmer", "_xmlUCSIsKhmerSymbols", "_xmlUCSIsLao", "_xmlUCSIsLatin1Supplement", "_xmlUCSIsLatinExtendedA", "_xmlUCSIsLatinExtendedB", "_xmlUCSIsLatinExtendedAdditional", "_xmlUCSIsLetterlikeSymbols", "_xmlUCSIsLimbu", "_xmlUCSIsLinearBIdeograms", "_xmlUCSIsLinearBSyllabary", "_xmlUCSIsLowSurrogates", "_xmlUCSIsMalayalam", "_xmlUCSIsMathematicalAlphanumericSymbols", "_xmlUCSIsMathematicalOperators", "_xmlUCSIsMiscellaneousMathematicalSymbolsA", "_xmlUCSIsMiscellaneousMathematicalSymbolsB", "_xmlUCSIsMiscellaneousSymbols", "_xmlUCSIsMiscellaneousSymbolsandArrows", "_xmlUCSIsMiscellaneousTechnical", "_xmlUCSIsMongolian", "_xmlUCSIsMusicalSymbols", "_xmlUCSIsMyanmar", "_xmlUCSIsNumberForms", "_xmlUCSIsOgham", "_xmlUCSIsOldItalic", "_xmlUCSIsOpticalCharacterRecognition", "_xmlUCSIsOriya", "_xmlUCSIsOsmanya", "_xmlUCSIsPhoneticExtensions", "_xmlUCSIsPrivateUse", "_xmlUCSIsPrivateUseArea", "_xmlUCSIsRunic", "_xmlUCSIsShavian", "_xmlUCSIsSinhala", "_xmlUCSIsSmallFormVariants", "_xmlUCSIsSpacingModifierLetters", "_xmlUCSIsSpecials", "_xmlUCSIsSuperscriptsandSubscripts", "_xmlUCSIsSupplementalArrowsA", "_xmlUCSIsSupplementalArrowsB", "_xmlUCSIsSupplementalMathematicalOperators", "_xmlUCSIsSupplementaryPrivateUseAreaA", "_xmlUCSIsSupplementaryPrivateUseAreaB", "_xmlUCSIsSyriac", "_xmlUCSIsTagalog", "_xmlUCSIsTagbanwa", "_xmlUCSIsTags", "_xmlUCSIsTaiLe", "_xmlUCSIsTaiXuanJingSymbols", "_xmlUCSIsTamil", "_xmlUCSIsTelugu", "_xmlUCSIsThaana", "_xmlUCSIsThai", "_xmlUCSIsTibetan", "_xmlUCSIsUgaritic", "_xmlUCSIsUnifiedCanadianAboriginalSyllabics", "_xmlUCSIsVariationSelectors", "_xmlUCSIsVariationSelectorsSupplement", "_xmlUCSIsYiRadicals", "_xmlUCSIsYiSyllables", "_xmlUCSIsYijingHexagramSymbols", "_xmlUCSIsCatCs", "_xmlUCSIsCat", "_xmlTextReaderRead", "_xmlTextReaderExpand", "_xmlTextReaderPreserve", "_xmlTextReaderReadState", "_xmlTextReaderNext", "_xmlTextReaderReadInnerXml", "_xmlTextReaderReadOuterXml", "_xmlTextReaderReadString", "_xmlTextReaderNextSibling", "_xmlNewTextReader", "_xmlNewTextReaderFilename", "_xmlFreeTextReader", "_xmlTextReaderClose", "_xmlTextReaderGetAttributeNo", "_xmlTextReaderGetAttribute", "_xmlTextReaderGetAttributeNs", "_xmlTextReaderGetRemainder", "_xmlPatternMatch", "_xmlRelaxNGValidatePopElement", "_xmlRelaxNGValidatePushCData", "_xmlRelaxNGValidatePushElement", "_xmlRelaxNGValidateFullElement", "_xmlTextReaderMoveToAttributeNo", "_xmlTextReaderMoveToAttribute", "_xmlTextReaderMoveToAttributeNs", "_xmlTextReaderMoveToFirstAttribute", "_xmlTextReaderMoveToNextAttribute", "_xmlTextReaderMoveToElement", "_xmlTextReaderReadAttributeValue", "_xmlTextReaderConstEncoding", "_xmlTextReaderAttributeCount", "_xmlTextReaderNodeType", "_xmlTextReaderIsEmptyElement", "_xmlTextReaderLocalName", "_xmlTextReaderName", "_xmlTextReaderConstLocalName", "_xmlTextReaderConstName", "_xmlDictQLookup", "_xmlTextReaderPrefix", "_xmlTextReaderConstPrefix", "_xmlTextReaderNamespaceUri", "_xmlTextReaderConstNamespaceUri", "_xmlTextReaderBaseUri", "_xmlTextReaderConstBaseUri", "_xmlTextReaderDepth", "_xmlTextReaderHasAttributes", "_xmlTextReaderHasValue", "_xmlTextReaderValue", "_xmlTextReaderConstValue", "_xmlTextReaderIsDefault", "_xmlTextReaderQuoteChar", "_xmlTextReaderXmlLang", "_xmlTextReaderConstXmlLang", "_xmlTextReaderConstString", "_xmlTextReaderNormalization", "_xmlTextReaderSetParserProp", "_xmlTextReaderGetParserProp", "_xmlTextReaderGetParserLineNumber", "_xmlTextReaderGetParserColumnNumber", "_xmlTextReaderCurrentNode", "_xmlTextReaderPreservePattern", "_xmlTextReaderCurrentDoc", "_xmlTextReaderRelaxNGSetSchema", "_xmlRelaxNGSetValidStructuredErrors", "_xmlTextReaderSetSchema", "_xmlTextReaderSchemaValidateCtxt", "_xmlTextReaderSchemaValidate", "_xmlTextReaderRelaxNGValidateCtxt", "_xmlTextReaderRelaxNGValidate", "_xmlTextReaderIsNamespaceDecl", "_xmlTextReaderConstXmlVersion", "_xmlTextReaderStandalone", "_xmlTextReaderLocatorLineNumber", "_xmlTextReaderLocatorBaseURI", "_xmlTextReaderSetErrorHandler", "_xmlTextReaderSetStructuredErrorHandler", "_xmlTextReaderIsValid", "_xmlTextReaderGetErrorHandler", "_xmlTextReaderSetup", "_xmlTextReaderByteConsumed", "_xmlReaderWalker", "_xmlReaderForDoc", "_xmlReaderForMemory", "_xmlReaderForFile", "_xmlReaderForFd", "_xmlReaderForIO", "_xmlReaderNewWalker", "_xmlReaderNewDoc", "_xmlReaderNewMemory", "_xmlReaderNewFile", "_xmlReaderNewFd", "_xmlReaderNewIO", "_xmlRelaxParserSetFlag", "_xmlRelaxNGInitTypes", "_xmlRelaxNGNewDocParserCtxt", "_xmlRelaxNGGetParserErrors", "_xmlRelaxNGSetParserStructuredErrors", "_xmlRelaxNGDump", "_xmlRelaxNGDumpTree", "_xmlRelaxNGGetValidErrors", "___xmlInitializeDict", "_rand_r", "_xmlDictCreateSub", "_xmlDictExists", "_xmlDictSize", "_xmlDictGetUsage", "_xmlSAX2StartElementNs", "_xmlSAX2EndElementNs", "_xmlSAXDefaultVersion", "_xmlSAX2InitDefaultSAXHandler", "_xmlSAX2InitHtmlDefaultSAXHandler", "_xmlSAX2InitDocbDefaultSAXHandler", "_docbDefaultSAXHandlerInit", "_xmlIsBaseChar", "_xmlIsBlank", "_xmlIsChar", "_xmlIsCombining", "_xmlIsDigit", "_xmlIsExtender", "_xmlIsIdeographic", "_xmlIsPubidChar", "_xmlIsXHTML", "_xmlBufDumpNotationTable", "_xmlBufDumpElementDecl", "_xmlBufDumpAttributeDecl", "_xmlBufDumpEntityDecl", "_xmlSaveToFd", "_xmlSaveToFilename", "_xmlSaveToBuffer", "_xmlSaveToIO", "_xmlSaveDoc", "_xmlSaveTree", "_xmlSaveFlush", "_xmlSaveClose", "_xmlSaveSetEscape", "_xmlSaveSetAttrEscape", "_xmlBufAttrSerializeTxtContent", "_xmlAttrSerializeTxtContent", "_xmlBufNodeDump", "_xmlDocDumpFormatMemoryEnc", "_xmlDocDumpMemory", "_xmlDocFormatDump", "_xmlSaveFileTo", "_xmlSaveFileEnc", "_xmlSaveFormatFile", "_sqlite3_status64", "_sqlite3_mutex_enter", "_sqlite3_mutex_leave", "_sqlite3_status", "_sqlite3_db_status", "_sqlite3_msize", "_sqlite3_vfs_find", "_sqlite3_initialize", "_sqlite3_mutex_free", "_sqlite3_vfs_register", "_sqlite3_vfs_unregister", "_sqlite3_mutex_alloc", "_sqlite3_mutex_try", "_sqlite3_release_memory", "_sqlite3_memory_alarm", "_sqlite3_soft_heap_limit64", "_sqlite3_memory_used", "_sqlite3_soft_heap_limit", "_sqlite3_hard_heap_limit64", "_sqlite3_memory_highwater", "_sqlite3_malloc", "_sqlite3_malloc64", "_sqlite3_realloc", "_sqlite3_realloc64", "_sqlite3_str_vappendf", "_sqlite3_str_append", "___lttf2", "___multf3", "___addtf3", "___gttf2", "___getf2", "___divtf3", "_sqlite3_str_appendchar", "_sqlite3_str_appendall", "_sqlite3_str_appendf", "_sqlite3_value_int64", "___fixtfsi", "___floatsitf", "___subtf3", "_sqlite3_str_reset", "_sqlite3_str_finish", "_sqlite3_str_errcode", "_sqlite3_str_length", "_sqlite3_str_value", "_sqlite3_str_new", "_sqlite3_vmprintf", "_sqlite3_vsnprintf", "_sqlite3_log", "_sqlite3_randomness", "_sqlite3_stricmp", "_sqlite3_strnicmp", "_sqlite3_os_init", "_sqlite3_os_end", "_sqlite3_serialize", "_sqlite3_column_int", "_sqlite3_file_control", "_sqlite3_deserialize", "_sqlite3_database_file_object", "_sqlite3_enable_shared_cache", "_sqlite3_backup_remaining", "_sqlite3_backup_pagecount", "_sqlite3_expired", "_sqlite3_value_blob", "_sqlite3_value_bytes16", "_sqlite3_value_subtype", "_sqlite3_value_pointer", "_sqlite3_value_text16", "_sqlite3_value_text16be", "_sqlite3_value_text16le", "_sqlite3_value_encoding", "_sqlite3_value_nochange", "_sqlite3_value_frombind", "_sqlite3_value_dup", "_sqlite3_value_free", "_sqlite3_result_blob", "_sqlite3_result_error_toobig", "_sqlite3_result_error_nomem", "_sqlite3_result_blob64", "_sqlite3_result_error16", "_sqlite3_result_int64", "_sqlite3_result_pointer", "_sqlite3_result_subtype", "_sqlite3_result_text64", "_sqlite3_result_text16", "_sqlite3_result_text16be", "_sqlite3_result_text16le", "_sqlite3_result_value", "_sqlite3_result_zeroblob", "_sqlite3_result_zeroblob64", "_sqlite3_result_error_code", "_sqlite3_context_db_handle", "_sqlite3_vtab_nochange", "_sqlite3_vtab_in_first", "_sqlite3_vtab_in_next", "_sqlite3_get_auxdata", "_sqlite3_set_auxdata", "_sqlite3_aggregate_count", "_sqlite3_column_bytes16", "_sqlite3_column_value", "_sqlite3_column_text16", "_sqlite3_column_name16", "_sqlite3_column_decltype16", "_sqlite3_bind_blob64", "_sqlite3_bind_int64", "_sqlite3_bind_pointer", "_sqlite3_bind_text64", "_sqlite3_bind_text16", "_sqlite3_bind_value", "_sqlite3_bind_zeroblob", "_sqlite3_bind_zeroblob64", "_sqlite3_bind_parameter_name", "_sqlite3_transfer_bindings", "_sqlite3_stmt_isexplain", "_sqlite3_stmt_busy", "_sqlite3_next_stmt", "_sqlite3_stmt_status", "_sqlite3_expanded_sql", "_sqlite3_value_numeric_type", "_sqlite3_blob_reopen", "_sqlite3_strglob", "_sqlite3_strlike", "_sqlite3_auto_extension", "_sqlite3_cancel_auto_extension", "_sqlite3_reset_auto_extension", "_sqlite3_prepare", "_sqlite3_prepare_v3", "_sqlite3_prepare16", "_sqlite3_prepare16_v2", "_sqlite3_prepare16_v3", "_sqlite3_get_table", "_sqlite3_free_table", "_sqlite3_create_module", "_sqlite3_create_module_v2", "_sqlite3_drop_modules", "_sqlite3_declare_vtab", "_sqlite3_vtab_on_conflict", "_sqlite3_vtab_config", "_sqlite3_vtab_collation", "_sqlite3_vtab_in", "_sqlite3_vtab_rhs_value", "_sqlite3_vtab_distinct", "_sqlite3_keyword_name", "_sqlite3_keyword_count", "_sqlite3_keyword_check", "_sqlite3_complete", "_sqlite3_complete16", "_sqlite3_threadsafe", "_sqlite3_shutdown", "_sqlite3_config", "_sqlite3_db_mutex", "_sqlite3_db_release_memory", "_sqlite3_db_cacheflush", "_sqlite3_set_last_insert_rowid", "_sqlite3_changes64", "_sqlite3_total_changes64", "_sqlite3_total_changes", "_sqlite3_txn_state", "_sqlite3_close_v2", "_sqlite3_busy_handler", "_sqlite3_progress_handler", "_sqlite3_interrupt", "_sqlite3_is_interrupted", "_sqlite3_create_function_v2", "_sqlite3_create_window_function", "_sqlite3_create_function16", "_sqlite3_overload_function", "_sqlite3_trace", "_sqlite3_trace_v2", "_sqlite3_profile", "_sqlite3_commit_hook", "_sqlite3_update_hook", "_sqlite3_rollback_hook", "_sqlite3_autovacuum_pages", "_sqlite3_wal_autocheckpoint", "_sqlite3_wal_hook", "_sqlite3_wal_checkpoint", "_sqlite3_wal_checkpoint_v2", "_sqlite3_error_offset", "_sqlite3_errmsg16", "_sqlite3_system_errno", "_sqlite3_errstr", "_sqlite3_limit", "_sqlite3_open", "_sqlite3_free_filename", "_sqlite3_open16", "_sqlite3_create_collation_v2", "_sqlite3_create_collation16", "_sqlite3_collation_needed", "_sqlite3_collation_needed16", "_sqlite3_global_recover", "_sqlite3_get_autocommit", "_sqlite3_thread_cleanup", "_sqlite3_table_column_metadata", "_sqlite3_sleep", "_sqlite3_test_control", "_sqlite3_create_filename", "_sqlite3_uri_parameter", "_sqlite3_uri_key", "_sqlite3_uri_boolean", "_sqlite3_uri_int64", "_sqlite3_filename_database", "_sqlite3_filename_journal", "_sqlite3_filename_wal", "_sqlite3_db_name", "_sqlite3_db_filename", "_sqlite3_db_readonly", "_sqlite3_compileoption_used", "_sqlite3_compileoption_get", "_sqlite3_rtree_geometry_callback", "_sqlite3_rtree_query_callback", "_sqlite3_sourceid", "_pthread_mutexattr_init", "_pthread_mutexattr_settype", "_pthread_mutex_init", "_pthread_mutexattr_destroy", "_pthread_mutex_destroy", "_pthread_mutex_lock", "_pthread_mutex_trylock", "_pthread_mutex_unlock", "_utimes", "_pthread_join", "___floatditf", "_pthread_create", "_posix_fallocate", "_fchown", "_trunc", "_sqrt", "_adler32_z", "_adler32", "_adler32_combine", "_adler32_combine64", "_get_crc_table", "_crc32_z", "_crc32_combine64", "_crc32_combine", "_crc32_combine_gen64", "_crc32_combine_gen", "_crc32_combine_op", "_deflateInit_", "_zcalloc", "_zcfree", "_deflateReset", "_deflateResetKeep", "_deflateSetDictionary", "_deflateGetDictionary", "__tr_init", "_deflateSetHeader", "_deflatePending", "_deflatePrime", "__tr_flush_bits", "_deflateParams", "__tr_align", "__tr_stored_block", "_deflateTune", "_deflateBound", "__tr_flush_block", "_deflateCopy", "_inflate_fast", "_inflateResetKeep", "_inflateReset", "_inflateReset2", "_inflateInit_", "_inflatePrime", "_inflate_table", "_inflateGetDictionary", "_inflateSetDictionary", "_inflateGetHeader", "_inflateSync", "_inflateSyncPoint", "_inflateCopy", "_inflateUndermine", "_inflateValidate", "_inflateMark", "_inflateCodesUsed", "__tr_tally", "_zlibVersion", "_zlibCompileFlags", "_waitid", "_times", "_getdate", "_stime", "_clock_getcpuclockid", "_getpwnam_r", "_getpwuid_r", "_setpwent", "_endpwent", "_getpwent", "_getgrgid", "_getgrnam_r", "_getgrgid_r", "_getgrent", "_endgrent", "_setgrent", "_execve", "_vfork", "_posix_spawn", "_setgroups", "_sigaltstack", "___dlsym", "___syscall_uname", "___syscall_setpgid", "___syscall_sync", "___syscall_getsid", "___syscall_getpgid", "___syscall_getpid", "___syscall_getppid", "___syscall_linkat", "___syscall_getgroups32", "___syscall_setsid", "___syscall_umask", "___syscall_setrlimit", "___syscall_getrusage", "___syscall_getpriority", "___syscall_setpriority", "___syscall_setdomainname", "___syscall_getuid32", "___syscall_getgid32", "___syscall_geteuid32", "___syscall_getegid32", "___syscall_getresuid32", "___syscall_getresgid32", "___syscall_pause", "___syscall_madvise", "___syscall_mlock", "___syscall_munlock", "___syscall_mprotect", "___syscall_mremap", "___syscall_mlockall", "___syscall_munlockall", "___syscall_prlimit64", "___syscall_ugetrlimit", "___syscall_setsockopt", "___syscall_acct", "___syscall_mincore", "___syscall_pipe2", "___syscall_pselect6", "___syscall_recvmmsg", "___syscall_sendmmsg", "___syscall_shutdown", "___syscall_socketpair", "___syscall_wait4", "__Exit", "___get_tp", "___emscripten_environ_constructor", "_emscripten_builtin_malloc", "___fmodeflags", "___mo_lookup", "___overflow", "___randname", "___wasi_syscall_ret", "___uflow", "_alphasort64", "___nl_langinfo_l", "_fabs", "____cxa_finalize", "____cxa_atexit", "___atexit", "___lock", "___unlock", "___libc_calloc", "___cxa_atexit", "___cxa_finalize", "_clearerr_unlocked", "_clock_nanosleep", "_copysignl", "_scalbn", "_floor", "_creat64", "___libc_free", "___libc_malloc", "_dprintf", "___wasi_fd_is_valid", "_emscripten_get_heap_size", "_emscripten_builtin_memcpy", "___memset", "_emscripten_builtin_memset", "___syscall_munmap", "___syscall_msync", "___syscall_mmap2", "___clock", "___time", "___clock_getres", "___gettimeofday", "_dysize", "_clock", "_clock_getres", "_execv", "_execvpe", "_fabsl", "_feof_unlocked", "__IO_feof_unlocked", "_ferror_unlocked", "__IO_ferror_unlocked", "_fflush_unlocked", "_emscripten_futex_wake", "_fgets", "_fgets_unlocked", "_fileno_unlocked", "_fmodl", "_mbtowc", "_towupper", "_towlower", "_wctype", "_iswctype", "_fopen64", "_vfiprintf", "___small_vfprintf", "_fputs_unlocked", "_fread_unlocked", "_frexp", "_fseeko64", "_fstatat", "_fstat64", "_fstatat64", "_ftello64", "_ftruncate64", "_futimesat", "_fwrite_unlocked", "__IO_getc", "_getpriority", "_getservbyname_r", "_getservbyport_r", "_glob64", "_globfree64", "_wctomb", "___intscan", "___isalnum_l", "_isalnum_l", "___isalpha_l", "_isalpha_l", "_isblank", "___isblank_l", "_isblank_l", "___iscntrl_l", "_iscntrl_l", "___isdigit_l", "_isdigit_l", "___isgraph_l", "_isgraph_l", "___islower_l", "_islower_l", "___isprint_l", "_isprint_l", "___ispunct_l", "_ispunct_l", "___isspace_l", "_isspace_l", "___isupper_l", "_isupper_l", "_iswalnum", "___iswalnum_l", "_iswalnum_l", "_iswalpha", "___iswalpha_l", "_iswalpha_l", "_iswblank", "___iswblank_l", "_iswblank_l", "_iswcntrl", "___iswcntrl_l", "_iswcntrl_l", "_iswdigit", "_iswgraph", "_iswlower", "_iswprint", "_iswpunct", "_iswspace", "_iswupper", "_iswxdigit", "___iswctype_l", "___wctype_l", "_iswctype_l", "_wctype_l", "___iswdigit_l", "_iswdigit_l", "___iswgraph_l", "_iswgraph_l", "___iswlower_l", "_iswlower_l", "___iswprint_l", "_iswprint_l", "___iswpunct_l", "_iswpunct_l", "_wcschr", "___iswspace_l", "_iswspace_l", "___iswupper_l", "_iswupper_l", "___iswxdigit_l", "_iswxdigit_l", "___isxdigit_l", "_isxdigit_l", "_raise", "___nl_langinfo", "_nl_langinfo_l", "_emscripten_has_threading_support", "_emscripten_num_logical_cores", "_emscripten_force_num_logical_cores", "_emscripten_futex_wait", "_emscripten_is_main_runtime_thread", "_emscripten_main_thread_process_queued_calls", "_emscripten_current_thread_process_queued_calls", "__emscripten_yield", "__emscripten_check_timers", "_pthread_mutex_consistent", "_pthread_barrier_init", "_pthread_barrier_destroy", "_pthread_barrier_wait", "_pthread_getspecific", "_pthread_setspecific", "_pthread_cond_wait", "_pthread_cond_signal", "_pthread_cond_broadcast", "_pthread_cond_init", "_pthread_cond_destroy", "_pthread_atfork", "_pthread_cancel", "_pthread_testcancel", "___pthread_detach", "_pthread_equal", "_pthread_mutexattr_setprotocol", "_pthread_mutexattr_setpshared", "_pthread_condattr_init", "_pthread_condattr_destroy", "_pthread_condattr_setclock", "_pthread_condattr_setpshared", "_pthread_getattr_np", "_pthread_setcancelstate", "_pthread_setcanceltype", "_pthread_rwlock_init", "_pthread_rwlock_destroy", "_pthread_rwlock_rdlock", "_pthread_rwlock_tryrdlock", "_pthread_rwlock_timedrdlock", "_pthread_rwlock_wrlock", "_pthread_rwlock_trywrlock", "_pthread_rwlock_timedwrlock", "_pthread_rwlock_unlock", "_pthread_rwlockattr_init", "_pthread_rwlockattr_destroy", "_pthread_rwlockattr_setpshared", "_pthread_spin_init", "_pthread_spin_destroy", "_pthread_spin_lock", "_pthread_spin_trylock", "_pthread_spin_unlock", "_sem_init", "_sem_post", "_sem_wait", "_sem_trywait", "_sem_destroy", "_emscripten_thread_sleep", "_pthread_mutex_timedlock", "_emscripten_builtin_pthread_create", "_emscripten_builtin_pthread_join", "_pthread_key_delete", "_pthread_key_create", "_pthread_once", "_pthread_cond_timedwait", "_pthread_exit", "_emscripten_builtin_pthread_detach", "_pthread_detach", "_thrd_detach", "_lseek64", "_lstat64", "_mbsinit", "_mkostemps", "_mkostemps64", "_mkstemp64", "_timegm", "_emscripten_builtin_free", "_emscripten_builtin_mmap", "_mmap64", "_emscripten_builtin_munmap", "_setpriority", "_open64", "_tcsetattr", "_posix_fallocate64", "_iprintf", "___small_printf", "_emscripten_main_runtime_thread_id", "___sig_is_blocked", "_pthread_sigmask", "_sigpending", "_qsort_r", "_sigismember", "_sigorset", "_sigandset", "_readdir64", "_emscripten_get_sbrk_ptr", "_sbrk", "_brk", "_scalbnl", "_scandir64", "___getitimer", "_bsd_signal", "___sysv_signal", "_vsprintf", "_vsiprintf", "___small_sprintf", "___small_vsprintf", "_vsscanf", "___isoc99_sscanf", "_stat64", "_fstatvfs", "_statfs", "_fstatfs", "_statvfs64", "_statfs64", "_fstatvfs64", "_fstatfs64", "_stpcpy", "_stpncpy", "___strcasecmp_l", "_strcasecmp_l", "_strchrnul", "___strcoll_l", "_strcoll_l", "___strerror_l", "_strerror_l", "___xpg_strerror_r", "___strncasecmp_l", "_strncasecmp_l", "_strtof", "___trunctfsf2", "___extendsftf2", "___netf2", "___floatunsitf", "___eqtf2", "___letf2", "_strtold", "_strtoull", "_strtoimax", "_strtoumax", "___strtol_internal", "___strtoul_internal", "___strtoll_internal", "___strtoull_internal", "___strtoimax_internal", "___strtoumax_internal", "_setlogmask", "_vdprintf", "_vsyslog", "___tolower_l", "_tolower_l", "___toupper_l", "_toupper_l", "___towupper_l", "___towlower_l", "_towupper_l", "_towlower_l", "_utimensat", "___vfprintf_internal", "_vfscanf", "___isoc99_vfscanf", "_vsniprintf", "___small_vsnprintf", "___isoc99_vsscanf", "_wcslen", "___libc_realloc", "_realloc_in_place", "_memalign", "_posix_memalign", "_valloc", "_pvalloc", "_mallinfo", "_mallopt", "_malloc_trim", "_malloc_usable_size", "_malloc_footprint", "_malloc_max_footprint", "_malloc_footprint_limit", "_malloc_set_footprint_limit", "_independent_calloc", "_independent_comalloc", "_bulk_free", "___ashlti3", "___lshrti3", "___fe_getround", "___fe_raise_inexact", "___unordtf2", "onRuntimeInitialized" ].forEach((prop => {
 if (!Object.getOwnPropertyDescriptor(Module["ready"], prop)) {
  Object.defineProperty(Module["ready"], prop, {
   get: () => abort("You are getting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),
   set: () => abort("You are setting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")
  });
 }
}));

Module.WeakerMap = Module.WeakerMap || class WeakerMap {
 constructor(entries) {
  this.registry = new FinReg((held => this.delete(held)));
  this.map = new Map;
  entries && entries.forEach((([key, value]) => this.set(key, value)));
 }
 get size() {
  return this.map.size;
 }
 clear() {
  this.map.clear();
 }
 delete(key) {
  this.map.delete(key);
 }
 [Symbol.iterator]() {
  const mapIterator = this.map[Symbol.iterator]();
  return {
   next: () => {
    do {
     const entry = mapIterator.next();
     if (entry.done) {
      return {
       done: true
      };
     }
     const [key, ref] = entry.value;
     const value = ref.deref();
     if (!value) {
      this.map.delete(key);
      continue;
     }
     return {
      done: false,
      value: [ key, value ]
     };
    } while (true);
   }
  };
 }
 entries() {
  return {
   [Symbol.iterator]: () => this[Symbol.iterator]()
  };
 }
 forEach(callback) {
  for (const [k, v] of this) {
   callback(v, k, this);
  }
 }
 get(key) {
  if (!this.has(key)) {
   return;
  }
  return this.map.get(key).deref();
 }
 has(key) {
  if (!this.map.has(key)) {
   return false;
  }
  const result = this.map.get(key).deref();
  if (!result) {
   this.map.delete(key);
  }
  return result;
 }
 keys() {
  return [ ...this ].map((v => v[0]));
 }
 set(key, value) {
  if (typeof value !== "function" && typeof value !== "object") {
   throw new Error("WeakerMap values must be objects.");
  }
  if (this.map.has(key)) {
   this.registry.unregister(this.get(key));
  }
  this.registry.register(value, key, value);
  return this.map.set(key, new wRef(value));
 }
 values() {
  return [ ...this ].map((v => v[1]));
 }
};

const FinReg = globalThis.FinalizationRegistry || class {
 register() {}
 unregister() {}
};

const wRef = globalThis.WeakRef || class {
 constructor(val) {
  this.val = val;
 }
 deref() {
  return this.val;
 }
};

Module.UniqueIndex = Module.UniqueIndex || class UniqueIndex {
 constructor() {
  this.byObject = new WeakMap;
  this.byInteger = new Module.WeakerMap;
  this.id = 0;
  Object.defineProperty(this, "clear", {
   configurable: false,
   writable: false,
   value: () => {
    this.byInteger.clear();
   }
  });
  Object.defineProperty(this, "add", {
   configurable: false,
   writable: false,
   value: callback => {
    if (this.byObject.has(callback)) {
     const id = this.byObject.get(callback);
     return id;
    }
    const newid = ++this.id;
    this.byObject.set(callback, newid);
    this.byInteger.set(newid, callback);
    return newid;
   }
  });
  Object.defineProperty(this, "has", {
   configurable: false,
   writable: false,
   value: obj => {
    if (this.byObject.has(obj)) {
     const id = this.byObject.get(obj);
     return this.byInteger.has(id);
    }
   }
  });
  Object.defineProperty(this, "hasId", {
   configurable: false,
   writable: false,
   value: address => {
    if (this.byInteger.has(address)) {
     return this.byInteger.get(address);
    }
   }
  });
  Object.defineProperty(this, "get", {
   configurable: false,
   writable: false,
   value: address => {
    if (this.byInteger.has(address)) {
     return this.byInteger.get(address);
    }
   }
  });
  Object.defineProperty(this, "getId", {
   configurable: false,
   writable: false,
   value: obj => {
    if (this.byObject.has(obj)) {
     return this.byObject.get(obj);
    }
   }
  });
  Object.defineProperty(this, "remove", {
   configurable: false,
   writable: false,
   value: address => {
    const obj = this.byInteger.get(address);
    if (obj) {
     this.byObject.delete(obj);
     this.byInteger.delete(address);
    }
   }
  });
 }
};

const zvalSym = Symbol("ZVAL");

Module.marshalObject = zvalPtr => {
 const nativeTarget = Module.ccall("vrzno_expose_zval_is_target", "number", [ "number" ], [ zvalPtr ]);
 if (nativeTarget && Module.targets.hasId(nativeTarget)) {
  return Module.targets.get(nativeTarget);
 }
 const proxy = new Proxy({}, {
  ownKeys: target => {
   const keysLoc = Module.ccall("vrzno_expose_object_keys", "number", [ "number" ], [ zvalPtr ]);
   const keyJson = UTF8ToString(keysLoc);
   const keys = JSON.parse(keyJson);
   _free(keysLoc);
   keys.push(...Reflect.ownKeys(target));
   return keys;
  },
  has: (target, prop) => {
   if (typeof prop === "symbol") {
    return false;
   }
   const len = lengthBytesUTF8(prop) + 1;
   const namePtr = _malloc(len);
   stringToUTF8(prop, namePtr, len);
   const retPtr = Module.ccall("vrzno_expose_property_pointer", "number", [ "number", "number" ], [ zvalPtr, namePtr ]);
   return !!retPtr;
  },
  get: (target, prop, receiver) => {
   if (typeof prop === "symbol") {
    return target[prop];
   }
   const len = lengthBytesUTF8(prop) + 1;
   const namePtr = _malloc(len);
   stringToUTF8(prop, namePtr, len);
   const retPtr = Module.ccall("vrzno_expose_property_pointer", "number", [ "number", "number" ], [ zvalPtr, namePtr ]);
   const proxy = Module.zvalToJS(retPtr);
   if (proxy && [ "function", "object" ].includes(typeof proxy)) {
    Module.zvalMap.set(proxy, retPtr);
    Module._zvalMap.set(retPtr, proxy);
   }
   _free(namePtr);
   if (proxy == null) {
    return Reflect.get(target, prop);
   }
   return proxy;
  },
  getOwnPropertyDescriptor: (target, prop) => {
   if (typeof prop === "symbol" || prop in target) {
    return Reflect.getOwnPropertyDescriptor(target, prop);
   }
   const len = lengthBytesUTF8(prop) + 1;
   const namePtr = _malloc(len);
   stringToUTF8(prop, namePtr, len);
   const retPtr = Module.ccall("vrzno_expose_property_pointer", "number", [ "number", "number" ], [ zvalPtr, namePtr ]);
   const proxy = Module.zvalToJS(retPtr);
   if (proxy && [ "function", "object" ].includes(typeof proxy)) {
    Module.zvalMap.set(proxy, retPtr);
    Module._zvalMap.set(retPtr, proxy);
   }
   _free(namePtr);
   return {
    configurable: true,
    enumerable: true,
    value: target[prop]
   };
  }
 });
 Object.defineProperty(proxy, zvalSym, {
  value: `PHP_@{${zvalPtr}}`
 });
 Module.zvalMap.set(proxy, zvalPtr);
 Module._zvalMap.set(zvalPtr, proxy);
 if (!Module.targets.has(proxy)) {
  Module.targets.add(proxy);
  Module.ccall("vrzno_expose_inc_zrefcount", "number", [ "number" ], [ zvalPtr ]);
  Module.fRegistry.register(proxy, zvalPtr, proxy);
 }
 return proxy;
};

Module.callableToJs = Module.callableToJs || (funcPtr => {
 if (Module.callables.has(funcPtr)) {
  return Module.callables.get(funcPtr);
 }
 const wrapped = (...args) => {
  let paramPtrs = [], paramsPtr = null;
  if (args.length) {
   paramsPtr = Module.ccall("vrzno_expose_create_params", "number", [ "number" ], [ args.length ]);
   paramPtrs = args.map((a => Module.jsToZval(a)));
   paramPtrs.forEach(((paramPtr, i) => {
    Module.ccall("vrzno_expose_set_param", "number", [ "number", "number", "number" ], [ paramsPtr, i, paramPtr ]);
   }));
  }
  const zvalPtr = Module.ccall("vrzno_exec_callback", "number", [ "number", "number", "number" ], [ funcPtr, paramsPtr, args.length ]);
  if (args.length) {
   paramPtrs.forEach(((p, i) => {
    if (!args[i] || ![ "function", "object" ].includes(typeof args[i])) {
     Module.ccall("vrzno_expose_efree", "number", [ "number" ], [ p ]);
    }
   }));
   Module.ccall("vrzno_expose_efree", "number", [ "number", "number" ], [ paramsPtr, false ]);
  }
  if (zvalPtr) {
   const result = Module.zvalToJS(zvalPtr);
   if (!result || ![ "function", "object" ].includes(typeof result)) {
    Module.ccall("vrzno_expose_efree", "number", [ "number" ], [ zvalPtr ]);
   }
   return result;
  }
 };
 Object.defineProperty(wrapped, "name", {
  value: `PHP_@{${funcPtr}}`
 });
 Module.ccall("vrzno_expose_inc_crefcount", "number", [ "number" ], [ funcPtr ]);
 Module.callables.set(funcPtr, wrapped);
 return wrapped;
});

Module.zvalToJS = Module.zvalToJS || (zvalPtr => {
 if (Module._zvalMap.has(zvalPtr)) {
  return Module._zvalMap.get(zvalPtr);
 }
 const IS_UNDEF = 0;
 const IS_NULL = 1;
 const IS_FALSE = 2;
 const IS_TRUE = 3;
 const IS_LONG = 4;
 const IS_DOUBLE = 5;
 const IS_STRING = 6;
 const IS_ARRAY = 7;
 const IS_OBJECT = 8;
 const callable = Module.ccall("vrzno_expose_callable", "number", [ "number" ], [ zvalPtr ]);
 let valPtr;
 if (callable) {
  const nativeTarget = Module.ccall("vrzno_expose_zval_is_target", "number", [ "number" ], [ zvalPtr ]);
  if (nativeTarget) {
   return Module.targets.get(nativeTarget);
  }
  const wrapped = nativeTarget ? Module.targets.get(nativeTarget) : Module.callableToJs(callable);
  if (!Module.targets.has(wrapped)) {
   Module.targets.add(wrapped);
   Module.ccall("vrzno_expose_inc_zrefcount", "number", [ "number" ], [ zvalPtr ]);
  }
  Module.zvalMap.set(wrapped, zvalPtr);
  Module._zvalMap.set(zvalPtr, wrapped);
  Module.fRegistry.register(wrapped, zvalPtr, wrapped);
  return wrapped;
 }
 const type = Module.ccall("vrzno_expose_type", "number", [ "number" ], [ zvalPtr ]);
 switch (type) {
 case IS_UNDEF:
  return undefined;
  break;

 case IS_NULL:
  return null;
  break;

 case IS_TRUE:
  return true;
  break;

 case IS_FALSE:
  return false;
  break;

 case IS_LONG:
  return Module.ccall("vrzno_expose_long", "number", [ "number" ], [ zvalPtr ]);
  break;

 case IS_DOUBLE:
  valPtr = Module.ccall("vrzno_expose_double", "number", [ "number" ], [ zvalPtr ]);
  if (!valPtr) {
   return null;
  }
  return getValue(valPtr, "double");
  break;

 case IS_STRING:
  valPtr = Module.ccall("vrzno_expose_string", "number", [ "number" ], [ zvalPtr ]);
  if (!valPtr) {
   return null;
  }
  return UTF8ToString(valPtr);
  break;

 case IS_OBJECT:
  const proxy = Module.marshalObject(zvalPtr);
  return proxy;
  break;

 default:
  return null;
  break;
 }
});

Module.jsToZval = Module.jsToZval || (value => {
 let zvalPtr;
 if (typeof value === "undefined") {
  zvalPtr = Module.ccall("vrzno_expose_create_undef", "number", [], []);
 } else if (value === null) {
  zvalPtr = Module.ccall("vrzno_expose_create_null", "number", [], []);
 } else if ([ true, false ].includes(value)) {
  zvalPtr = Module.ccall("vrzno_expose_create_bool", "number", [ "number" ], [ value ]);
 } else if (value && [ "function", "object" ].includes(typeof value)) {
  let index, existed;
  if (!Module.targets.has(value)) {
   index = Module.targets.add(value);
   existed = false;
  } else {
   index = Module.targets.getId(value);
   existed = true;
  }
  const isFunction = typeof value === "function" ? index : 0;
  const isConstructor = isFunction && !!(value.prototype && value.prototype.constructor);
  zvalPtr = Module.ccall("vrzno_expose_create_object_for_target", "number", [ "number", "number", "number" ], [ index, isFunction, isConstructor ]);
  Module.zvalMap.set(value, zvalPtr);
  Module._zvalMap.set(zvalPtr, value);
  if (!existed) {
   Module.ccall("vrzno_expose_inc_zrefcount", "number", [ "number" ], [ zvalPtr ]);
   Module.fRegistry.register(value, zvalPtr, value);
  }
 } else if (typeof value === "number") {
  if (Number.isInteger(value)) {
   zvalPtr = Module.ccall("vrzno_expose_create_long", "number", [ "number" ], [ value ]);
  } else if (Number.isFinite(value)) {
   zvalPtr = Module.ccall("vrzno_expose_create_double", "number", [ "number" ], [ value ]);
  }
 } else if (typeof value === "string") {
  const len = lengthBytesUTF8(value) + 1;
  const strLoc = _malloc(len);
  stringToUTF8(value, strLoc, len);
  zvalPtr = Module.ccall("vrzno_expose_create_string", "number", [ "number" ], [ strLoc ]);
  _free(strLoc);
 }
 return zvalPtr;
});

Module.PdoD1Driver = Module.PdoD1Driver || class PdoD1Driver {
 prepare(db, query) {
  console.log("prepare", {
   db: db,
   query: query
  });
  return db.prepare(query);
 }
 doer(db, query) {
  console.log("doer", {
   db: db,
   query: query
  });
 }
};

HEAP8 = new Int8Array(1);

Module.zvalMap = new WeakMap;

Module._zvalMap = Module._zvalMap || new Module.WeakerMap;

Module.fRegistry = Module.fRegistry || new FinReg((zvalPtr => {
 console.log("Garbage collecting! zVal@" + zvalPtr);
 Module.ccall("vrzno_expose_dec_zrefcount", "number", [ "number" ], [ zvalPtr ]);
}));

Module.bufferMaps = new WeakMap;

Module.callables = Module.callables || new Module.WeakerMap;

Module.targets = Module.targets || new Module.UniqueIndex;

Module.classes = Module.classes || new WeakMap;

Module._classes = Module._classes || new Module.WeakerMap;

Module.PdoParams = new WeakMap;

Module.pdoDriver = Module.pdoDriver || new Module.PdoD1Driver;

Module.targets.add(globalThis);

Module.onRefresh = Module.onRefresh || new Set;

Module.onRefresh.add((() => {
 Module.callables.clear();
 Module.targets.clear();
 Module._classes.clear();
 Module._zvalMap.clear();
 Module.targets.byObject.set(globalThis, 1);
 Module.targets.byInteger.set(1, globalThis);
}));

var moduleOverrides = Object.assign({}, Module);

var arguments_ = [];

var thisProgram = "./this.program";

var quit_ = (status, toThrow) => {
 throw toThrow;
};

var ENVIRONMENT_IS_WEB = true;

var ENVIRONMENT_IS_WORKER = false;

var ENVIRONMENT_IS_NODE = false;

var ENVIRONMENT_IS_SHELL = false;

if (Module["ENVIRONMENT"]) {
 throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");
}

var scriptDirectory = "";

function locateFile(path) {
 if (Module["locateFile"]) {
  return Module["locateFile"](path, scriptDirectory);
 }
 return scriptDirectory + path;
}

var read_, readAsync, readBinary, setWindowTitle;

if (ENVIRONMENT_IS_SHELL) {
 if (typeof process == "object" && typeof require === "function" || typeof window == "object" || typeof importScripts == "function") throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
 if (typeof read != "undefined") {
  read_ = f => read(f);
 }
 readBinary = f => {
  let data;
  if (typeof readbuffer == "function") {
   return new Uint8Array(readbuffer(f));
  }
  data = read(f, "binary");
  assert(typeof data == "object");
  return data;
 };
 readAsync = (f, onload, onerror) => {
  setTimeout((() => onload(readBinary(f))));
 };
 if (typeof clearTimeout == "undefined") {
  globalThis.clearTimeout = id => {};
 }
 if (typeof setTimeout == "undefined") {
  globalThis.setTimeout = f => typeof f == "function" ? f() : abort();
 }
 if (typeof scriptArgs != "undefined") {
  arguments_ = scriptArgs;
 } else if (typeof arguments != "undefined") {
  arguments_ = arguments;
 }
 if (typeof quit == "function") {
  quit_ = (status, toThrow) => {
   setTimeout((() => {
    if (!(toThrow instanceof ExitStatus)) {
     let toLog = toThrow;
     if (toThrow && typeof toThrow == "object" && toThrow.stack) {
      toLog = [ toThrow, toThrow.stack ];
     }
     err(`exiting due to exception: ${toLog}`);
    }
    quit(status);
   }));
   throw toThrow;
  };
 }
 if (typeof print != "undefined") {
  if (typeof console == "undefined") console = {};
  console.log = print;
  console.warn = console.error = typeof printErr != "undefined" ? printErr : print;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = self.location.href;
 } else if (typeof document != "undefined" && document.currentScript) {
  scriptDirectory = document.currentScript.src;
 }
 if (_scriptDir) {
  scriptDirectory = _scriptDir;
 }
 if (scriptDirectory.indexOf("blob:") !== 0) {
  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf("/") + 1);
 } else {
  scriptDirectory = "";
 }
 if (!(typeof window == "object" || typeof importScripts == "function")) throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
 {
  read_ = url => {
   var xhr = new XMLHttpRequest;
   xhr.open("GET", url, false);
   xhr.send(null);
   return xhr.responseText;
  };
  if (ENVIRONMENT_IS_WORKER) {
   readBinary = url => {
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    xhr.responseType = "arraybuffer";
    xhr.send(null);
    return new Uint8Array(xhr.response);
   };
  }
  readAsync = (url, onload, onerror) => {
   var xhr = new XMLHttpRequest;
   xhr.open("GET", url, true);
   xhr.responseType = "arraybuffer";
   xhr.onload = () => {
    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
     onload(xhr.response);
     return;
    }
    onerror();
   };
   xhr.onerror = onerror;
   xhr.send(null);
  };
 }
 setWindowTitle = title => document.title = title;
} else {
 throw new Error("environment detection error");
}

var out = Module["print"] || console.log.bind(console);

var err = Module["printErr"] || console.error.bind(console);

Object.assign(Module, moduleOverrides);

moduleOverrides = null;

checkIncomingModuleAPI();

if (Module["arguments"]) arguments_ = Module["arguments"];

legacyModuleProp("arguments", "arguments_");

if (Module["thisProgram"]) thisProgram = Module["thisProgram"];

legacyModuleProp("thisProgram", "thisProgram");

if (Module["quit"]) quit_ = Module["quit"];

legacyModuleProp("quit", "quit_");

assert(typeof Module["memoryInitializerPrefixURL"] == "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["pthreadMainPrefixURL"] == "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["cdInitializerPrefixURL"] == "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["filePackagePrefixURL"] == "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["read"] == "undefined", "Module.read option was removed (modify read_ in JS)");

assert(typeof Module["readAsync"] == "undefined", "Module.readAsync option was removed (modify readAsync in JS)");

assert(typeof Module["readBinary"] == "undefined", "Module.readBinary option was removed (modify readBinary in JS)");

assert(typeof Module["setWindowTitle"] == "undefined", "Module.setWindowTitle option was removed (modify setWindowTitle in JS)");

assert(typeof Module["TOTAL_MEMORY"] == "undefined", "Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY");

legacyModuleProp("read", "read_");

legacyModuleProp("readAsync", "readAsync");

legacyModuleProp("readBinary", "readBinary");

legacyModuleProp("setWindowTitle", "setWindowTitle");

var PROXYFS = "PROXYFS is no longer included by default; build with -lproxyfs.js";

var WORKERFS = "WORKERFS is no longer included by default; build with -lworkerfs.js";

var NODEFS = "NODEFS is no longer included by default; build with -lnodefs.js";

assert(!ENVIRONMENT_IS_WORKER, "worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.");

assert(!ENVIRONMENT_IS_NODE, "node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.");

assert(!ENVIRONMENT_IS_SHELL, "shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");

var wasmBinary;

if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];

legacyModuleProp("wasmBinary", "wasmBinary");

var noExitRuntime = Module["noExitRuntime"] || false;

legacyModuleProp("noExitRuntime", "noExitRuntime");

if (typeof WebAssembly != "object") {
 abort("no native wasm support detected");
}

var wasmMemory;

var ABORT = false;

var EXITSTATUS;

function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed" + (text ? ": " + text : ""));
 }
}

var HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateMemoryViews() {
 var b = wasmMemory.buffer;
 Module["HEAP8"] = HEAP8 = new Int8Array(b);
 Module["HEAP16"] = HEAP16 = new Int16Array(b);
 Module["HEAP32"] = HEAP32 = new Int32Array(b);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(b);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(b);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(b);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(b);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(b);
}

assert(!Module["STACK_SIZE"], "STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time");

assert(typeof Int32Array != "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, "JS engine does not provide full typed array support");

assert(!Module["wasmMemory"], "Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally");

assert(!Module["INITIAL_MEMORY"], "Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");

var wasmTable;

function writeStackCookie() {
 var max = _emscripten_stack_get_end();
 assert((max & 3) == 0);
 if (max == 0) {
  max += 4;
 }
 HEAPU32[max >>> 2] = 34821223;
 HEAPU32[max + 4 >>> 2] = 2310721022;
 HEAPU32[0 >>> 2] = 1668509029;
}

function checkStackCookie() {
 if (ABORT) return;
 var max = _emscripten_stack_get_end();
 if (max == 0) {
  max += 4;
 }
 var cookie1 = HEAPU32[max >>> 2];
 var cookie2 = HEAPU32[max + 4 >>> 2];
 if (cookie1 != 34821223 || cookie2 != 2310721022) {
  abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);
 }
 if (HEAPU32[0 >>> 2] != 1668509029) {
  abort("Runtime error: The application has corrupted its heap memory area (address zero)!");
 }
}

(function() {
 var h16 = new Int16Array(1);
 var h8 = new Int8Array(h16.buffer);
 h16[0] = 25459;
 if (h8[0] !== 115 || h8[1] !== 99) throw "Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)";
})();

var __ATPRERUN__ = [];

var __ATINIT__ = [];

var __ATMAIN__ = [];

var __ATEXIT__ = [];

var __ATPOSTRUN__ = [];

var runtimeInitialized = false;

var runtimeExited = false;

var runtimeKeepaliveCounter = 0;

function keepRuntimeAlive() {
 return noExitRuntime || runtimeKeepaliveCounter > 0;
}

function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
 assert(!runtimeInitialized);
 runtimeInitialized = true;
 checkStackCookie();
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
 FS.ignorePermissions = false;
 TTY.init();
 SOCKFS.root = FS.mount(SOCKFS, {}, null);
 PIPEFS.root = FS.mount(PIPEFS, {}, null);
 callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
 checkStackCookie();
 callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
 assert(!runtimeExited);
 Asyncify.state = Asyncify.State.Disabled;
 checkStackCookie();
 ___funcs_on_exit();
 callRuntimeCallbacks(__ATEXIT__);
 FS.quit();
 TTY.shutdown();
 IDBFS.quit();
 runtimeExited = true;
}

function postRun() {
 checkStackCookie();
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}

function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}

assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

var runDependencies = 0;

var runDependencyWatcher = null;

var dependenciesFulfilled = null;

var runDependencyTracking = {};

function getUniqueRunDependency(id) {
 var orig = id;
 while (1) {
  if (!runDependencyTracking[id]) return id;
  id = orig + Math.random();
 }
}

function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(!runDependencyTracking[id]);
  runDependencyTracking[id] = 1;
  if (runDependencyWatcher === null && typeof setInterval != "undefined") {
   runDependencyWatcher = setInterval((() => {
    if (ABORT) {
     clearInterval(runDependencyWatcher);
     runDependencyWatcher = null;
     return;
    }
    var shown = false;
    for (var dep in runDependencyTracking) {
     if (!shown) {
      shown = true;
      err("still waiting on run dependencies:");
     }
     err("dependency: " + dep);
    }
    if (shown) {
     err("(end of list)");
    }
   }), 1e4);
  }
 } else {
  err("warning: run dependency added without ID");
 }
}

function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(runDependencyTracking[id]);
  delete runDependencyTracking[id];
 } else {
  err("warning: run dependency removed without ID");
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}

function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 what = "Aborted(" + what + ")";
 err(what);
 ABORT = true;
 EXITSTATUS = 1;
 if (what.indexOf("RuntimeError: unreachable") >= 0) {
  what += '. "unreachable" may be due to ASYNCIFY_STACK_SIZE not being large enough (try increasing it)';
 }
 var e = new WebAssembly.RuntimeError(what);
 readyPromiseReject(e);
 throw e;
}

var dataURIPrefix = "data:application/octet-stream;base64,";

function isDataURI(filename) {
 return filename.startsWith(dataURIPrefix);
}

function isFileURI(filename) {
 return filename.startsWith("file://");
}

function createExportWrapper(name, fixedasm) {
 return function() {
  var displayName = name;
  var asm = fixedasm;
  if (!fixedasm) {
   asm = Module["asm"];
  }
  assert(runtimeInitialized, "native function `" + displayName + "` called before runtime initialization");
  assert(!runtimeExited, "native function `" + displayName + "` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
  if (!asm[name]) {
   assert(asm[name], "exported native function `" + displayName + "` not found");
  }
  return asm[name].apply(null, arguments);
 };
}

var wasmBinaryFile;

if (Module["locateFile"]) {
 wasmBinaryFile = "php-web.mjs.wasm";
 if (!isDataURI(wasmBinaryFile)) {
  wasmBinaryFile = locateFile(wasmBinaryFile);
 }
} else {
 wasmBinaryFile = new URL("php-web.mjs.wasm", import.meta.url).href;
}

function getBinarySync(file) {
 if (file == wasmBinaryFile && wasmBinary) {
  return new Uint8Array(wasmBinary);
 }
 if (readBinary) {
  return readBinary(file);
 }
 throw "both async and sync fetching of the wasm failed";
}

function getBinaryPromise(binaryFile) {
 if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
  if (typeof fetch == "function") {
   return fetch(binaryFile, {
    credentials: "same-origin"
   }).then((response => {
    if (!response["ok"]) {
     throw "failed to load wasm binary file at '" + binaryFile + "'";
    }
    return response["arrayBuffer"]();
   })).catch((() => getBinarySync(binaryFile)));
  }
 }
 return Promise.resolve().then((() => getBinarySync(binaryFile)));
}

function instantiateArrayBuffer(binaryFile, imports, receiver) {
 return getBinaryPromise(binaryFile).then((binary => WebAssembly.instantiate(binary, imports))).then((instance => instance)).then(receiver, (reason => {
  err("failed to asynchronously prepare wasm: " + reason);
  if (isFileURI(wasmBinaryFile)) {
   err("warning: Loading from a file URI (" + wasmBinaryFile + ") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing");
  }
  abort(reason);
 }));
}

function instantiateAsync(binary, binaryFile, imports, callback) {
 if (!binary && typeof WebAssembly.instantiateStreaming == "function" && !isDataURI(binaryFile) && typeof fetch == "function") {
  return fetch(binaryFile, {
   credentials: "same-origin"
  }).then((response => {
   var result = WebAssembly.instantiateStreaming(response, imports);
   return result.then(callback, (function(reason) {
    err("wasm streaming compile failed: " + reason);
    err("falling back to ArrayBuffer instantiation");
    return instantiateArrayBuffer(binaryFile, imports, callback);
   }));
  }));
 }
 return instantiateArrayBuffer(binaryFile, imports, callback);
}

function createWasm() {
 var info = {
  "env": wasmImports,
  "wasi_snapshot_preview1": wasmImports
 };
 function receiveInstance(instance, module) {
  var exports = instance.exports;
  exports = Asyncify.instrumentWasmExports(exports);
  exports = applySignatureConversions(exports);
  Module["asm"] = exports;
  wasmMemory = Module["asm"]["memory"];
  assert(wasmMemory, "memory not found in wasm exports");
  updateMemoryViews();
  wasmTable = Module["asm"]["__indirect_function_table"];
  assert(wasmTable, "table not found in wasm exports");
  addOnInit(Module["asm"]["__wasm_call_ctors"]);
  removeRunDependency("wasm-instantiate");
  return exports;
 }
 addRunDependency("wasm-instantiate");
 var trueModule = Module;
 function receiveInstantiationResult(result) {
  assert(Module === trueModule, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");
  trueModule = null;
  receiveInstance(result["instance"]);
 }
 if (Module["instantiateWasm"]) {
  try {
   return Module["instantiateWasm"](info, receiveInstance);
  } catch (e) {
   err("Module.instantiateWasm callback failed with error: " + e);
   readyPromiseReject(e);
  }
 }
 instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);
 return {};
}

var tempDouble;

var tempI64;

function legacyModuleProp(prop, newName) {
 if (!Object.getOwnPropertyDescriptor(Module, prop)) {
  Object.defineProperty(Module, prop, {
   configurable: true,
   get() {
    abort("Module." + prop + " has been replaced with plain " + newName + " (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
   }
  });
 }
}

function ignoredModuleProp(prop) {
 if (Object.getOwnPropertyDescriptor(Module, prop)) {
  abort("`Module." + prop + "` was supplied but `" + prop + "` not included in INCOMING_MODULE_JS_API");
 }
}

function isExportedByForceFilesystem(name) {
 return name === "FS_createPath" || name === "FS_createDataFile" || name === "FS_createPreloadedFile" || name === "FS_unlink" || name === "addRunDependency" || name === "FS_createLazyFile" || name === "FS_createDevice" || name === "removeRunDependency";
}

function missingGlobal(sym, msg) {
 if (typeof globalThis !== "undefined") {
  Object.defineProperty(globalThis, sym, {
   configurable: true,
   get() {
    warnOnce("`" + sym + "` is not longer defined by emscripten. " + msg);
    return undefined;
   }
  });
 }
}

missingGlobal("buffer", "Please use HEAP8.buffer or wasmMemory.buffer");

function missingLibrarySymbol(sym) {
 if (typeof globalThis !== "undefined" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {
  Object.defineProperty(globalThis, sym, {
   configurable: true,
   get() {
    var msg = "`" + sym + "` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line";
    var librarySymbol = sym;
    if (!librarySymbol.startsWith("_")) {
     librarySymbol = "$" + sym;
    }
    msg += " (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='" + librarySymbol + "')";
    if (isExportedByForceFilesystem(sym)) {
     msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
    }
    warnOnce(msg);
    return undefined;
   }
  });
 }
 unexportedRuntimeSymbol(sym);
}

function unexportedRuntimeSymbol(sym) {
 if (!Object.getOwnPropertyDescriptor(Module, sym)) {
  Object.defineProperty(Module, sym, {
   configurable: true,
   get() {
    var msg = "'" + sym + "' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)";
    if (isExportedByForceFilesystem(sym)) {
     msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
    }
    abort(msg);
   }
  });
 }
}

function dbg(text) {
 console.warn.apply(console, arguments);
}

var ASM_CONSTS = {
 3950468: $0 => {
  if (Module.persist) {
   let persist = Module.persist;
   if (!Array.isArray(persist)) {
    persist = [ persist ];
   }
   const wasmEnv = UTF8ToString($0);
   persist.forEach((p => {
    const localPath = p.localPath || "./persist";
    const mountPath = p.mountPath || "/persist";
    FS.mkdir(mountPath);
    switch (wasmEnv) {
    case "web":
     FS.mount(IDBFS, {}, mountPath);
     break;

    case "node":
     if (!useNodeRawFS) {
      const fs = require("fs");
      if (!fs.existsSync(localPath)) {
       fs.mkdirSync(localPath, {
        recursive: true
       });
      }
      FS.mount(NODEFS, {
       root: localPath
      }, mountPath);
     }
     break;
    }
   }));
  }
 },
 3951017: ($0, $1) => {
  const target = Module.targets.get($0);
  const property = UTF8ToString($1);
  if (!(property in target)) {
   return Module.jsToZval(undefined);
  }
  if (target[property] === null) {
   return Module.jsToZval(null);
  }
  const result = target[property];
  if (!result || ![ "function", "object" ].includes(typeof result)) {
   return Module.jsToZval(result);
  }
  return 0;
 },
 3951365: ($0, $1, $2) => {
  const target = Module.targets.get($0);
  const property = UTF8ToString($1);
  const result = target[property];
  const zvalPtr = $2;
  if (result && [ "function", "object" ].includes(typeof result)) {
   let index = Module.targets.getId(result);
   if (!Module.targets.has(result)) {
    index = Module.targets.add(result);
    Module.zvalMap.set(result, zvalPtr);
    Module._zvalMap.set(zvalPtr, result);
   }
   return index;
  }
  return 0;
 },
 3951773: $0 => "function" === typeof Module.targets.get($0) ? $0 : 0,
 3951841: $0 => !!(Module.targets.get($0).prototype && Module.targets.get($0).prototype.constructor),
 3951942: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   const newValue = $2;
  })();
 },
 3952054: ($0, $1, $2, $3, $4) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   const funcPtr = $2;
   const zvalPtr = $3;
   const paramCount = $4;
   target[property] = Module.callableToJs(funcPtr);
  })();
 },
 3952257: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   const zvalPtr = $2;
   if (!Module.targets.has(target[property])) {
    target[property] = Module.marshalObject(zvalPtr);
   }
  })();
 },
 3952464: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   delete target[property];
  })();
 },
 3952580: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   target[property] = null;
  })();
 },
 3952696: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   target[property] = false;
  })();
 },
 3952813: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   target[property] = true;
  })();
 },
 3952929: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   target[property] = $2;
  })();
 },
 3953043: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   target[property] = $2;
  })();
 },
 3953157: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   const newValue = UTF8ToString($2);
   target[property] = newValue;
  })();
 },
 3953312: ($0, $1) => {
  let target = Module.targets.get($0);
  const property = $1;
  if (target instanceof ArrayBuffer) {
   if (!Module.bufferMaps.has(target)) {
    Module.bufferMaps.set(target, new Uint8Array(target));
   }
   target = Module.bufferMaps.get(target);
  }
  if (!(property in target)) {
   const jsRet = "UN";
   const len = lengthBytesUTF8(jsRet) + 1;
   const strLoc = _malloc(len);
   stringToUTF8(jsRet, strLoc, len);
   return strLoc;
  }
  if (target[property] === null) {
   const jsRet = "NU";
   const len = lengthBytesUTF8(jsRet) + 1;
   const strLoc = _malloc(len);
   stringToUTF8(jsRet, strLoc, len);
   return strLoc;
  }
  const result = target[property];
  if (!result || ![ "function", "object" ].includes(typeof result)) {
   const jsRet = "OK" + String(result);
   const len = lengthBytesUTF8(jsRet) + 1;
   const strLoc = _malloc(len);
   stringToUTF8(jsRet, strLoc, len);
   return strLoc;
  }
  const jsRet = "XX";
  const len = lengthBytesUTF8(jsRet) + 1;
  const strLoc = _malloc(len);
  stringToUTF8(jsRet, strLoc, len);
  return strLoc;
 },
 3954278: ($0, $1, $2) => {
  const target = Module.targets.get($0);
  const property = UTF8ToString($1);
  const result = target[property];
  const zvalPtr = $2;
  if (result && [ "function", "object" ].includes(typeof result)) {
   let index = Module.targets.getId(result);
   if (!Module.targets.has(result)) {
    index = Module.targets.add(result);
    Module.zvalMap.set(result, zvalPtr);
    Module._zvalMap.set(zvalPtr, result);
   }
   return index;
  }
  return 0;
 },
 3954686: $0 => "function" === typeof Module.targets.get($0) ? $0 : 0,
 3954754: $0 => !!(Module.targets.get($0).prototype && Module.targets.get($0).prototype.constructor),
 3954855: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   const newValue = $2;
  })();
 },
 3954953: ($0, $1, $2, $3) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   const funcPtr = $2;
   const zvalPtr = $3;
   target[property] = Module.callableToJs(funcPtr);
  })();
 },
 3955119: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   const zvalPtr = $2;
   if (!Module.targets.has(target[property])) {
    target[property] = Module.marshalObject(zvalPtr);
   }
  })();
 },
 3955312: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   delete target[property];
  })();
 },
 3955414: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   target[property] = null;
  })();
 },
 3955516: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   target[property] = false;
  })();
 },
 3955619: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   target[property] = true;
  })();
 },
 3955721: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   target[property] = $2;
  })();
 },
 3955821: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   target[property] = $2;
  })();
 },
 3955921: ($0, $1, $2) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   const newValue = UTF8ToString($2);
   target[property] = newValue;
  })();
 },
 3956062: ($0, $1, $2) => {
  const target = Module.targets.get($0);
  const property = $1;
  const check_empty = $2;
  if (Array.isArray(target)) {
   return typeof target[property] !== "undefined";
  }
  if (target instanceof ArrayBuffer) {
   if (!Module.bufferMaps.has(target)) {
    Module.bufferMaps.set(target, new Uint8Array(target));
   }
   const targetBytes = Module.bufferMaps.get(target);
   return targetBytes[property] !== "undefined";
  }
  if (!check_empty) {
   return property in target;
  } else {
   return !!target[property];
  }
 },
 3956541: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = UTF8ToString($1);
   delete target[property];
  })();
 },
 3956657: ($0, $1) => {
  (() => {
   const target = Module.targets.get($0);
   const property = $1;
   delete target[property];
  })();
 },
 3956759: $0 => {
  const target = Module.targets.get($0);
  let json;
  if (typeof target === "function") {
   json = JSON.stringify({});
  } else {
   try {
    json = JSON.stringify({
     ...target
    });
   } catch {
    json = JSON.stringify({});
   }
  }
  const jsRet = String(json);
  const len = lengthBytesUTF8(jsRet) + 1;
  const strLoc = _malloc(len);
  stringToUTF8(jsRet, strLoc, len);
  return strLoc;
 },
 3957111: ($0, $1) => {
  const target = Module.targets.get($0);
  const property = UTF8ToString($1);
  return property in target;
 },
 3957216: $0 => {
  const target = Module.targets.get($0);
  const name = target.constructor && target.constructor.name || "Object";
  const len = lengthBytesUTF8(name) + 1;
  const namePtr = _malloc(name);
  stringToUTF8(name, namePtr, len);
  return namePtr;
 },
 3957453: ($0, $1, $2, $3, $4) => {
  const target = Module.targets.get($0);
  const method_name = UTF8ToString($1);
  const argp = $2;
  const argc = $3;
  const size = $4;
  const args = [];
  for (let i = 0; i < argc; i++) {
   const loc = argp + i * size;
   const ptr = Module.getValue(loc, "*");
   const arg = Module.zvalToJS(ptr);
   args.push(arg);
  }
  const jsRet = target[method_name](...args);
  const retZval = Module.jsToZval(jsRet);
  return retZval;
 },
 3957854: ($0, $1, $2, $3) => {
  const target = Module.targets.get($0);
  const argv = $1;
  const argc = $2;
  const size = $3;
  const args = [];
  for (let i = 0; i < argc; i++) {
   args.push(Module.zvalToJS(argv + i * size));
  }
  const jsRet = target(...args);
  return Module.jsToZval(jsRet);
 },
 3958106: ($0, $1) => {
  const target = Module.targets.get($0);
  const property_name = UTF8ToString($1);
  const jsRet = target[property_name];
  return Module.jsToZval(jsRet);
 },
 3958257: ($0, $1, $2, $3) => {
  const _class = Module._classes.get($0);
  const argv = $1;
  const argc = $2;
  const size = $3;
  const args = [];
  for (let i = 0; i < argc; i++) {
   args.push(Module.zvalToJS(argv + i * size));
  }
  const _object = new _class(...args);
  const index = Module.targets.add(_object);
  return index;
 },
 3958542: $0 => {
  const jsRet = String(eval(UTF8ToString($0)));
  const len = lengthBytesUTF8(jsRet) + 1;
  const strLoc = _malloc(len);
  stringToUTF8(jsRet, strLoc, len);
  return strLoc;
 },
 3958710: ($0, $1) => {
  const funcName = UTF8ToString($0);
  const argJson = UTF8ToString($1);
  const func = globalThis[funcName];
  const args = JSON.parse(argJson || "[]") || [];
  const jsRet = String(func(...args));
  const len = lengthBytesUTF8(jsRet) + 1;
  const strLoc = _malloc(len);
  stringToUTF8(jsRet, strLoc, len);
  return strLoc;
 },
 3959021: ($0, $1) => {
  const timeout = Number(UTF8ToString($0));
  const funcPtr = $1;
  setTimeout((() => {
   Module.ccall("vrzno_exec_callback", "number", [ "number", "number", "number" ], [ funcPtr, null, 0 ]);
   Module.ccall("vrzno_del_callback", "number", [ "number" ], [ funcPtr ]);
  }), timeout);
 },
 3959293: $0 => Module.jsToZval(Module[UTF8ToString($0)]),
 3959347: ($0, $1, $2, $3) => {
  const _class = Module.targets.get($0);
  const argv = $1;
  const argc = $2;
  const size = $3;
  const args = [];
  for (let i = 0; i < argc; i++) {
   args.push(Module.zvalToJS(argv + i * size));
  }
  const _object = new _class(...args);
  return Module.jsToZval(_object);
 },
 3959607: $0 => {
  const name = UTF8ToString($0);
  return Module.jsToZval(import(name));
 },
 3959680: $0 => {
  const target = Module.targets.get($0);
  return Module.classes.get(target);
 },
 3959758: ($0, $1) => {
  const target = Module.targets.get($0);
  Module.classes.set(target, $1);
  Module._classes.set($1, target);
 },
 3959866: $0 => {
  const results = Module.targets.get($0);
  if (results) {
   return results.length;
  }
  return 0;
 },
 3959959: $0 => {
  const results = Module.targets.get($0);
  if (results.length) {
   return Object.keys(results[0]).length;
  }
  return 0;
 },
 3960075: ($0, $1) => {
  const targetId = $0;
  const target = Module.targets.get(targetId);
  const current = $1;
  if (current >= target.length) {
   return null;
  }
  return Module.jsToZval(target[current]);
 },
 3960252: ($0, $1) => {
  const results = Module.targets.get($0);
  if (results.length) {
   const jsRet = Object.keys(results[0])[$1];
   const len = lengthBytesUTF8(jsRet) + 1;
   const strLoc = _malloc(len);
   stringToUTF8(jsRet, strLoc, len);
   return strLoc;
  }
  return 0;
 },
 3960490: ($0, $1, $2) => {
  const results = Module.targets.get($0);
  const current = -1 + $1;
  const colno = $2;
  if (current >= results.length) {
   return null;
  }
  const result = results[current];
  const key = Object.keys(result)[$2];
  const zval = Module.jsToZval(result[key]);
  return zval;
 },
 3960750: ($0, $1) => {
  const statement = Module.targets.get($0);
  const paramVal = Module.zvalToJS($1);
  if (!Module.PdoParams.has(statement)) {
   Module.PdoParams.set(statement, []);
  }
  const paramList = Module.PdoParams.get(statement);
  paramList.push(paramVal);
 },
 3960989: ($0, $1, $2) => {
  console.log("GET ATTR", $0, $1, $2);
 },
 3961030: ($0, $1, $2) => {
  console.log("COL META", $0, $1, $2);
 },
 3961071: ($0, $1, $2) => {
  console.log("CLOSE", $0, $1, $2);
 },
 3961109: $0 => {
  console.log("CLOSE", $0);
 },
 3961139: ($0, $1) => {
  const target = Module.targets.get($0);
  const query = UTF8ToString($1);
  if (Module.pdoDriver && Module.pdoDriver.prepare) {
   const prepared = Module.pdoDriver.prepare(target, query);
   const zval = Module.jsToZval(prepared);
   return zval;
  }
  return null;
 },
 3961391: ($0, $1) => {
  console.log("DO", $0, UTF8ToString($1));
  const target = Module.targets.get($0);
  const query = UTF8ToString($1);
  if (Module.pdoDriver && Module.pdoDriver.doer) {
   return Module.pdoDriver.doer(target, query);
  }
  return 1;
 },
 3961612: $0 => {
  console.log("BEGIN TXN", $0);
  return true;
 },
 3961659: $0 => {
  console.log("COMMIT TXN", $0);
  return true;
 },
 3961707: $0 => {
  console.log("ROLLBACK TXN", $0);
  return true;
 },
 3961757: ($0, $1, $2) => {
  console.log("SET ATTR", $0, $1, $2);
  return true;
 },
 3961811: ($0, $1) => {
  console.log("LAST INSERT ID", $0, UTF8ToString($1));
  return 0;
 },
 3961878: ($0, $1, $2) => {
  console.log("FETCH ERROR FUNC", $0, $1, $2);
 },
 3961927: ($0, $1, $2) => {
  console.log("GET ATTR", $0, $1, $2);
  return 0;
 },
 3961978: $0 => {
  console.log("SHUTDOWN", $0);
 },
 3962011: ($0, $1) => {
  console.log("GET GC", $0, $1);
 },
 3962046: () => Module.targets.getId(globalThis),
 3962091: ($0, $1) => {
  let target = Module.targets.get($0);
  const property = $1;
  if (target instanceof ArrayBuffer) {
   if (!Module.bufferMaps.has(target)) {
    Module.bufferMaps.set(target, new Uint8Array(target));
   }
   target = Module.bufferMaps.get(target);
  }
  if (Array.isArray(target) || ArrayBuffer.isView(target)) {
   if (property >= 0 && property < target.length) {
    return 1;
   }
  }
  return 0;
 },
 3962454: ($0, $1) => {
  let target = Module.targets.get($0);
  const property = $1;
  if (target instanceof ArrayBuffer) {
   if (!Module.bufferMaps.has(target)) {
    Module.bufferMaps.set(target, new Uint8Array(target));
   }
   target = Module.bufferMaps.get(target);
  }
  return Module.jsToZval(target[property]);
 }
};

function __asyncjs__vrzno_await_internal(targetId) {
 return Asyncify.handleAsync((async () => {
  const target = Module.targets.get(targetId);
  const result = await target;
  return Module.jsToZval(result);
 }));
}

function __asyncjs__pdo_vrzno_real_stmt_execute(targetId) {
 return Asyncify.handleAsync((async () => {
  let statement = Module.targets.get(targetId);
  if (!Module.PdoParams.has(statement)) {
   Module.PdoParams.set(statement, []);
  }
  const paramList = Module.PdoParams.get(statement);
  const bound = paramList.length ? statement.bind(...paramList) : statement;
  const result = await bound.run();
  Module.PdoParams.delete(statement);
  if (!result.success) {
   return false;
  }
  return Module.jsToZval(result.results);
 }));
}

function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = `Program terminated with exit(${status})`;
 this.status = status;
}

var callRuntimeCallbacks = callbacks => {
 while (callbacks.length > 0) {
  callbacks.shift()(Module);
 }
};

function getValue(ptr, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  return HEAP8[ptr >>> 0];

 case "i8":
  return HEAP8[ptr >>> 0];

 case "i16":
  return HEAP16[ptr >>> 1];

 case "i32":
  return HEAP32[ptr >>> 2];

 case "i64":
  abort("to do getValue(i64) use WASM_BIGINT");

 case "float":
  return HEAPF32[ptr >>> 2];

 case "double":
  return HEAPF64[ptr >>> 3];

 case "*":
  return HEAPU32[ptr >>> 2];

 default:
  abort(`invalid type for getValue: ${type}`);
 }
}

var ptrToString = ptr => {
 assert(typeof ptr === "number");
 return "0x" + ptr.toString(16).padStart(8, "0");
};

function setValue(ptr, value, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  HEAP8[ptr >>> 0] = value;
  break;

 case "i8":
  HEAP8[ptr >>> 0] = value;
  break;

 case "i16":
  HEAP16[ptr >>> 1] = value;
  break;

 case "i32":
  HEAP32[ptr >>> 2] = value;
  break;

 case "i64":
  abort("to do setValue(i64) use WASM_BIGINT");

 case "float":
  HEAPF32[ptr >>> 2] = value;
  break;

 case "double":
  HEAPF64[ptr >>> 3] = value;
  break;

 case "*":
  HEAPU32[ptr >>> 2] = value;
  break;

 default:
  abort(`invalid type for setValue: ${type}`);
 }
}

var warnOnce = text => {
 if (!warnOnce.shown) warnOnce.shown = {};
 if (!warnOnce.shown[text]) {
  warnOnce.shown[text] = 1;
  err(text);
 }
};

function convertI32PairToI53Checked(lo, hi) {
 assert(lo == lo >>> 0 || lo == (lo | 0));
 assert(hi === (hi | 0));
 return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;
}

var UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : undefined;

var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {
 idx >>>= 0;
 var endIdx = idx + maxBytesToRead;
 var endPtr = idx;
 while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
 if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
 }
 var str = "";
 while (idx < endPtr) {
  var u0 = heapOrArray[idx++];
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  var u1 = heapOrArray[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  var u2 = heapOrArray[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte " + ptrToString(u0) + " encountered when deserializing a UTF-8 string in wasm memory to a JS string!");
   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
 return str;
};

var UTF8ToString = (ptr, maxBytesToRead) => {
 assert(typeof ptr == "number");
 ptr >>>= 0;
 return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
};

function ___assert_fail(condition, filename, line, func) {
 condition >>>= 0;
 filename >>>= 0;
 func >>>= 0;
 abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [ filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function" ]);
}

var ___call_sighandler = function(fp, sig) {
 fp >>>= 0;
 return (a1 => dynCall_vi.apply(null, [ fp, a1 ]))(sig);
};

var PATH = {
 isAbs: path => path.charAt(0) === "/",
 splitPath: filename => {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 },
 normalizeArray: (parts, allowAboveRoot) => {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (;up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 },
 normalize: path => {
  var isAbsolute = PATH.isAbs(path), trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((p => !!p)), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 },
 dirname: path => {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 },
 basename: path => {
  if (path === "/") return "/";
  path = PATH.normalize(path);
  path = path.replace(/\/$/, "");
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 },
 join: function() {
  var paths = Array.prototype.slice.call(arguments);
  return PATH.normalize(paths.join("/"));
 },
 join2: (l, r) => PATH.normalize(l + "/" + r)
};

var initRandomFill = () => {
 if (typeof crypto == "object" && typeof crypto["getRandomValues"] == "function") {
  return view => crypto.getRandomValues(view);
 } else abort("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");
};

var randomFill = view => (randomFill = initRandomFill())(view);

var PATH_FS = {
 resolve: function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path != "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = PATH.isAbs(path);
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((p => !!p)), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 },
 relative: (from, to) => {
  from = PATH_FS.resolve(from).substr(1);
  to = PATH_FS.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (;start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (;end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 }
};

var FS_stdin_getChar_buffer = [];

var lengthBytesUTF8 = str => {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var c = str.charCodeAt(i);
  if (c <= 127) {
   len++;
  } else if (c <= 2047) {
   len += 2;
  } else if (c >= 55296 && c <= 57343) {
   len += 4;
   ++i;
  } else {
   len += 3;
  }
 }
 return len;
};

var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {
 outIdx >>>= 0;
 assert(typeof str === "string");
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) {
   var u1 = str.charCodeAt(++i);
   u = 65536 + ((u & 1023) << 10) | u1 & 1023;
  }
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   heap[outIdx++ >>> 0] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   heap[outIdx++ >>> 0] = 192 | u >> 6;
   heap[outIdx++ >>> 0] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   heap[outIdx++ >>> 0] = 224 | u >> 12;
   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;
   heap[outIdx++ >>> 0] = 128 | u & 63;
  } else {
   if (outIdx + 3 >= endIdx) break;
   if (u > 1114111) warnOnce("Invalid Unicode code point " + ptrToString(u) + " encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).");
   heap[outIdx++ >>> 0] = 240 | u >> 18;
   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;
   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;
   heap[outIdx++ >>> 0] = 128 | u & 63;
  }
 }
 heap[outIdx >>> 0] = 0;
 return outIdx - startIdx;
};

function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}

var FS_stdin_getChar = () => {
 if (!FS_stdin_getChar_buffer.length) {
  var result = null;
  if (typeof window != "undefined" && typeof window.prompt == "function") {
   result = window.prompt("Input: ");
   if (result !== null) {
    result += "\n";
   }
  } else if (typeof readline == "function") {
   result = readline();
   if (result !== null) {
    result += "\n";
   }
  }
  if (!result) {
   return null;
  }
  FS_stdin_getChar_buffer = intArrayFromString(result, true);
 }
 return FS_stdin_getChar_buffer.shift();
};

var TTY = {
 ttys: [],
 init: function() {},
 shutdown: function() {},
 register: function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 },
 stream_ops: {
  open: function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(43);
   }
   stream.tty = tty;
   stream.seekable = false;
  },
  close: function(stream) {
   stream.tty.ops.fsync(stream.tty);
  },
  fsync: function(stream) {
   stream.tty.ops.fsync(stream.tty);
  },
  read: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(60);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(29);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(6);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  },
  write: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(60);
   }
   try {
    for (var i = 0; i < length; i++) {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    }
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  }
 },
 default_tty_ops: {
  get_char: function(tty) {
   return FS_stdin_getChar();
  },
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  fsync: function(tty) {
   if (tty.output && tty.output.length > 0) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  },
  ioctl_tcgets: function(tty) {
   return {
    c_iflag: 25856,
    c_oflag: 5,
    c_cflag: 191,
    c_lflag: 35387,
    c_cc: [ 3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
   };
  },
  ioctl_tcsets: function(tty, optional_actions, data) {
   return 0;
  },
  ioctl_tiocgwinsz: function(tty) {
   return [ 24, 80 ];
  }
 },
 default_tty1_ops: {
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  fsync: function(tty) {
   if (tty.output && tty.output.length > 0) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 }
};

var zeroMemory = (address, size) => {
 HEAPU8.fill(0, address, address + size);
 return address;
};

var alignMemory = (size, alignment) => {
 assert(alignment, "alignment argument is required");
 return Math.ceil(size / alignment) * alignment;
};

var mmapAlloc = size => {
 size = alignMemory(size, 65536);
 var ptr = _emscripten_builtin_memalign(65536, size);
 if (!ptr) return 0;
 return zeroMemory(ptr, size);
};

var MEMFS = {
 ops_table: null,
 mount(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 },
 createNode(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(63);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
   parent.timestamp = node.timestamp;
  }
  return node;
 },
 getFileDataAsTypedArray(node) {
  if (!node.contents) return new Uint8Array(0);
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 },
 expandFileStorage(node, newCapacity) {
  var prevCapacity = node.contents ? node.contents.length : 0;
  if (prevCapacity >= newCapacity) return;
  var CAPACITY_DOUBLING_MAX = 1024 * 1024;
  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
  var oldContents = node.contents;
  node.contents = new Uint8Array(newCapacity);
  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
 },
 resizeFileStorage(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
  } else {
   var oldContents = node.contents;
   node.contents = new Uint8Array(newSize);
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
  }
 },
 node_ops: {
  getattr(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  },
  setattr(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  },
  lookup(parent, name) {
   throw FS.genericErrors[44];
  },
  mknod(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  },
  rename(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(55);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.parent.timestamp = Date.now();
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   new_dir.timestamp = old_node.parent.timestamp;
   old_node.parent = new_dir;
  },
  unlink(parent, name) {
   delete parent.contents[name];
   parent.timestamp = Date.now();
  },
  rmdir(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(55);
   }
   delete parent.contents[name];
   parent.timestamp = Date.now();
  },
  readdir(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  },
  readlink(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(28);
   }
   return node.link;
  }
 },
 stream_ops: {
  read(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  },
  write(stream, buffer, offset, length, position, canOwn) {
   assert(!(buffer instanceof ArrayBuffer));
   if (buffer.buffer === HEAP8.buffer) {
    canOwn = false;
   }
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     assert(position === 0, "canOwn must imply no weird position inside the file");
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = buffer.slice(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) {
    node.contents.set(buffer.subarray(offset, offset + length), position);
   } else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  },
  llseek(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(28);
   }
   return position;
  },
  allocate(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  },
  mmap(stream, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(43);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && contents.buffer === HEAP8.buffer) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < contents.length) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = mmapAlloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(48);
    }
    HEAP8.set(contents, ptr >>> 0);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  },
  msync(stream, buffer, offset, length, mmapFlags) {
   MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  }
 }
};

var asyncLoad = (url, onload, onerror, noRunDep) => {
 var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : "";
 readAsync(url, (arrayBuffer => {
  assert(arrayBuffer, `Loading data file "${url}" failed (no arrayBuffer).`);
  onload(new Uint8Array(arrayBuffer));
  if (dep) removeRunDependency(dep);
 }), (event => {
  if (onerror) {
   onerror();
  } else {
   throw `Loading data file "${url}" failed.`;
  }
 }));
 if (dep) addRunDependency(dep);
};

var preloadPlugins = Module["preloadPlugins"] || [];

function FS_handledByPreloadPlugin(byteArray, fullname, finish, onerror) {
 if (typeof Browser != "undefined") Browser.init();
 var handled = false;
 preloadPlugins.forEach((function(plugin) {
  if (handled) return;
  if (plugin["canHandle"](fullname)) {
   plugin["handle"](byteArray, fullname, finish, onerror);
   handled = true;
  }
 }));
 return handled;
}

function FS_createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
 var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
 var dep = getUniqueRunDependency(`cp ${fullname}`);
 function processData(byteArray) {
  function finish(byteArray) {
   if (preFinish) preFinish();
   if (!dontCreateFile) {
    FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
   }
   if (onload) onload();
   removeRunDependency(dep);
  }
  if (FS_handledByPreloadPlugin(byteArray, fullname, finish, (() => {
   if (onerror) onerror();
   removeRunDependency(dep);
  }))) {
   return;
  }
  finish(byteArray);
 }
 addRunDependency(dep);
 if (typeof url == "string") {
  asyncLoad(url, (byteArray => processData(byteArray)), onerror);
 } else {
  processData(url);
 }
}

function FS_modeStringToFlags(str) {
 var flagModes = {
  "r": 0,
  "r+": 2,
  "w": 512 | 64 | 1,
  "w+": 512 | 64 | 2,
  "a": 1024 | 64 | 1,
  "a+": 1024 | 64 | 2
 };
 var flags = flagModes[str];
 if (typeof flags == "undefined") {
  throw new Error(`Unknown file open mode: ${str}`);
 }
 return flags;
}

function FS_getMode(canRead, canWrite) {
 var mode = 0;
 if (canRead) mode |= 292 | 73;
 if (canWrite) mode |= 146;
 return mode;
}

var IDBFS = {
 dbs: {},
 indexedDB: () => {
  if (typeof indexedDB != "undefined") return indexedDB;
  var ret = null;
  if (typeof window == "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 },
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: function(mount) {
  return MEMFS.mount.apply(null, arguments);
 },
 syncfs: (mount, populate, callback) => {
  IDBFS.getLocalSet(mount, ((err, local) => {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, ((err, remote) => {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 },
 quit: () => {
  Object.values(IDBFS.dbs).forEach((value => value.close()));
  IDBFS.dbs = {};
 },
 getDB: (name, callback) => {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  if (!req) {
   return callback("Unable to connect to IndexedDB");
  }
  req.onupgradeneeded = e => {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  };
  req.onsuccess = () => {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  };
  req.onerror = e => {
   callback(e.target.error);
   e.preventDefault();
  };
 },
 getLocalSet: (mount, callback) => {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return p => PATH.join2(root, p);
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    "timestamp": stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 },
 getRemoteSet: (mount, callback) => {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, ((err, db) => {
   if (err) return callback(err);
   try {
    var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
    transaction.onerror = e => {
     callback(e.target.error);
     e.preventDefault();
    };
    var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
    var index = store.index("timestamp");
    index.openKeyCursor().onsuccess = event => {
     var cursor = event.target.result;
     if (!cursor) {
      return callback(null, {
       type: "remote",
       db: db,
       entries: entries
      });
     }
     entries[cursor.primaryKey] = {
      "timestamp": cursor.key
     };
     cursor.continue();
    };
   } catch (e) {
    return callback(e);
   }
  }));
 },
 loadLocalEntry: (path, callback) => {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    "timestamp": stat.mtime,
    "mode": stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    "timestamp": stat.mtime,
    "mode": stat.mode,
    "contents": node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 },
 storeLocalEntry: (path, entry, callback) => {
  try {
   if (FS.isDir(entry["mode"])) {
    FS.mkdirTree(path, entry["mode"]);
   } else if (FS.isFile(entry["mode"])) {
    FS.writeFile(path, entry["contents"], {
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry["mode"]);
   FS.utime(path, entry["timestamp"], entry["timestamp"]);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 },
 removeLocalEntry: (path, callback) => {
  try {
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 },
 loadRemoteEntry: (store, path, callback) => {
  var req = store.get(path);
  req.onsuccess = event => {
   callback(null, event.target.result);
  };
  req.onerror = e => {
   callback(e.target.error);
   e.preventDefault();
  };
 },
 storeRemoteEntry: (store, path, entry, callback) => {
  try {
   var req = store.put(entry, path);
  } catch (e) {
   callback(e);
   return;
  }
  req.onsuccess = () => {
   callback(null);
  };
  req.onerror = e => {
   callback(e.target.error);
   e.preventDefault();
  };
 },
 removeRemoteEntry: (store, path, callback) => {
  var req = store.delete(path);
  req.onsuccess = () => {
   callback(null);
  };
  req.onerror = e => {
   callback(e.target.error);
   e.preventDefault();
  };
 },
 reconcile: (src, dst, callback) => {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e["timestamp"].getTime() != e2["timestamp"].getTime()) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   if (!src.entries[key]) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var errored = false;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err && !errored) {
    errored = true;
    return callback(err);
   }
  }
  transaction.onerror = e => {
   done(this.error);
   e.preventDefault();
  };
  transaction.oncomplete = e => {
   if (!errored) {
    callback(null);
   }
  };
  create.sort().forEach((path => {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, ((err, entry) => {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, ((err, entry) => {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((path => {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 }
};

var ERRNO_MESSAGES = {
 0: "Success",
 1: "Arg list too long",
 2: "Permission denied",
 3: "Address already in use",
 4: "Address not available",
 5: "Address family not supported by protocol family",
 6: "No more processes",
 7: "Socket already connected",
 8: "Bad file number",
 9: "Trying to read unreadable message",
 10: "Mount device busy",
 11: "Operation canceled",
 12: "No children",
 13: "Connection aborted",
 14: "Connection refused",
 15: "Connection reset by peer",
 16: "File locking deadlock error",
 17: "Destination address required",
 18: "Math arg out of domain of func",
 19: "Quota exceeded",
 20: "File exists",
 21: "Bad address",
 22: "File too large",
 23: "Host is unreachable",
 24: "Identifier removed",
 25: "Illegal byte sequence",
 26: "Connection already in progress",
 27: "Interrupted system call",
 28: "Invalid argument",
 29: "I/O error",
 30: "Socket is already connected",
 31: "Is a directory",
 32: "Too many symbolic links",
 33: "Too many open files",
 34: "Too many links",
 35: "Message too long",
 36: "Multihop attempted",
 37: "File or path name too long",
 38: "Network interface is not configured",
 39: "Connection reset by network",
 40: "Network is unreachable",
 41: "Too many open files in system",
 42: "No buffer space available",
 43: "No such device",
 44: "No such file or directory",
 45: "Exec format error",
 46: "No record locks available",
 47: "The link has been severed",
 48: "Not enough core",
 49: "No message of desired type",
 50: "Protocol not available",
 51: "No space left on device",
 52: "Function not implemented",
 53: "Socket is not connected",
 54: "Not a directory",
 55: "Directory not empty",
 56: "State not recoverable",
 57: "Socket operation on non-socket",
 59: "Not a typewriter",
 60: "No such device or address",
 61: "Value too large for defined data type",
 62: "Previous owner died",
 63: "Not super-user",
 64: "Broken pipe",
 65: "Protocol error",
 66: "Unknown protocol",
 67: "Protocol wrong type for socket",
 68: "Math result not representable",
 69: "Read only file system",
 70: "Illegal seek",
 71: "No such process",
 72: "Stale file handle",
 73: "Connection timed out",
 74: "Text file busy",
 75: "Cross-device link",
 100: "Device not a stream",
 101: "Bad font file fmt",
 102: "Invalid slot",
 103: "Invalid request code",
 104: "No anode",
 105: "Block device required",
 106: "Channel number out of range",
 107: "Level 3 halted",
 108: "Level 3 reset",
 109: "Link number out of range",
 110: "Protocol driver not attached",
 111: "No CSI structure available",
 112: "Level 2 halted",
 113: "Invalid exchange",
 114: "Invalid request descriptor",
 115: "Exchange full",
 116: "No data (for no delay io)",
 117: "Timer expired",
 118: "Out of streams resources",
 119: "Machine is not on the network",
 120: "Package not installed",
 121: "The object is remote",
 122: "Advertise error",
 123: "Srmount error",
 124: "Communication error on send",
 125: "Cross mount point (not really error)",
 126: "Given log. name not unique",
 127: "f.d. invalid for this operation",
 128: "Remote address changed",
 129: "Can   access a needed shared lib",
 130: "Accessing a corrupted shared lib",
 131: ".lib section in a.out corrupted",
 132: "Attempting to link in too many libs",
 133: "Attempting to exec a shared library",
 135: "Streams pipe error",
 136: "Too many users",
 137: "Socket type not supported",
 138: "Not supported",
 139: "Protocol family not supported",
 140: "Can't send after socket shutdown",
 141: "Too many references",
 142: "Host is down",
 148: "No medium (in tape drive)",
 156: "Level 2 not synchronized"
};

var ERRNO_CODES = {};

function demangle(func) {
 warnOnce("warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling");
 return func;
}

function demangleAll(text) {
 var regex = /\b_Z[\w\d_]+/g;
 return text.replace(regex, (function(x) {
  var y = demangle(x);
  return x === y ? x : y + " [" + x + "]";
 }));
}

var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 lookupPath: (path, opts = {}) => {
  path = PATH_FS.resolve(path);
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  opts = Object.assign(defaults, opts);
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(32);
  }
  var parts = path.split("/").filter((p => !!p));
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count + 1
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(32);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 },
 getPath: node => {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? `${mount}/${path}` : mount + path;
   }
   path = path ? `${node.name}/${path}` : node.name;
   node = node.parent;
  }
 },
 hashName: (parentid, name) => {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 },
 hashAddNode: node => {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 },
 hashRemoveNode: node => {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 },
 lookupNode: (parent, name) => {
  var errCode = FS.mayLookup(parent);
  if (errCode) {
   throw new FS.ErrnoError(errCode, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 },
 createNode: (parent, name, mode, rdev) => {
  assert(typeof parent == "object");
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 },
 destroyNode: node => {
  FS.hashRemoveNode(node);
 },
 isRoot: node => node === node.parent,
 isMountpoint: node => !!node.mounted,
 isFile: mode => (mode & 61440) === 32768,
 isDir: mode => (mode & 61440) === 16384,
 isLink: mode => (mode & 61440) === 40960,
 isChrdev: mode => (mode & 61440) === 8192,
 isBlkdev: mode => (mode & 61440) === 24576,
 isFIFO: mode => (mode & 61440) === 4096,
 isSocket: mode => (mode & 49152) === 49152,
 flagsToPermissionString: flag => {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 },
 nodePermissions: (node, perms) => {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.includes("r") && !(node.mode & 292)) {
   return 2;
  } else if (perms.includes("w") && !(node.mode & 146)) {
   return 2;
  } else if (perms.includes("x") && !(node.mode & 73)) {
   return 2;
  }
  return 0;
 },
 mayLookup: dir => {
  var errCode = FS.nodePermissions(dir, "x");
  if (errCode) return errCode;
  if (!dir.node_ops.lookup) return 2;
  return 0;
 },
 mayCreate: (dir, name) => {
  try {
   var node = FS.lookupNode(dir, name);
   return 20;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 },
 mayDelete: (dir, name, isdir) => {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var errCode = FS.nodePermissions(dir, "wx");
  if (errCode) {
   return errCode;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return 54;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return 10;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return 31;
   }
  }
  return 0;
 },
 mayOpen: (node, flags) => {
  if (!node) {
   return 44;
  }
  if (FS.isLink(node.mode)) {
   return 32;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return 31;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 },
 MAX_OPEN_FDS: 4096,
 nextfd: () => {
  for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(33);
 },
 getStreamChecked: fd => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  return stream;
 },
 getStream: fd => FS.streams[fd],
 createStream: (stream, fd = -1) => {
  if (!FS.FSStream) {
   FS.FSStream = function() {
    this.shared = {};
   };
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get() {
      return this.node;
     },
     set(val) {
      this.node = val;
     }
    },
    isRead: {
     get() {
      return (this.flags & 2097155) !== 1;
     }
    },
    isWrite: {
     get() {
      return (this.flags & 2097155) !== 0;
     }
    },
    isAppend: {
     get() {
      return this.flags & 1024;
     }
    },
    flags: {
     get() {
      return this.shared.flags;
     },
     set(val) {
      this.shared.flags = val;
     }
    },
    position: {
     get() {
      return this.shared.position;
     },
     set(val) {
      this.shared.position = val;
     }
    }
   });
  }
  stream = Object.assign(new FS.FSStream, stream);
  if (fd == -1) {
   fd = FS.nextfd();
  }
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 },
 closeStream: fd => {
  FS.streams[fd] = null;
 },
 chrdev_stream_ops: {
  open: stream => {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  },
  llseek: () => {
   throw new FS.ErrnoError(70);
  }
 },
 major: dev => dev >> 8,
 minor: dev => dev & 255,
 makedev: (ma, mi) => ma << 8 | mi,
 registerDevice: (dev, ops) => {
  FS.devices[dev] = {
   stream_ops: ops
  };
 },
 getDevice: dev => FS.devices[dev],
 getMounts: mount => {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 },
 syncfs: (populate, callback) => {
  if (typeof populate == "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(errCode) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(errCode);
  }
  function done(errCode) {
   if (errCode) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(errCode);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach((mount => {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 },
 mount: (type, opts, mountpoint) => {
  if (typeof type == "string") {
   throw type;
  }
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(10);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(10);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(54);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 },
 unmount: mountpoint => {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(28);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((hash => {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.includes(current.mount)) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 },
 lookup: (parent, name) => parent.node_ops.lookup(parent, name),
 mknod: (path, mode, dev) => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.mayCreate(parent, name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 },
 create: (path, mode) => {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 },
 mkdir: (path, mode) => {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 },
 mkdirTree: (path, mode) => {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != 20) throw e;
   }
  }
 },
 mkdev: (path, mode, dev) => {
  if (typeof dev == "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 },
 symlink: (oldpath, newpath) => {
  if (!PATH_FS.resolve(oldpath)) {
   throw new FS.ErrnoError(44);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var newname = PATH.basename(newpath);
  var errCode = FS.mayCreate(parent, newname);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 },
 rename: (old_path, new_path) => {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  lookup = FS.lookupPath(old_path, {
   parent: true
  });
  old_dir = lookup.node;
  lookup = FS.lookupPath(new_path, {
   parent: true
  });
  new_dir = lookup.node;
  if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(75);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH_FS.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(28);
  }
  relative = PATH_FS.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(55);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var errCode = FS.mayDelete(old_dir, old_name, isdir);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(10);
  }
  if (new_dir !== old_dir) {
   errCode = FS.nodePermissions(old_dir, "w");
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
 },
 rmdir: path => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, true);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
 },
 readdir: path => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(54);
  }
  return node.node_ops.readdir(node);
 },
 unlink: path => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, false);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
 },
 readlink: path => {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(44);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(28);
  }
  return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 },
 stat: (path, dontFollow) => {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(63);
  }
  return node.node_ops.getattr(node);
 },
 lstat: path => FS.stat(path, true),
 chmod: (path, mode, dontFollow) => {
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 },
 lchmod: (path, mode) => {
  FS.chmod(path, mode, true);
 },
 fchmod: (fd, mode) => {
  var stream = FS.getStreamChecked(fd);
  FS.chmod(stream.node, mode);
 },
 chown: (path, uid, gid, dontFollow) => {
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 },
 lchown: (path, uid, gid) => {
  FS.chown(path, uid, gid, true);
 },
 fchown: (fd, uid, gid) => {
  var stream = FS.getStreamChecked(fd);
  FS.chown(stream.node, uid, gid);
 },
 truncate: (path, len) => {
  if (len < 0) {
   throw new FS.ErrnoError(28);
  }
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.nodePermissions(node, "w");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 },
 ftruncate: (fd, len) => {
  var stream = FS.getStreamChecked(fd);
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(28);
  }
  FS.truncate(stream.node, len);
 },
 utime: (path, atime, mtime) => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 },
 open: (path, flags, mode) => {
  if (path === "") {
   throw new FS.ErrnoError(44);
  }
  flags = typeof flags == "string" ? FS_modeStringToFlags(flags) : flags;
  mode = typeof mode == "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path == "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(20);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(54);
  }
  if (!created) {
   var errCode = FS.mayOpen(node, flags);
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  if (flags & 512 && !created) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512 | 131072);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  });
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
   }
  }
  return stream;
 },
 close: stream => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
  stream.fd = null;
 },
 isClosed: stream => stream.fd === null,
 llseek: (stream, offset, whence) => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(70);
  }
  if (whence != 0 && whence != 1 && whence != 2) {
   throw new FS.ErrnoError(28);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 },
 read: (stream, buffer, offset, length, position) => {
  assert(offset >= 0);
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(28);
  }
  var seeking = typeof position != "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 },
 write: (stream, buffer, offset, length, position, canOwn) => {
  assert(offset >= 0);
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(28);
  }
  if (stream.seekable && stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position != "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  return bytesWritten;
 },
 allocate: (stream, offset, length) => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(28);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(138);
  }
  stream.stream_ops.allocate(stream, offset, length);
 },
 mmap: (stream, length, position, prot, flags) => {
  if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
   throw new FS.ErrnoError(2);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(2);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(43);
  }
  return stream.stream_ops.mmap(stream, length, position, prot, flags);
 },
 msync: (stream, buffer, offset, length, mmapFlags) => {
  assert(offset >= 0);
  if (!stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 },
 munmap: stream => 0,
 ioctl: (stream, cmd, arg) => {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(59);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 },
 readFile: (path, opts = {}) => {
  opts.flags = opts.flags || 0;
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error(`Invalid encoding type "${opts.encoding}"`);
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 },
 writeFile: (path, data, opts = {}) => {
  opts.flags = opts.flags || 577;
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data == "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 },
 cwd: () => FS.currentPath,
 chdir: path => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(44);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(54);
  }
  var errCode = FS.nodePermissions(lookup.node, "x");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  FS.currentPath = lookup.path;
 },
 createDefaultDirectories: () => {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 },
 createDefaultDevices: () => {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: () => 0,
   write: (stream, buffer, offset, length, pos) => length
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var randomBuffer = new Uint8Array(1024), randomLeft = 0;
  var randomByte = () => {
   if (randomLeft === 0) {
    randomLeft = randomFill(randomBuffer).byteLength;
   }
   return randomBuffer[--randomLeft];
  };
  FS.createDevice("/dev", "random", randomByte);
  FS.createDevice("/dev", "urandom", randomByte);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 },
 createSpecialDirectories: () => {
  FS.mkdir("/proc");
  var proc_self = FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: () => {
    var node = FS.createNode(proc_self, "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (parent, name) => {
      var fd = +name;
      var stream = FS.getStreamChecked(fd);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: () => stream.path
       }
      };
      ret.parent = ret;
      return ret;
     }
    };
    return node;
   }
  }, {}, "/proc/self/fd");
 },
 createStandardStreams: () => {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", 0);
  var stdout = FS.open("/dev/stdout", 1);
  var stderr = FS.open("/dev/stderr", 1);
  assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);
  assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);
  assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);
 },
 ensureErrnoError: () => {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.name = "ErrnoError";
   this.node = node;
   this.setErrno = function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   };
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) {
    Object.defineProperty(this, "stack", {
     value: (new Error).stack,
     writable: true
    });
    this.stack = demangleAll(this.stack);
   }
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ 44 ].forEach((code => {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 },
 staticInit: () => {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS
  };
 },
 init: (input, output, error) => {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 },
 quit: () => {
  FS.init.initialized = false;
  _fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 },
 findObject: (path, dontResolveLastLink) => {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (!ret.exists) {
   return null;
  }
  return ret.object;
 },
 analyzePath: (path, dontResolveLastLink) => {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 },
 createPath: (parent, path, canRead, canWrite) => {
  parent = typeof parent == "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 },
 createFile: (parent, name, properties, canRead, canWrite) => {
  var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
  var mode = FS_getMode(canRead, canWrite);
  return FS.create(path, mode);
 },
 createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {
  var path = name;
  if (parent) {
   parent = typeof parent == "string" ? parent : FS.getPath(parent);
   path = name ? PATH.join2(parent, name) : parent;
  }
  var mode = FS_getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data == "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, 577);
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 },
 createDevice: (parent, name, input, output) => {
  var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
  var mode = FS_getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: stream => {
    stream.seekable = false;
   },
   close: stream => {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   },
   read: (stream, buffer, offset, length, pos) => {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(6);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   },
   write: (stream, buffer, offset, length, pos) => {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   }
  });
  return FS.mkdev(path, mode, dev);
 },
 forceLoadFile: obj => {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  if (typeof XMLHttpRequest != "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (read_) {
   try {
    obj.contents = intArrayFromString(read_(obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
 },
 createLazyFile: (parent, name, url, canRead, canWrite) => {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (from, to) => {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    }
    return intArrayFromString(xhr.responseText || "", true);
   };
   var lazyArray = this;
   lazyArray.setDataGetter((chunkNum => {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] == "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] == "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    out("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest != "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperties(lazyArray, {
    length: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     }
    },
    chunkSize: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     }
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: function() {
     return this.contents.length;
    }
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((key => {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    FS.forceLoadFile(node);
    return fn.apply(null, arguments);
   };
  }));
  function writeChunks(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  }
  stream_ops.read = (stream, buffer, offset, length, position) => {
   FS.forceLoadFile(node);
   return writeChunks(stream, buffer, offset, length, position);
  };
  stream_ops.mmap = (stream, length, position, prot, flags) => {
   FS.forceLoadFile(node);
   var ptr = mmapAlloc(length);
   if (!ptr) {
    throw new FS.ErrnoError(48);
   }
   writeChunks(stream, HEAP8, ptr, length, position);
   return {
    ptr: ptr,
    allocated: true
   };
  };
  node.stream_ops = stream_ops;
  return node;
 },
 absolutePath: () => {
  abort("FS.absolutePath has been removed; use PATH_FS.resolve instead");
 },
 createFolder: () => {
  abort("FS.createFolder has been removed; use FS.mkdir instead");
 },
 createLink: () => {
  abort("FS.createLink has been removed; use FS.symlink instead");
 },
 joinPath: () => {
  abort("FS.joinPath has been removed; use PATH.join instead");
 },
 mmapAlloc: () => {
  abort("FS.mmapAlloc has been replaced by the top level function mmapAlloc");
 },
 standardizePath: () => {
  abort("FS.standardizePath has been removed; use PATH.normalize instead");
 }
};

var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 calculateAt: function(dirfd, path, allowEmpty) {
  if (PATH.isAbs(path)) {
   return path;
  }
  var dir;
  if (dirfd === -100) {
   dir = FS.cwd();
  } else {
   var dirstream = SYSCALLS.getStreamFromFD(dirfd);
   dir = dirstream.path;
  }
  if (path.length == 0) {
   if (!allowEmpty) {
    throw new FS.ErrnoError(44);
   }
   return dir;
  }
  return PATH.join2(dir, path);
 },
 doStat: function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -54;
   }
   throw e;
  }
  HEAP32[buf >>> 2] = stat.dev;
  HEAP32[buf + 4 >>> 2] = stat.mode;
  HEAPU32[buf + 8 >>> 2] = stat.nlink;
  HEAP32[buf + 12 >>> 2] = stat.uid;
  HEAP32[buf + 16 >>> 2] = stat.gid;
  HEAP32[buf + 20 >>> 2] = stat.rdev;
  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 24 >>> 2] = tempI64[0], HEAP32[buf + 28 >>> 2] = tempI64[1];
  HEAP32[buf + 32 >>> 2] = 4096;
  HEAP32[buf + 36 >>> 2] = stat.blocks;
  var atime = stat.atime.getTime();
  var mtime = stat.mtime.getTime();
  var ctime = stat.ctime.getTime();
  tempI64 = [ Math.floor(atime / 1e3) >>> 0, (tempDouble = Math.floor(atime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];
  HEAPU32[buf + 48 >>> 2] = atime % 1e3 * 1e3;
  tempI64 = [ Math.floor(mtime / 1e3) >>> 0, (tempDouble = Math.floor(mtime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 56 >>> 2] = tempI64[0], HEAP32[buf + 60 >>> 2] = tempI64[1];
  HEAPU32[buf + 64 >>> 2] = mtime % 1e3 * 1e3;
  tempI64 = [ Math.floor(ctime / 1e3) >>> 0, (tempDouble = Math.floor(ctime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 72 >>> 2] = tempI64[0], HEAP32[buf + 76 >>> 2] = tempI64[1];
  HEAPU32[buf + 80 >>> 2] = ctime % 1e3 * 1e3;
  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[buf + 88 >>> 2] = tempI64[0], HEAP32[buf + 92 >>> 2] = tempI64[1];
  return 0;
 },
 doMsync: function(addr, stream, len, flags, offset) {
  if (!FS.isFile(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (flags & 2) {
   return 0;
  }
  var buffer = HEAPU8.slice(addr, addr + len);
  FS.msync(stream, buffer, offset, len, flags);
 },
 varargs: undefined,
 get() {
  assert(SYSCALLS.varargs != undefined);
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];
  return ret;
 },
 getStr(ptr) {
  var ret = UTF8ToString(ptr);
  return ret;
 },
 getStreamFromFD: function(fd) {
  var stream = FS.getStreamChecked(fd);
  return stream;
 }
};

function ___syscall__newselect(nfds, readfds, writefds, exceptfds, timeout) {
 readfds >>>= 0;
 writefds >>>= 0;
 exceptfds >>>= 0;
 timeout >>>= 0;
 try {
  assert(nfds <= 64, "nfds must be less than or equal to 64");
  assert(!exceptfds, "exceptfds not supported");
  var total = 0;
  var srcReadLow = readfds ? HEAP32[readfds >>> 2] : 0, srcReadHigh = readfds ? HEAP32[readfds + 4 >>> 2] : 0;
  var srcWriteLow = writefds ? HEAP32[writefds >>> 2] : 0, srcWriteHigh = writefds ? HEAP32[writefds + 4 >>> 2] : 0;
  var srcExceptLow = exceptfds ? HEAP32[exceptfds >>> 2] : 0, srcExceptHigh = exceptfds ? HEAP32[exceptfds + 4 >>> 2] : 0;
  var dstReadLow = 0, dstReadHigh = 0;
  var dstWriteLow = 0, dstWriteHigh = 0;
  var dstExceptLow = 0, dstExceptHigh = 0;
  var allLow = (readfds ? HEAP32[readfds >>> 2] : 0) | (writefds ? HEAP32[writefds >>> 2] : 0) | (exceptfds ? HEAP32[exceptfds >>> 2] : 0);
  var allHigh = (readfds ? HEAP32[readfds + 4 >>> 2] : 0) | (writefds ? HEAP32[writefds + 4 >>> 2] : 0) | (exceptfds ? HEAP32[exceptfds + 4 >>> 2] : 0);
  var check = function(fd, low, high, val) {
   return fd < 32 ? low & val : high & val;
  };
  for (var fd = 0; fd < nfds; fd++) {
   var mask = 1 << fd % 32;
   if (!check(fd, allLow, allHigh, mask)) {
    continue;
   }
   var stream = SYSCALLS.getStreamFromFD(fd);
   var flags = SYSCALLS.DEFAULT_POLLMASK;
   if (stream.stream_ops.poll) {
    var timeoutInMillis = -1;
    if (timeout) {
     var tv_sec = readfds ? HEAP32[timeout >>> 2] : 0, tv_usec = readfds ? HEAP32[timeout + 8 >>> 2] : 0;
     timeoutInMillis = (tv_sec + tv_usec / 1e6) * 1e3;
    }
    flags = stream.stream_ops.poll(stream, timeoutInMillis);
   }
   if (flags & 1 && check(fd, srcReadLow, srcReadHigh, mask)) {
    fd < 32 ? dstReadLow = dstReadLow | mask : dstReadHigh = dstReadHigh | mask;
    total++;
   }
   if (flags & 4 && check(fd, srcWriteLow, srcWriteHigh, mask)) {
    fd < 32 ? dstWriteLow = dstWriteLow | mask : dstWriteHigh = dstWriteHigh | mask;
    total++;
   }
   if (flags & 2 && check(fd, srcExceptLow, srcExceptHigh, mask)) {
    fd < 32 ? dstExceptLow = dstExceptLow | mask : dstExceptHigh = dstExceptHigh | mask;
    total++;
   }
  }
  if (readfds) {
   HEAP32[readfds >>> 2] = dstReadLow;
   HEAP32[readfds + 4 >>> 2] = dstReadHigh;
  }
  if (writefds) {
   HEAP32[writefds >>> 2] = dstWriteLow;
   HEAP32[writefds + 4 >>> 2] = dstWriteHigh;
  }
  if (exceptfds) {
   HEAP32[exceptfds >>> 2] = dstExceptLow;
   HEAP32[exceptfds + 4 >>> 2] = dstExceptHigh;
  }
  return total;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var SOCKFS = {
 mount(mount) {
  Module["websocket"] = Module["websocket"] && "object" === typeof Module["websocket"] ? Module["websocket"] : {};
  Module["websocket"]._callbacks = {};
  Module["websocket"]["on"] = function(event, callback) {
   if ("function" === typeof callback) {
    this._callbacks[event] = callback;
   }
   return this;
  };
  Module["websocket"].emit = function(event, param) {
   if ("function" === typeof this._callbacks[event]) {
    this._callbacks[event].call(this, param);
   }
  };
  return FS.createNode(null, "/", 16384 | 511, 0);
 },
 createSocket(family, type, protocol) {
  type &= ~526336;
  var streaming = type == 1;
  if (streaming && protocol && protocol != 6) {
   throw new FS.ErrnoError(66);
  }
  var sock = {
   family: family,
   type: type,
   protocol: protocol,
   server: null,
   error: null,
   peers: {},
   pending: [],
   recv_queue: [],
   sock_ops: SOCKFS.websocket_sock_ops
  };
  var name = SOCKFS.nextname();
  var node = FS.createNode(SOCKFS.root, name, 49152, 0);
  node.sock = sock;
  var stream = FS.createStream({
   path: name,
   node: node,
   flags: 2,
   seekable: false,
   stream_ops: SOCKFS.stream_ops
  });
  sock.stream = stream;
  return sock;
 },
 getSocket(fd) {
  var stream = FS.getStream(fd);
  if (!stream || !FS.isSocket(stream.node.mode)) {
   return null;
  }
  return stream.node.sock;
 },
 stream_ops: {
  poll(stream) {
   var sock = stream.node.sock;
   return sock.sock_ops.poll(sock);
  },
  ioctl(stream, request, varargs) {
   var sock = stream.node.sock;
   return sock.sock_ops.ioctl(sock, request, varargs);
  },
  read(stream, buffer, offset, length, position) {
   var sock = stream.node.sock;
   var msg = sock.sock_ops.recvmsg(sock, length);
   if (!msg) {
    return 0;
   }
   buffer.set(msg.buffer, offset);
   return msg.buffer.length;
  },
  write(stream, buffer, offset, length, position) {
   var sock = stream.node.sock;
   return sock.sock_ops.sendmsg(sock, buffer, offset, length);
  },
  close(stream) {
   var sock = stream.node.sock;
   sock.sock_ops.close(sock);
  }
 },
 nextname() {
  if (!SOCKFS.nextname.current) {
   SOCKFS.nextname.current = 0;
  }
  return "socket[" + SOCKFS.nextname.current++ + "]";
 },
 websocket_sock_ops: {
  createPeer(sock, addr, port) {
   var ws;
   if (typeof addr == "object") {
    ws = addr;
    addr = null;
    port = null;
   }
   if (ws) {
    if (ws._socket) {
     addr = ws._socket.remoteAddress;
     port = ws._socket.remotePort;
    } else {
     var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
     if (!result) {
      throw new Error("WebSocket URL must be in the format ws(s)://address:port");
     }
     addr = result[1];
     port = parseInt(result[2], 10);
    }
   } else {
    try {
     var runtimeConfig = Module["websocket"] && "object" === typeof Module["websocket"];
     var url = "ws:#".replace("#", "//");
     if (runtimeConfig) {
      if ("string" === typeof Module["websocket"]["url"]) {
       url = Module["websocket"]["url"];
      }
     }
     if (url === "ws://" || url === "wss://") {
      var parts = addr.split("/");
      url = url + parts[0] + ":" + port + "/" + parts.slice(1).join("/");
     }
     var subProtocols = "binary";
     if (runtimeConfig) {
      if ("string" === typeof Module["websocket"]["subprotocol"]) {
       subProtocols = Module["websocket"]["subprotocol"];
      }
     }
     var opts = undefined;
     if (subProtocols !== "null") {
      subProtocols = subProtocols.replace(/^ +| +$/g, "").split(/ *, */);
      opts = subProtocols;
     }
     if (runtimeConfig && null === Module["websocket"]["subprotocol"]) {
      subProtocols = "null";
      opts = undefined;
     }
     var WebSocketConstructor;
     {
      WebSocketConstructor = WebSocket;
     }
     ws = new WebSocketConstructor(url, opts);
     ws.binaryType = "arraybuffer";
    } catch (e) {
     throw new FS.ErrnoError(23);
    }
   }
   var peer = {
    addr: addr,
    port: port,
    socket: ws,
    dgram_send_queue: []
   };
   SOCKFS.websocket_sock_ops.addPeer(sock, peer);
   SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
   if (sock.type === 2 && typeof sock.sport != "undefined") {
    peer.dgram_send_queue.push(new Uint8Array([ 255, 255, 255, 255, "p".charCodeAt(0), "o".charCodeAt(0), "r".charCodeAt(0), "t".charCodeAt(0), (sock.sport & 65280) >> 8, sock.sport & 255 ]));
   }
   return peer;
  },
  getPeer(sock, addr, port) {
   return sock.peers[addr + ":" + port];
  },
  addPeer(sock, peer) {
   sock.peers[peer.addr + ":" + peer.port] = peer;
  },
  removePeer(sock, peer) {
   delete sock.peers[peer.addr + ":" + peer.port];
  },
  handlePeerEvents(sock, peer) {
   var first = true;
   var handleOpen = function() {
    Module["websocket"].emit("open", sock.stream.fd);
    try {
     var queued = peer.dgram_send_queue.shift();
     while (queued) {
      peer.socket.send(queued);
      queued = peer.dgram_send_queue.shift();
     }
    } catch (e) {
     peer.socket.close();
    }
   };
   function handleMessage(data) {
    if (typeof data == "string") {
     var encoder = new TextEncoder;
     data = encoder.encode(data);
    } else {
     assert(data.byteLength !== undefined);
     if (data.byteLength == 0) {
      return;
     }
     data = new Uint8Array(data);
    }
    var wasfirst = first;
    first = false;
    if (wasfirst && data.length === 10 && data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 && data[4] === "p".charCodeAt(0) && data[5] === "o".charCodeAt(0) && data[6] === "r".charCodeAt(0) && data[7] === "t".charCodeAt(0)) {
     var newport = data[8] << 8 | data[9];
     SOCKFS.websocket_sock_ops.removePeer(sock, peer);
     peer.port = newport;
     SOCKFS.websocket_sock_ops.addPeer(sock, peer);
     return;
    }
    sock.recv_queue.push({
     addr: peer.addr,
     port: peer.port,
     data: data
    });
    Module["websocket"].emit("message", sock.stream.fd);
   }
   if (ENVIRONMENT_IS_NODE) {
    peer.socket.on("open", handleOpen);
    peer.socket.on("message", (function(data, isBinary) {
     if (!isBinary) {
      return;
     }
     handleMessage(new Uint8Array(data).buffer);
    }));
    peer.socket.on("close", (function() {
     Module["websocket"].emit("close", sock.stream.fd);
    }));
    peer.socket.on("error", (function(error) {
     sock.error = 14;
     Module["websocket"].emit("error", [ sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused" ]);
    }));
   } else {
    peer.socket.onopen = handleOpen;
    peer.socket.onclose = function() {
     Module["websocket"].emit("close", sock.stream.fd);
    };
    peer.socket.onmessage = function peer_socket_onmessage(event) {
     handleMessage(event.data);
    };
    peer.socket.onerror = function(error) {
     sock.error = 14;
     Module["websocket"].emit("error", [ sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused" ]);
    };
   }
  },
  poll(sock) {
   if (sock.type === 1 && sock.server) {
    return sock.pending.length ? 64 | 1 : 0;
   }
   var mask = 0;
   var dest = sock.type === 1 ? SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) : null;
   if (sock.recv_queue.length || !dest || dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
    mask |= 64 | 1;
   }
   if (!dest || dest && dest.socket.readyState === dest.socket.OPEN) {
    mask |= 4;
   }
   if (dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
    mask |= 16;
   }
   return mask;
  },
  ioctl(sock, request, arg) {
   switch (request) {
   case 21531:
    var bytes = 0;
    if (sock.recv_queue.length) {
     bytes = sock.recv_queue[0].data.length;
    }
    HEAP32[arg >>> 2] = bytes;
    return 0;

   default:
    return 28;
   }
  },
  close(sock) {
   if (sock.server) {
    try {
     sock.server.close();
    } catch (e) {}
    sock.server = null;
   }
   var peers = Object.keys(sock.peers);
   for (var i = 0; i < peers.length; i++) {
    var peer = sock.peers[peers[i]];
    try {
     peer.socket.close();
    } catch (e) {}
    SOCKFS.websocket_sock_ops.removePeer(sock, peer);
   }
   return 0;
  },
  bind(sock, addr, port) {
   if (typeof sock.saddr != "undefined" || typeof sock.sport != "undefined") {
    throw new FS.ErrnoError(28);
   }
   sock.saddr = addr;
   sock.sport = port;
   if (sock.type === 2) {
    if (sock.server) {
     sock.server.close();
     sock.server = null;
    }
    try {
     sock.sock_ops.listen(sock, 0);
    } catch (e) {
     if (!(e.name === "ErrnoError")) throw e;
     if (e.errno !== 138) throw e;
    }
   }
  },
  connect(sock, addr, port) {
   if (sock.server) {
    throw new FS.ErrnoError(138);
   }
   if (typeof sock.daddr != "undefined" && typeof sock.dport != "undefined") {
    var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
    if (dest) {
     if (dest.socket.readyState === dest.socket.CONNECTING) {
      throw new FS.ErrnoError(7);
     } else {
      throw new FS.ErrnoError(30);
     }
    }
   }
   var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
   sock.daddr = peer.addr;
   sock.dport = peer.port;
   throw new FS.ErrnoError(26);
  },
  listen(sock, backlog) {
   if (!ENVIRONMENT_IS_NODE) {
    throw new FS.ErrnoError(138);
   }
  },
  accept(listensock) {
   if (!listensock.server || !listensock.pending.length) {
    throw new FS.ErrnoError(28);
   }
   var newsock = listensock.pending.shift();
   newsock.stream.flags = listensock.stream.flags;
   return newsock;
  },
  getname(sock, peer) {
   var addr, port;
   if (peer) {
    if (sock.daddr === undefined || sock.dport === undefined) {
     throw new FS.ErrnoError(53);
    }
    addr = sock.daddr;
    port = sock.dport;
   } else {
    addr = sock.saddr || 0;
    port = sock.sport || 0;
   }
   return {
    addr: addr,
    port: port
   };
  },
  sendmsg(sock, buffer, offset, length, addr, port) {
   if (sock.type === 2) {
    if (addr === undefined || port === undefined) {
     addr = sock.daddr;
     port = sock.dport;
    }
    if (addr === undefined || port === undefined) {
     throw new FS.ErrnoError(17);
    }
   } else {
    addr = sock.daddr;
    port = sock.dport;
   }
   var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
   if (sock.type === 1) {
    if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
     throw new FS.ErrnoError(53);
    } else if (dest.socket.readyState === dest.socket.CONNECTING) {
     throw new FS.ErrnoError(6);
    }
   }
   if (ArrayBuffer.isView(buffer)) {
    offset += buffer.byteOffset;
    buffer = buffer.buffer;
   }
   var data;
   data = buffer.slice(offset, offset + length);
   if (sock.type === 2) {
    if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
     if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
      dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
     }
     dest.dgram_send_queue.push(data);
     return length;
    }
   }
   try {
    dest.socket.send(data);
    return length;
   } catch (e) {
    throw new FS.ErrnoError(28);
   }
  },
  recvmsg(sock, length) {
   if (sock.type === 1 && sock.server) {
    throw new FS.ErrnoError(53);
   }
   var queued = sock.recv_queue.shift();
   if (!queued) {
    if (sock.type === 1) {
     var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
     if (!dest) {
      throw new FS.ErrnoError(53);
     }
     if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
      return null;
     }
     throw new FS.ErrnoError(6);
    }
    throw new FS.ErrnoError(6);
   }
   var queuedLength = queued.data.byteLength || queued.data.length;
   var queuedOffset = queued.data.byteOffset || 0;
   var queuedBuffer = queued.data.buffer || queued.data;
   var bytesRead = Math.min(length, queuedLength);
   var res = {
    buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
    addr: queued.addr,
    port: queued.port
   };
   if (sock.type === 1 && bytesRead < queuedLength) {
    var bytesRemaining = queuedLength - bytesRead;
    queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
    sock.recv_queue.unshift(queued);
   }
   return res;
  }
 }
};

function getSocketFromFD(fd) {
 var socket = SOCKFS.getSocket(fd);
 if (!socket) throw new FS.ErrnoError(8);
 return socket;
}

var setErrNo = value => {
 HEAP32[___errno_location() >>> 2] = value;
 return value;
};

var Sockets = {
 BUFFER_SIZE: 10240,
 MAX_BUFFER_SIZE: 10485760,
 nextFd: 1,
 fds: {},
 nextport: 1,
 maxport: 65535,
 peer: null,
 connections: {},
 portmap: {},
 localAddr: 4261412874,
 addrPool: [ 33554442, 50331658, 67108874, 83886090, 100663306, 117440522, 134217738, 150994954, 167772170, 184549386, 201326602, 218103818, 234881034 ]
};

var inetPton4 = str => {
 var b = str.split(".");
 for (var i = 0; i < 4; i++) {
  var tmp = Number(b[i]);
  if (isNaN(tmp)) return null;
  b[i] = tmp;
 }
 return (b[0] | b[1] << 8 | b[2] << 16 | b[3] << 24) >>> 0;
};

var jstoi_q = str => parseInt(str);

var inetPton6 = str => {
 var words;
 var w, offset, z, i;
 var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i;
 var parts = [];
 if (!valid6regx.test(str)) {
  return null;
 }
 if (str === "::") {
  return [ 0, 0, 0, 0, 0, 0, 0, 0 ];
 }
 if (str.startsWith("::")) {
  str = str.replace("::", "Z:");
 } else {
  str = str.replace("::", ":Z:");
 }
 if (str.indexOf(".") > 0) {
  str = str.replace(new RegExp("[.]", "g"), ":");
  words = str.split(":");
  words[words.length - 4] = jstoi_q(words[words.length - 4]) + jstoi_q(words[words.length - 3]) * 256;
  words[words.length - 3] = jstoi_q(words[words.length - 2]) + jstoi_q(words[words.length - 1]) * 256;
  words = words.slice(0, words.length - 2);
 } else {
  words = str.split(":");
 }
 offset = 0;
 z = 0;
 for (w = 0; w < words.length; w++) {
  if (typeof words[w] == "string") {
   if (words[w] === "Z") {
    for (z = 0; z < 8 - words.length + 1; z++) {
     parts[w + z] = 0;
    }
    offset = z - 1;
   } else {
    parts[w + offset] = _htons(parseInt(words[w], 16));
   }
  } else {
   parts[w + offset] = words[w];
  }
 }
 return [ parts[1] << 16 | parts[0], parts[3] << 16 | parts[2], parts[5] << 16 | parts[4], parts[7] << 16 | parts[6] ];
};

var writeSockaddr = (sa, family, addr, port, addrlen) => {
 switch (family) {
 case 2:
  addr = inetPton4(addr);
  zeroMemory(sa, 16);
  if (addrlen) {
   HEAP32[addrlen >>> 2] = 16;
  }
  HEAP16[sa >>> 1] = family;
  HEAP32[sa + 4 >>> 2] = addr;
  HEAP16[sa + 2 >>> 1] = _htons(port);
  break;

 case 10:
  addr = inetPton6(addr);
  zeroMemory(sa, 28);
  if (addrlen) {
   HEAP32[addrlen >>> 2] = 28;
  }
  HEAP32[sa >>> 2] = family;
  HEAP32[sa + 8 >>> 2] = addr[0];
  HEAP32[sa + 12 >>> 2] = addr[1];
  HEAP32[sa + 16 >>> 2] = addr[2];
  HEAP32[sa + 20 >>> 2] = addr[3];
  HEAP16[sa + 2 >>> 1] = _htons(port);
  break;

 default:
  return 5;
 }
 return 0;
};

var DNS = {
 address_map: {
  id: 1,
  addrs: {},
  names: {}
 },
 lookup_name: name => {
  var res = inetPton4(name);
  if (res !== null) {
   return name;
  }
  res = inetPton6(name);
  if (res !== null) {
   return name;
  }
  var addr;
  if (DNS.address_map.addrs[name]) {
   addr = DNS.address_map.addrs[name];
  } else {
   var id = DNS.address_map.id++;
   assert(id < 65535, "exceeded max address mappings of 65535");
   addr = "172.29." + (id & 255) + "." + (id & 65280);
   DNS.address_map.names[addr] = name;
   DNS.address_map.addrs[name] = addr;
  }
  return addr;
 },
 lookup_addr: addr => {
  if (DNS.address_map.names[addr]) {
   return DNS.address_map.names[addr];
  }
  return null;
 }
};

function ___syscall_accept4(fd, addr, addrlen, flags, d1, d2) {
 addr >>>= 0;
 addrlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  var newsock = sock.sock_ops.accept(sock);
  if (addr) {
   var errno = writeSockaddr(addr, newsock.family, DNS.lookup_name(newsock.daddr), newsock.dport, addrlen);
   assert(!errno);
  }
  return newsock.stream.fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var inetNtop4 = addr => (addr & 255) + "." + (addr >> 8 & 255) + "." + (addr >> 16 & 255) + "." + (addr >> 24 & 255);

var inetNtop6 = ints => {
 var str = "";
 var word = 0;
 var longest = 0;
 var lastzero = 0;
 var zstart = 0;
 var len = 0;
 var i = 0;
 var parts = [ ints[0] & 65535, ints[0] >> 16, ints[1] & 65535, ints[1] >> 16, ints[2] & 65535, ints[2] >> 16, ints[3] & 65535, ints[3] >> 16 ];
 var hasipv4 = true;
 var v4part = "";
 for (i = 0; i < 5; i++) {
  if (parts[i] !== 0) {
   hasipv4 = false;
   break;
  }
 }
 if (hasipv4) {
  v4part = inetNtop4(parts[6] | parts[7] << 16);
  if (parts[5] === -1) {
   str = "::ffff:";
   str += v4part;
   return str;
  }
  if (parts[5] === 0) {
   str = "::";
   if (v4part === "0.0.0.0") v4part = "";
   if (v4part === "0.0.0.1") v4part = "1";
   str += v4part;
   return str;
  }
 }
 for (word = 0; word < 8; word++) {
  if (parts[word] === 0) {
   if (word - lastzero > 1) {
    len = 0;
   }
   lastzero = word;
   len++;
  }
  if (len > longest) {
   longest = len;
   zstart = word - longest + 1;
  }
 }
 for (word = 0; word < 8; word++) {
  if (longest > 1) {
   if (parts[word] === 0 && word >= zstart && word < zstart + longest) {
    if (word === zstart) {
     str += ":";
     if (zstart === 0) str += ":";
    }
    continue;
   }
  }
  str += Number(_ntohs(parts[word] & 65535)).toString(16);
  str += word < 7 ? ":" : "";
 }
 return str;
};

var readSockaddr = (sa, salen) => {
 var family = HEAP16[sa >>> 1];
 var port = _ntohs(HEAPU16[sa + 2 >>> 1]);
 var addr;
 switch (family) {
 case 2:
  if (salen !== 16) {
   return {
    errno: 28
   };
  }
  addr = HEAP32[sa + 4 >>> 2];
  addr = inetNtop4(addr);
  break;

 case 10:
  if (salen !== 28) {
   return {
    errno: 28
   };
  }
  addr = [ HEAP32[sa + 8 >>> 2], HEAP32[sa + 12 >>> 2], HEAP32[sa + 16 >>> 2], HEAP32[sa + 20 >>> 2] ];
  addr = inetNtop6(addr);
  break;

 default:
  return {
   errno: 5
  };
 }
 return {
  family: family,
  addr: addr,
  port: port
 };
};

function getSocketAddress(addrp, addrlen, allowNull) {
 if (allowNull && addrp === 0) return null;
 var info = readSockaddr(addrp, addrlen);
 if (info.errno) throw new FS.ErrnoError(info.errno);
 info.addr = DNS.lookup_addr(info.addr) || info.addr;
 return info;
}

function ___syscall_bind(fd, addr, addrlen, d1, d2, d3) {
 addr >>>= 0;
 addrlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  var info = getSocketAddress(addr, addrlen);
  sock.sock_ops.bind(sock, info.addr, info.port);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_chdir(path) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  FS.chdir(path);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_chmod(path, mode) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  FS.chmod(path, mode);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_connect(fd, addr, addrlen, d1, d2, d3) {
 addr >>>= 0;
 addrlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  var info = getSocketAddress(addr, addrlen);
  sock.sock_ops.connect(sock, info.addr, info.port);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_dup(fd) {
 try {
  var old = SYSCALLS.getStreamFromFD(fd);
  return FS.createStream(old).fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_dup3(fd, newfd, flags) {
 try {
  var old = SYSCALLS.getStreamFromFD(fd);
  assert(!flags);
  if (old.fd === newfd) return -28;
  var existing = FS.getStream(newfd);
  if (existing) FS.close(existing);
  return FS.createStream(old, newfd).fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_faccessat(dirfd, path, amode, flags) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  assert(flags === 0);
  path = SYSCALLS.calculateAt(dirfd, path);
  if (amode & ~7) {
   return -28;
  }
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node) {
   return -44;
  }
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -2;
  }
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fallocate(fd, mode, offset_low, offset_high, len_low, len_high) {
 var offset = convertI32PairToI53Checked(offset_low, offset_high);
 var len = convertI32PairToI53Checked(len_low, len_high);
 try {
  if (isNaN(offset)) return 61;
  var stream = SYSCALLS.getStreamFromFD(fd);
  assert(mode === 0);
  FS.allocate(stream, offset, len);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fchmod(fd, mode) {
 try {
  FS.fchmod(fd, mode);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fchown32(fd, owner, group) {
 try {
  FS.fchown(fd, owner, group);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fchownat(dirfd, path, owner, group, flags) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  var nofollow = flags & 256;
  flags = flags & ~256;
  assert(flags === 0);
  path = SYSCALLS.calculateAt(dirfd, path);
  (nofollow ? FS.lchown : FS.chown)(path, owner, group);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fcntl64(fd, cmd, varargs) {
 varargs >>>= 0;
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -28;
    }
    var newStream;
    newStream = FS.createStream(stream, arg);
    return newStream.fd;
   }

  case 1:
  case 2:
   return 0;

  case 3:
   return stream.flags;

  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }

  case 5:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    HEAP16[arg + offset >>> 1] = 2;
    return 0;
   }

  case 6:
  case 7:
   return 0;

  case 16:
  case 8:
   return -28;

  case 9:
   setErrNo(28);
   return -1;

  default:
   {
    return -28;
   }
  }
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fdatasync(fd) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fstat64(fd, buf) {
 buf >>>= 0;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  return SYSCALLS.doStat(FS.stat, stream.path, buf);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_statfs64(path, size, buf) {
 path >>>= 0;
 size >>>= 0;
 buf >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  assert(size === 64);
  HEAP32[buf + 4 >>> 2] = 4096;
  HEAP32[buf + 40 >>> 2] = 4096;
  HEAP32[buf + 8 >>> 2] = 1e6;
  HEAP32[buf + 12 >>> 2] = 5e5;
  HEAP32[buf + 16 >>> 2] = 5e5;
  HEAP32[buf + 20 >>> 2] = FS.nextInode;
  HEAP32[buf + 24 >>> 2] = 1e6;
  HEAP32[buf + 28 >>> 2] = 42;
  HEAP32[buf + 44 >>> 2] = 2;
  HEAP32[buf + 36 >>> 2] = 255;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_fstatfs64(fd, size, buf) {
 size >>>= 0;
 buf >>>= 0;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  return ___syscall_statfs64(0, size, buf);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_ftruncate64(fd, length_low, length_high) {
 var length = convertI32PairToI53Checked(length_low, length_high);
 try {
  if (isNaN(length)) return 61;
  FS.ftruncate(fd, length);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {
 assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
};

function ___syscall_getcwd(buf, size) {
 buf >>>= 0;
 size >>>= 0;
 try {
  if (size === 0) return -28;
  var cwd = FS.cwd();
  var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;
  if (size < cwdLengthInBytes) return -68;
  stringToUTF8(cwd, buf, size);
  return cwdLengthInBytes;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_getdents64(fd, dirp, count) {
 dirp >>>= 0;
 count >>>= 0;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  if (!stream.getdents) {
   stream.getdents = FS.readdir(stream.path);
  }
  var struct_size = 280;
  var pos = 0;
  var off = FS.llseek(stream, 0, 1);
  var idx = Math.floor(off / struct_size);
  while (idx < stream.getdents.length && pos + struct_size <= count) {
   var id;
   var type;
   var name = stream.getdents[idx];
   if (name === ".") {
    id = stream.node.id;
    type = 4;
   } else if (name === "..") {
    var lookup = FS.lookupPath(stream.path, {
     parent: true
    });
    id = lookup.node.id;
    type = 4;
   } else {
    var child = FS.lookupNode(stream.node, name);
    id = child.id;
    type = FS.isChrdev(child.mode) ? 2 : FS.isDir(child.mode) ? 4 : FS.isLink(child.mode) ? 10 : 8;
   }
   assert(id);
   tempI64 = [ id >>> 0, (tempDouble = id, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
   HEAP32[dirp + pos >>> 2] = tempI64[0], HEAP32[dirp + pos + 4 >>> 2] = tempI64[1];
   tempI64 = [ (idx + 1) * struct_size >>> 0, (tempDouble = (idx + 1) * struct_size, 
   +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
   HEAP32[dirp + pos + 8 >>> 2] = tempI64[0], HEAP32[dirp + pos + 12 >>> 2] = tempI64[1];
   HEAP16[dirp + pos + 16 >>> 1] = 280;
   HEAP8[dirp + pos + 18 >>> 0] = type;
   stringToUTF8(name, dirp + pos + 19, 256);
   pos += struct_size;
   idx += 1;
  }
  FS.llseek(stream, idx * struct_size, 0);
  return pos;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_getpeername(fd, addr, addrlen, d1, d2, d3) {
 addr >>>= 0;
 addrlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  if (!sock.daddr) {
   return -53;
  }
  var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport, addrlen);
  assert(!errno);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_getsockname(fd, addr, addrlen, d1, d2, d3) {
 addr >>>= 0;
 addrlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(sock.saddr || "0.0.0.0"), sock.sport, addrlen);
  assert(!errno);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_getsockopt(fd, level, optname, optval, optlen, d1) {
 optval >>>= 0;
 optlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  if (level === 1) {
   if (optname === 4) {
    HEAP32[optval >>> 2] = sock.error;
    HEAP32[optlen >>> 2] = 4;
    sock.error = null;
    return 0;
   }
  }
  return -50;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_ioctl(fd, op, varargs) {
 varargs >>>= 0;
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (op) {
  case 21509:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21505:
   {
    if (!stream.tty) return -59;
    if (stream.tty.ops.ioctl_tcgets) {
     var termios = stream.tty.ops.ioctl_tcgets(stream);
     var argp = SYSCALLS.get();
     HEAP32[argp >>> 2] = termios.c_iflag || 0;
     HEAP32[argp + 4 >>> 2] = termios.c_oflag || 0;
     HEAP32[argp + 8 >>> 2] = termios.c_cflag || 0;
     HEAP32[argp + 12 >>> 2] = termios.c_lflag || 0;
     for (var i = 0; i < 32; i++) {
      HEAP8[argp + i + 17 >>> 0] = termios.c_cc[i] || 0;
     }
     return 0;
    }
    return 0;
   }

  case 21510:
  case 21511:
  case 21512:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -59;
    if (stream.tty.ops.ioctl_tcsets) {
     var argp = SYSCALLS.get();
     var c_iflag = HEAP32[argp >>> 2];
     var c_oflag = HEAP32[argp + 4 >>> 2];
     var c_cflag = HEAP32[argp + 8 >>> 2];
     var c_lflag = HEAP32[argp + 12 >>> 2];
     var c_cc = [];
     for (var i = 0; i < 32; i++) {
      c_cc.push(HEAP8[argp + i + 17 >>> 0]);
     }
     return stream.tty.ops.ioctl_tcsets(stream.tty, op, {
      c_iflag: c_iflag,
      c_oflag: c_oflag,
      c_cflag: c_cflag,
      c_lflag: c_lflag,
      c_cc: c_cc
     });
    }
    return 0;
   }

  case 21519:
   {
    if (!stream.tty) return -59;
    var argp = SYSCALLS.get();
    HEAP32[argp >>> 2] = 0;
    return 0;
   }

  case 21520:
   {
    if (!stream.tty) return -59;
    return -28;
   }

  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }

  case 21523:
   {
    if (!stream.tty) return -59;
    if (stream.tty.ops.ioctl_tiocgwinsz) {
     var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);
     var argp = SYSCALLS.get();
     HEAP16[argp >>> 1] = winsize[0];
     HEAP16[argp + 2 >>> 1] = winsize[1];
    }
    return 0;
   }

  case 21524:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21515:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  default:
   return -28;
  }
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_listen(fd, backlog) {
 try {
  var sock = getSocketFromFD(fd);
  sock.sock_ops.listen(sock, backlog);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_lstat64(path, buf) {
 path >>>= 0;
 buf >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  return SYSCALLS.doStat(FS.lstat, path, buf);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_mkdirat(dirfd, path, mode) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_newfstatat(dirfd, path, buf, flags) {
 path >>>= 0;
 buf >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  var nofollow = flags & 256;
  var allowEmpty = flags & 4096;
  flags = flags & ~6400;
  assert(!flags, `unknown flags in __syscall_newfstatat: ${flags}`);
  path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);
  return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_openat(dirfd, path, flags, varargs) {
 path >>>= 0;
 varargs >>>= 0;
 SYSCALLS.varargs = varargs;
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  var mode = varargs ? SYSCALLS.get() : 0;
  return FS.open(path, flags, mode).fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var PIPEFS = {
 BUCKET_BUFFER_SIZE: 8192,
 mount(mount) {
  return FS.createNode(null, "/", 16384 | 511, 0);
 },
 createPipe() {
  var pipe = {
   buckets: [],
   refcnt: 2
  };
  pipe.buckets.push({
   buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),
   offset: 0,
   roffset: 0
  });
  var rName = PIPEFS.nextname();
  var wName = PIPEFS.nextname();
  var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);
  var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);
  rNode.pipe = pipe;
  wNode.pipe = pipe;
  var readableStream = FS.createStream({
   path: rName,
   node: rNode,
   flags: 0,
   seekable: false,
   stream_ops: PIPEFS.stream_ops
  });
  rNode.stream = readableStream;
  var writableStream = FS.createStream({
   path: wName,
   node: wNode,
   flags: 1,
   seekable: false,
   stream_ops: PIPEFS.stream_ops
  });
  wNode.stream = writableStream;
  return {
   readable_fd: readableStream.fd,
   writable_fd: writableStream.fd
  };
 },
 stream_ops: {
  poll(stream) {
   var pipe = stream.node.pipe;
   if ((stream.flags & 2097155) === 1) {
    return 256 | 4;
   }
   if (pipe.buckets.length > 0) {
    for (var i = 0; i < pipe.buckets.length; i++) {
     var bucket = pipe.buckets[i];
     if (bucket.offset - bucket.roffset > 0) {
      return 64 | 1;
     }
    }
   }
   return 0;
  },
  ioctl(stream, request, varargs) {
   return 28;
  },
  fsync(stream) {
   return 28;
  },
  read(stream, buffer, offset, length, position) {
   var pipe = stream.node.pipe;
   var currentLength = 0;
   for (var i = 0; i < pipe.buckets.length; i++) {
    var bucket = pipe.buckets[i];
    currentLength += bucket.offset - bucket.roffset;
   }
   assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));
   var data = buffer.subarray(offset, offset + length);
   if (length <= 0) {
    return 0;
   }
   if (currentLength == 0) {
    throw new FS.ErrnoError(6);
   }
   var toRead = Math.min(currentLength, length);
   var totalRead = toRead;
   var toRemove = 0;
   for (var i = 0; i < pipe.buckets.length; i++) {
    var currBucket = pipe.buckets[i];
    var bucketSize = currBucket.offset - currBucket.roffset;
    if (toRead <= bucketSize) {
     var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);
     if (toRead < bucketSize) {
      tmpSlice = tmpSlice.subarray(0, toRead);
      currBucket.roffset += toRead;
     } else {
      toRemove++;
     }
     data.set(tmpSlice);
     break;
    } else {
     var tmpSlice = currBucket.buffer.subarray(currBucket.roffset, currBucket.offset);
     data.set(tmpSlice);
     data = data.subarray(tmpSlice.byteLength);
     toRead -= tmpSlice.byteLength;
     toRemove++;
    }
   }
   if (toRemove && toRemove == pipe.buckets.length) {
    toRemove--;
    pipe.buckets[toRemove].offset = 0;
    pipe.buckets[toRemove].roffset = 0;
   }
   pipe.buckets.splice(0, toRemove);
   return totalRead;
  },
  write(stream, buffer, offset, length, position) {
   var pipe = stream.node.pipe;
   assert(buffer instanceof ArrayBuffer || ArrayBuffer.isView(buffer));
   var data = buffer.subarray(offset, offset + length);
   var dataLen = data.byteLength;
   if (dataLen <= 0) {
    return 0;
   }
   var currBucket = null;
   if (pipe.buckets.length == 0) {
    currBucket = {
     buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),
     offset: 0,
     roffset: 0
    };
    pipe.buckets.push(currBucket);
   } else {
    currBucket = pipe.buckets[pipe.buckets.length - 1];
   }
   assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);
   var freeBytesInCurrBuffer = PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;
   if (freeBytesInCurrBuffer >= dataLen) {
    currBucket.buffer.set(data, currBucket.offset);
    currBucket.offset += dataLen;
    return dataLen;
   } else if (freeBytesInCurrBuffer > 0) {
    currBucket.buffer.set(data.subarray(0, freeBytesInCurrBuffer), currBucket.offset);
    currBucket.offset += freeBytesInCurrBuffer;
    data = data.subarray(freeBytesInCurrBuffer, data.byteLength);
   }
   var numBuckets = data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE | 0;
   var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;
   for (var i = 0; i < numBuckets; i++) {
    var newBucket = {
     buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),
     offset: PIPEFS.BUCKET_BUFFER_SIZE,
     roffset: 0
    };
    pipe.buckets.push(newBucket);
    newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));
    data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength);
   }
   if (remElements > 0) {
    var newBucket = {
     buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),
     offset: data.byteLength,
     roffset: 0
    };
    pipe.buckets.push(newBucket);
    newBucket.buffer.set(data);
   }
   return dataLen;
  },
  close(stream) {
   var pipe = stream.node.pipe;
   pipe.refcnt--;
   if (pipe.refcnt === 0) {
    pipe.buckets = null;
   }
  }
 },
 nextname() {
  if (!PIPEFS.nextname.current) {
   PIPEFS.nextname.current = 0;
  }
  return "pipe[" + PIPEFS.nextname.current++ + "]";
 }
};

function ___syscall_pipe(fdPtr) {
 fdPtr >>>= 0;
 try {
  if (fdPtr == 0) {
   throw new FS.ErrnoError(21);
  }
  var res = PIPEFS.createPipe();
  HEAP32[fdPtr >>> 2] = res.readable_fd;
  HEAP32[fdPtr + 4 >>> 2] = res.writable_fd;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_poll(fds, nfds, timeout) {
 fds >>>= 0;
 try {
  var nonzero = 0;
  for (var i = 0; i < nfds; i++) {
   var pollfd = fds + 8 * i;
   var fd = HEAP32[pollfd >>> 2];
   var events = HEAP16[pollfd + 4 >>> 1];
   var mask = 32;
   var stream = FS.getStream(fd);
   if (stream) {
    mask = SYSCALLS.DEFAULT_POLLMASK;
    if (stream.stream_ops.poll) {
     mask = stream.stream_ops.poll(stream, -1);
    }
   }
   mask &= events | 8 | 16;
   if (mask) nonzero++;
   HEAP16[pollfd + 6 >>> 1] = mask;
  }
  return nonzero;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_readlinkat(dirfd, path, buf, bufsize) {
 path >>>= 0;
 buf >>>= 0;
 bufsize >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  if (bufsize <= 0) return -28;
  var ret = FS.readlink(path);
  var len = Math.min(bufsize, lengthBytesUTF8(ret));
  var endChar = HEAP8[buf + len >>> 0];
  stringToUTF8(ret, buf, bufsize + 1);
  HEAP8[buf + len >>> 0] = endChar;
  return len;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_recvfrom(fd, buf, len, flags, addr, addrlen) {
 buf >>>= 0;
 len >>>= 0;
 addr >>>= 0;
 addrlen >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  var msg = sock.sock_ops.recvmsg(sock, len);
  if (!msg) return 0;
  if (addr) {
   var errno = writeSockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port, addrlen);
   assert(!errno);
  }
  HEAPU8.set(msg.buffer, buf >>> 0);
  return msg.buffer.byteLength;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {
 oldpath >>>= 0;
 newpath >>>= 0;
 try {
  oldpath = SYSCALLS.getStr(oldpath);
  newpath = SYSCALLS.getStr(newpath);
  oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);
  newpath = SYSCALLS.calculateAt(newdirfd, newpath);
  FS.rename(oldpath, newpath);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_rmdir(path) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  FS.rmdir(path);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_sendto(fd, message, length, flags, addr, addr_len) {
 message >>>= 0;
 length >>>= 0;
 addr >>>= 0;
 addr_len >>>= 0;
 try {
  var sock = getSocketFromFD(fd);
  var dest = getSocketAddress(addr, addr_len, true);
  if (!dest) {
   return FS.write(sock.stream, HEAP8, message, length);
  }
  return sock.sock_ops.sendmsg(sock, HEAP8, message, length, dest.addr, dest.port);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_socket(domain, type, protocol) {
 try {
  var sock = SOCKFS.createSocket(domain, type, protocol);
  assert(sock.stream.fd < 64);
  return sock.stream.fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_stat64(path, buf) {
 path >>>= 0;
 buf >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  return SYSCALLS.doStat(FS.stat, path, buf);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_symlink(target, linkpath) {
 target >>>= 0;
 linkpath >>>= 0;
 try {
  target = SYSCALLS.getStr(target);
  linkpath = SYSCALLS.getStr(linkpath);
  FS.symlink(target, linkpath);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_unlinkat(dirfd, path, flags) {
 path >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  if (flags === 0) {
   FS.unlink(path);
  } else if (flags === 512) {
   FS.rmdir(path);
  } else {
   abort("Invalid flags passed to unlinkat");
  }
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function readI53FromI64(ptr) {
 return HEAPU32[ptr >>> 2] + HEAP32[ptr + 4 >>> 2] * 4294967296;
}

function ___syscall_utimensat(dirfd, path, times, flags) {
 path >>>= 0;
 times >>>= 0;
 try {
  path = SYSCALLS.getStr(path);
  assert(flags === 0);
  path = SYSCALLS.calculateAt(dirfd, path, true);
  if (!times) {
   var atime = Date.now();
   var mtime = atime;
  } else {
   var seconds = readI53FromI64(times);
   var nanoseconds = HEAP32[times + 8 >>> 2];
   atime = seconds * 1e3 + nanoseconds / (1e3 * 1e3);
   times += 16;
   seconds = readI53FromI64(times);
   nanoseconds = HEAP32[times + 8 >>> 2];
   mtime = seconds * 1e3 + nanoseconds / (1e3 * 1e3);
  }
  FS.utime(path, atime, mtime);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var nowIsMonotonic = true;

var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;

var __emscripten_throw_longjmp = () => {
 throw Infinity;
};

function __gmtime_js(time_low, time_high, tmPtr) {
 var time = convertI32PairToI53Checked(time_low, time_high);
 tmPtr >>>= 0;
 var date = new Date(time * 1e3);
 HEAP32[tmPtr >>> 2] = date.getUTCSeconds();
 HEAP32[tmPtr + 4 >>> 2] = date.getUTCMinutes();
 HEAP32[tmPtr + 8 >>> 2] = date.getUTCHours();
 HEAP32[tmPtr + 12 >>> 2] = date.getUTCDate();
 HEAP32[tmPtr + 16 >>> 2] = date.getUTCMonth();
 HEAP32[tmPtr + 20 >>> 2] = date.getUTCFullYear() - 1900;
 HEAP32[tmPtr + 24 >>> 2] = date.getUTCDay();
 var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
 var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;
 HEAP32[tmPtr + 28 >>> 2] = yday;
}

var isLeapYear = year => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);

var MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];

var MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];

var ydayFromDate = date => {
 var leap = isLeapYear(date.getFullYear());
 var monthDaysCumulative = leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE;
 var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;
 return yday;
};

function __localtime_js(time_low, time_high, tmPtr) {
 var time = convertI32PairToI53Checked(time_low, time_high);
 tmPtr >>>= 0;
 var date = new Date(time * 1e3);
 HEAP32[tmPtr >>> 2] = date.getSeconds();
 HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();
 HEAP32[tmPtr + 8 >>> 2] = date.getHours();
 HEAP32[tmPtr + 12 >>> 2] = date.getDate();
 HEAP32[tmPtr + 16 >>> 2] = date.getMonth();
 HEAP32[tmPtr + 20 >>> 2] = date.getFullYear() - 1900;
 HEAP32[tmPtr + 24 >>> 2] = date.getDay();
 var yday = ydayFromDate(date) | 0;
 HEAP32[tmPtr + 28 >>> 2] = yday;
 HEAP32[tmPtr + 36 >>> 2] = -(date.getTimezoneOffset() * 60);
 var start = new Date(date.getFullYear(), 0, 1);
 var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;
 HEAP32[tmPtr + 32 >>> 2] = dst;
}

var __mktime_js = function(tmPtr) {
 tmPtr >>>= 0;
 var ret = (() => {
  var date = new Date(HEAP32[tmPtr + 20 >>> 2] + 1900, HEAP32[tmPtr + 16 >>> 2], HEAP32[tmPtr + 12 >>> 2], HEAP32[tmPtr + 8 >>> 2], HEAP32[tmPtr + 4 >>> 2], HEAP32[tmPtr >>> 2], 0);
  var dst = HEAP32[tmPtr + 32 >>> 2];
  var guessedOffset = date.getTimezoneOffset();
  var start = new Date(date.getFullYear(), 0, 1);
  var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();
  var winterOffset = start.getTimezoneOffset();
  var dstOffset = Math.min(winterOffset, summerOffset);
  if (dst < 0) {
   HEAP32[tmPtr + 32 >>> 2] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);
  } else if (dst > 0 != (dstOffset == guessedOffset)) {
   var nonDstOffset = Math.max(winterOffset, summerOffset);
   var trueOffset = dst > 0 ? dstOffset : nonDstOffset;
   date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);
  }
  HEAP32[tmPtr + 24 >>> 2] = date.getDay();
  var yday = ydayFromDate(date) | 0;
  HEAP32[tmPtr + 28 >>> 2] = yday;
  HEAP32[tmPtr >>> 2] = date.getSeconds();
  HEAP32[tmPtr + 4 >>> 2] = date.getMinutes();
  HEAP32[tmPtr + 8 >>> 2] = date.getHours();
  HEAP32[tmPtr + 12 >>> 2] = date.getDate();
  HEAP32[tmPtr + 16 >>> 2] = date.getMonth();
  HEAP32[tmPtr + 20 >>> 2] = date.getYear();
  return date.getTime() / 1e3;
 })();
 return setTempRet0((tempDouble = ret, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)), 
 ret >>> 0;
};

function __mmap_js(len, prot, flags, fd, offset_low, offset_high, allocated, addr) {
 len >>>= 0;
 var offset = convertI32PairToI53Checked(offset_low, offset_high);
 allocated >>>= 0;
 addr >>>= 0;
 try {
  if (isNaN(offset)) return 61;
  var stream = SYSCALLS.getStreamFromFD(fd);
  var res = FS.mmap(stream, len, offset, prot, flags);
  var ptr = res.ptr;
  HEAP32[allocated >>> 2] = res.allocated;
  HEAPU32[addr >>> 2] = ptr;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function __msync_js(addr, len, prot, flags, fd, offset_low, offset_high) {
 addr >>>= 0;
 len >>>= 0;
 var offset = convertI32PairToI53Checked(offset_low, offset_high);
 try {
  if (isNaN(offset)) return 61;
  SYSCALLS.doMsync(addr, SYSCALLS.getStreamFromFD(fd), len, flags, offset);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function __munmap_js(addr, len, prot, flags, fd, offset_low, offset_high) {
 addr >>>= 0;
 len >>>= 0;
 var offset = convertI32PairToI53Checked(offset_low, offset_high);
 try {
  if (isNaN(offset)) return 61;
  var stream = SYSCALLS.getStreamFromFD(fd);
  if (prot & 2) {
   SYSCALLS.doMsync(addr, stream, len, flags, offset);
  }
  FS.munmap(stream);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var timers = {};

var handleException = e => {
 if (e instanceof ExitStatus || e == "unwind") {
  return EXITSTATUS;
 }
 checkStackCookie();
 if (e instanceof WebAssembly.RuntimeError) {
  if (_emscripten_stack_get_current() <= 0) {
   err("Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)");
  }
 }
 quit_(1, e);
};

var _proc_exit = code => {
 EXITSTATUS = code;
 if (!keepRuntimeAlive()) {
  if (Module["onExit"]) Module["onExit"](code);
  ABORT = true;
 }
 quit_(code, new ExitStatus(code));
};

var exitJS = (status, implicit) => {
 EXITSTATUS = status;
 if (!keepRuntimeAlive()) {
  exitRuntime();
 }
 if (keepRuntimeAlive() && !implicit) {
  var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;
  readyPromiseReject(msg);
  err(msg);
 }
 _proc_exit(status);
};

var _exit = exitJS;

var maybeExit = () => {
 if (runtimeExited) {
  return;
 }
 if (!keepRuntimeAlive()) {
  try {
   _exit(EXITSTATUS);
  } catch (e) {
   handleException(e);
  }
 }
};

var callUserCallback = func => {
 if (runtimeExited || ABORT) {
  err("user callback triggered after runtime exited or application aborted.  Ignoring.");
  return;
 }
 try {
  func();
  maybeExit();
 } catch (e) {
  handleException(e);
 }
};

var _emscripten_get_now;

_emscripten_get_now = () => performance.now();

var __setitimer_js = (which, timeout_ms) => {
 if (timers[which]) {
  clearTimeout(timers[which].id);
  delete timers[which];
 }
 if (!timeout_ms) return 0;
 var id = setTimeout((() => {
  assert(which in timers);
  delete timers[which];
  callUserCallback((() => __emscripten_timeout(which, _emscripten_get_now())));
 }), timeout_ms);
 timers[which] = {
  id: id,
  timeout_ms: timeout_ms
 };
 return 0;
};

var __timegm_js = function(tmPtr) {
 tmPtr >>>= 0;
 var ret = (() => {
  var time = Date.UTC(HEAP32[tmPtr + 20 >>> 2] + 1900, HEAP32[tmPtr + 16 >>> 2], HEAP32[tmPtr + 12 >>> 2], HEAP32[tmPtr + 8 >>> 2], HEAP32[tmPtr + 4 >>> 2], HEAP32[tmPtr >>> 2], 0);
  var date = new Date(time);
  HEAP32[tmPtr + 24 >>> 2] = date.getUTCDay();
  var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
  var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;
  HEAP32[tmPtr + 28 >>> 2] = yday;
  return date.getTime() / 1e3;
 })();
 return setTempRet0((tempDouble = ret, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)), 
 ret >>> 0;
};

var stringToNewUTF8 = str => {
 var size = lengthBytesUTF8(str) + 1;
 var ret = _malloc(size);
 if (ret) stringToUTF8(str, ret, size);
 return ret;
};

function __tzset_js(timezone, daylight, tzname) {
 timezone >>>= 0;
 daylight >>>= 0;
 tzname >>>= 0;
 var currentYear = (new Date).getFullYear();
 var winter = new Date(currentYear, 0, 1);
 var summer = new Date(currentYear, 6, 1);
 var winterOffset = winter.getTimezoneOffset();
 var summerOffset = summer.getTimezoneOffset();
 var stdTimezoneOffset = Math.max(winterOffset, summerOffset);
 HEAPU32[timezone >>> 2] = stdTimezoneOffset * 60;
 HEAP32[daylight >>> 2] = Number(winterOffset != summerOffset);
 function extractZone(date) {
  var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
  return match ? match[1] : "GMT";
 }
 var winterName = extractZone(winter);
 var summerName = extractZone(summer);
 var winterNamePtr = stringToNewUTF8(winterName);
 var summerNamePtr = stringToNewUTF8(summerName);
 if (summerOffset < winterOffset) {
  HEAPU32[tzname >>> 2] = winterNamePtr;
  HEAPU32[tzname + 4 >>> 2] = summerNamePtr;
 } else {
  HEAPU32[tzname >>> 2] = summerNamePtr;
  HEAPU32[tzname + 4 >>> 2] = winterNamePtr;
 }
}

var _abort = () => {
 abort("native code called abort()");
};

var readEmAsmArgsArray = [];

var readEmAsmArgs = (sigPtr, buf) => {
 assert(Array.isArray(readEmAsmArgsArray));
 assert(buf % 16 == 0);
 readEmAsmArgsArray.length = 0;
 var ch;
 buf >>= 2;
 while (ch = HEAPU8[sigPtr++ >>> 0]) {
  var chr = String.fromCharCode(ch);
  var validChars = [ "d", "f", "i" ];
  assert(validChars.includes(chr), `Invalid character ${ch}("${chr}") in readEmAsmArgs! Use only [${validChars}], and do not specify "v" for void return argument.`);
  buf += ch != 105 & buf;
  readEmAsmArgsArray.push(ch == 105 ? HEAP32[buf >>> 0] : HEAPF64[buf++ >>> 1]);
  ++buf;
 }
 return readEmAsmArgsArray;
};

var runEmAsmFunction = (code, sigPtr, argbuf) => {
 var args = readEmAsmArgs(sigPtr, argbuf);
 if (!ASM_CONSTS.hasOwnProperty(code)) abort(`No EM_ASM constant found at address ${code}`);
 return ASM_CONSTS[code].apply(null, args);
};

function _emscripten_asm_const_int(code, sigPtr, argbuf) {
 code >>>= 0;
 sigPtr >>>= 0;
 argbuf >>>= 0;
 return runEmAsmFunction(code, sigPtr, argbuf);
}

function _emscripten_asm_const_ptr(code, sigPtr, argbuf) {
 code >>>= 0;
 sigPtr >>>= 0;
 argbuf >>>= 0;
 return runEmAsmFunction(code, sigPtr, argbuf);
}

function _emscripten_console_error(str) {
 str >>>= 0;
 assert(typeof str == "number");
 console.error(UTF8ToString(str));
}

function _emscripten_date_now() {
 return Date.now();
}

var getHeapMax = () => 4294901760;

function _emscripten_get_heap_max() {
 return getHeapMax();
}

var _emscripten_get_now_res = () => 1e3;

function _emscripten_memcpy_big(dest, src, num) {
 dest >>>= 0;
 src >>>= 0;
 num >>>= 0;
 return HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);
}

var growMemory = size => {
 var b = wasmMemory.buffer;
 var pages = size - b.byteLength + 65535 >>> 16;
 try {
  wasmMemory.grow(pages);
  updateMemoryViews();
  return 1;
 } catch (e) {
  err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);
 }
};

function _emscripten_resize_heap(requestedSize) {
 requestedSize >>>= 0;
 var oldSize = HEAPU8.length;
 assert(requestedSize > oldSize);
 var maxHeapSize = getHeapMax();
 if (requestedSize > maxHeapSize) {
  err(`Cannot enlarge memory, asked to go up to ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);
  return false;
 }
 var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;
 for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);
  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
  var replacement = growMemory(newSize);
  if (replacement) {
   return true;
  }
 }
 err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);
 return false;
}

var ENV = {};

var getExecutableName = () => thisProgram || "./this.program";

var getEnvStrings = () => {
 if (!getEnvStrings.strings) {
  var lang = (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8";
  var env = {
   "USER": "web_user",
   "LOGNAME": "web_user",
   "PATH": "/",
   "PWD": "/",
   "HOME": "/home/web_user",
   "LANG": lang,
   "_": getExecutableName()
  };
  for (var x in ENV) {
   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];
  }
  var strings = [];
  for (var x in env) {
   strings.push(`${x}=${env[x]}`);
  }
  getEnvStrings.strings = strings;
 }
 return getEnvStrings.strings;
};

var stringToAscii = (str, buffer) => {
 for (var i = 0; i < str.length; ++i) {
  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));
  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);
 }
 HEAP8[buffer >>> 0] = 0;
};

function _environ_get(__environ, environ_buf) {
 __environ >>>= 0;
 environ_buf >>>= 0;
 var bufSize = 0;
 getEnvStrings().forEach((function(string, i) {
  var ptr = environ_buf + bufSize;
  HEAPU32[__environ + i * 4 >>> 2] = ptr;
  stringToAscii(string, ptr);
  bufSize += string.length + 1;
 }));
 return 0;
}

function _environ_sizes_get(penviron_count, penviron_buf_size) {
 penviron_count >>>= 0;
 penviron_buf_size >>>= 0;
 var strings = getEnvStrings();
 HEAPU32[penviron_count >>> 2] = strings.length;
 var bufSize = 0;
 strings.forEach((function(string) {
  bufSize += string.length + 1;
 }));
 HEAPU32[penviron_buf_size >>> 2] = bufSize;
 return 0;
}

function _fd_close(fd) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function _fd_fdstat_get(fd, pbuf) {
 pbuf >>>= 0;
 try {
  var rightsBase = 0;
  var rightsInheriting = 0;
  var flags = 0;
  {
   var stream = SYSCALLS.getStreamFromFD(fd);
   var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;
  }
  HEAP8[pbuf >>> 0] = type;
  HEAP16[pbuf + 2 >>> 1] = flags;
  tempI64 = [ rightsBase >>> 0, (tempDouble = rightsBase, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[pbuf + 8 >>> 2] = tempI64[0], HEAP32[pbuf + 12 >>> 2] = tempI64[1];
  tempI64 = [ rightsInheriting >>> 0, (tempDouble = rightsInheriting, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[pbuf + 16 >>> 2] = tempI64[0], HEAP32[pbuf + 20 >>> 2] = tempI64[1];
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

var doReadv = (stream, iov, iovcnt, offset) => {
 var ret = 0;
 for (var i = 0; i < iovcnt; i++) {
  var ptr = HEAPU32[iov >>> 2];
  var len = HEAPU32[iov + 4 >>> 2];
  iov += 8;
  var curr = FS.read(stream, HEAP8, ptr, len, offset);
  if (curr < 0) return -1;
  ret += curr;
  if (curr < len) break;
  if (typeof offset !== "undefined") {
   offset += curr;
  }
 }
 return ret;
};

function _fd_read(fd, iov, iovcnt, pnum) {
 iov >>>= 0;
 iovcnt >>>= 0;
 pnum >>>= 0;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = doReadv(stream, iov, iovcnt);
  HEAPU32[pnum >>> 2] = num;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
 var offset = convertI32PairToI53Checked(offset_low, offset_high);
 newOffset >>>= 0;
 try {
  if (isNaN(offset)) return 61;
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.llseek(stream, offset, whence);
  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function _fd_sync(fd) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  return Asyncify.handleSleep((function(wakeUp) {
   var mount = stream.node.mount;
   if (!mount.type.syncfs) {
    wakeUp(0);
    return;
   }
   mount.type.syncfs(mount, false, (function(err) {
    if (err) {
     wakeUp((function() {
      return 29;
     }));
     return;
    }
    wakeUp(0);
   }));
  }));
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

var doWritev = (stream, iov, iovcnt, offset) => {
 var ret = 0;
 for (var i = 0; i < iovcnt; i++) {
  var ptr = HEAPU32[iov >>> 2];
  var len = HEAPU32[iov + 4 >>> 2];
  iov += 8;
  var curr = FS.write(stream, HEAP8, ptr, len, offset);
  if (curr < 0) return -1;
  ret += curr;
  if (typeof offset !== "undefined") {
   offset += curr;
  }
 }
 return ret;
};

function _fd_write(fd, iov, iovcnt, pnum) {
 iov >>>= 0;
 iovcnt >>>= 0;
 pnum >>>= 0;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = doWritev(stream, iov, iovcnt);
  HEAPU32[pnum >>> 2] = num;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function _getaddrinfo(node, service, hint, out) {
 node >>>= 0;
 service >>>= 0;
 hint >>>= 0;
 out >>>= 0;
 var addrs = [];
 var canon = null;
 var addr = 0;
 var port = 0;
 var flags = 0;
 var family = 0;
 var type = 0;
 var proto = 0;
 var ai, last;
 function allocaddrinfo(family, type, proto, canon, addr, port) {
  var sa, salen, ai;
  var errno;
  salen = family === 10 ? 28 : 16;
  addr = family === 10 ? inetNtop6(addr) : inetNtop4(addr);
  sa = _malloc(salen);
  errno = writeSockaddr(sa, family, addr, port);
  assert(!errno);
  ai = _malloc(32);
  HEAP32[ai + 4 >>> 2] = family;
  HEAP32[ai + 8 >>> 2] = type;
  HEAP32[ai + 12 >>> 2] = proto;
  HEAPU32[ai + 24 >>> 2] = canon;
  HEAPU32[ai + 20 >>> 2] = sa;
  if (family === 10) {
   HEAP32[ai + 16 >>> 2] = 28;
  } else {
   HEAP32[ai + 16 >>> 2] = 16;
  }
  HEAP32[ai + 28 >>> 2] = 0;
  return ai;
 }
 if (hint) {
  flags = HEAP32[hint >>> 2];
  family = HEAP32[hint + 4 >>> 2];
  type = HEAP32[hint + 8 >>> 2];
  proto = HEAP32[hint + 12 >>> 2];
 }
 if (type && !proto) {
  proto = type === 2 ? 17 : 6;
 }
 if (!type && proto) {
  type = proto === 17 ? 2 : 1;
 }
 if (proto === 0) {
  proto = 6;
 }
 if (type === 0) {
  type = 1;
 }
 if (!node && !service) {
  return -2;
 }
 if (flags & ~(1 | 2 | 4 | 1024 | 8 | 16 | 32)) {
  return -1;
 }
 if (hint !== 0 && HEAP32[hint >>> 2] & 2 && !node) {
  return -1;
 }
 if (flags & 32) {
  return -2;
 }
 if (type !== 0 && type !== 1 && type !== 2) {
  return -7;
 }
 if (family !== 0 && family !== 2 && family !== 10) {
  return -6;
 }
 if (service) {
  service = UTF8ToString(service);
  port = parseInt(service, 10);
  if (isNaN(port)) {
   if (flags & 1024) {
    return -2;
   }
   return -8;
  }
 }
 if (!node) {
  if (family === 0) {
   family = 2;
  }
  if ((flags & 1) === 0) {
   if (family === 2) {
    addr = _htonl(2130706433);
   } else {
    addr = [ 0, 0, 0, 1 ];
   }
  }
  ai = allocaddrinfo(family, type, proto, null, addr, port);
  HEAPU32[out >>> 2] = ai;
  return 0;
 }
 node = UTF8ToString(node);
 addr = inetPton4(node);
 if (addr !== null) {
  if (family === 0 || family === 2) {
   family = 2;
  } else if (family === 10 && flags & 8) {
   addr = [ 0, 0, _htonl(65535), addr ];
   family = 10;
  } else {
   return -2;
  }
 } else {
  addr = inetPton6(node);
  if (addr !== null) {
   if (family === 0 || family === 10) {
    family = 10;
   } else {
    return -2;
   }
  }
 }
 if (addr != null) {
  ai = allocaddrinfo(family, type, proto, node, addr, port);
  HEAPU32[out >>> 2] = ai;
  return 0;
 }
 if (flags & 4) {
  return -2;
 }
 node = DNS.lookup_name(node);
 addr = inetPton4(node);
 if (family === 0) {
  family = 2;
 } else if (family === 10) {
  addr = [ 0, 0, _htonl(65535), addr ];
 }
 ai = allocaddrinfo(family, type, proto, null, addr, port);
 HEAPU32[out >>> 2] = ai;
 return 0;
}

function _getcontext() {
 err("missing function: getcontext");
 abort(-1);
}

function _getdtablesize() {
 err("missing function: getdtablesize");
 abort(-1);
}

var getHostByName = name => {
 var ret = _malloc(20);
 var nameBuf = stringToNewUTF8(name);
 HEAPU32[ret >>> 2] = nameBuf;
 var aliasesBuf = _malloc(4);
 HEAPU32[aliasesBuf >>> 2] = 0;
 HEAPU32[ret + 4 >>> 2] = aliasesBuf;
 var afinet = 2;
 HEAP32[ret + 8 >>> 2] = afinet;
 HEAP32[ret + 12 >>> 2] = 4;
 var addrListBuf = _malloc(12);
 HEAPU32[addrListBuf >>> 2] = addrListBuf + 8;
 HEAPU32[addrListBuf + 4 >>> 2] = 0;
 HEAP32[addrListBuf + 8 >>> 2] = inetPton4(DNS.lookup_name(name));
 HEAPU32[ret + 16 >>> 2] = addrListBuf;
 return ret;
};

function _gethostbyname(name) {
 name >>>= 0;
 return getHostByName(UTF8ToString(name));
}

function _gethostbyname_r(name, ret, buf, buflen, out, err) {
 name >>>= 0;
 ret >>>= 0;
 buf >>>= 0;
 buflen >>>= 0;
 out >>>= 0;
 err >>>= 0;
 var data = _gethostbyname(name);
 _memcpy(ret, data, 20);
 _free(data);
 HEAP32[err >>> 2] = 0;
 HEAPU32[out >>> 2] = ret;
 return 0;
}

function _getloadavg(loadavg, nelem) {
 loadavg >>>= 0;
 var limit = Math.min(nelem, 3);
 var doubleSize = 8;
 for (var i = 0; i < limit; i++) {
  HEAPF64[loadavg + i * doubleSize >>> 3] = .1;
 }
 return limit;
}

function _getnameinfo(sa, salen, node, nodelen, serv, servlen, flags) {
 sa >>>= 0;
 node >>>= 0;
 serv >>>= 0;
 var info = readSockaddr(sa, salen);
 if (info.errno) {
  return -6;
 }
 var port = info.port;
 var addr = info.addr;
 var overflowed = false;
 if (node && nodelen) {
  var lookup;
  if (flags & 1 || !(lookup = DNS.lookup_addr(addr))) {
   if (flags & 8) {
    return -2;
   }
  } else {
   addr = lookup;
  }
  var numBytesWrittenExclNull = stringToUTF8(addr, node, nodelen);
  if (numBytesWrittenExclNull + 1 >= nodelen) {
   overflowed = true;
  }
 }
 if (serv && servlen) {
  port = "" + port;
  var numBytesWrittenExclNull = stringToUTF8(port, serv, servlen);
  if (numBytesWrittenExclNull + 1 >= servlen) {
   overflowed = true;
  }
 }
 if (overflowed) {
  return -12;
 }
 return 0;
}

var Protocols = {
 list: [],
 map: {}
};

var _setprotoent = stayopen => {
 function allocprotoent(name, proto, aliases) {
  var nameBuf = _malloc(name.length + 1);
  stringToAscii(name, nameBuf);
  var j = 0;
  var length = aliases.length;
  var aliasListBuf = _malloc((length + 1) * 4);
  for (var i = 0; i < length; i++, j += 4) {
   var alias = aliases[i];
   var aliasBuf = _malloc(alias.length + 1);
   stringToAscii(alias, aliasBuf);
   HEAPU32[aliasListBuf + j >>> 2] = aliasBuf;
  }
  HEAPU32[aliasListBuf + j >>> 2] = 0;
  var pe = _malloc(12);
  HEAPU32[pe >>> 2] = nameBuf;
  HEAPU32[pe + 4 >>> 2] = aliasListBuf;
  HEAP32[pe + 8 >>> 2] = proto;
  return pe;
 }
 var list = Protocols.list;
 var map = Protocols.map;
 if (list.length === 0) {
  var entry = allocprotoent("tcp", 6, [ "TCP" ]);
  list.push(entry);
  map["tcp"] = map["6"] = entry;
  entry = allocprotoent("udp", 17, [ "UDP" ]);
  list.push(entry);
  map["udp"] = map["17"] = entry;
 }
 _setprotoent.index = 0;
};

function _getprotobyname(name) {
 name >>>= 0;
 name = UTF8ToString(name);
 _setprotoent(true);
 var result = Protocols.map[name];
 return result;
}

function _getprotobynumber(number) {
 _setprotoent(true);
 var result = Protocols.map[number];
 return result;
}

function _makecontext() {
 err("missing function: makecontext");
 abort(-1);
}

var arraySum = (array, index) => {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) {}
 return sum;
};

var MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

var MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

var addDays = (date, days) => {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
};

var writeArrayToMemory = (array, buffer) => {
 assert(array.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)");
 HEAP8.set(array, buffer >>> 0);
};

function _strftime(s, maxsize, format, tm) {
 s >>>= 0;
 maxsize >>>= 0;
 format >>>= 0;
 tm >>>= 0;
 var tm_zone = HEAP32[tm + 40 >>> 2];
 var date = {
  tm_sec: HEAP32[tm >>> 2],
  tm_min: HEAP32[tm + 4 >>> 2],
  tm_hour: HEAP32[tm + 8 >>> 2],
  tm_mday: HEAP32[tm + 12 >>> 2],
  tm_mon: HEAP32[tm + 16 >>> 2],
  tm_year: HEAP32[tm + 20 >>> 2],
  tm_wday: HEAP32[tm + 24 >>> 2],
  tm_yday: HEAP32[tm + 28 >>> 2],
  tm_isdst: HEAP32[tm + 32 >>> 2],
  tm_gmtoff: HEAP32[tm + 36 >>> 2],
  tm_zone: tm_zone ? UTF8ToString(tm_zone) : ""
 };
 var pattern = UTF8ToString(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S",
  "%Ec": "%c",
  "%EC": "%C",
  "%Ex": "%m/%d/%y",
  "%EX": "%H:%M:%S",
  "%Ey": "%y",
  "%EY": "%Y",
  "%Od": "%d",
  "%Oe": "%e",
  "%OH": "%H",
  "%OI": "%I",
  "%Om": "%m",
  "%OM": "%M",
  "%OS": "%S",
  "%Ou": "%u",
  "%OU": "%U",
  "%OV": "%V",
  "%Ow": "%w",
  "%OW": "%W",
  "%Oy": "%y"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value == "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);

  case 1:
   return janFourth;

  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);

  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);

  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);

  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);

  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   }
   return thisDate.getFullYear();
  }
  return thisDate.getFullYear() - 1;
 }
 var EXPANSION_RULES_2 = {
  "%a": date => WEEKDAYS[date.tm_wday].substring(0, 3),
  "%A": date => WEEKDAYS[date.tm_wday],
  "%b": date => MONTHS[date.tm_mon].substring(0, 3),
  "%B": date => MONTHS[date.tm_mon],
  "%C": date => {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  },
  "%d": date => leadingNulls(date.tm_mday, 2),
  "%e": date => leadingSomething(date.tm_mday, 2, " "),
  "%g": date => getWeekBasedYear(date).toString().substring(2),
  "%G": date => getWeekBasedYear(date),
  "%H": date => leadingNulls(date.tm_hour, 2),
  "%I": date => {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  },
  "%j": date => leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3),
  "%m": date => leadingNulls(date.tm_mon + 1, 2),
  "%M": date => leadingNulls(date.tm_min, 2),
  "%n": () => "\n",
  "%p": date => {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   }
   return "PM";
  },
  "%S": date => leadingNulls(date.tm_sec, 2),
  "%t": () => "\t",
  "%u": date => date.tm_wday || 7,
  "%U": date => {
   var days = date.tm_yday + 7 - date.tm_wday;
   return leadingNulls(Math.floor(days / 7), 2);
  },
  "%V": date => {
   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);
   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {
    val++;
   }
   if (!val) {
    val = 52;
    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;
    if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {
     val++;
    }
   } else if (val == 53) {
    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;
    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;
   }
   return leadingNulls(val, 2);
  },
  "%w": date => date.tm_wday,
  "%W": date => {
   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;
   return leadingNulls(Math.floor(days / 7), 2);
  },
  "%y": date => (date.tm_year + 1900).toString().substring(2),
  "%Y": date => date.tm_year + 1900,
  "%z": date => {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  },
  "%Z": date => date.tm_zone,
  "%%": () => "%"
 };
 pattern = pattern.replace(/%%/g, "\0\0");
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.includes(rule)) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 pattern = pattern.replace(/\0\0/g, "%");
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}

function _strptime(buf, format, tm) {
 buf >>>= 0;
 format >>>= 0;
 tm >>>= 0;
 var pattern = UTF8ToString(format);
 var SPECIAL_CHARS = "\\!@#$^&*()+=-[]/{}|:<>?,.";
 for (var i = 0, ii = SPECIAL_CHARS.length; i < ii; ++i) {
  pattern = pattern.replace(new RegExp("\\" + SPECIAL_CHARS[i], "g"), "\\" + SPECIAL_CHARS[i]);
 }
 var EQUIVALENT_MATCHERS = {
  "%A": "%a",
  "%B": "%b",
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m\\/%d\\/%y",
  "%e": "%d",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%R": "%H\\:%M",
  "%r": "%I\\:%M\\:%S\\s%p",
  "%T": "%H\\:%M\\:%S",
  "%x": "%m\\/%d\\/(?:%y|%Y)",
  "%X": "%H\\:%M\\:%S"
 };
 for (var matcher in EQUIVALENT_MATCHERS) {
  pattern = pattern.replace(matcher, EQUIVALENT_MATCHERS[matcher]);
 }
 var DATE_PATTERNS = {
  "%a": "(?:Sun(?:day)?)|(?:Mon(?:day)?)|(?:Tue(?:sday)?)|(?:Wed(?:nesday)?)|(?:Thu(?:rsday)?)|(?:Fri(?:day)?)|(?:Sat(?:urday)?)",
  "%b": "(?:Jan(?:uary)?)|(?:Feb(?:ruary)?)|(?:Mar(?:ch)?)|(?:Apr(?:il)?)|May|(?:Jun(?:e)?)|(?:Jul(?:y)?)|(?:Aug(?:ust)?)|(?:Sep(?:tember)?)|(?:Oct(?:ober)?)|(?:Nov(?:ember)?)|(?:Dec(?:ember)?)",
  "%C": "\\d\\d",
  "%d": "0[1-9]|[1-9](?!\\d)|1\\d|2\\d|30|31",
  "%H": "\\d(?!\\d)|[0,1]\\d|20|21|22|23",
  "%I": "\\d(?!\\d)|0\\d|10|11|12",
  "%j": "00[1-9]|0?[1-9](?!\\d)|0?[1-9]\\d(?!\\d)|[1,2]\\d\\d|3[0-6]\\d",
  "%m": "0[1-9]|[1-9](?!\\d)|10|11|12",
  "%M": "0\\d|\\d(?!\\d)|[1-5]\\d",
  "%n": "\\s",
  "%p": "AM|am|PM|pm|A\\.M\\.|a\\.m\\.|P\\.M\\.|p\\.m\\.",
  "%S": "0\\d|\\d(?!\\d)|[1-5]\\d|60",
  "%U": "0\\d|\\d(?!\\d)|[1-4]\\d|50|51|52|53",
  "%W": "0\\d|\\d(?!\\d)|[1-4]\\d|50|51|52|53",
  "%w": "[0-6]",
  "%y": "\\d\\d",
  "%Y": "\\d\\d\\d\\d",
  "%%": "%",
  "%t": "\\s"
 };
 var MONTH_NUMBERS = {
  JAN: 0,
  FEB: 1,
  MAR: 2,
  APR: 3,
  MAY: 4,
  JUN: 5,
  JUL: 6,
  AUG: 7,
  SEP: 8,
  OCT: 9,
  NOV: 10,
  DEC: 11
 };
 var DAY_NUMBERS_SUN_FIRST = {
  SUN: 0,
  MON: 1,
  TUE: 2,
  WED: 3,
  THU: 4,
  FRI: 5,
  SAT: 6
 };
 var DAY_NUMBERS_MON_FIRST = {
  MON: 0,
  TUE: 1,
  WED: 2,
  THU: 3,
  FRI: 4,
  SAT: 5,
  SUN: 6
 };
 for (var datePattern in DATE_PATTERNS) {
  pattern = pattern.replace(datePattern, "(" + datePattern + DATE_PATTERNS[datePattern] + ")");
 }
 var capture = [];
 for (var i = pattern.indexOf("%"); i >= 0; i = pattern.indexOf("%")) {
  capture.push(pattern[i + 1]);
  pattern = pattern.replace(new RegExp("\\%" + pattern[i + 1], "g"), "");
 }
 var matches = new RegExp("^" + pattern, "i").exec(UTF8ToString(buf));
 function initDate() {
  function fixup(value, min, max) {
   return typeof value != "number" || isNaN(value) ? min : value >= min ? value <= max ? value : max : min;
  }
  return {
   year: fixup(HEAP32[tm + 20 >>> 2] + 1900, 1970, 9999),
   month: fixup(HEAP32[tm + 16 >>> 2], 0, 11),
   day: fixup(HEAP32[tm + 12 >>> 2], 1, 31),
   hour: fixup(HEAP32[tm + 8 >>> 2], 0, 23),
   min: fixup(HEAP32[tm + 4 >>> 2], 0, 59),
   sec: fixup(HEAP32[tm >>> 2], 0, 59)
  };
 }
 if (matches) {
  var date = initDate();
  var value;
  var getMatch = symbol => {
   var pos = capture.indexOf(symbol);
   if (pos >= 0) {
    return matches[pos + 1];
   }
   return;
  };
  if (value = getMatch("S")) {
   date.sec = jstoi_q(value);
  }
  if (value = getMatch("M")) {
   date.min = jstoi_q(value);
  }
  if (value = getMatch("H")) {
   date.hour = jstoi_q(value);
  } else if (value = getMatch("I")) {
   var hour = jstoi_q(value);
   if (value = getMatch("p")) {
    hour += value.toUpperCase()[0] === "P" ? 12 : 0;
   }
   date.hour = hour;
  }
  if (value = getMatch("Y")) {
   date.year = jstoi_q(value);
  } else if (value = getMatch("y")) {
   var year = jstoi_q(value);
   if (value = getMatch("C")) {
    year += jstoi_q(value) * 100;
   } else {
    year += year < 69 ? 2e3 : 1900;
   }
   date.year = year;
  }
  if (value = getMatch("m")) {
   date.month = jstoi_q(value) - 1;
  } else if (value = getMatch("b")) {
   date.month = MONTH_NUMBERS[value.substring(0, 3).toUpperCase()] || 0;
  }
  if (value = getMatch("d")) {
   date.day = jstoi_q(value);
  } else if (value = getMatch("j")) {
   var day = jstoi_q(value);
   var leapYear = isLeapYear(date.year);
   for (var month = 0; month < 12; ++month) {
    var daysUntilMonth = arraySum(leapYear ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, month - 1);
    if (day <= daysUntilMonth + (leapYear ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[month]) {
     date.day = day - daysUntilMonth;
    }
   }
  } else if (value = getMatch("a")) {
   var weekDay = value.substring(0, 3).toUpperCase();
   if (value = getMatch("U")) {
    var weekDayNumber = DAY_NUMBERS_SUN_FIRST[weekDay];
    var weekNumber = jstoi_q(value);
    var janFirst = new Date(date.year, 0, 1);
    var endDate;
    if (janFirst.getDay() === 0) {
     endDate = addDays(janFirst, weekDayNumber + 7 * (weekNumber - 1));
    } else {
     endDate = addDays(janFirst, 7 - janFirst.getDay() + weekDayNumber + 7 * (weekNumber - 1));
    }
    date.day = endDate.getDate();
    date.month = endDate.getMonth();
   } else if (value = getMatch("W")) {
    var weekDayNumber = DAY_NUMBERS_MON_FIRST[weekDay];
    var weekNumber = jstoi_q(value);
    var janFirst = new Date(date.year, 0, 1);
    var endDate;
    if (janFirst.getDay() === 1) {
     endDate = addDays(janFirst, weekDayNumber + 7 * (weekNumber - 1));
    } else {
     endDate = addDays(janFirst, 7 - janFirst.getDay() + 1 + weekDayNumber + 7 * (weekNumber - 1));
    }
    date.day = endDate.getDate();
    date.month = endDate.getMonth();
   }
  }
  var fullDate = new Date(date.year, date.month, date.day, date.hour, date.min, date.sec, 0);
  HEAP32[tm >>> 2] = fullDate.getSeconds();
  HEAP32[tm + 4 >>> 2] = fullDate.getMinutes();
  HEAP32[tm + 8 >>> 2] = fullDate.getHours();
  HEAP32[tm + 12 >>> 2] = fullDate.getDate();
  HEAP32[tm + 16 >>> 2] = fullDate.getMonth();
  HEAP32[tm + 20 >>> 2] = fullDate.getFullYear() - 1900;
  HEAP32[tm + 24 >>> 2] = fullDate.getDay();
  HEAP32[tm + 28 >>> 2] = arraySum(isLeapYear(fullDate.getFullYear()) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, fullDate.getMonth() - 1) + fullDate.getDate() - 1;
  HEAP32[tm + 32 >>> 2] = 0;
  return buf + intArrayFromString(matches[0]).length - 1;
 }
 return 0;
}

function _swapcontext() {
 err("missing function: swapcontext");
 abort(-1);
}

var wasmTableMirror = [];

var getWasmTableEntry = funcPtr => {
 var func = wasmTableMirror[funcPtr];
 if (!func) {
  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;
  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);
 }
 assert(wasmTable.get(funcPtr) == func, "JavaScript-side Wasm function table mirror is out of date!");
 return func;
};

function runAndAbortIfError(func) {
 try {
  return func();
 } catch (e) {
  abort(e);
 }
}

function sigToWasmTypes(sig) {
 assert(!sig.includes("j"), "i64 not permitted in function signatures when WASM_BIGINT is disabled");
 var typeNames = {
  "i": "i32",
  "j": "i64",
  "f": "f32",
  "d": "f64",
  "p": "i32"
 };
 var type = {
  parameters: [],
  results: sig[0] == "v" ? [] : [ typeNames[sig[0]] ]
 };
 for (var i = 1; i < sig.length; ++i) {
  assert(sig[i] in typeNames, "invalid signature char: " + sig[i]);
  type.parameters.push(typeNames[sig[i]]);
 }
 return type;
}

var runtimeKeepalivePush = () => {
 runtimeKeepaliveCounter += 1;
};

var runtimeKeepalivePop = () => {
 assert(runtimeKeepaliveCounter > 0);
 runtimeKeepaliveCounter -= 1;
};

var Asyncify = {
 instrumentWasmImports: function(imports) {
  var importPatterns = [ /^invoke_.*$/, /^fd_sync$/, /^__wasi_fd_sync$/, /^__asyncjs__.*$/, /^emscripten_promise_await$/, /^emscripten_idb_load$/, /^emscripten_idb_store$/, /^emscripten_idb_delete$/, /^emscripten_idb_exists$/, /^emscripten_idb_load_blob$/, /^emscripten_idb_store_blob$/, /^emscripten_sleep$/, /^emscripten_wget_data$/, /^emscripten_scan_registers$/, /^emscripten_lazy_load_code$/, /^_load_secondary_module$/, /^emscripten_fiber_swap$/, /^SDL_Delay$/ ];
  for (var x in imports) {
   (function(x) {
    var original = imports[x];
    var sig = original.sig;
    if (typeof original == "function") {
     var isAsyncifyImport = original.isAsync || importPatterns.some((pattern => !!x.match(pattern)));
     imports[x] = function() {
      var originalAsyncifyState = Asyncify.state;
      try {
       return original.apply(null, arguments);
      } finally {
       var changedToDisabled = originalAsyncifyState === Asyncify.State.Normal && Asyncify.state === Asyncify.State.Disabled;
       var ignoredInvoke = x.startsWith("invoke_") && true;
       if (Asyncify.state !== originalAsyncifyState && !isAsyncifyImport && !changedToDisabled && !ignoredInvoke) {
        throw new Error(`import ${x} was not in ASYNCIFY_IMPORTS, but changed the state`);
       }
      }
     };
    }
   })(x);
  }
 },
 instrumentWasmExports: function(exports) {
  var ret = {};
  for (var x in exports) {
   (function(x) {
    var original = exports[x];
    if (typeof original == "function") {
     ret[x] = function() {
      Asyncify.exportCallStack.push(x);
      try {
       return original.apply(null, arguments);
      } finally {
       if (!ABORT) {
        var y = Asyncify.exportCallStack.pop();
        assert(y === x);
        Asyncify.maybeStopUnwind();
       }
      }
     };
    } else {
     ret[x] = original;
    }
   })(x);
  }
  return ret;
 },
 State: {
  Normal: 0,
  Unwinding: 1,
  Rewinding: 2,
  Disabled: 3
 },
 state: 0,
 StackSize: 4096,
 currData: null,
 handleSleepReturnValue: 0,
 exportCallStack: [],
 callStackNameToId: {},
 callStackIdToName: {},
 callStackId: 0,
 asyncPromiseHandlers: null,
 sleepCallbacks: [],
 getCallStackId: function(funcName) {
  var id = Asyncify.callStackNameToId[funcName];
  if (id === undefined) {
   id = Asyncify.callStackId++;
   Asyncify.callStackNameToId[funcName] = id;
   Asyncify.callStackIdToName[id] = funcName;
  }
  return id;
 },
 maybeStopUnwind: function() {
  if (Asyncify.currData && Asyncify.state === Asyncify.State.Unwinding && Asyncify.exportCallStack.length === 0) {
   Asyncify.state = Asyncify.State.Normal;
   runtimeKeepalivePush();
   runAndAbortIfError(_asyncify_stop_unwind);
   if (typeof Fibers != "undefined") {
    Fibers.trampoline();
   }
  }
 },
 whenDone: function() {
  assert(Asyncify.currData, "Tried to wait for an async operation when none is in progress.");
  assert(!Asyncify.asyncPromiseHandlers, "Cannot have multiple async operations in flight at once");
  return new Promise(((resolve, reject) => {
   Asyncify.asyncPromiseHandlers = {
    resolve: resolve,
    reject: reject
   };
  }));
 },
 allocateData: function() {
  var ptr = _malloc(12 + Asyncify.StackSize);
  Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);
  Asyncify.setDataRewindFunc(ptr);
  return ptr;
 },
 setDataHeader: function(ptr, stack, stackSize) {
  HEAP32[ptr >>> 2] = stack;
  HEAP32[ptr + 4 >>> 2] = stack + stackSize;
 },
 setDataRewindFunc: function(ptr) {
  var bottomOfCallStack = Asyncify.exportCallStack[0];
  var rewindId = Asyncify.getCallStackId(bottomOfCallStack);
  HEAP32[ptr + 8 >>> 2] = rewindId;
 },
 getDataRewindFunc: function(ptr) {
  var id = HEAP32[ptr + 8 >>> 2];
  var name = Asyncify.callStackIdToName[id];
  var func = Module["asm"][name];
  return func;
 },
 doRewind: function(ptr) {
  var start = Asyncify.getDataRewindFunc(ptr);
  runtimeKeepalivePop();
  return start();
 },
 handleSleep: function(startAsync) {
  assert(Asyncify.state !== Asyncify.State.Disabled, "Asyncify cannot be done during or after the runtime exits");
  if (ABORT) return;
  if (Asyncify.state === Asyncify.State.Normal) {
   var reachedCallback = false;
   var reachedAfterCallback = false;
   startAsync(((handleSleepReturnValue = 0) => {
    assert(!handleSleepReturnValue || typeof handleSleepReturnValue == "number" || typeof handleSleepReturnValue == "boolean");
    if (ABORT) return;
    Asyncify.handleSleepReturnValue = handleSleepReturnValue;
    reachedCallback = true;
    if (!reachedAfterCallback) {
     return;
    }
    assert(!Asyncify.exportCallStack.length, "Waking up (starting to rewind) must be done from JS, without compiled code on the stack.");
    Asyncify.state = Asyncify.State.Rewinding;
    runAndAbortIfError((() => _asyncify_start_rewind(Asyncify.currData)));
    if (typeof Browser != "undefined" && Browser.mainLoop.func) {
     Browser.mainLoop.resume();
    }
    var asyncWasmReturnValue, isError = false;
    try {
     asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);
    } catch (err) {
     asyncWasmReturnValue = err;
     isError = true;
    }
    var handled = false;
    if (!Asyncify.currData) {
     var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;
     if (asyncPromiseHandlers) {
      Asyncify.asyncPromiseHandlers = null;
      (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);
      handled = true;
     }
    }
    if (isError && !handled) {
     throw asyncWasmReturnValue;
    }
   }));
   reachedAfterCallback = true;
   if (!reachedCallback) {
    Asyncify.state = Asyncify.State.Unwinding;
    Asyncify.currData = Asyncify.allocateData();
    if (typeof Browser != "undefined" && Browser.mainLoop.func) {
     Browser.mainLoop.pause();
    }
    runAndAbortIfError((() => _asyncify_start_unwind(Asyncify.currData)));
   }
  } else if (Asyncify.state === Asyncify.State.Rewinding) {
   Asyncify.state = Asyncify.State.Normal;
   runAndAbortIfError(_asyncify_stop_rewind);
   _free(Asyncify.currData);
   Asyncify.currData = null;
   Asyncify.sleepCallbacks.forEach((func => callUserCallback(func)));
  } else {
   abort(`invalid state: ${Asyncify.state}`);
  }
  return Asyncify.handleSleepReturnValue;
 },
 handleAsync: function(startAsync) {
  return Asyncify.handleSleep((wakeUp => {
   startAsync().then(wakeUp);
  }));
 }
};

function getCFunc(ident) {
 var func = Module["_" + ident];
 assert(func, "Cannot call unknown function " + ident + ", make sure it is exported");
 return func;
}

var stringToUTF8OnStack = str => {
 var size = lengthBytesUTF8(str) + 1;
 var ret = stackAlloc(size);
 stringToUTF8(str, ret, size);
 return ret;
};

var ccall = function(ident, returnType, argTypes, args, opts) {
 var toC = {
  "string": str => {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    ret = stringToUTF8OnStack(str);
   }
   return ret;
  },
  "array": arr => {
   var ret = stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }
 };
 function convertReturnValue(ret) {
  if (returnType === "string") {
   return UTF8ToString(ret);
  }
  if (returnType === "boolean") return Boolean(ret);
  return ret;
 }
 var func = getCFunc(ident);
 var cArgs = [];
 var stack = 0;
 assert(returnType !== "array", 'Return type should not be "array".');
 if (args) {
  for (var i = 0; i < args.length; i++) {
   var converter = toC[argTypes[i]];
   if (converter) {
    if (stack === 0) stack = stackSave();
    cArgs[i] = converter(args[i]);
   } else {
    cArgs[i] = args[i];
   }
  }
 }
 var previousAsync = Asyncify.currData;
 var ret = func.apply(null, cArgs);
 function onDone(ret) {
  runtimeKeepalivePop();
  if (stack !== 0) stackRestore(stack);
  return convertReturnValue(ret);
 }
 var asyncMode = opts && opts.async;
 runtimeKeepalivePush();
 if (Asyncify.currData != previousAsync) {
  assert(!(previousAsync && Asyncify.currData), "We cannot start an async operation when one is already flight");
  assert(!(previousAsync && !Asyncify.currData), "We cannot stop an async operation in flight");
  assert(asyncMode, "The call to " + ident + " is running asynchronously. If this was intended, add the async option to the ccall/cwrap call.");
  return Asyncify.whenDone().then(onDone);
 }
 ret = onDone(ret);
 if (asyncMode) return Promise.resolve(ret);
 return ret;
};

var FSNode = function(parent, name, mode, rdev) {
 if (!parent) {
  parent = this;
 }
 this.parent = parent;
 this.mount = parent.mount;
 this.mounted = null;
 this.id = FS.nextInode++;
 this.name = name;
 this.mode = mode;
 this.node_ops = {};
 this.stream_ops = {};
 this.rdev = rdev;
};

var readMode = 292 | 73;

var writeMode = 146;

Object.defineProperties(FSNode.prototype, {
 read: {
  get: function() {
   return (this.mode & readMode) === readMode;
  },
  set: function(val) {
   val ? this.mode |= readMode : this.mode &= ~readMode;
  }
 },
 write: {
  get: function() {
   return (this.mode & writeMode) === writeMode;
  },
  set: function(val) {
   val ? this.mode |= writeMode : this.mode &= ~writeMode;
  }
 },
 isFolder: {
  get: function() {
   return FS.isDir(this.mode);
  }
 },
 isDevice: {
  get: function() {
   return FS.isChrdev(this.mode);
  }
 }
});

FS.FSNode = FSNode;

FS.createPreloadedFile = FS_createPreloadedFile;

FS.staticInit();

Module["FS_createPath"] = FS.createPath;

Module["FS_createDataFile"] = FS.createDataFile;

Module["FS_createPreloadedFile"] = FS.createPreloadedFile;

Module["FS_unlink"] = FS.unlink;

Module["FS_createLazyFile"] = FS.createLazyFile;

Module["FS_createDevice"] = FS.createDevice;

ERRNO_CODES = {
 "EPERM": 63,
 "ENOENT": 44,
 "ESRCH": 71,
 "EINTR": 27,
 "EIO": 29,
 "ENXIO": 60,
 "E2BIG": 1,
 "ENOEXEC": 45,
 "EBADF": 8,
 "ECHILD": 12,
 "EAGAIN": 6,
 "EWOULDBLOCK": 6,
 "ENOMEM": 48,
 "EACCES": 2,
 "EFAULT": 21,
 "ENOTBLK": 105,
 "EBUSY": 10,
 "EEXIST": 20,
 "EXDEV": 75,
 "ENODEV": 43,
 "ENOTDIR": 54,
 "EISDIR": 31,
 "EINVAL": 28,
 "ENFILE": 41,
 "EMFILE": 33,
 "ENOTTY": 59,
 "ETXTBSY": 74,
 "EFBIG": 22,
 "ENOSPC": 51,
 "ESPIPE": 70,
 "EROFS": 69,
 "EMLINK": 34,
 "EPIPE": 64,
 "EDOM": 18,
 "ERANGE": 68,
 "ENOMSG": 49,
 "EIDRM": 24,
 "ECHRNG": 106,
 "EL2NSYNC": 156,
 "EL3HLT": 107,
 "EL3RST": 108,
 "ELNRNG": 109,
 "EUNATCH": 110,
 "ENOCSI": 111,
 "EL2HLT": 112,
 "EDEADLK": 16,
 "ENOLCK": 46,
 "EBADE": 113,
 "EBADR": 114,
 "EXFULL": 115,
 "ENOANO": 104,
 "EBADRQC": 103,
 "EBADSLT": 102,
 "EDEADLOCK": 16,
 "EBFONT": 101,
 "ENOSTR": 100,
 "ENODATA": 116,
 "ETIME": 117,
 "ENOSR": 118,
 "ENONET": 119,
 "ENOPKG": 120,
 "EREMOTE": 121,
 "ENOLINK": 47,
 "EADV": 122,
 "ESRMNT": 123,
 "ECOMM": 124,
 "EPROTO": 65,
 "EMULTIHOP": 36,
 "EDOTDOT": 125,
 "EBADMSG": 9,
 "ENOTUNIQ": 126,
 "EBADFD": 127,
 "EREMCHG": 128,
 "ELIBACC": 129,
 "ELIBBAD": 130,
 "ELIBSCN": 131,
 "ELIBMAX": 132,
 "ELIBEXEC": 133,
 "ENOSYS": 52,
 "ENOTEMPTY": 55,
 "ENAMETOOLONG": 37,
 "ELOOP": 32,
 "EOPNOTSUPP": 138,
 "EPFNOSUPPORT": 139,
 "ECONNRESET": 15,
 "ENOBUFS": 42,
 "EAFNOSUPPORT": 5,
 "EPROTOTYPE": 67,
 "ENOTSOCK": 57,
 "ENOPROTOOPT": 50,
 "ESHUTDOWN": 140,
 "ECONNREFUSED": 14,
 "EADDRINUSE": 3,
 "ECONNABORTED": 13,
 "ENETUNREACH": 40,
 "ENETDOWN": 38,
 "ETIMEDOUT": 73,
 "EHOSTDOWN": 142,
 "EHOSTUNREACH": 23,
 "EINPROGRESS": 26,
 "EALREADY": 7,
 "EDESTADDRREQ": 17,
 "EMSGSIZE": 35,
 "EPROTONOSUPPORT": 66,
 "ESOCKTNOSUPPORT": 137,
 "EADDRNOTAVAIL": 4,
 "ENETRESET": 39,
 "EISCONN": 30,
 "ENOTCONN": 53,
 "ETOOMANYREFS": 141,
 "EUSERS": 136,
 "EDQUOT": 19,
 "ESTALE": 72,
 "ENOTSUP": 138,
 "ENOMEDIUM": 148,
 "EILSEQ": 25,
 "EOVERFLOW": 61,
 "ECANCELED": 11,
 "ENOTRECOVERABLE": 56,
 "EOWNERDEAD": 62,
 "ESTRPIPE": 135
};

function checkIncomingModuleAPI() {
 ignoredModuleProp("fetchSettings");
}

var wasmImports = {
 __assert_fail: ___assert_fail,
 __asyncjs__pdo_vrzno_real_stmt_execute: __asyncjs__pdo_vrzno_real_stmt_execute,
 __asyncjs__vrzno_await_internal: __asyncjs__vrzno_await_internal,
 __call_sighandler: ___call_sighandler,
 __syscall__newselect: ___syscall__newselect,
 __syscall_accept4: ___syscall_accept4,
 __syscall_bind: ___syscall_bind,
 __syscall_chdir: ___syscall_chdir,
 __syscall_chmod: ___syscall_chmod,
 __syscall_connect: ___syscall_connect,
 __syscall_dup: ___syscall_dup,
 __syscall_dup3: ___syscall_dup3,
 __syscall_faccessat: ___syscall_faccessat,
 __syscall_fallocate: ___syscall_fallocate,
 __syscall_fchmod: ___syscall_fchmod,
 __syscall_fchown32: ___syscall_fchown32,
 __syscall_fchownat: ___syscall_fchownat,
 __syscall_fcntl64: ___syscall_fcntl64,
 __syscall_fdatasync: ___syscall_fdatasync,
 __syscall_fstat64: ___syscall_fstat64,
 __syscall_fstatfs64: ___syscall_fstatfs64,
 __syscall_ftruncate64: ___syscall_ftruncate64,
 __syscall_getcwd: ___syscall_getcwd,
 __syscall_getdents64: ___syscall_getdents64,
 __syscall_getpeername: ___syscall_getpeername,
 __syscall_getsockname: ___syscall_getsockname,
 __syscall_getsockopt: ___syscall_getsockopt,
 __syscall_ioctl: ___syscall_ioctl,
 __syscall_listen: ___syscall_listen,
 __syscall_lstat64: ___syscall_lstat64,
 __syscall_mkdirat: ___syscall_mkdirat,
 __syscall_newfstatat: ___syscall_newfstatat,
 __syscall_openat: ___syscall_openat,
 __syscall_pipe: ___syscall_pipe,
 __syscall_poll: ___syscall_poll,
 __syscall_readlinkat: ___syscall_readlinkat,
 __syscall_recvfrom: ___syscall_recvfrom,
 __syscall_renameat: ___syscall_renameat,
 __syscall_rmdir: ___syscall_rmdir,
 __syscall_sendto: ___syscall_sendto,
 __syscall_socket: ___syscall_socket,
 __syscall_stat64: ___syscall_stat64,
 __syscall_statfs64: ___syscall_statfs64,
 __syscall_symlink: ___syscall_symlink,
 __syscall_unlinkat: ___syscall_unlinkat,
 __syscall_utimensat: ___syscall_utimensat,
 _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,
 _emscripten_throw_longjmp: __emscripten_throw_longjmp,
 _gmtime_js: __gmtime_js,
 _localtime_js: __localtime_js,
 _mktime_js: __mktime_js,
 _mmap_js: __mmap_js,
 _msync_js: __msync_js,
 _munmap_js: __munmap_js,
 _setitimer_js: __setitimer_js,
 _timegm_js: __timegm_js,
 _tzset_js: __tzset_js,
 abort: _abort,
 emscripten_asm_const_int: _emscripten_asm_const_int,
 emscripten_asm_const_ptr: _emscripten_asm_const_ptr,
 emscripten_console_error: _emscripten_console_error,
 emscripten_date_now: _emscripten_date_now,
 emscripten_get_heap_max: _emscripten_get_heap_max,
 emscripten_get_now: _emscripten_get_now,
 emscripten_get_now_res: _emscripten_get_now_res,
 emscripten_memcpy_big: _emscripten_memcpy_big,
 emscripten_resize_heap: _emscripten_resize_heap,
 environ_get: _environ_get,
 environ_sizes_get: _environ_sizes_get,
 exit: _exit,
 fd_close: _fd_close,
 fd_fdstat_get: _fd_fdstat_get,
 fd_read: _fd_read,
 fd_seek: _fd_seek,
 fd_sync: _fd_sync,
 fd_write: _fd_write,
 getaddrinfo: _getaddrinfo,
 getcontext: _getcontext,
 getdtablesize: _getdtablesize,
 gethostbyname: _gethostbyname,
 gethostbyname_r: _gethostbyname_r,
 getloadavg: _getloadavg,
 getnameinfo: _getnameinfo,
 getprotobyname: _getprotobyname,
 getprotobynumber: _getprotobynumber,
 invoke_i: invoke_i,
 invoke_ii: invoke_ii,
 invoke_iii: invoke_iii,
 invoke_iiii: invoke_iiii,
 invoke_iiiii: invoke_iiiii,
 invoke_iiiiii: invoke_iiiiii,
 invoke_iiiiiii: invoke_iiiiiii,
 invoke_iiiiiiii: invoke_iiiiiiii,
 invoke_iiiiiiiiii: invoke_iiiiiiiiii,
 invoke_v: invoke_v,
 invoke_vi: invoke_vi,
 invoke_vii: invoke_vii,
 invoke_viidii: invoke_viidii,
 invoke_viii: invoke_viii,
 invoke_viiii: invoke_viiii,
 invoke_viiiii: invoke_viiiii,
 invoke_viiiiii: invoke_viiiiii,
 makecontext: _makecontext,
 proc_exit: _proc_exit,
 strftime: _strftime,
 strptime: _strptime,
 swapcontext: _swapcontext
};

Asyncify.instrumentWasmImports(wasmImports);

var asm = createWasm();

var ___wasm_call_ctors = createExportWrapper("__wasm_call_ctors");

var _php_time = Module["_php_time"] = createExportWrapper("php_time");

var _gettimeofday = Module["_gettimeofday"] = createExportWrapper("gettimeofday");

var _time = Module["_time"] = createExportWrapper("time");

var _php_date_get_date_ce = Module["_php_date_get_date_ce"] = createExportWrapper("php_date_get_date_ce");

var _php_date_get_immutable_ce = Module["_php_date_get_immutable_ce"] = createExportWrapper("php_date_get_immutable_ce");

var _php_date_get_interface_ce = Module["_php_date_get_interface_ce"] = createExportWrapper("php_date_get_interface_ce");

var _php_date_get_timezone_ce = Module["_php_date_get_timezone_ce"] = createExportWrapper("php_date_get_timezone_ce");

var _php_date_get_interval_ce = Module["_php_date_get_interval_ce"] = createExportWrapper("php_date_get_interval_ce");

var _php_date_get_period_ce = Module["_php_date_get_period_ce"] = createExportWrapper("php_date_get_period_ce");

var _zend_register_ini_entries_ex = Module["_zend_register_ini_entries_ex"] = createExportWrapper("zend_register_ini_entries_ex");

var _zend_unregister_ini_entries_ex = Module["_zend_unregister_ini_entries_ex"] = createExportWrapper("zend_unregister_ini_entries_ex");

var __efree = Module["__efree"] = createExportWrapper("_efree");

var _php_info_print_table_start = Module["_php_info_print_table_start"] = createExportWrapper("php_info_print_table_start");

var _php_info_print_table_row = Module["_php_info_print_table_row"] = createExportWrapper("php_info_print_table_row");

var _php_info_print_table_end = Module["_php_info_print_table_end"] = createExportWrapper("php_info_print_table_end");

var _display_ini_entries = Module["_display_ini_entries"] = createExportWrapper("display_ini_entries");

var _zend_hash_destroy = Module["_zend_hash_destroy"] = createExportWrapper("zend_hash_destroy");

var __efree_48 = Module["__efree_48"] = createExportWrapper("_efree_48");

var _memcpy = createExportWrapper("memcpy");

var _zend_register_string_constant = Module["_zend_register_string_constant"] = createExportWrapper("zend_register_string_constant");

var _zend_register_long_constant = Module["_zend_register_long_constant"] = createExportWrapper("zend_register_long_constant");

var _strlen = Module["_strlen"] = createExportWrapper("strlen");

var _cfg_get_entry = Module["_cfg_get_entry"] = createExportWrapper("cfg_get_entry");

var __emalloc_48 = Module["__emalloc_48"] = createExportWrapper("_emalloc_48");

var __zend_hash_init = Module["__zend_hash_init"] = createExportWrapper("_zend_hash_init");

var _zend_hash_str_find = Module["_zend_hash_str_find"] = createExportWrapper("zend_hash_str_find");

var _zend_hash_str_add = Module["_zend_hash_str_add"] = createExportWrapper("zend_hash_str_add");

var _get_timezone_info = Module["_get_timezone_info"] = createExportWrapper("get_timezone_info");

var _zend_throw_error = Module["_zend_throw_error"] = createExportWrapper("zend_throw_error");

var _php_format_date = Module["_php_format_date"] = createExportWrapper("php_format_date");

var __estrdup = Module["__estrdup"] = createExportWrapper("_estrdup");

var __emalloc_16 = Module["__emalloc_16"] = createExportWrapper("_emalloc_16");

var _abs = Module["_abs"] = createExportWrapper("abs");

var _ap_php_snprintf = Module["_ap_php_snprintf"] = createExportWrapper("ap_php_snprintf");

var _ap_php_slprintf = Module["_ap_php_slprintf"] = createExportWrapper("ap_php_slprintf");

var _strcmp = Module["_strcmp"] = createExportWrapper("strcmp");

var _smart_str_realloc = Module["_smart_str_realloc"] = createExportWrapper("smart_str_realloc");

var _smart_str_erealloc = Module["_smart_str_erealloc"] = createExportWrapper("smart_str_erealloc");

var _php_idate = Module["_php_idate"] = createExportWrapper("php_idate");

var _zend_wrong_parameters_count_error = Module["_zend_wrong_parameters_count_error"] = createExportWrapper("zend_wrong_parameters_count_error");

var _zend_parse_arg_str_slow = Module["_zend_parse_arg_str_slow"] = createExportWrapper("zend_parse_arg_str_slow");

var _zend_parse_arg_long_slow = Module["_zend_parse_arg_long_slow"] = createExportWrapper("zend_parse_arg_long_slow");

var _zend_wrong_parameter_error = Module["_zend_wrong_parameter_error"] = createExportWrapper("zend_wrong_parameter_error");

var _php_error_docref = Module["_php_error_docref"] = createExportWrapper("php_error_docref");

var _php_date_set_tzdb = Module["_php_date_set_tzdb"] = createExportWrapper("php_date_set_tzdb");

var _php_version_compare = Module["_php_version_compare"] = createExportWrapper("php_version_compare");

var _php_parse_date = Module["_php_parse_date"] = createExportWrapper("php_parse_date");

var _php_mktime = Module["_php_mktime"] = createExportWrapper("php_mktime");

var _php_strftime = Module["_php_strftime"] = createExportWrapper("php_strftime");

var ___zend_malloc = Module["___zend_malloc"] = createExportWrapper("__zend_malloc");

var __emalloc = Module["__emalloc"] = createExportWrapper("_emalloc");

var ___zend_realloc = Module["___zend_realloc"] = createExportWrapper("__zend_realloc");

var __erealloc = Module["__erealloc"] = createExportWrapper("_erealloc");

var _zend_wrong_parameters_none_error = Module["_zend_wrong_parameters_none_error"] = createExportWrapper("zend_wrong_parameters_none_error");

var _zend_parse_arg_bool_slow = Module["_zend_parse_arg_bool_slow"] = createExportWrapper("zend_parse_arg_bool_slow");

var __zend_new_array_0 = Module["__zend_new_array_0"] = createExportWrapper("_zend_new_array_0");

var _add_assoc_long_ex = Module["_add_assoc_long_ex"] = createExportWrapper("add_assoc_long_ex");

var _add_next_index_long = Module["_add_next_index_long"] = createExportWrapper("add_next_index_long");

var _add_assoc_string_ex = Module["_add_assoc_string_ex"] = createExportWrapper("add_assoc_string_ex");

var _add_index_long = Module["_add_index_long"] = createExportWrapper("add_index_long");

var __emalloc_96 = Module["__emalloc_96"] = createExportWrapper("_emalloc_96");

var _zend_iterator_init = Module["_zend_iterator_init"] = createExportWrapper("zend_iterator_init");

var _zend_hash_str_update = Module["_zend_hash_str_update"] = createExportWrapper("zend_hash_str_update");

var _php_date_instantiate = Module["_php_date_instantiate"] = createExportWrapper("php_date_instantiate");

var _object_init_ex = Module["_object_init_ex"] = createExportWrapper("object_init_ex");

var _php_date_initialize = Module["_php_date_initialize"] = createExportWrapper("php_date_initialize");

var _zend_throw_exception_ex = Module["_zend_throw_exception_ex"] = createExportWrapper("zend_throw_exception_ex");

var _memcmp = createExportWrapper("memcmp");

var _instanceof_function_slow = Module["_instanceof_function_slow"] = createExportWrapper("instanceof_function_slow");

var _zval_ptr_dtor = Module["_zval_ptr_dtor"] = createExportWrapper("zval_ptr_dtor");

var _zend_string_concat3 = Module["_zend_string_concat3"] = createExportWrapper("zend_string_concat3");

var _free = Module["_free"] = createExportWrapper("free");

var _zend_std_get_properties = Module["_zend_std_get_properties"] = createExportWrapper("zend_std_get_properties");

var _zend_hash_add = Module["_zend_hash_add"] = createExportWrapper("zend_hash_add");

var _add_index_string = Module["_add_index_string"] = createExportWrapper("add_index_string");

var _add_assoc_zval_ex = Module["_add_assoc_zval_ex"] = createExportWrapper("add_assoc_zval_ex");

var _add_assoc_bool_ex = Module["_add_assoc_bool_ex"] = createExportWrapper("add_assoc_bool_ex");

var _add_assoc_double_ex = Module["_add_assoc_double_ex"] = createExportWrapper("add_assoc_double_ex");

var _zend_parse_method_parameters = Module["_zend_parse_method_parameters"] = createExportWrapper("zend_parse_method_parameters");

var _memset = Module["_memset"] = createExportWrapper("memset");

var _zend_parse_parameters = Module["_zend_parse_parameters"] = createExportWrapper("zend_parse_parameters");

var _zend_value_error = Module["_zend_value_error"] = createExportWrapper("zend_value_error");

var __ecalloc = Module["__ecalloc"] = createExportWrapper("_ecalloc");

var _zend_replace_error_handling = Module["_zend_replace_error_handling"] = createExportWrapper("zend_replace_error_handling");

var _zend_restore_error_handling = Module["_zend_restore_error_handling"] = createExportWrapper("zend_restore_error_handling");

var _add_assoc_str_ex = Module["_add_assoc_str_ex"] = createExportWrapper("add_assoc_str_ex");

var _zend_hash_next_index_insert = Module["_zend_hash_next_index_insert"] = createExportWrapper("zend_hash_next_index_insert");

var _zval_get_long_func = Module["_zval_get_long_func"] = createExportWrapper("zval_get_long_func");

var _zval_get_double_func = Module["_zval_get_double_func"] = createExportWrapper("zval_get_double_func");

var _zend_dval_to_lval_slow = Module["_zend_dval_to_lval_slow"] = createExportWrapper("zend_dval_to_lval_slow");

var _zval_get_string_func = Module["_zval_get_string_func"] = createExportWrapper("zval_get_string_func");

var _strtoll = Module["_strtoll"] = createExportWrapper("strtoll");

var _zend_parse_parameters_ex = Module["_zend_parse_parameters_ex"] = createExportWrapper("zend_parse_parameters_ex");

var _zend_type_error = Module["_zend_type_error"] = createExportWrapper("zend_type_error");

var _get_active_function_or_method_name = Module["_get_active_function_or_method_name"] = createExportWrapper("get_active_function_or_method_name");

var _rebuild_object_properties = Module["_rebuild_object_properties"] = createExportWrapper("rebuild_object_properties");

var _zend_create_internal_iterator_zval = Module["_zend_create_internal_iterator_zval"] = createExportWrapper("zend_create_internal_iterator_zval");

var _zend_argument_value_error = Module["_zend_argument_value_error"] = createExportWrapper("zend_argument_value_error");

var _add_next_index_string = Module["_add_next_index_string"] = createExportWrapper("add_next_index_string");

var _strncasecmp = Module["_strncasecmp"] = createExportWrapper("strncasecmp");

var _add_assoc_null_ex = Module["_add_assoc_null_ex"] = createExportWrapper("add_assoc_null_ex");

var __estrndup = Module["__estrndup"] = createExportWrapper("_estrndup");

var _zend_parse_arg_double_slow = Module["_zend_parse_arg_double_slow"] = createExportWrapper("zend_parse_arg_double_slow");

var _zend_ini_double = Module["_zend_ini_double"] = createExportWrapper("zend_ini_double");

var _zend_strpprintf = Module["_zend_strpprintf"] = createExportWrapper("zend_strpprintf");

var _OnUpdateString = Module["_OnUpdateString"] = createExportWrapper("OnUpdateString");

var _zend_std_write_property = Module["_zend_std_write_property"] = createExportWrapper("zend_std_write_property");

var _zend_register_internal_interface = Module["_zend_register_internal_interface"] = createExportWrapper("zend_register_internal_interface");

var _zend_declare_class_constant_ex = Module["_zend_declare_class_constant_ex"] = createExportWrapper("zend_declare_class_constant_ex");

var _zend_error = Module["_zend_error"] = createExportWrapper("zend_error");

var _zend_register_internal_class_ex = Module["_zend_register_internal_class_ex"] = createExportWrapper("zend_register_internal_class_ex");

var _zend_class_implements = Module["_zend_class_implements"] = createExportWrapper("zend_class_implements");

var _zend_object_std_init = Module["_zend_object_std_init"] = createExportWrapper("zend_object_std_init");

var _object_properties_init = Module["_object_properties_init"] = createExportWrapper("object_properties_init");

var _zend_object_std_dtor = Module["_zend_object_std_dtor"] = createExportWrapper("zend_object_std_dtor");

var _zend_objects_clone_members = Module["_zend_objects_clone_members"] = createExportWrapper("zend_objects_clone_members");

var _zend_std_compare_objects = Module["_zend_std_compare_objects"] = createExportWrapper("zend_std_compare_objects");

var _zend_std_get_properties_for = Module["_zend_std_get_properties_for"] = createExportWrapper("zend_std_get_properties_for");

var _zend_array_dup = Module["_zend_array_dup"] = createExportWrapper("zend_array_dup");

var _zend_std_has_property = Module["_zend_std_has_property"] = createExportWrapper("zend_std_has_property");

var _zend_is_true = Module["_zend_is_true"] = createExportWrapper("zend_is_true");

var _zend_std_read_property = Module["_zend_std_read_property"] = createExportWrapper("zend_std_read_property");

var _zend_std_get_property_ptr_ptr = Module["_zend_std_get_property_ptr_ptr"] = createExportWrapper("zend_std_get_property_ptr_ptr");

var _zend_declare_typed_property = Module["_zend_declare_typed_property"] = createExportWrapper("zend_declare_typed_property");

var _zend_unmangle_property_name_ex = Module["_zend_unmangle_property_name_ex"] = createExportWrapper("zend_unmangle_property_name_ex");

var _zend_lookup_class = Module["_zend_lookup_class"] = createExportWrapper("zend_lookup_class");

var _zend_update_property = Module["_zend_update_property"] = createExportWrapper("zend_update_property");

var _sin = Module["_sin"] = createExportWrapper("sin");

var _cos = Module["_cos"] = createExportWrapper("cos");

var _acos = Module["_acos"] = createExportWrapper("acos");

var _atan2 = Module["_atan2"] = createExportWrapper("atan2");

var _isdigit = Module["_isdigit"] = createExportWrapper("isdigit");

var _strtol = Module["_strtol"] = createExportWrapper("strtol");

var _isspace = Module["_isspace"] = createExportWrapper("isspace");

var _pow = Module["_pow"] = createExportWrapper("pow");

var _strchr = Module["_strchr"] = createExportWrapper("strchr");

var ___errno_location = createExportWrapper("__errno_location");

var _strtod = Module["_strtod"] = createExportWrapper("strtod");

var _printf = Module["_printf"] = createExportWrapper("printf");

var _snprintf = Module["_snprintf"] = createExportWrapper("snprintf");

var __emalloc_8 = Module["__emalloc_8"] = createExportWrapper("_emalloc_8");

var _toupper = Module["_toupper"] = createExportWrapper("toupper");

var _llabs = Module["_llabs"] = createExportWrapper("llabs");

var _php_libxml_initialize = Module["_php_libxml_initialize"] = createExportWrapper("php_libxml_initialize");

var _php_libxml_error_handler = Module["_php_libxml_error_handler"] = createExportWrapper("php_libxml_error_handler");

var _xmlSetGenericErrorFunc = Module["_xmlSetGenericErrorFunc"] = createExportWrapper("xmlSetGenericErrorFunc");

var _xmlParserInputBufferCreateFilenameDefault = Module["_xmlParserInputBufferCreateFilenameDefault"] = createExportWrapper("xmlParserInputBufferCreateFilenameDefault");

var _xmlOutputBufferCreateFilenameDefault = Module["_xmlOutputBufferCreateFilenameDefault"] = createExportWrapper("xmlOutputBufferCreateFilenameDefault");

var _php_libxml_shutdown = Module["_php_libxml_shutdown"] = createExportWrapper("php_libxml_shutdown");

var _rc_dtor_func = Module["_rc_dtor_func"] = createExportWrapper("rc_dtor_func");

var _xmlSetStructuredErrorFunc = Module["_xmlSetStructuredErrorFunc"] = createExportWrapper("xmlSetStructuredErrorFunc");

var _zend_llist_destroy = Module["_zend_llist_destroy"] = createExportWrapper("zend_llist_destroy");

var _xmlResetLastError = Module["_xmlResetLastError"] = createExportWrapper("xmlResetLastError");

var _php_libxml_node_free_list = Module["_php_libxml_node_free_list"] = createExportWrapper("php_libxml_node_free_list");

var _xmlRemoveID = Module["_xmlRemoveID"] = createExportWrapper("xmlRemoveID");

var _xmlUnlinkNode = Module["_xmlUnlinkNode"] = createExportWrapper("xmlUnlinkNode");

var _xmlFreeProp = Module["_xmlFreeProp"] = createExportWrapper("xmlFreeProp");

var _xmlFreeNs = Module["_xmlFreeNs"] = createExportWrapper("xmlFreeNs");

var _xmlFreeNode = Module["_xmlFreeNode"] = createExportWrapper("xmlFreeNode");

var _php_libxml_issue_error = Module["_php_libxml_issue_error"] = createExportWrapper("php_libxml_issue_error");

var _xmlCopyError = Module["_xmlCopyError"] = createExportWrapper("xmlCopyError");

var _xmlStrdup = Module["_xmlStrdup"] = createExportWrapper("xmlStrdup");

var _zend_llist_add_element = Module["_zend_llist_add_element"] = createExportWrapper("zend_llist_add_element");

var _php_libxml_ctx_error = Module["_php_libxml_ctx_error"] = createExportWrapper("php_libxml_ctx_error");

var _zend_vspprintf = Module["_zend_vspprintf"] = createExportWrapper("zend_vspprintf");

var _php_libxml_ctx_warning = Module["_php_libxml_ctx_warning"] = createExportWrapper("php_libxml_ctx_warning");

var _php_libxml_structured_error_handler = Module["_php_libxml_structured_error_handler"] = createExportWrapper("php_libxml_structured_error_handler");

var _xmlInitParser = Module["_xmlInitParser"] = createExportWrapper("xmlInitParser");

var _xmlGetExternalEntityLoader = Module["_xmlGetExternalEntityLoader"] = createExportWrapper("xmlGetExternalEntityLoader");

var _xmlSetExternalEntityLoader = Module["_xmlSetExternalEntityLoader"] = createExportWrapper("xmlSetExternalEntityLoader");

var _xmlRelaxNGCleanupTypes = Module["_xmlRelaxNGCleanupTypes"] = createExportWrapper("xmlRelaxNGCleanupTypes");

var _php_libxml_switch_context = Module["_php_libxml_switch_context"] = createExportWrapper("php_libxml_switch_context");

var __emalloc_32 = Module["__emalloc_32"] = createExportWrapper("_emalloc_32");

var _zend_llist_init = Module["_zend_llist_init"] = createExportWrapper("zend_llist_init");

var _xmlResetError = Module["_xmlResetError"] = createExportWrapper("xmlResetError");

var _xmlGetLastError = Module["_xmlGetLastError"] = createExportWrapper("xmlGetLastError");

var _add_property_long_ex = Module["_add_property_long_ex"] = createExportWrapper("add_property_long_ex");

var _add_property_string_ex = Module["_add_property_string_ex"] = createExportWrapper("add_property_string_ex");

var _add_property_stringl_ex = Module["_add_property_stringl_ex"] = createExportWrapper("add_property_stringl_ex");

var _zend_llist_get_first_ex = Module["_zend_llist_get_first_ex"] = createExportWrapper("zend_llist_get_first_ex");

var _zend_llist_get_next_ex = Module["_zend_llist_get_next_ex"] = createExportWrapper("zend_llist_get_next_ex");

var _zend_llist_clean = Module["_zend_llist_clean"] = createExportWrapper("zend_llist_clean");

var _php_libxml_disable_entity_loader = Module["_php_libxml_disable_entity_loader"] = createExportWrapper("php_libxml_disable_entity_loader");

var _zend_fcall_info_init = Module["_zend_fcall_info_init"] = createExportWrapper("zend_fcall_info_init");

var _zend_release_fcall_info_cache = Module["_zend_release_fcall_info_cache"] = createExportWrapper("zend_release_fcall_info_cache");

var _php_libxml_xmlCheckUTF8 = Module["_php_libxml_xmlCheckUTF8"] = createExportWrapper("php_libxml_xmlCheckUTF8");

var _php_libxml_register_export = Module["_php_libxml_register_export"] = createExportWrapper("php_libxml_register_export");

var _php_libxml_import_node = Module["_php_libxml_import_node"] = createExportWrapper("php_libxml_import_node");

var _zend_hash_find = Module["_zend_hash_find"] = createExportWrapper("zend_hash_find");

var _php_libxml_increment_node_ptr = Module["_php_libxml_increment_node_ptr"] = createExportWrapper("php_libxml_increment_node_ptr");

var _php_libxml_decrement_node_ptr = Module["_php_libxml_decrement_node_ptr"] = createExportWrapper("php_libxml_decrement_node_ptr");

var _php_libxml_increment_doc_ref = Module["_php_libxml_increment_doc_ref"] = createExportWrapper("php_libxml_increment_doc_ref");

var _php_libxml_decrement_doc_ref = Module["_php_libxml_decrement_doc_ref"] = createExportWrapper("php_libxml_decrement_doc_ref");

var _xmlFreeDoc = Module["_xmlFreeDoc"] = createExportWrapper("xmlFreeDoc");

var _php_libxml_node_free_resource = Module["_php_libxml_node_free_resource"] = createExportWrapper("php_libxml_node_free_resource");

var _php_libxml_node_decrement_resource = Module["_php_libxml_node_decrement_resource"] = createExportWrapper("php_libxml_node_decrement_resource");

var _zend_call_function = Module["_zend_call_function"] = createExportWrapper("zend_call_function");

var _php_file_le_stream = Module["_php_file_le_stream"] = createExportWrapper("php_file_le_stream");

var _php_file_le_pstream = Module["_php_file_le_pstream"] = createExportWrapper("php_file_le_pstream");

var _zend_fetch_resource2_ex = Module["_zend_fetch_resource2_ex"] = createExportWrapper("zend_fetch_resource2_ex");

var _xmlAllocParserInputBuffer = Module["_xmlAllocParserInputBuffer"] = createExportWrapper("xmlAllocParserInputBuffer");

var _xmlNewIOInputStream = Module["_xmlNewIOInputStream"] = createExportWrapper("xmlNewIOInputStream");

var _xmlFreeParserInputBuffer = Module["_xmlFreeParserInputBuffer"] = createExportWrapper("xmlFreeParserInputBuffer");

var __try_convert_to_string = Module["__try_convert_to_string"] = createExportWrapper("_try_convert_to_string");

var _xmlNewInputFromFile = Module["_xmlNewInputFromFile"] = createExportWrapper("xmlNewInputFromFile");

var __php_stream_read = Module["__php_stream_read"] = createExportWrapper("_php_stream_read");

var __php_stream_free = Module["__php_stream_free"] = createExportWrapper("_php_stream_free");

var _zend_binary_strncasecmp = Module["_zend_binary_strncasecmp"] = createExportWrapper("zend_binary_strncasecmp");

var _php_stristr = Module["_php_stristr"] = createExportWrapper("php_stristr");

var _xmlParseCharEncoding = Module["_xmlParseCharEncoding"] = createExportWrapper("xmlParseCharEncoding");

var _strstr = Module["_strstr"] = createExportWrapper("strstr");

var _xmlParseURI = Module["_xmlParseURI"] = createExportWrapper("xmlParseURI");

var _xmlURIUnescapeString = Module["_xmlURIUnescapeString"] = createExportWrapper("xmlURIUnescapeString");

var _xmlFreeURI = Module["_xmlFreeURI"] = createExportWrapper("xmlFreeURI");

var _xmlAllocOutputBuffer = Module["_xmlAllocOutputBuffer"] = createExportWrapper("xmlAllocOutputBuffer");

var _xmlStrncmp = Module["_xmlStrncmp"] = createExportWrapper("xmlStrncmp");

var _php_stream_locate_url_wrapper = Module["_php_stream_locate_url_wrapper"] = createExportWrapper("php_stream_locate_url_wrapper");

var _php_le_stream_context = Module["_php_le_stream_context"] = createExportWrapper("php_le_stream_context");

var _zend_fetch_resource_ex = Module["_zend_fetch_resource_ex"] = createExportWrapper("zend_fetch_resource_ex");

var _php_stream_context_alloc = Module["_php_stream_context_alloc"] = createExportWrapper("php_stream_context_alloc");

var __php_stream_open_wrapper_ex = Module["__php_stream_open_wrapper_ex"] = createExportWrapper("_php_stream_open_wrapper_ex");

var __php_stream_write = Module["__php_stream_write"] = createExportWrapper("_php_stream_write");

var _zend_objects_not_comparable = Module["_zend_objects_not_comparable"] = createExportWrapper("zend_objects_not_comparable");

var _OPENSSL_init_ssl = Module["_OPENSSL_init_ssl"] = createExportWrapper("OPENSSL_init_ssl");

var _CRYPTO_get_ex_new_index = Module["_CRYPTO_get_ex_new_index"] = createExportWrapper("CRYPTO_get_ex_new_index");

var _getenv = Module["_getenv"] = createExportWrapper("getenv");

var _X509_get_default_cert_area = Module["_X509_get_default_cert_area"] = createExportWrapper("X509_get_default_cert_area");

var _strlcpy = Module["_strlcpy"] = createExportWrapper("strlcpy");

var _php_stream_xport_register = Module["_php_stream_xport_register"] = createExportWrapper("php_stream_xport_register");

var _php_register_url_stream_wrapper = Module["_php_register_url_stream_wrapper"] = createExportWrapper("php_register_url_stream_wrapper");

var _php_unregister_url_stream_wrapper = Module["_php_unregister_url_stream_wrapper"] = createExportWrapper("php_unregister_url_stream_wrapper");

var _php_stream_xport_unregister = Module["_php_stream_xport_unregister"] = createExportWrapper("php_stream_xport_unregister");

var _php_stream_generic_socket_factory = Module["_php_stream_generic_socket_factory"] = createExportWrapper("php_stream_generic_socket_factory");

var _OpenSSL_version = Module["_OpenSSL_version"] = createExportWrapper("OpenSSL_version");

var _ERR_get_error = Module["_ERR_get_error"] = createExportWrapper("ERR_get_error");

var ___zend_calloc = Module["___zend_calloc"] = createExportWrapper("__zend_calloc");

var _expand_filepath = Module["_expand_filepath"] = createExportWrapper("expand_filepath");

var _php_check_open_basedir = Module["_php_check_open_basedir"] = createExportWrapper("php_check_open_basedir");

var _zend_argument_error_variadic = Module["_zend_argument_error_variadic"] = createExportWrapper("zend_argument_error_variadic");

var _get_active_function_arg_name = Module["_get_active_function_arg_name"] = createExportWrapper("get_active_function_arg_name");

var _php_verror = Module["_php_verror"] = createExportWrapper("php_verror");

var _SSL_get_ex_data = Module["_SSL_get_ex_data"] = createExportWrapper("SSL_get_ex_data");

var _X509_free = Module["_X509_free"] = createExportWrapper("X509_free");

var _X509_REQ_free = Module["_X509_REQ_free"] = createExportWrapper("X509_REQ_free");

var _EVP_PKEY_free = Module["_EVP_PKEY_free"] = createExportWrapper("EVP_PKEY_free");

var _zend_add_attribute = Module["_zend_add_attribute"] = createExportWrapper("zend_add_attribute");

var _X509_get_default_cert_file = Module["_X509_get_default_cert_file"] = createExportWrapper("X509_get_default_cert_file");

var _X509_get_default_cert_file_env = Module["_X509_get_default_cert_file_env"] = createExportWrapper("X509_get_default_cert_file_env");

var _X509_get_default_cert_dir = Module["_X509_get_default_cert_dir"] = createExportWrapper("X509_get_default_cert_dir");

var _X509_get_default_cert_dir_env = Module["_X509_get_default_cert_dir_env"] = createExportWrapper("X509_get_default_cert_dir_env");

var _X509_get_default_private_dir = Module["_X509_get_default_private_dir"] = createExportWrapper("X509_get_default_private_dir");

var _zend_ini_string = Module["_zend_ini_string"] = createExportWrapper("zend_ini_string");

var _BIO_new_file = Module["_BIO_new_file"] = createExportWrapper("BIO_new_file");

var _X509_print = Module["_X509_print"] = createExportWrapper("X509_print");

var _PEM_write_bio_X509 = Module["_PEM_write_bio_X509"] = createExportWrapper("PEM_write_bio_X509");

var _BIO_free = Module["_BIO_free"] = createExportWrapper("BIO_free");

var _NETSCAPE_SPKI_new = Module["_NETSCAPE_SPKI_new"] = createExportWrapper("NETSCAPE_SPKI_new");

var _ASN1_STRING_set = Module["_ASN1_STRING_set"] = createExportWrapper("ASN1_STRING_set");

var _NETSCAPE_SPKI_set_pubkey = Module["_NETSCAPE_SPKI_set_pubkey"] = createExportWrapper("NETSCAPE_SPKI_set_pubkey");

var _NETSCAPE_SPKI_sign = Module["_NETSCAPE_SPKI_sign"] = createExportWrapper("NETSCAPE_SPKI_sign");

var _NETSCAPE_SPKI_b64_encode = Module["_NETSCAPE_SPKI_b64_encode"] = createExportWrapper("NETSCAPE_SPKI_b64_encode");

var _sprintf = Module["_sprintf"] = createExportWrapper("sprintf");

var _CRYPTO_free = Module["_CRYPTO_free"] = createExportWrapper("CRYPTO_free");

var _NETSCAPE_SPKI_free = Module["_NETSCAPE_SPKI_free"] = createExportWrapper("NETSCAPE_SPKI_free");

var _zend_hash_index_find = Module["_zend_hash_index_find"] = createExportWrapper("zend_hash_index_find");

var _EVP_PKEY_up_ref = Module["_EVP_PKEY_up_ref"] = createExportWrapper("EVP_PKEY_up_ref");

var _BIO_new_mem_buf = Module["_BIO_new_mem_buf"] = createExportWrapper("BIO_new_mem_buf");

var _PEM_read_bio_PUBKEY = Module["_PEM_read_bio_PUBKEY"] = createExportWrapper("PEM_read_bio_PUBKEY");

var _PEM_read_bio_PrivateKey = Module["_PEM_read_bio_PrivateKey"] = createExportWrapper("PEM_read_bio_PrivateKey");

var _X509_get_pubkey = Module["_X509_get_pubkey"] = createExportWrapper("X509_get_pubkey");

var _EVP_sha1 = Module["_EVP_sha1"] = createExportWrapper("EVP_sha1");

var _EVP_md5 = Module["_EVP_md5"] = createExportWrapper("EVP_md5");

var _EVP_md4 = Module["_EVP_md4"] = createExportWrapper("EVP_md4");

var _EVP_sha224 = Module["_EVP_sha224"] = createExportWrapper("EVP_sha224");

var _EVP_sha256 = Module["_EVP_sha256"] = createExportWrapper("EVP_sha256");

var _EVP_sha384 = Module["_EVP_sha384"] = createExportWrapper("EVP_sha384");

var _EVP_sha512 = Module["_EVP_sha512"] = createExportWrapper("EVP_sha512");

var _EVP_ripemd160 = Module["_EVP_ripemd160"] = createExportWrapper("EVP_ripemd160");

var _NETSCAPE_SPKI_b64_decode = Module["_NETSCAPE_SPKI_b64_decode"] = createExportWrapper("NETSCAPE_SPKI_b64_decode");

var _X509_PUBKEY_get = Module["_X509_PUBKEY_get"] = createExportWrapper("X509_PUBKEY_get");

var _NETSCAPE_SPKI_verify = Module["_NETSCAPE_SPKI_verify"] = createExportWrapper("NETSCAPE_SPKI_verify");

var _BIO_s_mem = Module["_BIO_s_mem"] = createExportWrapper("BIO_s_mem");

var _BIO_new = Module["_BIO_new"] = createExportWrapper("BIO_new");

var _PEM_write_bio_PUBKEY = Module["_PEM_write_bio_PUBKEY"] = createExportWrapper("PEM_write_bio_PUBKEY");

var _BIO_ctrl = Module["_BIO_ctrl"] = createExportWrapper("BIO_ctrl");

var _BIO_free_all = Module["_BIO_free_all"] = createExportWrapper("BIO_free_all");

var _ASN1_STRING_get0_data = Module["_ASN1_STRING_get0_data"] = createExportWrapper("ASN1_STRING_get0_data");

var _zend_try_assign_typed_ref_stringl = Module["_zend_try_assign_typed_ref_stringl"] = createExportWrapper("zend_try_assign_typed_ref_stringl");

var _EVP_get_digestbyname = Module["_EVP_get_digestbyname"] = createExportWrapper("EVP_get_digestbyname");

var _X509_digest = Module["_X509_digest"] = createExportWrapper("X509_digest");

var _make_digest_ex = Module["_make_digest_ex"] = createExportWrapper("make_digest_ex");

var _X509_check_private_key = Module["_X509_check_private_key"] = createExportWrapper("X509_check_private_key");

var _X509_verify = Module["_X509_verify"] = createExportWrapper("X509_verify");

var _X509_get_subject_name = Module["_X509_get_subject_name"] = createExportWrapper("X509_get_subject_name");

var _X509_NAME_oneline = Module["_X509_NAME_oneline"] = createExportWrapper("X509_NAME_oneline");

var _X509_subject_name_hash = Module["_X509_subject_name_hash"] = createExportWrapper("X509_subject_name_hash");

var _X509_get_issuer_name = Module["_X509_get_issuer_name"] = createExportWrapper("X509_get_issuer_name");

var _X509_get_version = Module["_X509_get_version"] = createExportWrapper("X509_get_version");

var _X509_get_serialNumber = Module["_X509_get_serialNumber"] = createExportWrapper("X509_get_serialNumber");

var _ASN1_INTEGER_to_BN = Module["_ASN1_INTEGER_to_BN"] = createExportWrapper("ASN1_INTEGER_to_BN");

var _BN_bn2hex = Module["_BN_bn2hex"] = createExportWrapper("BN_bn2hex");

var _BN_free = Module["_BN_free"] = createExportWrapper("BN_free");

var _i2s_ASN1_INTEGER = Module["_i2s_ASN1_INTEGER"] = createExportWrapper("i2s_ASN1_INTEGER");

var _X509_getm_notBefore = Module["_X509_getm_notBefore"] = createExportWrapper("X509_getm_notBefore");

var _X509_getm_notAfter = Module["_X509_getm_notAfter"] = createExportWrapper("X509_getm_notAfter");

var _X509_alias_get0 = Module["_X509_alias_get0"] = createExportWrapper("X509_alias_get0");

var _X509_get_signature_nid = Module["_X509_get_signature_nid"] = createExportWrapper("X509_get_signature_nid");

var _OBJ_nid2sn = Module["_OBJ_nid2sn"] = createExportWrapper("OBJ_nid2sn");

var _OBJ_nid2ln = Module["_OBJ_nid2ln"] = createExportWrapper("OBJ_nid2ln");

var _X509_PURPOSE_get_count = Module["_X509_PURPOSE_get_count"] = createExportWrapper("X509_PURPOSE_get_count");

var _X509_PURPOSE_get0 = Module["_X509_PURPOSE_get0"] = createExportWrapper("X509_PURPOSE_get0");

var _X509_PURPOSE_get_id = Module["_X509_PURPOSE_get_id"] = createExportWrapper("X509_PURPOSE_get_id");

var _X509_check_purpose = Module["_X509_check_purpose"] = createExportWrapper("X509_check_purpose");

var _add_index_bool = Module["_add_index_bool"] = createExportWrapper("add_index_bool");

var _X509_PURPOSE_get0_sname = Module["_X509_PURPOSE_get0_sname"] = createExportWrapper("X509_PURPOSE_get0_sname");

var _X509_PURPOSE_get0_name = Module["_X509_PURPOSE_get0_name"] = createExportWrapper("X509_PURPOSE_get0_name");

var _zend_hash_index_update = Module["_zend_hash_index_update"] = createExportWrapper("zend_hash_index_update");

var _X509_get_ext_count = Module["_X509_get_ext_count"] = createExportWrapper("X509_get_ext_count");

var _X509_get_ext = Module["_X509_get_ext"] = createExportWrapper("X509_get_ext");

var _X509_EXTENSION_get_object = Module["_X509_EXTENSION_get_object"] = createExportWrapper("X509_EXTENSION_get_object");

var _OBJ_obj2nid = Module["_OBJ_obj2nid"] = createExportWrapper("OBJ_obj2nid");

var _OBJ_obj2txt = Module["_OBJ_obj2txt"] = createExportWrapper("OBJ_obj2txt");

var _add_assoc_stringl_ex = Module["_add_assoc_stringl_ex"] = createExportWrapper("add_assoc_stringl_ex");

var _zend_array_destroy = Module["_zend_array_destroy"] = createExportWrapper("zend_array_destroy");

var _X509V3_EXT_print = Module["_X509V3_EXT_print"] = createExportWrapper("X509V3_EXT_print");

var _X509_EXTENSION_get_data = Module["_X509_EXTENSION_get_data"] = createExportWrapper("X509_EXTENSION_get_data");

var _X509_NAME_entry_count = Module["_X509_NAME_entry_count"] = createExportWrapper("X509_NAME_entry_count");

var _X509_NAME_get_entry = Module["_X509_NAME_get_entry"] = createExportWrapper("X509_NAME_get_entry");

var _X509_NAME_ENTRY_get_object = Module["_X509_NAME_ENTRY_get_object"] = createExportWrapper("X509_NAME_ENTRY_get_object");

var _X509_NAME_ENTRY_get_data = Module["_X509_NAME_ENTRY_get_data"] = createExportWrapper("X509_NAME_ENTRY_get_data");

var _ASN1_STRING_type = Module["_ASN1_STRING_type"] = createExportWrapper("ASN1_STRING_type");

var _ASN1_STRING_to_UTF8 = Module["_ASN1_STRING_to_UTF8"] = createExportWrapper("ASN1_STRING_to_UTF8");

var _ASN1_STRING_length = Module["_ASN1_STRING_length"] = createExportWrapper("ASN1_STRING_length");

var _add_next_index_stringl = Module["_add_next_index_stringl"] = createExportWrapper("add_next_index_stringl");

var _add_next_index_str = Module["_add_next_index_str"] = createExportWrapper("add_next_index_str");

var _atoi = Module["_atoi"] = createExportWrapper("atoi");

var _mktime = Module["_mktime"] = createExportWrapper("mktime");

var _X509V3_EXT_get = Module["_X509V3_EXT_get"] = createExportWrapper("X509V3_EXT_get");

var _ASN1_item_d2i = Module["_ASN1_item_d2i"] = createExportWrapper("ASN1_item_d2i");

var _BIO_puts = Module["_BIO_puts"] = createExportWrapper("BIO_puts");

var _BIO_write = Module["_BIO_write"] = createExportWrapper("BIO_write");

var _GENERAL_NAME_print = Module["_GENERAL_NAME_print"] = createExportWrapper("GENERAL_NAME_print");

var _GENERAL_NAME_free = Module["_GENERAL_NAME_free"] = createExportWrapper("GENERAL_NAME_free");

var _X509_STORE_free = Module["_X509_STORE_free"] = createExportWrapper("X509_STORE_free");

var _PEM_X509_INFO_read_bio = Module["_PEM_X509_INFO_read_bio"] = createExportWrapper("PEM_X509_INFO_read_bio");

var _X509_INFO_free = Module["_X509_INFO_free"] = createExportWrapper("X509_INFO_free");

var _X509_STORE_new = Module["_X509_STORE_new"] = createExportWrapper("X509_STORE_new");

var _zval_try_get_string_func = Module["_zval_try_get_string_func"] = createExportWrapper("zval_try_get_string_func");

var _stat = Module["_stat"] = createExportWrapper("stat");

var _X509_LOOKUP_file = Module["_X509_LOOKUP_file"] = createExportWrapper("X509_LOOKUP_file");

var _X509_STORE_add_lookup = Module["_X509_STORE_add_lookup"] = createExportWrapper("X509_STORE_add_lookup");

var _X509_LOOKUP_ctrl = Module["_X509_LOOKUP_ctrl"] = createExportWrapper("X509_LOOKUP_ctrl");

var _X509_LOOKUP_hash_dir = Module["_X509_LOOKUP_hash_dir"] = createExportWrapper("X509_LOOKUP_hash_dir");

var _X509_STORE_CTX_new = Module["_X509_STORE_CTX_new"] = createExportWrapper("X509_STORE_CTX_new");

var _X509_STORE_CTX_init = Module["_X509_STORE_CTX_init"] = createExportWrapper("X509_STORE_CTX_init");

var _X509_STORE_CTX_set_purpose = Module["_X509_STORE_CTX_set_purpose"] = createExportWrapper("X509_STORE_CTX_set_purpose");

var _X509_verify_cert = Module["_X509_verify_cert"] = createExportWrapper("X509_verify_cert");

var _X509_STORE_CTX_free = Module["_X509_STORE_CTX_free"] = createExportWrapper("X509_STORE_CTX_free");

var _OPENSSL_sk_pop_free = Module["_OPENSSL_sk_pop_free"] = createExportWrapper("OPENSSL_sk_pop_free");

var _X509_dup = Module["_X509_dup"] = createExportWrapper("X509_dup");

var _PKCS12_create = Module["_PKCS12_create"] = createExportWrapper("PKCS12_create");

var _i2d_PKCS12_bio = Module["_i2d_PKCS12_bio"] = createExportWrapper("i2d_PKCS12_bio");

var _PKCS12_free = Module["_PKCS12_free"] = createExportWrapper("PKCS12_free");

var _d2i_PKCS12_bio = Module["_d2i_PKCS12_bio"] = createExportWrapper("d2i_PKCS12_bio");

var _PKCS12_parse = Module["_PKCS12_parse"] = createExportWrapper("PKCS12_parse");

var __zend_new_array = Module["__zend_new_array"] = createExportWrapper("_zend_new_array");

var _zend_try_assign_typed_ref_arr = Module["_zend_try_assign_typed_ref_arr"] = createExportWrapper("zend_try_assign_typed_ref_arr");

var _PEM_write_bio_PrivateKey = Module["_PEM_write_bio_PrivateKey"] = createExportWrapper("PEM_write_bio_PrivateKey");

var _OPENSSL_sk_num = Module["_OPENSSL_sk_num"] = createExportWrapper("OPENSSL_sk_num");

var _OPENSSL_sk_pop = Module["_OPENSSL_sk_pop"] = createExportWrapper("OPENSSL_sk_pop");

var _OPENSSL_sk_free = Module["_OPENSSL_sk_free"] = createExportWrapper("OPENSSL_sk_free");

var _X509_REQ_print = Module["_X509_REQ_print"] = createExportWrapper("X509_REQ_print");

var _PEM_write_bio_X509_REQ = Module["_PEM_write_bio_X509_REQ"] = createExportWrapper("PEM_write_bio_X509_REQ");

var _X509_REQ_get_pubkey = Module["_X509_REQ_get_pubkey"] = createExportWrapper("X509_REQ_get_pubkey");

var _X509_REQ_verify = Module["_X509_REQ_verify"] = createExportWrapper("X509_REQ_verify");

var _X509_new = Module["_X509_new"] = createExportWrapper("X509_new");

var _X509_set_version = Module["_X509_set_version"] = createExportWrapper("X509_set_version");

var _ASN1_INTEGER_set_int64 = Module["_ASN1_INTEGER_set_int64"] = createExportWrapper("ASN1_INTEGER_set_int64");

var _X509_REQ_get_subject_name = Module["_X509_REQ_get_subject_name"] = createExportWrapper("X509_REQ_get_subject_name");

var _X509_set_subject_name = Module["_X509_set_subject_name"] = createExportWrapper("X509_set_subject_name");

var _X509_set_issuer_name = Module["_X509_set_issuer_name"] = createExportWrapper("X509_set_issuer_name");

var _X509_gmtime_adj = Module["_X509_gmtime_adj"] = createExportWrapper("X509_gmtime_adj");

var _X509_set_pubkey = Module["_X509_set_pubkey"] = createExportWrapper("X509_set_pubkey");

var _X509V3_set_ctx = Module["_X509V3_set_ctx"] = createExportWrapper("X509V3_set_ctx");

var _X509V3_set_nconf = Module["_X509V3_set_nconf"] = createExportWrapper("X509V3_set_nconf");

var _X509V3_EXT_add_nconf = Module["_X509V3_EXT_add_nconf"] = createExportWrapper("X509V3_EXT_add_nconf");

var _X509_sign = Module["_X509_sign"] = createExportWrapper("X509_sign");

var _NCONF_new = Module["_NCONF_new"] = createExportWrapper("NCONF_new");

var _NCONF_load = Module["_NCONF_load"] = createExportWrapper("NCONF_load");

var _OBJ_create_objects = Module["_OBJ_create_objects"] = createExportWrapper("OBJ_create_objects");

var _OBJ_sn2nid = Module["_OBJ_sn2nid"] = createExportWrapper("OBJ_sn2nid");

var _ASN1_STRING_set_default_mask_asc = Module["_ASN1_STRING_set_default_mask_asc"] = createExportWrapper("ASN1_STRING_set_default_mask_asc");

var _NCONF_free = Module["_NCONF_free"] = createExportWrapper("NCONF_free");

var _X509_REQ_new = Module["_X509_REQ_new"] = createExportWrapper("X509_REQ_new");

var _X509V3_EXT_REQ_add_nconf = Module["_X509V3_EXT_REQ_add_nconf"] = createExportWrapper("X509V3_EXT_REQ_add_nconf");

var _X509_REQ_sign = Module["_X509_REQ_sign"] = createExportWrapper("X509_REQ_sign");

var _zend_try_assign_typed_ref = Module["_zend_try_assign_typed_ref"] = createExportWrapper("zend_try_assign_typed_ref");

var _EVP_PKEY_CTX_new_id = Module["_EVP_PKEY_CTX_new_id"] = createExportWrapper("EVP_PKEY_CTX_new_id");

var _EVP_PKEY_paramgen_init = Module["_EVP_PKEY_paramgen_init"] = createExportWrapper("EVP_PKEY_paramgen_init");

var _EVP_PKEY_CTX_ctrl = Module["_EVP_PKEY_CTX_ctrl"] = createExportWrapper("EVP_PKEY_CTX_ctrl");

var _EVP_PKEY_paramgen = Module["_EVP_PKEY_paramgen"] = createExportWrapper("EVP_PKEY_paramgen");

var _EVP_PKEY_CTX_free = Module["_EVP_PKEY_CTX_free"] = createExportWrapper("EVP_PKEY_CTX_free");

var _EVP_PKEY_CTX_new = Module["_EVP_PKEY_CTX_new"] = createExportWrapper("EVP_PKEY_CTX_new");

var _EVP_PKEY_keygen_init = Module["_EVP_PKEY_keygen_init"] = createExportWrapper("EVP_PKEY_keygen_init");

var _RSA_pkey_ctx_ctrl = Module["_RSA_pkey_ctx_ctrl"] = createExportWrapper("RSA_pkey_ctx_ctrl");

var _EVP_PKEY_keygen = Module["_EVP_PKEY_keygen"] = createExportWrapper("EVP_PKEY_keygen");

var _NCONF_get_string = Module["_NCONF_get_string"] = createExportWrapper("NCONF_get_string");

var _NCONF_get_section = Module["_NCONF_get_section"] = createExportWrapper("NCONF_get_section");

var _X509_REQ_set_version = Module["_X509_REQ_set_version"] = createExportWrapper("X509_REQ_set_version");

var _OBJ_txt2nid = Module["_OBJ_txt2nid"] = createExportWrapper("OBJ_txt2nid");

var _X509_NAME_add_entry_by_NID = Module["_X509_NAME_add_entry_by_NID"] = createExportWrapper("X509_NAME_add_entry_by_NID");

var _X509_NAME_get_index_by_NID = Module["_X509_NAME_get_index_by_NID"] = createExportWrapper("X509_NAME_get_index_by_NID");

var _X509_NAME_add_entry_by_txt = Module["_X509_NAME_add_entry_by_txt"] = createExportWrapper("X509_NAME_add_entry_by_txt");

var _X509_REQ_get_attr_by_NID = Module["_X509_REQ_get_attr_by_NID"] = createExportWrapper("X509_REQ_get_attr_by_NID");

var _X509_REQ_add1_attr_by_txt = Module["_X509_REQ_add1_attr_by_txt"] = createExportWrapper("X509_REQ_add1_attr_by_txt");

var _X509_REQ_set_pubkey = Module["_X509_REQ_set_pubkey"] = createExportWrapper("X509_REQ_set_pubkey");

var _EVP_PKEY_new = Module["_EVP_PKEY_new"] = createExportWrapper("EVP_PKEY_new");

var _RSA_new = Module["_RSA_new"] = createExportWrapper("RSA_new");

var _EVP_PKEY_assign = Module["_EVP_PKEY_assign"] = createExportWrapper("EVP_PKEY_assign");

var _RSA_free = Module["_RSA_free"] = createExportWrapper("RSA_free");

var _DSA_new = Module["_DSA_new"] = createExportWrapper("DSA_new");

var _DSA_free = Module["_DSA_free"] = createExportWrapper("DSA_free");

var _DH_new = Module["_DH_new"] = createExportWrapper("DH_new");

var _DH_free = Module["_DH_free"] = createExportWrapper("DH_free");

var _EC_KEY_new = Module["_EC_KEY_new"] = createExportWrapper("EC_KEY_new");

var _EC_KEY_free = Module["_EC_KEY_free"] = createExportWrapper("EC_KEY_free");

var _EVP_des_ede3_cbc = Module["_EVP_des_ede3_cbc"] = createExportWrapper("EVP_des_ede3_cbc");

var _EVP_PKEY_bits = Module["_EVP_PKEY_bits"] = createExportWrapper("EVP_PKEY_bits");

var _EVP_PKEY_base_id = Module["_EVP_PKEY_base_id"] = createExportWrapper("EVP_PKEY_base_id");

var _EVP_PKEY_get0_RSA = Module["_EVP_PKEY_get0_RSA"] = createExportWrapper("EVP_PKEY_get0_RSA");

var _RSA_get0_key = Module["_RSA_get0_key"] = createExportWrapper("RSA_get0_key");

var _RSA_get0_factors = Module["_RSA_get0_factors"] = createExportWrapper("RSA_get0_factors");

var _RSA_get0_crt_params = Module["_RSA_get0_crt_params"] = createExportWrapper("RSA_get0_crt_params");

var _EVP_PKEY_get0_DSA = Module["_EVP_PKEY_get0_DSA"] = createExportWrapper("EVP_PKEY_get0_DSA");

var _DSA_get0_pqg = Module["_DSA_get0_pqg"] = createExportWrapper("DSA_get0_pqg");

var _DSA_get0_key = Module["_DSA_get0_key"] = createExportWrapper("DSA_get0_key");

var _EVP_PKEY_get0_DH = Module["_EVP_PKEY_get0_DH"] = createExportWrapper("EVP_PKEY_get0_DH");

var _DH_get0_pqg = Module["_DH_get0_pqg"] = createExportWrapper("DH_get0_pqg");

var _DH_get0_key = Module["_DH_get0_key"] = createExportWrapper("DH_get0_key");

var _EVP_PKEY_get0_EC_KEY = Module["_EVP_PKEY_get0_EC_KEY"] = createExportWrapper("EVP_PKEY_get0_EC_KEY");

var _BN_new = Module["_BN_new"] = createExportWrapper("BN_new");

var _EC_KEY_get0_group = Module["_EC_KEY_get0_group"] = createExportWrapper("EC_KEY_get0_group");

var _EC_GROUP_get_curve_name = Module["_EC_GROUP_get_curve_name"] = createExportWrapper("EC_GROUP_get_curve_name");

var _OBJ_nid2obj = Module["_OBJ_nid2obj"] = createExportWrapper("OBJ_nid2obj");

var _ASN1_OBJECT_free = Module["_ASN1_OBJECT_free"] = createExportWrapper("ASN1_OBJECT_free");

var _EC_KEY_get0_public_key = Module["_EC_KEY_get0_public_key"] = createExportWrapper("EC_KEY_get0_public_key");

var _EC_POINT_get_affine_coordinates_GFp = Module["_EC_POINT_get_affine_coordinates_GFp"] = createExportWrapper("EC_POINT_get_affine_coordinates_GFp");

var _EC_KEY_get0_private_key = Module["_EC_KEY_get0_private_key"] = createExportWrapper("EC_KEY_get0_private_key");

var _BN_num_bits = Module["_BN_num_bits"] = createExportWrapper("BN_num_bits");

var _BN_bn2bin = Module["_BN_bn2bin"] = createExportWrapper("BN_bn2bin");

var _BN_bin2bn = Module["_BN_bin2bn"] = createExportWrapper("BN_bin2bn");

var _DH_size = Module["_DH_size"] = createExportWrapper("DH_size");

var _DH_compute_key = Module["_DH_compute_key"] = createExportWrapper("DH_compute_key");

var _EVP_PKEY_derive_init = Module["_EVP_PKEY_derive_init"] = createExportWrapper("EVP_PKEY_derive_init");

var _EVP_PKEY_derive_set_peer = Module["_EVP_PKEY_derive_set_peer"] = createExportWrapper("EVP_PKEY_derive_set_peer");

var _EVP_PKEY_derive = Module["_EVP_PKEY_derive"] = createExportWrapper("EVP_PKEY_derive");

var _PKCS5_PBKDF2_HMAC = Module["_PKCS5_PBKDF2_HMAC"] = createExportWrapper("PKCS5_PBKDF2_HMAC");

var _SMIME_read_PKCS7 = Module["_SMIME_read_PKCS7"] = createExportWrapper("SMIME_read_PKCS7");

var _PKCS7_verify = Module["_PKCS7_verify"] = createExportWrapper("PKCS7_verify");

var _PKCS7_get0_signers = Module["_PKCS7_get0_signers"] = createExportWrapper("PKCS7_get0_signers");

var _PEM_write_bio_PKCS7 = Module["_PEM_write_bio_PKCS7"] = createExportWrapper("PEM_write_bio_PKCS7");

var _PKCS7_free = Module["_PKCS7_free"] = createExportWrapper("PKCS7_free");

var _OPENSSL_sk_value = Module["_OPENSSL_sk_value"] = createExportWrapper("OPENSSL_sk_value");

var _PKCS7_encrypt = Module["_PKCS7_encrypt"] = createExportWrapper("PKCS7_encrypt");

var _BIO_printf = Module["_BIO_printf"] = createExportWrapper("BIO_printf");

var _SMIME_write_PKCS7 = Module["_SMIME_write_PKCS7"] = createExportWrapper("SMIME_write_PKCS7");

var _OPENSSL_sk_new_null = Module["_OPENSSL_sk_new_null"] = createExportWrapper("OPENSSL_sk_new_null");

var _OPENSSL_sk_push = Module["_OPENSSL_sk_push"] = createExportWrapper("OPENSSL_sk_push");

var _EVP_rc2_40_cbc = Module["_EVP_rc2_40_cbc"] = createExportWrapper("EVP_rc2_40_cbc");

var _EVP_rc2_64_cbc = Module["_EVP_rc2_64_cbc"] = createExportWrapper("EVP_rc2_64_cbc");

var _EVP_rc2_cbc = Module["_EVP_rc2_cbc"] = createExportWrapper("EVP_rc2_cbc");

var _EVP_des_cbc = Module["_EVP_des_cbc"] = createExportWrapper("EVP_des_cbc");

var _EVP_aes_128_cbc = Module["_EVP_aes_128_cbc"] = createExportWrapper("EVP_aes_128_cbc");

var _EVP_aes_192_cbc = Module["_EVP_aes_192_cbc"] = createExportWrapper("EVP_aes_192_cbc");

var _EVP_aes_256_cbc = Module["_EVP_aes_256_cbc"] = createExportWrapper("EVP_aes_256_cbc");

var _PEM_read_bio_PKCS7 = Module["_PEM_read_bio_PKCS7"] = createExportWrapper("PEM_read_bio_PKCS7");

var _PEM_write_bio_X509_CRL = Module["_PEM_write_bio_X509_CRL"] = createExportWrapper("PEM_write_bio_X509_CRL");

var _PKCS7_sign = Module["_PKCS7_sign"] = createExportWrapper("PKCS7_sign");

var _PKCS7_decrypt = Module["_PKCS7_decrypt"] = createExportWrapper("PKCS7_decrypt");

var _PEM_read_bio_CMS = Module["_PEM_read_bio_CMS"] = createExportWrapper("PEM_read_bio_CMS");

var _d2i_CMS_bio = Module["_d2i_CMS_bio"] = createExportWrapper("d2i_CMS_bio");

var _SMIME_read_CMS = Module["_SMIME_read_CMS"] = createExportWrapper("SMIME_read_CMS");

var _CMS_verify = Module["_CMS_verify"] = createExportWrapper("CMS_verify");

var _CMS_get0_signers = Module["_CMS_get0_signers"] = createExportWrapper("CMS_get0_signers");

var _PEM_write_bio_CMS = Module["_PEM_write_bio_CMS"] = createExportWrapper("PEM_write_bio_CMS");

var _CMS_ContentInfo_free = Module["_CMS_ContentInfo_free"] = createExportWrapper("CMS_ContentInfo_free");

var _CMS_encrypt = Module["_CMS_encrypt"] = createExportWrapper("CMS_encrypt");

var _SMIME_write_CMS = Module["_SMIME_write_CMS"] = createExportWrapper("SMIME_write_CMS");

var _CMS_final = Module["_CMS_final"] = createExportWrapper("CMS_final");

var _i2d_CMS_bio = Module["_i2d_CMS_bio"] = createExportWrapper("i2d_CMS_bio");

var _PEM_write_bio_CMS_stream = Module["_PEM_write_bio_CMS_stream"] = createExportWrapper("PEM_write_bio_CMS_stream");

var _CMS_get0_type = Module["_CMS_get0_type"] = createExportWrapper("CMS_get0_type");

var _CMS_get1_certs = Module["_CMS_get1_certs"] = createExportWrapper("CMS_get1_certs");

var _CMS_get1_crls = Module["_CMS_get1_crls"] = createExportWrapper("CMS_get1_crls");

var _X509_CRL_free = Module["_X509_CRL_free"] = createExportWrapper("X509_CRL_free");

var _CMS_sign = Module["_CMS_sign"] = createExportWrapper("CMS_sign");

var _CMS_decrypt = Module["_CMS_decrypt"] = createExportWrapper("CMS_decrypt");

var _EVP_PKEY_sign_init = Module["_EVP_PKEY_sign_init"] = createExportWrapper("EVP_PKEY_sign_init");

var _EVP_PKEY_sign = Module["_EVP_PKEY_sign"] = createExportWrapper("EVP_PKEY_sign");

var _zend_try_assign_typed_ref_str = Module["_zend_try_assign_typed_ref_str"] = createExportWrapper("zend_try_assign_typed_ref_str");

var _EVP_PKEY_decrypt_init = Module["_EVP_PKEY_decrypt_init"] = createExportWrapper("EVP_PKEY_decrypt_init");

var _EVP_PKEY_decrypt = Module["_EVP_PKEY_decrypt"] = createExportWrapper("EVP_PKEY_decrypt");

var _EVP_PKEY_encrypt_init = Module["_EVP_PKEY_encrypt_init"] = createExportWrapper("EVP_PKEY_encrypt_init");

var _EVP_PKEY_encrypt = Module["_EVP_PKEY_encrypt"] = createExportWrapper("EVP_PKEY_encrypt");

var _EVP_PKEY_verify_recover_init = Module["_EVP_PKEY_verify_recover_init"] = createExportWrapper("EVP_PKEY_verify_recover_init");

var _EVP_PKEY_verify_recover = Module["_EVP_PKEY_verify_recover"] = createExportWrapper("EVP_PKEY_verify_recover");

var _ERR_error_string_n = Module["_ERR_error_string_n"] = createExportWrapper("ERR_error_string_n");

var _zend_parse_arg_str_or_long_slow = Module["_zend_parse_arg_str_or_long_slow"] = createExportWrapper("zend_parse_arg_str_or_long_slow");

var _EVP_PKEY_size = Module["_EVP_PKEY_size"] = createExportWrapper("EVP_PKEY_size");

var _EVP_MD_CTX_new = Module["_EVP_MD_CTX_new"] = createExportWrapper("EVP_MD_CTX_new");

var _EVP_DigestInit = Module["_EVP_DigestInit"] = createExportWrapper("EVP_DigestInit");

var _EVP_DigestUpdate = Module["_EVP_DigestUpdate"] = createExportWrapper("EVP_DigestUpdate");

var _EVP_SignFinal = Module["_EVP_SignFinal"] = createExportWrapper("EVP_SignFinal");

var _EVP_MD_CTX_free = Module["_EVP_MD_CTX_free"] = createExportWrapper("EVP_MD_CTX_free");

var _EVP_VerifyFinal = Module["_EVP_VerifyFinal"] = createExportWrapper("EVP_VerifyFinal");

var _EVP_get_cipherbyname = Module["_EVP_get_cipherbyname"] = createExportWrapper("EVP_get_cipherbyname");

var _EVP_CIPHER_iv_length = Module["_EVP_CIPHER_iv_length"] = createExportWrapper("EVP_CIPHER_iv_length");

var __safe_emalloc = Module["__safe_emalloc"] = createExportWrapper("_safe_emalloc");

var _EVP_CIPHER_CTX_new = Module["_EVP_CIPHER_CTX_new"] = createExportWrapper("EVP_CIPHER_CTX_new");

var _EVP_EncryptInit = Module["_EVP_EncryptInit"] = createExportWrapper("EVP_EncryptInit");

var _EVP_CIPHER_CTX_free = Module["_EVP_CIPHER_CTX_free"] = createExportWrapper("EVP_CIPHER_CTX_free");

var _EVP_CIPHER_CTX_block_size = Module["_EVP_CIPHER_CTX_block_size"] = createExportWrapper("EVP_CIPHER_CTX_block_size");

var _EVP_CIPHER_CTX_reset = Module["_EVP_CIPHER_CTX_reset"] = createExportWrapper("EVP_CIPHER_CTX_reset");

var _EVP_SealInit = Module["_EVP_SealInit"] = createExportWrapper("EVP_SealInit");

var _EVP_EncryptUpdate = Module["_EVP_EncryptUpdate"] = createExportWrapper("EVP_EncryptUpdate");

var _EVP_SealFinal = Module["_EVP_SealFinal"] = createExportWrapper("EVP_SealFinal");

var _EVP_OpenInit = Module["_EVP_OpenInit"] = createExportWrapper("EVP_OpenInit");

var _EVP_DecryptUpdate = Module["_EVP_DecryptUpdate"] = createExportWrapper("EVP_DecryptUpdate");

var _EVP_OpenFinal = Module["_EVP_OpenFinal"] = createExportWrapper("EVP_OpenFinal");

var _OBJ_NAME_do_all_sorted = Module["_OBJ_NAME_do_all_sorted"] = createExportWrapper("OBJ_NAME_do_all_sorted");

var _EC_get_builtin_curves = Module["_EC_get_builtin_curves"] = createExportWrapper("EC_get_builtin_curves");

var _EVP_MD_size = Module["_EVP_MD_size"] = createExportWrapper("EVP_MD_size");

var _EVP_DigestFinal = Module["_EVP_DigestFinal"] = createExportWrapper("EVP_DigestFinal");

var _php_openssl_encrypt = Module["_php_openssl_encrypt"] = createExportWrapper("php_openssl_encrypt");

var _EVP_EncryptFinal = Module["_EVP_EncryptFinal"] = createExportWrapper("EVP_EncryptFinal");

var _php_base64_encode = Module["_php_base64_encode"] = createExportWrapper("php_base64_encode");

var _EVP_CIPHER_CTX_ctrl = Module["_EVP_CIPHER_CTX_ctrl"] = createExportWrapper("EVP_CIPHER_CTX_ctrl");

var _zend_try_assign_typed_ref_null = Module["_zend_try_assign_typed_ref_null"] = createExportWrapper("zend_try_assign_typed_ref_null");

var _EVP_CIPHER_flags = Module["_EVP_CIPHER_flags"] = createExportWrapper("EVP_CIPHER_flags");

var _EVP_CIPHER_nid = Module["_EVP_CIPHER_nid"] = createExportWrapper("EVP_CIPHER_nid");

var _EVP_CipherInit_ex = Module["_EVP_CipherInit_ex"] = createExportWrapper("EVP_CipherInit_ex");

var _EVP_CIPHER_key_length = Module["_EVP_CIPHER_key_length"] = createExportWrapper("EVP_CIPHER_key_length");

var _EVP_CIPHER_CTX_set_key_length = Module["_EVP_CIPHER_CTX_set_key_length"] = createExportWrapper("EVP_CIPHER_CTX_set_key_length");

var _EVP_CIPHER_CTX_set_padding = Module["_EVP_CIPHER_CTX_set_padding"] = createExportWrapper("EVP_CIPHER_CTX_set_padding");

var _EVP_CipherUpdate = Module["_EVP_CipherUpdate"] = createExportWrapper("EVP_CipherUpdate");

var _EVP_CIPHER_block_size = Module["_EVP_CIPHER_block_size"] = createExportWrapper("EVP_CIPHER_block_size");

var _php_openssl_decrypt = Module["_php_openssl_decrypt"] = createExportWrapper("php_openssl_decrypt");

var _EVP_DecryptFinal = Module["_EVP_DecryptFinal"] = createExportWrapper("EVP_DecryptFinal");

var _php_base64_decode_ex = Module["_php_base64_decode_ex"] = createExportWrapper("php_base64_decode_ex");

var _php_openssl_cipher_iv_length = Module["_php_openssl_cipher_iv_length"] = createExportWrapper("php_openssl_cipher_iv_length");

var _php_openssl_cipher_key_length = Module["_php_openssl_cipher_key_length"] = createExportWrapper("php_openssl_cipher_key_length");

var _php_openssl_random_pseudo_bytes = Module["_php_openssl_random_pseudo_bytes"] = createExportWrapper("php_openssl_random_pseudo_bytes");

var _RAND_bytes = Module["_RAND_bytes"] = createExportWrapper("RAND_bytes");

var _zend_throw_exception = Module["_zend_throw_exception"] = createExportWrapper("zend_throw_exception");

var _zend_try_assign_typed_ref_bool = Module["_zend_try_assign_typed_ref_bool"] = createExportWrapper("zend_try_assign_typed_ref_bool");

var _PEM_read_bio_X509 = Module["_PEM_read_bio_X509"] = createExportWrapper("PEM_read_bio_X509");

var _d2i_X509 = Module["_d2i_X509"] = createExportWrapper("d2i_X509");

var _PEM_ASN1_read_bio = Module["_PEM_ASN1_read_bio"] = createExportWrapper("PEM_ASN1_read_bio");

var _OPENSSL_sk_shift = Module["_OPENSSL_sk_shift"] = createExportWrapper("OPENSSL_sk_shift");

var _PEM_read_bio_X509_REQ = Module["_PEM_read_bio_X509_REQ"] = createExportWrapper("PEM_read_bio_X509_REQ");

var _ERR_set_mark = Module["_ERR_set_mark"] = createExportWrapper("ERR_set_mark");

var _ERR_pop_to_mark = Module["_ERR_pop_to_mark"] = createExportWrapper("ERR_pop_to_mark");

var _OBJ_ln2nid = Module["_OBJ_ln2nid"] = createExportWrapper("OBJ_ln2nid");

var _OBJ_create = Module["_OBJ_create"] = createExportWrapper("OBJ_create");

var _NCONF_get_number_e = Module["_NCONF_get_number_e"] = createExportWrapper("NCONF_get_number_e");

var _RAND_file_name = Module["_RAND_file_name"] = createExportWrapper("RAND_file_name");

var _RAND_load_file = Module["_RAND_load_file"] = createExportWrapper("RAND_load_file");

var _RAND_status = Module["_RAND_status"] = createExportWrapper("RAND_status");

var _RAND_write_file = Module["_RAND_write_file"] = createExportWrapper("RAND_write_file");

var _RSA_set0_key = Module["_RSA_set0_key"] = createExportWrapper("RSA_set0_key");

var _RSA_set0_factors = Module["_RSA_set0_factors"] = createExportWrapper("RSA_set0_factors");

var _RSA_set0_crt_params = Module["_RSA_set0_crt_params"] = createExportWrapper("RSA_set0_crt_params");

var _DSA_set0_pqg = Module["_DSA_set0_pqg"] = createExportWrapper("DSA_set0_pqg");

var _DSA_set0_key = Module["_DSA_set0_key"] = createExportWrapper("DSA_set0_key");

var _DSA_generate_key = Module["_DSA_generate_key"] = createExportWrapper("DSA_generate_key");

var _BN_is_zero = Module["_BN_is_zero"] = createExportWrapper("BN_is_zero");

var _DH_set0_pqg = Module["_DH_set0_pqg"] = createExportWrapper("DH_set0_pqg");

var _DH_set0_key = Module["_DH_set0_key"] = createExportWrapper("DH_set0_key");

var _DH_generate_key = Module["_DH_generate_key"] = createExportWrapper("DH_generate_key");

var _BN_CTX_new = Module["_BN_CTX_new"] = createExportWrapper("BN_CTX_new");

var _BN_with_flags = Module["_BN_with_flags"] = createExportWrapper("BN_with_flags");

var _BN_mod_exp_mont = Module["_BN_mod_exp_mont"] = createExportWrapper("BN_mod_exp_mont");

var _BN_CTX_free = Module["_BN_CTX_free"] = createExportWrapper("BN_CTX_free");

var _EC_GROUP_new_by_curve_name = Module["_EC_GROUP_new_by_curve_name"] = createExportWrapper("EC_GROUP_new_by_curve_name");

var _EC_GROUP_set_asn1_flag = Module["_EC_GROUP_set_asn1_flag"] = createExportWrapper("EC_GROUP_set_asn1_flag");

var _EC_GROUP_set_point_conversion_form = Module["_EC_GROUP_set_point_conversion_form"] = createExportWrapper("EC_GROUP_set_point_conversion_form");

var _EC_KEY_set_group = Module["_EC_KEY_set_group"] = createExportWrapper("EC_KEY_set_group");

var _EC_KEY_set_private_key = Module["_EC_KEY_set_private_key"] = createExportWrapper("EC_KEY_set_private_key");

var _EC_POINT_new = Module["_EC_POINT_new"] = createExportWrapper("EC_POINT_new");

var _EC_POINT_mul = Module["_EC_POINT_mul"] = createExportWrapper("EC_POINT_mul");

var _EC_POINT_set_affine_coordinates_GFp = Module["_EC_POINT_set_affine_coordinates_GFp"] = createExportWrapper("EC_POINT_set_affine_coordinates_GFp");

var _EC_KEY_set_public_key = Module["_EC_KEY_set_public_key"] = createExportWrapper("EC_KEY_set_public_key");

var _EC_POINT_free = Module["_EC_POINT_free"] = createExportWrapper("EC_POINT_free");

var _EC_KEY_check_key = Module["_EC_KEY_check_key"] = createExportWrapper("EC_KEY_check_key");

var _EC_KEY_generate_key = Module["_EC_KEY_generate_key"] = createExportWrapper("EC_KEY_generate_key");

var _EC_GROUP_free = Module["_EC_GROUP_free"] = createExportWrapper("EC_GROUP_free");

var _ERR_clear_error = Module["_ERR_clear_error"] = createExportWrapper("ERR_clear_error");

var _TLS_client_method = Module["_TLS_client_method"] = createExportWrapper("TLS_client_method");

var _TLS_server_method = Module["_TLS_server_method"] = createExportWrapper("TLS_server_method");

var _SSL_CTX_new = Module["_SSL_CTX_new"] = createExportWrapper("SSL_CTX_new");

var _php_stream_context_get_option = Module["_php_stream_context_get_option"] = createExportWrapper("php_stream_context_get_option");

var _SSL_CTX_set_default_passwd_cb_userdata = Module["_SSL_CTX_set_default_passwd_cb_userdata"] = createExportWrapper("SSL_CTX_set_default_passwd_cb_userdata");

var _SSL_CTX_set_default_passwd_cb = Module["_SSL_CTX_set_default_passwd_cb"] = createExportWrapper("SSL_CTX_set_default_passwd_cb");

var _SSL_CTX_set_cipher_list = Module["_SSL_CTX_set_cipher_list"] = createExportWrapper("SSL_CTX_set_cipher_list");

var _SSL_CTX_set_security_level = Module["_SSL_CTX_set_security_level"] = createExportWrapper("SSL_CTX_set_security_level");

var _SSL_CTX_free = Module["_SSL_CTX_free"] = createExportWrapper("SSL_CTX_free");

var _SSL_CTX_set_alpn_protos = Module["_SSL_CTX_set_alpn_protos"] = createExportWrapper("SSL_CTX_set_alpn_protos");

var _zend_strndup = Module["_zend_strndup"] = createExportWrapper("zend_strndup");

var _SSL_CTX_set_alpn_select_cb = Module["_SSL_CTX_set_alpn_select_cb"] = createExportWrapper("SSL_CTX_set_alpn_select_cb");

var _SSL_CTX_set_options = Module["_SSL_CTX_set_options"] = createExportWrapper("SSL_CTX_set_options");

var _SSL_CTX_ctrl = Module["_SSL_CTX_ctrl"] = createExportWrapper("SSL_CTX_ctrl");

var _SSL_new = Module["_SSL_new"] = createExportWrapper("SSL_new");

var _SSL_set_ex_data = Module["_SSL_set_ex_data"] = createExportWrapper("SSL_set_ex_data");

var _SSL_set_fd = Module["_SSL_set_fd"] = createExportWrapper("SSL_set_fd");

var _SSL_ctrl = Module["_SSL_ctrl"] = createExportWrapper("SSL_ctrl");

var _SSL_copy_session_id = Module["_SSL_copy_session_id"] = createExportWrapper("SSL_copy_session_id");

var _SSL_CTX_set_verify = Module["_SSL_CTX_set_verify"] = createExportWrapper("SSL_CTX_set_verify");

var _SSL_load_client_CA_file = Module["_SSL_load_client_CA_file"] = createExportWrapper("SSL_load_client_CA_file");

var _SSL_CTX_set_client_CA_list = Module["_SSL_CTX_set_client_CA_list"] = createExportWrapper("SSL_CTX_set_client_CA_list");

var _SSL_CTX_load_verify_locations = Module["_SSL_CTX_load_verify_locations"] = createExportWrapper("SSL_CTX_load_verify_locations");

var _SSL_CTX_get_cert_store = Module["_SSL_CTX_get_cert_store"] = createExportWrapper("SSL_CTX_get_cert_store");

var _SSL_CTX_set_default_verify_paths = Module["_SSL_CTX_set_default_verify_paths"] = createExportWrapper("SSL_CTX_set_default_verify_paths");

var _SSL_select_next_proto = Module["_SSL_select_next_proto"] = createExportWrapper("SSL_select_next_proto");

var _SSL_CTX_use_certificate_chain_file = Module["_SSL_CTX_use_certificate_chain_file"] = createExportWrapper("SSL_CTX_use_certificate_chain_file");

var _SSL_CTX_use_PrivateKey_file = Module["_SSL_CTX_use_PrivateKey_file"] = createExportWrapper("SSL_CTX_use_PrivateKey_file");

var _SSL_CTX_check_private_key = Module["_SSL_CTX_check_private_key"] = createExportWrapper("SSL_CTX_check_private_key");

var _SSL_CTX_get_options = Module["_SSL_CTX_get_options"] = createExportWrapper("SSL_CTX_get_options");

var _SSL_get_error = Module["_SSL_get_error"] = createExportWrapper("SSL_get_error");

var _ERR_peek_error = Module["_ERR_peek_error"] = createExportWrapper("ERR_peek_error");

var _SSL_set_shutdown = Module["_SSL_set_shutdown"] = createExportWrapper("SSL_set_shutdown");

var _php_socket_strerror = Module["_php_socket_strerror"] = createExportWrapper("php_socket_strerror");

var __safe_malloc = Module["__safe_malloc"] = createExportWrapper("_safe_malloc");

var ___zend_strdup = Module["___zend_strdup"] = createExportWrapper("__zend_strdup");

var _SSL_CTX_callback_ctrl = Module["_SSL_CTX_callback_ctrl"] = createExportWrapper("SSL_CTX_callback_ctrl");

var __emalloc_24 = Module["__emalloc_24"] = createExportWrapper("_emalloc_24");

var _SSL_set_info_callback = Module["_SSL_set_info_callback"] = createExportWrapper("SSL_set_info_callback");

var _SSL_shutdown = Module["_SSL_shutdown"] = createExportWrapper("SSL_shutdown");

var _SSL_free = Module["_SSL_free"] = createExportWrapper("SSL_free");

var _close = Module["_close"] = createExportWrapper("close");

var _fdopen = Module["_fdopen"] = createExportWrapper("fdopen");

var _SSL_pending = Module["_SSL_pending"] = createExportWrapper("SSL_pending");

var __php_stream_fill_read_buffer = Module["__php_stream_fill_read_buffer"] = createExportWrapper("_php_stream_fill_read_buffer");

var _SSL_version = Module["_SSL_version"] = createExportWrapper("SSL_version");

var _SSL_get_current_cipher = Module["_SSL_get_current_cipher"] = createExportWrapper("SSL_get_current_cipher");

var _SSL_CIPHER_get_name = Module["_SSL_CIPHER_get_name"] = createExportWrapper("SSL_CIPHER_get_name");

var _SSL_CIPHER_get_bits = Module["_SSL_CIPHER_get_bits"] = createExportWrapper("SSL_CIPHER_get_bits");

var _SSL_CIPHER_get_version = Module["_SSL_CIPHER_get_version"] = createExportWrapper("SSL_CIPHER_get_version");

var _SSL_get0_alpn_selected = Module["_SSL_get0_alpn_selected"] = createExportWrapper("SSL_get0_alpn_selected");

var _SSL_peek = Module["_SSL_peek"] = createExportWrapper("SSL_peek");

var _recv = Module["_recv"] = createExportWrapper("recv");

var _php_stream_xport_crypto_setup = Module["_php_stream_xport_crypto_setup"] = createExportWrapper("php_stream_xport_crypto_setup");

var _php_stream_xport_crypto_enable = Module["_php_stream_xport_crypto_enable"] = createExportWrapper("php_stream_xport_crypto_enable");

var __emalloc_112 = Module["__emalloc_112"] = createExportWrapper("_emalloc_112");

var __php_stream_alloc = Module["__php_stream_alloc"] = createExportWrapper("_php_stream_alloc");

var _strncmp = Module["_strncmp"] = createExportWrapper("strncmp");

var _php_url_parse_ex = Module["_php_url_parse_ex"] = createExportWrapper("php_url_parse_ex");

var _php_url_free = Module["_php_url_free"] = createExportWrapper("php_url_free");

var __php_stream_get_line = Module["__php_stream_get_line"] = createExportWrapper("_php_stream_get_line");

var _X509_STORE_add_cert = Module["_X509_STORE_add_cert"] = createExportWrapper("X509_STORE_add_cert");

var _X509_STORE_CTX_get_error = Module["_X509_STORE_CTX_get_error"] = createExportWrapper("X509_STORE_CTX_get_error");

var _X509_STORE_CTX_get_error_depth = Module["_X509_STORE_CTX_get_error_depth"] = createExportWrapper("X509_STORE_CTX_get_error_depth");

var _SSL_get_ex_data_X509_STORE_CTX_idx = Module["_SSL_get_ex_data_X509_STORE_CTX_idx"] = createExportWrapper("SSL_get_ex_data_X509_STORE_CTX_idx");

var _X509_STORE_CTX_get_ex_data = Module["_X509_STORE_CTX_get_ex_data"] = createExportWrapper("X509_STORE_CTX_get_ex_data");

var _X509_STORE_CTX_set_error = Module["_X509_STORE_CTX_set_error"] = createExportWrapper("X509_STORE_CTX_set_error");

var _PEM_read_bio_DHparams = Module["_PEM_read_bio_DHparams"] = createExportWrapper("PEM_read_bio_DHparams");

var _strcasecmp = Module["_strcasecmp"] = createExportWrapper("strcasecmp");

var _zend_binary_strcasecmp = Module["_zend_binary_strcasecmp"] = createExportWrapper("zend_binary_strcasecmp");

var _SSL_get_servername = Module["_SSL_get_servername"] = createExportWrapper("SSL_get_servername");

var _SSL_set_SSL_CTX = Module["_SSL_set_SSL_CTX"] = createExportWrapper("SSL_set_SSL_CTX");

var _memchr = Module["_memchr"] = createExportWrapper("memchr");

var __call_user_function_impl = Module["__call_user_function_impl"] = createExportWrapper("_call_user_function_impl");

var _php_set_sock_blocking = Module["_php_set_sock_blocking"] = createExportWrapper("php_set_sock_blocking");

var _SSL_read = Module["_SSL_read"] = createExportWrapper("SSL_read");

var _php_stream_xport_shutdown = Module["_php_stream_xport_shutdown"] = createExportWrapper("php_stream_xport_shutdown");

var _SSL_write = Module["_SSL_write"] = createExportWrapper("SSL_write");

var _php_stream_notification_notify = Module["_php_stream_notification_notify"] = createExportWrapper("php_stream_notification_notify");

var _poll = Module["_poll"] = createExportWrapper("poll");

var _SSL_set_connect_state = Module["_SSL_set_connect_state"] = createExportWrapper("SSL_set_connect_state");

var _SSL_set_accept_state = Module["_SSL_set_accept_state"] = createExportWrapper("SSL_set_accept_state");

var _SSL_connect = Module["_SSL_connect"] = createExportWrapper("SSL_connect");

var _SSL_accept = Module["_SSL_accept"] = createExportWrapper("SSL_accept");

var _SSL_get_peer_certificate = Module["_SSL_get_peer_certificate"] = createExportWrapper("SSL_get_peer_certificate");

var _php_network_accept_incoming = Module["_php_network_accept_incoming"] = createExportWrapper("php_network_accept_incoming");

var _php_stream_context_set_option = Module["_php_stream_context_set_option"] = createExportWrapper("php_stream_context_set_option");

var _SSL_get_peer_cert_chain = Module["_SSL_get_peer_cert_chain"] = createExportWrapper("SSL_get_peer_cert_chain");

var _SSL_get_verify_result = Module["_SSL_get_verify_result"] = createExportWrapper("SSL_get_verify_result");

var _X509_verify_cert_error_string = Module["_X509_verify_cert_error_string"] = createExportWrapper("X509_verify_cert_error_string");

var _X509_get_ext_d2i = Module["_X509_get_ext_d2i"] = createExportWrapper("X509_get_ext_d2i");

var _inet_pton = Module["_inet_pton"] = createExportWrapper("inet_pton");

var _X509_NAME_get_text_by_NID = Module["_X509_NAME_get_text_by_NID"] = createExportWrapper("X509_NAME_get_text_by_NID");

var _php_pcre2_code_copy = Module["_php_pcre2_code_copy"] = createExportWrapper("php_pcre2_code_copy");

var _php_pcre2_code_copy_with_tables = Module["_php_pcre2_code_copy_with_tables"] = createExportWrapper("php_pcre2_code_copy_with_tables");

var _php_pcre2_code_free = Module["_php_pcre2_code_free"] = createExportWrapper("php_pcre2_code_free");

var _php_pcre2_compile = Module["_php_pcre2_compile"] = createExportWrapper("php_pcre2_compile");

var _memmove = Module["_memmove"] = createExportWrapper("memmove");

var _tolower = Module["_tolower"] = createExportWrapper("tolower");

var _php_pcre2_config = Module["_php_pcre2_config"] = createExportWrapper("php_pcre2_config");

var _malloc = Module["_malloc"] = createExportWrapper("malloc");

var _php_pcre2_general_context_create = Module["_php_pcre2_general_context_create"] = createExportWrapper("php_pcre2_general_context_create");

var _php_pcre2_compile_context_create = Module["_php_pcre2_compile_context_create"] = createExportWrapper("php_pcre2_compile_context_create");

var _php_pcre2_match_context_create = Module["_php_pcre2_match_context_create"] = createExportWrapper("php_pcre2_match_context_create");

var _php_pcre2_convert_context_create = Module["_php_pcre2_convert_context_create"] = createExportWrapper("php_pcre2_convert_context_create");

var _php_pcre2_general_context_copy = Module["_php_pcre2_general_context_copy"] = createExportWrapper("php_pcre2_general_context_copy");

var _php_pcre2_compile_context_copy = Module["_php_pcre2_compile_context_copy"] = createExportWrapper("php_pcre2_compile_context_copy");

var _php_pcre2_match_context_copy = Module["_php_pcre2_match_context_copy"] = createExportWrapper("php_pcre2_match_context_copy");

var _php_pcre2_convert_context_copy = Module["_php_pcre2_convert_context_copy"] = createExportWrapper("php_pcre2_convert_context_copy");

var _php_pcre2_general_context_free = Module["_php_pcre2_general_context_free"] = createExportWrapper("php_pcre2_general_context_free");

var _php_pcre2_compile_context_free = Module["_php_pcre2_compile_context_free"] = createExportWrapper("php_pcre2_compile_context_free");

var _php_pcre2_match_context_free = Module["_php_pcre2_match_context_free"] = createExportWrapper("php_pcre2_match_context_free");

var _php_pcre2_convert_context_free = Module["_php_pcre2_convert_context_free"] = createExportWrapper("php_pcre2_convert_context_free");

var _php_pcre2_set_character_tables = Module["_php_pcre2_set_character_tables"] = createExportWrapper("php_pcre2_set_character_tables");

var _php_pcre2_set_bsr = Module["_php_pcre2_set_bsr"] = createExportWrapper("php_pcre2_set_bsr");

var _php_pcre2_set_max_pattern_length = Module["_php_pcre2_set_max_pattern_length"] = createExportWrapper("php_pcre2_set_max_pattern_length");

var _php_pcre2_set_newline = Module["_php_pcre2_set_newline"] = createExportWrapper("php_pcre2_set_newline");

var _php_pcre2_set_parens_nest_limit = Module["_php_pcre2_set_parens_nest_limit"] = createExportWrapper("php_pcre2_set_parens_nest_limit");

var _php_pcre2_set_compile_extra_options = Module["_php_pcre2_set_compile_extra_options"] = createExportWrapper("php_pcre2_set_compile_extra_options");

var _php_pcre2_set_compile_recursion_guard = Module["_php_pcre2_set_compile_recursion_guard"] = createExportWrapper("php_pcre2_set_compile_recursion_guard");

var _php_pcre2_set_callout = Module["_php_pcre2_set_callout"] = createExportWrapper("php_pcre2_set_callout");

var _pcre2_set_substitute_callout_8 = Module["_pcre2_set_substitute_callout_8"] = createExportWrapper("pcre2_set_substitute_callout_8");

var _php_pcre2_set_heap_limit = Module["_php_pcre2_set_heap_limit"] = createExportWrapper("php_pcre2_set_heap_limit");

var _php_pcre2_set_match_limit = Module["_php_pcre2_set_match_limit"] = createExportWrapper("php_pcre2_set_match_limit");

var _php_pcre2_set_depth_limit = Module["_php_pcre2_set_depth_limit"] = createExportWrapper("php_pcre2_set_depth_limit");

var _php_pcre2_set_offset_limit = Module["_php_pcre2_set_offset_limit"] = createExportWrapper("php_pcre2_set_offset_limit");

var _php_pcre2_set_recursion_limit = Module["_php_pcre2_set_recursion_limit"] = createExportWrapper("php_pcre2_set_recursion_limit");

var _php_pcre2_set_recursion_memory_management = Module["_php_pcre2_set_recursion_memory_management"] = createExportWrapper("php_pcre2_set_recursion_memory_management");

var _php_pcre2_set_glob_separator = Module["_php_pcre2_set_glob_separator"] = createExportWrapper("php_pcre2_set_glob_separator");

var _php_pcre2_set_glob_escape = Module["_php_pcre2_set_glob_escape"] = createExportWrapper("php_pcre2_set_glob_escape");

var _ispunct = Module["_ispunct"] = createExportWrapper("ispunct");

var _php_pcre2_dfa_match = Module["_php_pcre2_dfa_match"] = createExportWrapper("php_pcre2_dfa_match");

var _php_pcre2_get_error_message = Module["_php_pcre2_get_error_message"] = createExportWrapper("php_pcre2_get_error_message");

var _php_pcre2_jit_compile = Module["_php_pcre2_jit_compile"] = createExportWrapper("php_pcre2_jit_compile");

var _php_pcre2_jit_match = Module["_php_pcre2_jit_match"] = createExportWrapper("php_pcre2_jit_match");

var _php_pcre2_jit_free_unused_memory = Module["_php_pcre2_jit_free_unused_memory"] = createExportWrapper("php_pcre2_jit_free_unused_memory");

var _php_pcre2_jit_stack_create = Module["_php_pcre2_jit_stack_create"] = createExportWrapper("php_pcre2_jit_stack_create");

var _php_pcre2_jit_stack_assign = Module["_php_pcre2_jit_stack_assign"] = createExportWrapper("php_pcre2_jit_stack_assign");

var _php_pcre2_jit_stack_free = Module["_php_pcre2_jit_stack_free"] = createExportWrapper("php_pcre2_jit_stack_free");

var _php_pcre2_maketables = Module["_php_pcre2_maketables"] = createExportWrapper("php_pcre2_maketables");

var _islower = Module["_islower"] = createExportWrapper("islower");

var _isupper = Module["_isupper"] = createExportWrapper("isupper");

var _isalnum = Module["_isalnum"] = createExportWrapper("isalnum");

var _isxdigit = Module["_isxdigit"] = createExportWrapper("isxdigit");

var _isgraph = Module["_isgraph"] = createExportWrapper("isgraph");

var _isprint = Module["_isprint"] = createExportWrapper("isprint");

var _iscntrl = Module["_iscntrl"] = createExportWrapper("iscntrl");

var _isalpha = Module["_isalpha"] = createExportWrapper("isalpha");

var _pcre2_maketables_free_8 = Module["_pcre2_maketables_free_8"] = createExportWrapper("pcre2_maketables_free_8");

var _php_pcre2_match = Module["_php_pcre2_match"] = createExportWrapper("php_pcre2_match");

var _php_pcre2_match_data_create = Module["_php_pcre2_match_data_create"] = createExportWrapper("php_pcre2_match_data_create");

var _php_pcre2_match_data_create_from_pattern = Module["_php_pcre2_match_data_create_from_pattern"] = createExportWrapper("php_pcre2_match_data_create_from_pattern");

var _php_pcre2_match_data_free = Module["_php_pcre2_match_data_free"] = createExportWrapper("php_pcre2_match_data_free");

var _php_pcre2_get_mark = Module["_php_pcre2_get_mark"] = createExportWrapper("php_pcre2_get_mark");

var _php_pcre2_get_ovector_pointer = Module["_php_pcre2_get_ovector_pointer"] = createExportWrapper("php_pcre2_get_ovector_pointer");

var _php_pcre2_get_ovector_count = Module["_php_pcre2_get_ovector_count"] = createExportWrapper("php_pcre2_get_ovector_count");

var _php_pcre2_get_startchar = Module["_php_pcre2_get_startchar"] = createExportWrapper("php_pcre2_get_startchar");

var _pcre2_get_match_data_size_8 = Module["_pcre2_get_match_data_size_8"] = createExportWrapper("pcre2_get_match_data_size_8");

var _php_pcre2_pattern_info = Module["_php_pcre2_pattern_info"] = createExportWrapper("php_pcre2_pattern_info");

var _php_pcre2_callout_enumerate = Module["_php_pcre2_callout_enumerate"] = createExportWrapper("php_pcre2_callout_enumerate");

var _php_pcre2_serialize_encode = Module["_php_pcre2_serialize_encode"] = createExportWrapper("php_pcre2_serialize_encode");

var _php_pcre2_serialize_decode = Module["_php_pcre2_serialize_decode"] = createExportWrapper("php_pcre2_serialize_decode");

var _php_pcre2_serialize_get_number_of_codes = Module["_php_pcre2_serialize_get_number_of_codes"] = createExportWrapper("php_pcre2_serialize_get_number_of_codes");

var _php_pcre2_serialize_free = Module["_php_pcre2_serialize_free"] = createExportWrapper("php_pcre2_serialize_free");

var _php_pcre2_substitute = Module["_php_pcre2_substitute"] = createExportWrapper("php_pcre2_substitute");

var _php_pcre2_substring_nametable_scan = Module["_php_pcre2_substring_nametable_scan"] = createExportWrapper("php_pcre2_substring_nametable_scan");

var _php_pcre2_substring_length_bynumber = Module["_php_pcre2_substring_length_bynumber"] = createExportWrapper("php_pcre2_substring_length_bynumber");

var _php_pcre2_substring_copy_byname = Module["_php_pcre2_substring_copy_byname"] = createExportWrapper("php_pcre2_substring_copy_byname");

var _php_pcre2_substring_copy_bynumber = Module["_php_pcre2_substring_copy_bynumber"] = createExportWrapper("php_pcre2_substring_copy_bynumber");

var _php_pcre2_substring_get_byname = Module["_php_pcre2_substring_get_byname"] = createExportWrapper("php_pcre2_substring_get_byname");

var _php_pcre2_substring_get_bynumber = Module["_php_pcre2_substring_get_bynumber"] = createExportWrapper("php_pcre2_substring_get_bynumber");

var _php_pcre2_substring_free = Module["_php_pcre2_substring_free"] = createExportWrapper("php_pcre2_substring_free");

var _php_pcre2_substring_length_byname = Module["_php_pcre2_substring_length_byname"] = createExportWrapper("php_pcre2_substring_length_byname");

var _php_pcre2_substring_list_get = Module["_php_pcre2_substring_list_get"] = createExportWrapper("php_pcre2_substring_list_get");

var _php_pcre2_substring_list_free = Module["_php_pcre2_substring_list_free"] = createExportWrapper("php_pcre2_substring_list_free");

var _php_pcre2_substring_number_from_name = Module["_php_pcre2_substring_number_from_name"] = createExportWrapper("php_pcre2_substring_number_from_name");

var _pcre2_pattern_convert_8 = Module["_pcre2_pattern_convert_8"] = createExportWrapper("pcre2_pattern_convert_8");

var _pcre2_converted_pattern_free_8 = Module["_pcre2_converted_pattern_free_8"] = createExportWrapper("pcre2_converted_pattern_free_8");

var _pcre_get_compiled_regex_cache_ex = Module["_pcre_get_compiled_regex_cache_ex"] = createExportWrapper("pcre_get_compiled_regex_cache_ex");

var _zend_string_concat2 = Module["_zend_string_concat2"] = createExportWrapper("zend_string_concat2");

var _zend_hash_apply_with_argument = Module["_zend_hash_apply_with_argument"] = createExportWrapper("zend_hash_apply_with_argument");

var _zend_hash_add_new = Module["_zend_hash_add_new"] = createExportWrapper("zend_hash_add_new");

var _pcre_get_compiled_regex_cache = Module["_pcre_get_compiled_regex_cache"] = createExportWrapper("pcre_get_compiled_regex_cache");

var _pcre_get_compiled_regex = Module["_pcre_get_compiled_regex"] = createExportWrapper("pcre_get_compiled_regex");

var _pcre_get_compiled_regex_ex = Module["_pcre_get_compiled_regex_ex"] = createExportWrapper("pcre_get_compiled_regex_ex");

var _php_pcre_create_match_data = Module["_php_pcre_create_match_data"] = createExportWrapper("php_pcre_create_match_data");

var _php_pcre_free_match_data = Module["_php_pcre_free_match_data"] = createExportWrapper("php_pcre_free_match_data");

var _php_pcre_match_impl = Module["_php_pcre_match_impl"] = createExportWrapper("php_pcre_match_impl");

var _zend_hash_next_index_insert_new = Module["_zend_hash_next_index_insert_new"] = createExportWrapper("zend_hash_next_index_insert_new");

var _add_next_index_null = Module["_add_next_index_null"] = createExportWrapper("add_next_index_null");

var _zend_hash_update = Module["_zend_hash_update"] = createExportWrapper("zend_hash_update");

var __is_numeric_string_ex = Module["__is_numeric_string_ex"] = createExportWrapper("_is_numeric_string_ex");

var _zend_new_pair = Module["_zend_new_pair"] = createExportWrapper("zend_new_pair");

var _php_pcre_replace = Module["_php_pcre_replace"] = createExportWrapper("php_pcre_replace");

var _php_pcre_replace_impl = Module["_php_pcre_replace_impl"] = createExportWrapper("php_pcre_replace_impl");

var _zend_error_noreturn = Module["_zend_error_noreturn"] = createExportWrapper("zend_error_noreturn");

var _zend_argument_type_error = Module["_zend_argument_type_error"] = createExportWrapper("zend_argument_type_error");

var _zend_hash_index_add_new = Module["_zend_hash_index_add_new"] = createExportWrapper("zend_hash_index_add_new");

var _zend_try_assign_typed_ref_long = Module["_zend_try_assign_typed_ref_long"] = createExportWrapper("zend_try_assign_typed_ref_long");

var _zend_is_callable_ex = Module["_zend_is_callable_ex"] = createExportWrapper("zend_is_callable_ex");

var _php_pcre_split_impl = Module["_php_pcre_split_impl"] = createExportWrapper("php_pcre_split_impl");

var _php_pcre_grep_impl = Module["_php_pcre_grep_impl"] = createExportWrapper("php_pcre_grep_impl");

var _php_pcre_mctx = Module["_php_pcre_mctx"] = createExportWrapper("php_pcre_mctx");

var _php_pcre_gctx = Module["_php_pcre_gctx"] = createExportWrapper("php_pcre_gctx");

var _php_pcre_cctx = Module["_php_pcre_cctx"] = createExportWrapper("php_pcre_cctx");

var _php_pcre_pce_incref = Module["_php_pcre_pce_incref"] = createExportWrapper("php_pcre_pce_incref");

var _php_pcre_pce_decref = Module["_php_pcre_pce_decref"] = createExportWrapper("php_pcre_pce_decref");

var _php_pcre_pce_re = Module["_php_pcre_pce_re"] = createExportWrapper("php_pcre_pce_re");

var _zend_register_bool_constant = Module["_zend_register_bool_constant"] = createExportWrapper("zend_register_bool_constant");

var _OnUpdateLong = Module["_OnUpdateLong"] = createExportWrapper("OnUpdateLong");

var _sqlite3_open_v2 = Module["_sqlite3_open_v2"] = createExportWrapper("sqlite3_open_v2");

var _sqlite3_errmsg = Module["_sqlite3_errmsg"] = createExportWrapper("sqlite3_errmsg");

var _sqlite3_close = Module["_sqlite3_close"] = createExportWrapper("sqlite3_close");

var _sqlite3_set_authorizer = Module["_sqlite3_set_authorizer"] = createExportWrapper("sqlite3_set_authorizer");

var _sqlite3_db_config = Module["_sqlite3_db_config"] = createExportWrapper("sqlite3_db_config");

var _zend_fcall_info_args_clear = Module["_zend_fcall_info_args_clear"] = createExportWrapper("zend_fcall_info_args_clear");

var _sqlite3_exec = Module["_sqlite3_exec"] = createExportWrapper("sqlite3_exec");

var _sqlite3_free = Module["_sqlite3_free"] = createExportWrapper("sqlite3_free");

var _sqlite3_libversion = Module["_sqlite3_libversion"] = createExportWrapper("sqlite3_libversion");

var _sqlite3_libversion_number = Module["_sqlite3_libversion_number"] = createExportWrapper("sqlite3_libversion_number");

var _sqlite3_last_insert_rowid = Module["_sqlite3_last_insert_rowid"] = createExportWrapper("sqlite3_last_insert_rowid");

var _sqlite3_errcode = Module["_sqlite3_errcode"] = createExportWrapper("sqlite3_errcode");

var _sqlite3_extended_errcode = Module["_sqlite3_extended_errcode"] = createExportWrapper("sqlite3_extended_errcode");

var _sqlite3_extended_result_codes = Module["_sqlite3_extended_result_codes"] = createExportWrapper("sqlite3_extended_result_codes");

var _sqlite3_busy_timeout = Module["_sqlite3_busy_timeout"] = createExportWrapper("sqlite3_busy_timeout");

var _zend_spprintf = Module["_zend_spprintf"] = createExportWrapper("zend_spprintf");

var _tsrm_realpath = Module["_tsrm_realpath"] = createExportWrapper("tsrm_realpath");

var _sqlite3_enable_load_extension = Module["_sqlite3_enable_load_extension"] = createExportWrapper("sqlite3_enable_load_extension");

var _sqlite3_load_extension = Module["_sqlite3_load_extension"] = createExportWrapper("sqlite3_load_extension");

var _sqlite3_changes = Module["_sqlite3_changes"] = createExportWrapper("sqlite3_changes");

var _sqlite3_mprintf = Module["_sqlite3_mprintf"] = createExportWrapper("sqlite3_mprintf");

var _sqlite3_prepare_v2 = Module["_sqlite3_prepare_v2"] = createExportWrapper("sqlite3_prepare_v2");

var _sqlite3_step = Module["_sqlite3_step"] = createExportWrapper("sqlite3_step");

var _sqlite3_reset = Module["_sqlite3_reset"] = createExportWrapper("sqlite3_reset");

var _sqlite3_finalize = Module["_sqlite3_finalize"] = createExportWrapper("sqlite3_finalize");

var _sqlite3_data_count = Module["_sqlite3_data_count"] = createExportWrapper("sqlite3_data_count");

var _sqlite3_column_name = Module["_sqlite3_column_name"] = createExportWrapper("sqlite3_column_name");

var _sqlite3_column_type = Module["_sqlite3_column_type"] = createExportWrapper("sqlite3_column_type");

var _sqlite3_column_int64 = Module["_sqlite3_column_int64"] = createExportWrapper("sqlite3_column_int64");

var _sqlite3_column_text = Module["_sqlite3_column_text"] = createExportWrapper("sqlite3_column_text");

var _sqlite3_column_bytes = Module["_sqlite3_column_bytes"] = createExportWrapper("sqlite3_column_bytes");

var _sqlite3_column_double = Module["_sqlite3_column_double"] = createExportWrapper("sqlite3_column_double");

var _sqlite3_column_blob = Module["_sqlite3_column_blob"] = createExportWrapper("sqlite3_column_blob");

var _sqlite3_create_function = Module["_sqlite3_create_function"] = createExportWrapper("sqlite3_create_function");

var _sqlite3_user_data = Module["_sqlite3_user_data"] = createExportWrapper("sqlite3_user_data");

var _sqlite3_aggregate_context = Module["_sqlite3_aggregate_context"] = createExportWrapper("sqlite3_aggregate_context");

var _sqlite3_create_collation = Module["_sqlite3_create_collation"] = createExportWrapper("sqlite3_create_collation");

var _sqlite3_blob_open = Module["_sqlite3_blob_open"] = createExportWrapper("sqlite3_blob_open");

var _sqlite3_blob_bytes = Module["_sqlite3_blob_bytes"] = createExportWrapper("sqlite3_blob_bytes");

var _sqlite3_backup_init = Module["_sqlite3_backup_init"] = createExportWrapper("sqlite3_backup_init");

var _sqlite3_backup_step = Module["_sqlite3_backup_step"] = createExportWrapper("sqlite3_backup_step");

var _sqlite3_backup_finish = Module["_sqlite3_backup_finish"] = createExportWrapper("sqlite3_backup_finish");

var _sqlite3_bind_parameter_count = Module["_sqlite3_bind_parameter_count"] = createExportWrapper("sqlite3_bind_parameter_count");

var _zend_llist_del_element = Module["_zend_llist_del_element"] = createExportWrapper("zend_llist_del_element");

var _sqlite3_db_handle = Module["_sqlite3_db_handle"] = createExportWrapper("sqlite3_db_handle");

var _sqlite3_clear_bindings = Module["_sqlite3_clear_bindings"] = createExportWrapper("sqlite3_clear_bindings");

var _sqlite3_stmt_readonly = Module["_sqlite3_stmt_readonly"] = createExportWrapper("sqlite3_stmt_readonly");

var _sqlite3_sql = Module["_sqlite3_sql"] = createExportWrapper("sqlite3_sql");

var _sqlite3_bind_null = Module["_sqlite3_bind_null"] = createExportWrapper("sqlite3_bind_null");

var _convert_to_long = Module["_convert_to_long"] = createExportWrapper("convert_to_long");

var _sqlite3_bind_int = Module["_sqlite3_bind_int"] = createExportWrapper("sqlite3_bind_int");

var _convert_to_double = Module["_convert_to_double"] = createExportWrapper("convert_to_double");

var _sqlite3_bind_double = Module["_sqlite3_bind_double"] = createExportWrapper("sqlite3_bind_double");

var __php_stream_copy_to_mem = Module["__php_stream_copy_to_mem"] = createExportWrapper("_php_stream_copy_to_mem");

var _sqlite3_bind_blob = Module["_sqlite3_bind_blob"] = createExportWrapper("sqlite3_bind_blob");

var _sqlite3_bind_text = Module["_sqlite3_bind_text"] = createExportWrapper("sqlite3_bind_text");

var _sqlite3_column_count = Module["_sqlite3_column_count"] = createExportWrapper("sqlite3_column_count");

var __zend_handle_numeric_str_ex = Module["__zend_handle_numeric_str_ex"] = createExportWrapper("_zend_handle_numeric_str_ex");

var _zend_std_get_gc = Module["_zend_std_get_gc"] = createExportWrapper("zend_std_get_gc");

var _zend_get_gc_buffer_create = Module["_zend_get_gc_buffer_create"] = createExportWrapper("zend_get_gc_buffer_create");

var _zend_get_gc_buffer_grow = Module["_zend_get_gc_buffer_grow"] = createExportWrapper("zend_get_gc_buffer_grow");

var _php_info_print_table_header = Module["_php_info_print_table_header"] = createExportWrapper("php_info_print_table_header");

var _sqlite3_value_type = Module["_sqlite3_value_type"] = createExportWrapper("sqlite3_value_type");

var _sqlite3_value_int = Module["_sqlite3_value_int"] = createExportWrapper("sqlite3_value_int");

var _sqlite3_value_double = Module["_sqlite3_value_double"] = createExportWrapper("sqlite3_value_double");

var _sqlite3_value_text = Module["_sqlite3_value_text"] = createExportWrapper("sqlite3_value_text");

var _sqlite3_value_bytes = Module["_sqlite3_value_bytes"] = createExportWrapper("sqlite3_value_bytes");

var _sqlite3_result_int = Module["_sqlite3_result_int"] = createExportWrapper("sqlite3_result_int");

var _sqlite3_result_null = Module["_sqlite3_result_null"] = createExportWrapper("sqlite3_result_null");

var _sqlite3_result_double = Module["_sqlite3_result_double"] = createExportWrapper("sqlite3_result_double");

var _sqlite3_result_text = Module["_sqlite3_result_text"] = createExportWrapper("sqlite3_result_text");

var _sqlite3_result_error = Module["_sqlite3_result_error"] = createExportWrapper("sqlite3_result_error");

var _sqlite3_blob_write = Module["_sqlite3_blob_write"] = createExportWrapper("sqlite3_blob_write");

var _sqlite3_blob_read = Module["_sqlite3_blob_read"] = createExportWrapper("sqlite3_blob_read");

var _sqlite3_blob_close = Module["_sqlite3_blob_close"] = createExportWrapper("sqlite3_blob_close");

var _sqlite3_bind_parameter_index = Module["_sqlite3_bind_parameter_index"] = createExportWrapper("sqlite3_bind_parameter_index");

var _zend_hash_index_del = Module["_zend_hash_index_del"] = createExportWrapper("zend_hash_index_del");

var _OnUpdateBool = Module["_OnUpdateBool"] = createExportWrapper("OnUpdateBool");

var _zend_ini_boolean_displayer_cb = Module["_zend_ini_boolean_displayer_cb"] = createExportWrapper("zend_ini_boolean_displayer_cb");

var _zend_ini_parse_quantity_warn = Module["_zend_ini_parse_quantity_warn"] = createExportWrapper("zend_ini_parse_quantity_warn");

var _zend_long_to_str = Module["_zend_long_to_str"] = createExportWrapper("zend_long_to_str");

var _zend_alter_ini_entry = Module["_zend_alter_ini_entry"] = createExportWrapper("zend_alter_ini_entry");

var _putchar = Module["_putchar"] = createExportWrapper("putchar");

var _strcpy = Module["_strcpy"] = createExportWrapper("strcpy");

var _localtime_r = Module["_localtime_r"] = createExportWrapper("localtime_r");

var _zend_zval_type_name = Module["_zend_zval_type_name"] = createExportWrapper("zend_zval_type_name");

var _zend_hash_del = Module["_zend_hash_del"] = createExportWrapper("zend_hash_del");

var _dom_object_get_node = Module["_dom_object_get_node"] = createExportWrapper("dom_object_get_node");

var _php_dom_object_get_data = Module["_php_dom_object_get_data"] = createExportWrapper("php_dom_object_get_data");

var _zend_get_property_info = Module["_zend_get_property_info"] = createExportWrapper("zend_get_property_info");

var _zend_verify_property_type = Module["_zend_verify_property_type"] = createExportWrapper("zend_verify_property_type");

var _php_dom_create_object = Module["_php_dom_create_object"] = createExportWrapper("php_dom_create_object");

var _zend_hash_merge = Module["_zend_hash_merge"] = createExportWrapper("zend_hash_merge");

var _xmlDocCopyNode = Module["_xmlDocCopyNode"] = createExportWrapper("xmlDocCopyNode");

var _zend_declare_property_ex = Module["_zend_declare_property_ex"] = createExportWrapper("zend_declare_property_ex");

var _xmlXPathFreeContext = Module["_xmlXPathFreeContext"] = createExportWrapper("xmlXPathFreeContext");

var __emalloc_40 = Module["__emalloc_40"] = createExportWrapper("_emalloc_40");

var _xmlStrEqual = Module["_xmlStrEqual"] = createExportWrapper("xmlStrEqual");

var _xmlNodeGetContent = Module["_xmlNodeGetContent"] = createExportWrapper("xmlNodeGetContent");

var _xmlNodeAddContent = Module["_xmlNodeAddContent"] = createExportWrapper("xmlNodeAddContent");

var _xmlSearchNsByHref = Module["_xmlSearchNsByHref"] = createExportWrapper("xmlSearchNsByHref");

var _xmlDOMWrapReconcileNamespaces = Module["_xmlDOMWrapReconcileNamespaces"] = createExportWrapper("xmlDOMWrapReconcileNamespaces");

var _xmlSplitQName2 = Module["_xmlSplitQName2"] = createExportWrapper("xmlSplitQName2");

var _xmlValidateQName = Module["_xmlValidateQName"] = createExportWrapper("xmlValidateQName");

var _xmlNewNs = Module["_xmlNewNs"] = createExportWrapper("xmlNewNs");

var _xmlNewDocNode = Module["_xmlNewDocNode"] = createExportWrapper("xmlNewDocNode");

var _zend_hash_copy = Module["_zend_hash_copy"] = createExportWrapper("zend_hash_copy");

var _xmlValidateName = Module["_xmlValidateName"] = createExportWrapper("xmlValidateName");

var _xmlNewProp = Module["_xmlNewProp"] = createExportWrapper("xmlNewProp");

var _xmlNodeSetContentLen = Module["_xmlNodeSetContentLen"] = createExportWrapper("xmlNodeSetContentLen");

var _xmlGetIntSubset = Module["_xmlGetIntSubset"] = createExportWrapper("xmlGetIntSubset");

var _xmlDocGetRootElement = Module["_xmlDocGetRootElement"] = createExportWrapper("xmlDocGetRootElement");

var _xmlFindCharEncodingHandler = Module["_xmlFindCharEncodingHandler"] = createExportWrapper("xmlFindCharEncodingHandler");

var _xmlCharEncCloseFunc = Module["_xmlCharEncCloseFunc"] = createExportWrapper("xmlCharEncCloseFunc");

var _xmlNewDocFragment = Module["_xmlNewDocFragment"] = createExportWrapper("xmlNewDocFragment");

var _xmlNewDocText = Module["_xmlNewDocText"] = createExportWrapper("xmlNewDocText");

var _xmlNewDocComment = Module["_xmlNewDocComment"] = createExportWrapper("xmlNewDocComment");

var _xmlNewCDataBlock = Module["_xmlNewCDataBlock"] = createExportWrapper("xmlNewCDataBlock");

var _xmlNewPI = Module["_xmlNewPI"] = createExportWrapper("xmlNewPI");

var _xmlNewDocProp = Module["_xmlNewDocProp"] = createExportWrapper("xmlNewDocProp");

var _xmlNewReference = Module["_xmlNewReference"] = createExportWrapper("xmlNewReference");

var _xmlCharStrndup = Module["_xmlCharStrndup"] = createExportWrapper("xmlCharStrndup");

var _xmlSetNs = Module["_xmlSetNs"] = createExportWrapper("xmlSetNs");

var _xmlGetID = Module["_xmlGetID"] = createExportWrapper("xmlGetID");

var _xmlNewDoc = Module["_xmlNewDoc"] = createExportWrapper("xmlNewDoc");

var _xmlCreateURI = Module["_xmlCreateURI"] = createExportWrapper("xmlCreateURI");

var _xmlURIEscapeStr = Module["_xmlURIEscapeStr"] = createExportWrapper("xmlURIEscapeStr");

var _xmlParseURIReference = Module["_xmlParseURIReference"] = createExportWrapper("xmlParseURIReference");

var _xmlSaveFormatFileEnc = Module["_xmlSaveFormatFileEnc"] = createExportWrapper("xmlSaveFormatFileEnc");

var _xmlBufferCreate = Module["_xmlBufferCreate"] = createExportWrapper("xmlBufferCreate");

var _xmlNodeDump = Module["_xmlNodeDump"] = createExportWrapper("xmlNodeDump");

var _xmlBufferContent = Module["_xmlBufferContent"] = createExportWrapper("xmlBufferContent");

var _xmlBufferFree = Module["_xmlBufferFree"] = createExportWrapper("xmlBufferFree");

var _xmlDocDumpFormatMemory = Module["_xmlDocDumpFormatMemory"] = createExportWrapper("xmlDocDumpFormatMemory");

var _xmlPedanticParserDefault = Module["_xmlPedanticParserDefault"] = createExportWrapper("xmlPedanticParserDefault");

var _xmlSubstituteEntitiesDefault = Module["_xmlSubstituteEntitiesDefault"] = createExportWrapper("xmlSubstituteEntitiesDefault");

var _xmlLineNumbersDefault = Module["_xmlLineNumbersDefault"] = createExportWrapper("xmlLineNumbersDefault");

var _xmlKeepBlanksDefault = Module["_xmlKeepBlanksDefault"] = createExportWrapper("xmlKeepBlanksDefault");

var _xmlXIncludeProcessFlags = Module["_xmlXIncludeProcessFlags"] = createExportWrapper("xmlXIncludeProcessFlags");

var _xmlNewValidCtxt = Module["_xmlNewValidCtxt"] = createExportWrapper("xmlNewValidCtxt");

var _xmlValidateDocument = Module["_xmlValidateDocument"] = createExportWrapper("xmlValidateDocument");

var _xmlFreeValidCtxt = Module["_xmlFreeValidCtxt"] = createExportWrapper("xmlFreeValidCtxt");

var _xmlSchemaNewParserCtxt = Module["_xmlSchemaNewParserCtxt"] = createExportWrapper("xmlSchemaNewParserCtxt");

var _xmlSchemaNewMemParserCtxt = Module["_xmlSchemaNewMemParserCtxt"] = createExportWrapper("xmlSchemaNewMemParserCtxt");

var _xmlSchemaSetParserErrors = Module["_xmlSchemaSetParserErrors"] = createExportWrapper("xmlSchemaSetParserErrors");

var _xmlSchemaParse = Module["_xmlSchemaParse"] = createExportWrapper("xmlSchemaParse");

var _xmlSchemaFreeParserCtxt = Module["_xmlSchemaFreeParserCtxt"] = createExportWrapper("xmlSchemaFreeParserCtxt");

var _xmlSchemaNewValidCtxt = Module["_xmlSchemaNewValidCtxt"] = createExportWrapper("xmlSchemaNewValidCtxt");

var _xmlSchemaFree = Module["_xmlSchemaFree"] = createExportWrapper("xmlSchemaFree");

var _xmlSchemaSetValidOptions = Module["_xmlSchemaSetValidOptions"] = createExportWrapper("xmlSchemaSetValidOptions");

var _xmlSchemaSetValidErrors = Module["_xmlSchemaSetValidErrors"] = createExportWrapper("xmlSchemaSetValidErrors");

var _xmlSchemaValidateDoc = Module["_xmlSchemaValidateDoc"] = createExportWrapper("xmlSchemaValidateDoc");

var _xmlSchemaFreeValidCtxt = Module["_xmlSchemaFreeValidCtxt"] = createExportWrapper("xmlSchemaFreeValidCtxt");

var _xmlRelaxNGNewParserCtxt = Module["_xmlRelaxNGNewParserCtxt"] = createExportWrapper("xmlRelaxNGNewParserCtxt");

var _xmlRelaxNGNewMemParserCtxt = Module["_xmlRelaxNGNewMemParserCtxt"] = createExportWrapper("xmlRelaxNGNewMemParserCtxt");

var _xmlRelaxNGSetParserErrors = Module["_xmlRelaxNGSetParserErrors"] = createExportWrapper("xmlRelaxNGSetParserErrors");

var _xmlRelaxNGParse = Module["_xmlRelaxNGParse"] = createExportWrapper("xmlRelaxNGParse");

var _xmlRelaxNGFreeParserCtxt = Module["_xmlRelaxNGFreeParserCtxt"] = createExportWrapper("xmlRelaxNGFreeParserCtxt");

var _xmlRelaxNGNewValidCtxt = Module["_xmlRelaxNGNewValidCtxt"] = createExportWrapper("xmlRelaxNGNewValidCtxt");

var _xmlRelaxNGFree = Module["_xmlRelaxNGFree"] = createExportWrapper("xmlRelaxNGFree");

var _xmlRelaxNGSetValidErrors = Module["_xmlRelaxNGSetValidErrors"] = createExportWrapper("xmlRelaxNGSetValidErrors");

var _xmlRelaxNGValidateDoc = Module["_xmlRelaxNGValidateDoc"] = createExportWrapper("xmlRelaxNGValidateDoc");

var _xmlRelaxNGFreeValidCtxt = Module["_xmlRelaxNGFreeValidCtxt"] = createExportWrapper("xmlRelaxNGFreeValidCtxt");

var _htmlCreateFileParserCtxt = Module["_htmlCreateFileParserCtxt"] = createExportWrapper("htmlCreateFileParserCtxt");

var _htmlCreateMemoryParserCtxt = Module["_htmlCreateMemoryParserCtxt"] = createExportWrapper("htmlCreateMemoryParserCtxt");

var _htmlCtxtUseOptions = Module["_htmlCtxtUseOptions"] = createExportWrapper("htmlCtxtUseOptions");

var _htmlParseDocument = Module["_htmlParseDocument"] = createExportWrapper("htmlParseDocument");

var _htmlFreeParserCtxt = Module["_htmlFreeParserCtxt"] = createExportWrapper("htmlFreeParserCtxt");

var _htmlGetMetaEncoding = Module["_htmlGetMetaEncoding"] = createExportWrapper("htmlGetMetaEncoding");

var _htmlSaveFileFormat = Module["_htmlSaveFileFormat"] = createExportWrapper("htmlSaveFileFormat");

var _xmlOutputBufferCreateBuffer = Module["_xmlOutputBufferCreateBuffer"] = createExportWrapper("xmlOutputBufferCreateBuffer");

var _htmlNodeDumpFormatOutput = Module["_htmlNodeDumpFormatOutput"] = createExportWrapper("htmlNodeDumpFormatOutput");

var _xmlOutputBufferFlush = Module["_xmlOutputBufferFlush"] = createExportWrapper("xmlOutputBufferFlush");

var _xmlBufferLength = Module["_xmlBufferLength"] = createExportWrapper("xmlBufferLength");

var _xmlOutputBufferClose = Module["_xmlOutputBufferClose"] = createExportWrapper("xmlOutputBufferClose");

var _htmlDocDumpMemoryFormat = Module["_htmlDocDumpMemoryFormat"] = createExportWrapper("htmlDocDumpMemoryFormat");

var _zend_argument_error = Module["_zend_argument_error"] = createExportWrapper("zend_argument_error");

var _xmlCreateFileParserCtxt = Module["_xmlCreateFileParserCtxt"] = createExportWrapper("xmlCreateFileParserCtxt");

var _xmlCreateMemoryParserCtxt = Module["_xmlCreateMemoryParserCtxt"] = createExportWrapper("xmlCreateMemoryParserCtxt");

var _getcwd = Module["_getcwd"] = createExportWrapper("getcwd");

var _xmlCanonicPath = Module["_xmlCanonicPath"] = createExportWrapper("xmlCanonicPath");

var _xmlCtxtUseOptions = Module["_xmlCtxtUseOptions"] = createExportWrapper("xmlCtxtUseOptions");

var _xmlParseDocument = Module["_xmlParseDocument"] = createExportWrapper("xmlParseDocument");

var _xmlFreeParserCtxt = Module["_xmlFreeParserCtxt"] = createExportWrapper("xmlFreeParserCtxt");

var _xmlSetTreeDoc = Module["_xmlSetTreeDoc"] = createExportWrapper("xmlSetTreeDoc");

var _xmlCopyNode = Module["_xmlCopyNode"] = createExportWrapper("xmlCopyNode");

var _xmlAddChild = Module["_xmlAddChild"] = createExportWrapper("xmlAddChild");

var _xmlParseBalancedChunkMemory = Module["_xmlParseBalancedChunkMemory"] = createExportWrapper("xmlParseBalancedChunkMemory");

var _xmlAddChildList = Module["_xmlAddChildList"] = createExportWrapper("xmlAddChildList");

var _xmlStrchr = Module["_xmlStrchr"] = createExportWrapper("xmlStrchr");

var _xmlCreateIntSubset = Module["_xmlCreateIntSubset"] = createExportWrapper("xmlCreateIntSubset");

var _xmlDocSetRootElement = Module["_xmlDocSetRootElement"] = createExportWrapper("xmlDocSetRootElement");

var _xmlNewNode = Module["_xmlNewNode"] = createExportWrapper("xmlNewNode");

var _xmlStrcat = Module["_xmlStrcat"] = createExportWrapper("xmlStrcat");

var _xmlNodeListGetString = Module["_xmlNodeListGetString"] = createExportWrapper("xmlNodeListGetString");

var _xmlSplitQName3 = Module["_xmlSplitQName3"] = createExportWrapper("xmlSplitQName3");

var _xmlStrndup = Module["_xmlStrndup"] = createExportWrapper("xmlStrndup");

var _xmlSearchNs = Module["_xmlSearchNs"] = createExportWrapper("xmlSearchNs");

var _xmlHasNsProp = Module["_xmlHasNsProp"] = createExportWrapper("xmlHasNsProp");

var _xmlSetProp = Module["_xmlSetProp"] = createExportWrapper("xmlSetProp");

var _xmlHasProp = Module["_xmlHasProp"] = createExportWrapper("xmlHasProp");

var _xmlGetNsProp = Module["_xmlGetNsProp"] = createExportWrapper("xmlGetNsProp");

var _xmlReconciliateNs = Module["_xmlReconciliateNs"] = createExportWrapper("xmlReconciliateNs");

var _xmlSetNsProp = Module["_xmlSetNsProp"] = createExportWrapper("xmlSetNsProp");

var _xmlAddID = Module["_xmlAddID"] = createExportWrapper("xmlAddID");

var _xmlNodeGetBase = Module["_xmlNodeGetBase"] = createExportWrapper("xmlNodeGetBase");

var _xmlNewText = Module["_xmlNewText"] = createExportWrapper("xmlNewText");

var _xmlNodeSetContent = Module["_xmlNodeSetContent"] = createExportWrapper("xmlNodeSetContent");

var _xmlAddPrevSibling = Module["_xmlAddPrevSibling"] = createExportWrapper("xmlAddPrevSibling");

var _xmlReplaceNode = Module["_xmlReplaceNode"] = createExportWrapper("xmlReplaceNode");

var _xmlCopyNamespaceList = Module["_xmlCopyNamespaceList"] = createExportWrapper("xmlCopyNamespaceList");

var _xmlCopyPropList = Module["_xmlCopyPropList"] = createExportWrapper("xmlCopyPropList");

var _xmlXPathNewContext = Module["_xmlXPathNewContext"] = createExportWrapper("xmlXPathNewContext");

var _xmlXPathEvalExpression = Module["_xmlXPathEvalExpression"] = createExportWrapper("xmlXPathEvalExpression");

var _xmlXPathFreeObject = Module["_xmlXPathFreeObject"] = createExportWrapper("xmlXPathFreeObject");

var _xmlXPathRegisterNs = Module["_xmlXPathRegisterNs"] = createExportWrapper("xmlXPathRegisterNs");

var _xmlOutputBufferCreateFilename = Module["_xmlOutputBufferCreateFilename"] = createExportWrapper("xmlOutputBufferCreateFilename");

var _xmlC14NDocSaveTo = Module["_xmlC14NDocSaveTo"] = createExportWrapper("xmlC14NDocSaveTo");

var _xmlOutputBufferGetSize = Module["_xmlOutputBufferGetSize"] = createExportWrapper("xmlOutputBufferGetSize");

var _xmlOutputBufferGetContent = Module["_xmlOutputBufferGetContent"] = createExportWrapper("xmlOutputBufferGetContent");

var _xmlGetNodePath = Module["_xmlGetNodePath"] = createExportWrapper("xmlGetNodePath");

var _xmlGetLineNo = Module["_xmlGetLineNo"] = createExportWrapper("xmlGetLineNo");

var _xmlUTF8Strlen = Module["_xmlUTF8Strlen"] = createExportWrapper("xmlUTF8Strlen");

var _xmlUTF8Strsub = Module["_xmlUTF8Strsub"] = createExportWrapper("xmlUTF8Strsub");

var _xmlTextConcat = Module["_xmlTextConcat"] = createExportWrapper("xmlTextConcat");

var _xmlUTF8Strndup = Module["_xmlUTF8Strndup"] = createExportWrapper("xmlUTF8Strndup");

var _xmlNodeDumpOutput = Module["_xmlNodeDumpOutput"] = createExportWrapper("xmlNodeDumpOutput");

var _xmlHashSize = Module["_xmlHashSize"] = createExportWrapper("xmlHashSize");

var _xmlAddNextSibling = Module["_xmlAddNextSibling"] = createExportWrapper("xmlAddNextSibling");

var _xmlIsBlankNode = Module["_xmlIsBlankNode"] = createExportWrapper("xmlIsBlankNode");

var _xmlNewComment = Module["_xmlNewComment"] = createExportWrapper("xmlNewComment");

var _xmlXPathRegisterFuncNS = Module["_xmlXPathRegisterFuncNS"] = createExportWrapper("xmlXPathRegisterFuncNS");

var _xmlGetNsList = Module["_xmlGetNsList"] = createExportWrapper("xmlGetNsList");

var _zend_is_executing = Module["_zend_is_executing"] = createExportWrapper("zend_is_executing");

var _valuePop = Module["_valuePop"] = createExportWrapper("valuePop");

var _xmlXPathCastToString = Module["_xmlXPathCastToString"] = createExportWrapper("xmlXPathCastToString");

var _zend_make_callable = Module["_zend_make_callable"] = createExportWrapper("zend_make_callable");

var _xmlXPathNewNodeSet = Module["_xmlXPathNewNodeSet"] = createExportWrapper("xmlXPathNewNodeSet");

var _valuePush = Module["_valuePush"] = createExportWrapper("valuePush");

var _xmlXPathNewBoolean = Module["_xmlXPathNewBoolean"] = createExportWrapper("xmlXPathNewBoolean");

var _xmlXPathNewString = Module["_xmlXPathNewString"] = createExportWrapper("xmlXPathNewString");

var _xmlHashScan = Module["_xmlHashScan"] = createExportWrapper("xmlHashScan");

var _zend_hash_internal_pointer_reset_ex = Module["_zend_hash_internal_pointer_reset_ex"] = createExportWrapper("zend_hash_internal_pointer_reset_ex");

var _zend_hash_get_current_data_ex = Module["_zend_hash_get_current_data_ex"] = createExportWrapper("zend_hash_get_current_data_ex");

var _xmlStrlen = Module["_xmlStrlen"] = createExportWrapper("xmlStrlen");

var _zend_hash_move_forward_ex = Module["_zend_hash_move_forward_ex"] = createExportWrapper("zend_hash_move_forward_ex");

var _xmlHashLookup = Module["_xmlHashLookup"] = createExportWrapper("xmlHashLookup");

var _sapi_register_input_filter = Module["_sapi_register_input_filter"] = createExportWrapper("sapi_register_input_filter");

var _php_register_variable_ex = Module["_php_register_variable_ex"] = createExportWrapper("php_register_variable_ex");

var _zend_is_auto_global = Module["_zend_is_auto_global"] = createExportWrapper("zend_is_auto_global");

var __convert_to_string = Module["__convert_to_string"] = createExportWrapper("_convert_to_string");

var _php_strip_tags_ex = Module["_php_strip_tags_ex"] = createExportWrapper("php_strip_tags_ex");

var _php_escape_html_entities_ex = Module["_php_escape_html_entities_ex"] = createExportWrapper("php_escape_html_entities_ex");

var _php_addslashes = Module["_php_addslashes"] = createExportWrapper("php_addslashes");

var _get_active_function_name = Module["_get_active_function_name"] = createExportWrapper("get_active_function_name");

var _strpbrk = Module["_strpbrk"] = createExportWrapper("strpbrk");

var _zend_is_callable = Module["_zend_is_callable"] = createExportWrapper("zend_is_callable");

var _php_hash_fetch_ops = Module["_php_hash_fetch_ops"] = createExportWrapper("php_hash_fetch_ops");

var _zend_string_tolower_ex = Module["_zend_string_tolower_ex"] = createExportWrapper("zend_string_tolower_ex");

var _php_hash_register_algo = Module["_php_hash_register_algo"] = createExportWrapper("php_hash_register_algo");

var _zend_str_tolower_dup = Module["_zend_str_tolower_dup"] = createExportWrapper("zend_str_tolower_dup");

var _php_hash_copy = Module["_php_hash_copy"] = createExportWrapper("php_hash_copy");

var _php_hash_serialize_spec = Module["_php_hash_serialize_spec"] = createExportWrapper("php_hash_serialize_spec");

var _php_hash_unserialize_spec = Module["_php_hash_unserialize_spec"] = createExportWrapper("php_hash_unserialize_spec");

var _php_hash_serialize = Module["_php_hash_serialize"] = createExportWrapper("php_hash_serialize");

var _php_hash_unserialize = Module["_php_hash_unserialize"] = createExportWrapper("php_hash_unserialize");

var _explicit_bzero = Module["_explicit_bzero"] = createExportWrapper("explicit_bzero");

var _php_safe_bcmp = Module["_php_safe_bcmp"] = createExportWrapper("php_safe_bcmp");

var _object_properties_load = Module["_object_properties_load"] = createExportWrapper("object_properties_load");

var _PHP_MD4InitArgs = Module["_PHP_MD4InitArgs"] = createExportWrapper("PHP_MD4InitArgs");

var _PHP_MD4Update = Module["_PHP_MD4Update"] = createExportWrapper("PHP_MD4Update");

var _PHP_MD4Final = Module["_PHP_MD4Final"] = createExportWrapper("PHP_MD4Final");

var _PHP_MD2InitArgs = Module["_PHP_MD2InitArgs"] = createExportWrapper("PHP_MD2InitArgs");

var _PHP_MD2Update = Module["_PHP_MD2Update"] = createExportWrapper("PHP_MD2Update");

var _PHP_MD2Final = Module["_PHP_MD2Final"] = createExportWrapper("PHP_MD2Final");

var _PHP_MD5InitArgs = Module["_PHP_MD5InitArgs"] = createExportWrapper("PHP_MD5InitArgs");

var _PHP_MD5Update = Module["_PHP_MD5Update"] = createExportWrapper("PHP_MD5Update");

var _PHP_MD5Final = Module["_PHP_MD5Final"] = createExportWrapper("PHP_MD5Final");

var _PHP_SHA256InitArgs = Module["_PHP_SHA256InitArgs"] = createExportWrapper("PHP_SHA256InitArgs");

var _PHP_SHA256Update = Module["_PHP_SHA256Update"] = createExportWrapper("PHP_SHA256Update");

var _PHP_SHA256Final = Module["_PHP_SHA256Final"] = createExportWrapper("PHP_SHA256Final");

var _PHP_SHA224InitArgs = Module["_PHP_SHA224InitArgs"] = createExportWrapper("PHP_SHA224InitArgs");

var _PHP_SHA224Update = Module["_PHP_SHA224Update"] = createExportWrapper("PHP_SHA224Update");

var _PHP_SHA224Final = Module["_PHP_SHA224Final"] = createExportWrapper("PHP_SHA224Final");

var _PHP_SHA384InitArgs = Module["_PHP_SHA384InitArgs"] = createExportWrapper("PHP_SHA384InitArgs");

var _PHP_SHA384Update = Module["_PHP_SHA384Update"] = createExportWrapper("PHP_SHA384Update");

var _PHP_SHA384Final = Module["_PHP_SHA384Final"] = createExportWrapper("PHP_SHA384Final");

var _PHP_SHA512InitArgs = Module["_PHP_SHA512InitArgs"] = createExportWrapper("PHP_SHA512InitArgs");

var _PHP_SHA512_256InitArgs = Module["_PHP_SHA512_256InitArgs"] = createExportWrapper("PHP_SHA512_256InitArgs");

var _PHP_SHA512_224InitArgs = Module["_PHP_SHA512_224InitArgs"] = createExportWrapper("PHP_SHA512_224InitArgs");

var _PHP_SHA512Update = Module["_PHP_SHA512Update"] = createExportWrapper("PHP_SHA512Update");

var _PHP_SHA512Final = Module["_PHP_SHA512Final"] = createExportWrapper("PHP_SHA512Final");

var _PHP_SHA512_256Final = Module["_PHP_SHA512_256Final"] = createExportWrapper("PHP_SHA512_256Final");

var _PHP_SHA512_224Final = Module["_PHP_SHA512_224Final"] = createExportWrapper("PHP_SHA512_224Final");

var _PHP_SHA1InitArgs = Module["_PHP_SHA1InitArgs"] = createExportWrapper("PHP_SHA1InitArgs");

var _PHP_SHA1Update = Module["_PHP_SHA1Update"] = createExportWrapper("PHP_SHA1Update");

var _PHP_SHA1Final = Module["_PHP_SHA1Final"] = createExportWrapper("PHP_SHA1Final");

var _PHP_RIPEMD128Init = Module["_PHP_RIPEMD128Init"] = createExportWrapper("PHP_RIPEMD128Init");

var _PHP_RIPEMD128Update = Module["_PHP_RIPEMD128Update"] = createExportWrapper("PHP_RIPEMD128Update");

var _PHP_RIPEMD128Final = Module["_PHP_RIPEMD128Final"] = createExportWrapper("PHP_RIPEMD128Final");

var _PHP_RIPEMD160Init = Module["_PHP_RIPEMD160Init"] = createExportWrapper("PHP_RIPEMD160Init");

var _PHP_RIPEMD160Update = Module["_PHP_RIPEMD160Update"] = createExportWrapper("PHP_RIPEMD160Update");

var _PHP_RIPEMD160Final = Module["_PHP_RIPEMD160Final"] = createExportWrapper("PHP_RIPEMD160Final");

var _PHP_RIPEMD256Init = Module["_PHP_RIPEMD256Init"] = createExportWrapper("PHP_RIPEMD256Init");

var _PHP_RIPEMD256Update = Module["_PHP_RIPEMD256Update"] = createExportWrapper("PHP_RIPEMD256Update");

var _PHP_RIPEMD256Final = Module["_PHP_RIPEMD256Final"] = createExportWrapper("PHP_RIPEMD256Final");

var _PHP_RIPEMD320Init = Module["_PHP_RIPEMD320Init"] = createExportWrapper("PHP_RIPEMD320Init");

var _PHP_RIPEMD320Update = Module["_PHP_RIPEMD320Update"] = createExportWrapper("PHP_RIPEMD320Update");

var _PHP_RIPEMD320Final = Module["_PHP_RIPEMD320Final"] = createExportWrapper("PHP_RIPEMD320Final");

var _PHP_3HAVAL128Init = Module["_PHP_3HAVAL128Init"] = createExportWrapper("PHP_3HAVAL128Init");

var _PHP_HAVALUpdate = Module["_PHP_HAVALUpdate"] = createExportWrapper("PHP_HAVALUpdate");

var _PHP_HAVAL128Final = Module["_PHP_HAVAL128Final"] = createExportWrapper("PHP_HAVAL128Final");

var _PHP_3HAVAL160Init = Module["_PHP_3HAVAL160Init"] = createExportWrapper("PHP_3HAVAL160Init");

var _PHP_HAVAL160Final = Module["_PHP_HAVAL160Final"] = createExportWrapper("PHP_HAVAL160Final");

var _PHP_3HAVAL192Init = Module["_PHP_3HAVAL192Init"] = createExportWrapper("PHP_3HAVAL192Init");

var _PHP_HAVAL192Final = Module["_PHP_HAVAL192Final"] = createExportWrapper("PHP_HAVAL192Final");

var _PHP_3HAVAL224Init = Module["_PHP_3HAVAL224Init"] = createExportWrapper("PHP_3HAVAL224Init");

var _PHP_HAVAL224Final = Module["_PHP_HAVAL224Final"] = createExportWrapper("PHP_HAVAL224Final");

var _PHP_3HAVAL256Init = Module["_PHP_3HAVAL256Init"] = createExportWrapper("PHP_3HAVAL256Init");

var _PHP_HAVAL256Final = Module["_PHP_HAVAL256Final"] = createExportWrapper("PHP_HAVAL256Final");

var _PHP_4HAVAL128Init = Module["_PHP_4HAVAL128Init"] = createExportWrapper("PHP_4HAVAL128Init");

var _PHP_4HAVAL160Init = Module["_PHP_4HAVAL160Init"] = createExportWrapper("PHP_4HAVAL160Init");

var _PHP_4HAVAL192Init = Module["_PHP_4HAVAL192Init"] = createExportWrapper("PHP_4HAVAL192Init");

var _PHP_4HAVAL224Init = Module["_PHP_4HAVAL224Init"] = createExportWrapper("PHP_4HAVAL224Init");

var _PHP_4HAVAL256Init = Module["_PHP_4HAVAL256Init"] = createExportWrapper("PHP_4HAVAL256Init");

var _PHP_5HAVAL128Init = Module["_PHP_5HAVAL128Init"] = createExportWrapper("PHP_5HAVAL128Init");

var _PHP_5HAVAL160Init = Module["_PHP_5HAVAL160Init"] = createExportWrapper("PHP_5HAVAL160Init");

var _PHP_5HAVAL192Init = Module["_PHP_5HAVAL192Init"] = createExportWrapper("PHP_5HAVAL192Init");

var _PHP_5HAVAL224Init = Module["_PHP_5HAVAL224Init"] = createExportWrapper("PHP_5HAVAL224Init");

var _PHP_5HAVAL256Init = Module["_PHP_5HAVAL256Init"] = createExportWrapper("PHP_5HAVAL256Init");

var _PHP_3TIGERInit = Module["_PHP_3TIGERInit"] = createExportWrapper("PHP_3TIGERInit");

var _PHP_4TIGERInit = Module["_PHP_4TIGERInit"] = createExportWrapper("PHP_4TIGERInit");

var _PHP_TIGERUpdate = Module["_PHP_TIGERUpdate"] = createExportWrapper("PHP_TIGERUpdate");

var _PHP_TIGER128Final = Module["_PHP_TIGER128Final"] = createExportWrapper("PHP_TIGER128Final");

var _PHP_TIGER160Final = Module["_PHP_TIGER160Final"] = createExportWrapper("PHP_TIGER160Final");

var _PHP_TIGER192Final = Module["_PHP_TIGER192Final"] = createExportWrapper("PHP_TIGER192Final");

var _PHP_GOSTInit = Module["_PHP_GOSTInit"] = createExportWrapper("PHP_GOSTInit");

var _PHP_GOSTInitCrypto = Module["_PHP_GOSTInitCrypto"] = createExportWrapper("PHP_GOSTInitCrypto");

var _PHP_GOSTUpdate = Module["_PHP_GOSTUpdate"] = createExportWrapper("PHP_GOSTUpdate");

var _PHP_GOSTFinal = Module["_PHP_GOSTFinal"] = createExportWrapper("PHP_GOSTFinal");

var _PHP_SNEFRUInit = Module["_PHP_SNEFRUInit"] = createExportWrapper("PHP_SNEFRUInit");

var _PHP_SNEFRUUpdate = Module["_PHP_SNEFRUUpdate"] = createExportWrapper("PHP_SNEFRUUpdate");

var _PHP_SNEFRUFinal = Module["_PHP_SNEFRUFinal"] = createExportWrapper("PHP_SNEFRUFinal");

var _PHP_WHIRLPOOLInit = Module["_PHP_WHIRLPOOLInit"] = createExportWrapper("PHP_WHIRLPOOLInit");

var _PHP_WHIRLPOOLUpdate = Module["_PHP_WHIRLPOOLUpdate"] = createExportWrapper("PHP_WHIRLPOOLUpdate");

var _PHP_WHIRLPOOLFinal = Module["_PHP_WHIRLPOOLFinal"] = createExportWrapper("PHP_WHIRLPOOLFinal");

var _PHP_ADLER32Init = Module["_PHP_ADLER32Init"] = createExportWrapper("PHP_ADLER32Init");

var _PHP_ADLER32Update = Module["_PHP_ADLER32Update"] = createExportWrapper("PHP_ADLER32Update");

var _PHP_ADLER32Final = Module["_PHP_ADLER32Final"] = createExportWrapper("PHP_ADLER32Final");

var _PHP_ADLER32Copy = Module["_PHP_ADLER32Copy"] = createExportWrapper("PHP_ADLER32Copy");

var _PHP_CRC32Init = Module["_PHP_CRC32Init"] = createExportWrapper("PHP_CRC32Init");

var _PHP_CRC32Update = Module["_PHP_CRC32Update"] = createExportWrapper("PHP_CRC32Update");

var _PHP_CRC32BUpdate = Module["_PHP_CRC32BUpdate"] = createExportWrapper("PHP_CRC32BUpdate");

var _PHP_CRC32CUpdate = Module["_PHP_CRC32CUpdate"] = createExportWrapper("PHP_CRC32CUpdate");

var _PHP_CRC32LEFinal = Module["_PHP_CRC32LEFinal"] = createExportWrapper("PHP_CRC32LEFinal");

var _PHP_CRC32BEFinal = Module["_PHP_CRC32BEFinal"] = createExportWrapper("PHP_CRC32BEFinal");

var _PHP_CRC32Copy = Module["_PHP_CRC32Copy"] = createExportWrapper("PHP_CRC32Copy");

var _PHP_FNV132Init = Module["_PHP_FNV132Init"] = createExportWrapper("PHP_FNV132Init");

var _PHP_FNV132Update = Module["_PHP_FNV132Update"] = createExportWrapper("PHP_FNV132Update");

var _PHP_FNV132Final = Module["_PHP_FNV132Final"] = createExportWrapper("PHP_FNV132Final");

var _PHP_FNV1a32Update = Module["_PHP_FNV1a32Update"] = createExportWrapper("PHP_FNV1a32Update");

var _PHP_FNV164Init = Module["_PHP_FNV164Init"] = createExportWrapper("PHP_FNV164Init");

var _PHP_FNV164Update = Module["_PHP_FNV164Update"] = createExportWrapper("PHP_FNV164Update");

var _PHP_FNV164Final = Module["_PHP_FNV164Final"] = createExportWrapper("PHP_FNV164Final");

var _PHP_FNV1a64Update = Module["_PHP_FNV1a64Update"] = createExportWrapper("PHP_FNV1a64Update");

var _PHP_JOAATInit = Module["_PHP_JOAATInit"] = createExportWrapper("PHP_JOAATInit");

var _PHP_JOAATUpdate = Module["_PHP_JOAATUpdate"] = createExportWrapper("PHP_JOAATUpdate");

var _PHP_JOAATFinal = Module["_PHP_JOAATFinal"] = createExportWrapper("PHP_JOAATFinal");

var _PHP_SHA3224Init = Module["_PHP_SHA3224Init"] = createExportWrapper("PHP_SHA3224Init");

var _PHP_SHA3224Update = Module["_PHP_SHA3224Update"] = createExportWrapper("PHP_SHA3224Update");

var _PHP_SHA3256Init = Module["_PHP_SHA3256Init"] = createExportWrapper("PHP_SHA3256Init");

var _PHP_SHA3256Update = Module["_PHP_SHA3256Update"] = createExportWrapper("PHP_SHA3256Update");

var _PHP_SHA3384Init = Module["_PHP_SHA3384Init"] = createExportWrapper("PHP_SHA3384Init");

var _PHP_SHA3384Update = Module["_PHP_SHA3384Update"] = createExportWrapper("PHP_SHA3384Update");

var _PHP_SHA3512Init = Module["_PHP_SHA3512Init"] = createExportWrapper("PHP_SHA3512Init");

var _PHP_SHA3512Update = Module["_PHP_SHA3512Update"] = createExportWrapper("PHP_SHA3512Update");

var _PHP_MURMUR3AInit = Module["_PHP_MURMUR3AInit"] = createExportWrapper("PHP_MURMUR3AInit");

var _PHP_MURMUR3AUpdate = Module["_PHP_MURMUR3AUpdate"] = createExportWrapper("PHP_MURMUR3AUpdate");

var _PHP_MURMUR3AFinal = Module["_PHP_MURMUR3AFinal"] = createExportWrapper("PHP_MURMUR3AFinal");

var _PHP_MURMUR3ACopy = Module["_PHP_MURMUR3ACopy"] = createExportWrapper("PHP_MURMUR3ACopy");

var _PHP_MURMUR3CInit = Module["_PHP_MURMUR3CInit"] = createExportWrapper("PHP_MURMUR3CInit");

var _PHP_MURMUR3CUpdate = Module["_PHP_MURMUR3CUpdate"] = createExportWrapper("PHP_MURMUR3CUpdate");

var _PHP_MURMUR3CFinal = Module["_PHP_MURMUR3CFinal"] = createExportWrapper("PHP_MURMUR3CFinal");

var _PHP_MURMUR3CCopy = Module["_PHP_MURMUR3CCopy"] = createExportWrapper("PHP_MURMUR3CCopy");

var _PHP_MURMUR3FInit = Module["_PHP_MURMUR3FInit"] = createExportWrapper("PHP_MURMUR3FInit");

var _PHP_MURMUR3FUpdate = Module["_PHP_MURMUR3FUpdate"] = createExportWrapper("PHP_MURMUR3FUpdate");

var _PHP_MURMUR3FFinal = Module["_PHP_MURMUR3FFinal"] = createExportWrapper("PHP_MURMUR3FFinal");

var _PHP_MURMUR3FCopy = Module["_PHP_MURMUR3FCopy"] = createExportWrapper("PHP_MURMUR3FCopy");

var _PHP_XXH32Init = Module["_PHP_XXH32Init"] = createExportWrapper("PHP_XXH32Init");

var _PHP_XXH32Update = Module["_PHP_XXH32Update"] = createExportWrapper("PHP_XXH32Update");

var _PHP_XXH32Final = Module["_PHP_XXH32Final"] = createExportWrapper("PHP_XXH32Final");

var _PHP_XXH32Copy = Module["_PHP_XXH32Copy"] = createExportWrapper("PHP_XXH32Copy");

var _PHP_XXH64Init = Module["_PHP_XXH64Init"] = createExportWrapper("PHP_XXH64Init");

var _PHP_XXH64Update = Module["_PHP_XXH64Update"] = createExportWrapper("PHP_XXH64Update");

var _PHP_XXH64Final = Module["_PHP_XXH64Final"] = createExportWrapper("PHP_XXH64Final");

var _PHP_XXH64Copy = Module["_PHP_XXH64Copy"] = createExportWrapper("PHP_XXH64Copy");

var _PHP_XXH3_64_Init = Module["_PHP_XXH3_64_Init"] = createExportWrapper("PHP_XXH3_64_Init");

var _PHP_XXH3_64_Update = Module["_PHP_XXH3_64_Update"] = createExportWrapper("PHP_XXH3_64_Update");

var _PHP_XXH3_64_Final = Module["_PHP_XXH3_64_Final"] = createExportWrapper("PHP_XXH3_64_Final");

var _PHP_XXH3_64_Copy = Module["_PHP_XXH3_64_Copy"] = createExportWrapper("PHP_XXH3_64_Copy");

var _PHP_XXH3_128_Init = Module["_PHP_XXH3_128_Init"] = createExportWrapper("PHP_XXH3_128_Init");

var _PHP_XXH3_128_Update = Module["_PHP_XXH3_128_Update"] = createExportWrapper("PHP_XXH3_128_Update");

var _PHP_XXH3_128_Final = Module["_PHP_XXH3_128_Final"] = createExportWrapper("PHP_XXH3_128_Final");

var _PHP_XXH3_128_Copy = Module["_PHP_XXH3_128_Copy"] = createExportWrapper("PHP_XXH3_128_Copy");

var _php_output_handler_alias_register = Module["_php_output_handler_alias_register"] = createExportWrapper("php_output_handler_alias_register");

var _php_output_handler_conflict_register = Module["_php_output_handler_conflict_register"] = createExportWrapper("php_output_handler_conflict_register");

var _zend_get_constant_str = Module["_zend_get_constant_str"] = createExportWrapper("zend_get_constant_str");

var _php_stream_filter_register_factory = Module["_php_stream_filter_register_factory"] = createExportWrapper("php_stream_filter_register_factory");

var _php_output_handler_create_internal = Module["_php_output_handler_create_internal"] = createExportWrapper("php_output_handler_create_internal");

var _php_output_get_level = Module["_php_output_get_level"] = createExportWrapper("php_output_get_level");

var _php_output_handler_conflict = Module["_php_output_handler_conflict"] = createExportWrapper("php_output_handler_conflict");

var _php_stream_filter_unregister_factory = Module["_php_stream_filter_unregister_factory"] = createExportWrapper("php_stream_filter_unregister_factory");

var _php_iconv_string = Module["_php_iconv_string"] = createExportWrapper("php_iconv_string");

var _libiconv_open = Module["_libiconv_open"] = createExportWrapper("libiconv_open");

var _libiconv = Module["_libiconv"] = createExportWrapper("libiconv");

var _libiconv_close = Module["_libiconv_close"] = createExportWrapper("libiconv_close");

var _php_get_internal_encoding = Module["_php_get_internal_encoding"] = createExportWrapper("php_get_internal_encoding");

var _php_quot_print_decode = Module["_php_quot_print_decode"] = createExportWrapper("php_quot_print_decode");

var _php_get_input_encoding = Module["_php_get_input_encoding"] = createExportWrapper("php_get_input_encoding");

var _php_get_output_encoding = Module["_php_get_output_encoding"] = createExportWrapper("php_get_output_encoding");

var _php_output_get_status = Module["_php_output_get_status"] = createExportWrapper("php_output_get_status");

var _sapi_add_header_ex = Module["_sapi_add_header_ex"] = createExportWrapper("sapi_add_header_ex");

var _php_output_handler_hook = Module["_php_output_handler_hook"] = createExportWrapper("php_output_handler_hook");

var __emalloc_160 = Module["__emalloc_160"] = createExportWrapper("_emalloc_160");

var __php_stream_filter_alloc = Module["__php_stream_filter_alloc"] = createExportWrapper("_php_stream_filter_alloc");

var _php_stream_bucket_unlink = Module["_php_stream_bucket_unlink"] = createExportWrapper("php_stream_bucket_unlink");

var _php_stream_bucket_delref = Module["_php_stream_bucket_delref"] = createExportWrapper("php_stream_bucket_delref");

var _php_stream_bucket_new = Module["_php_stream_bucket_new"] = createExportWrapper("php_stream_bucket_new");

var _php_stream_bucket_append = Module["_php_stream_bucket_append"] = createExportWrapper("php_stream_bucket_append");

var _php_json_encode_string = Module["_php_json_encode_string"] = createExportWrapper("php_json_encode_string");

var _php_json_encode_ex = Module["_php_json_encode_ex"] = createExportWrapper("php_json_encode_ex");

var _php_json_encode = Module["_php_json_encode"] = createExportWrapper("php_json_encode");

var _php_json_decode_ex = Module["_php_json_decode_ex"] = createExportWrapper("php_json_decode_ex");

var _php_json_parser_init = Module["_php_json_parser_init"] = createExportWrapper("php_json_parser_init");

var _php_json_parser_error_code = Module["_php_json_parser_error_code"] = createExportWrapper("php_json_parser_error_code");

var _php_next_utf8_char = Module["_php_next_utf8_char"] = createExportWrapper("php_next_utf8_char");

var ___extenddftf2 = Module["___extenddftf2"] = createExportWrapper("__extenddftf2");

var ___fpclassifyl = Module["___fpclassifyl"] = createExportWrapper("__fpclassifyl");

var _zend_gcvt = Module["_zend_gcvt"] = createExportWrapper("zend_gcvt");

var _zend_get_properties_for = Module["_zend_get_properties_for"] = createExportWrapper("zend_get_properties_for");

var _object_init = Module["_object_init"] = createExportWrapper("object_init");

var _php_json_parser_init_ex = Module["_php_json_parser_init_ex"] = createExportWrapper("php_json_parser_init_ex");

var _php_json_parse = Module["_php_json_parse"] = createExportWrapper("php_json_parse");

var _zend_strtod = Module["_zend_strtod"] = createExportWrapper("zend_strtod");

var _mbstr_treat_data = Module["_mbstr_treat_data"] = createExportWrapper("mbstr_treat_data");

var _sapi_register_treat_data = Module["_sapi_register_treat_data"] = createExportWrapper("sapi_register_treat_data");

var _sapi_register_post_entries = Module["_sapi_register_post_entries"] = createExportWrapper("sapi_register_post_entries");

var _zend_multibyte_set_functions = Module["_zend_multibyte_set_functions"] = createExportWrapper("zend_multibyte_set_functions");

var _php_rfc1867_set_multibyte_callbacks = Module["_php_rfc1867_set_multibyte_callbacks"] = createExportWrapper("php_rfc1867_set_multibyte_callbacks");

var _zend_multibyte_restore_functions = Module["_zend_multibyte_restore_functions"] = createExportWrapper("zend_multibyte_restore_functions");

var _zend_multibyte_set_internal_encoding = Module["_zend_multibyte_set_internal_encoding"] = createExportWrapper("zend_multibyte_set_internal_encoding");

var _mbfl_buffer_illegalchars = Module["_mbfl_buffer_illegalchars"] = createExportWrapper("mbfl_buffer_illegalchars");

var _mbfl_buffer_converter_delete = Module["_mbfl_buffer_converter_delete"] = createExportWrapper("mbfl_buffer_converter_delete");

var _php_mb_mbchar_bytes = Module["_php_mb_mbchar_bytes"] = createExportWrapper("php_mb_mbchar_bytes");

var _php_mb_safe_strrchr = Module["_php_mb_safe_strrchr"] = createExportWrapper("php_mb_safe_strrchr");

var _mbfl_no2encoding = Module["_mbfl_no2encoding"] = createExportWrapper("mbfl_no2encoding");

var _mbfl_no_language2name = Module["_mbfl_no_language2name"] = createExportWrapper("mbfl_no_language2name");

var _mbfl_name2encoding = Module["_mbfl_name2encoding"] = createExportWrapper("mbfl_name2encoding");

var _mbfl_memory_device_init = Module["_mbfl_memory_device_init"] = createExportWrapper("mbfl_memory_device_init");

var _mbfl_memory_device_strcat = Module["_mbfl_memory_device_strcat"] = createExportWrapper("mbfl_memory_device_strcat");

var _mbfl_memory_device_output = Module["_mbfl_memory_device_output"] = createExportWrapper("mbfl_memory_device_output");

var _mbfl_memory_device_unput = Module["_mbfl_memory_device_unput"] = createExportWrapper("mbfl_memory_device_unput");

var _mbfl_memory_device_result = Module["_mbfl_memory_device_result"] = createExportWrapper("mbfl_memory_device_result");

var _mbfl_string_clear = Module["_mbfl_string_clear"] = createExportWrapper("mbfl_string_clear");

var _mbfl_name2no_encoding = Module["_mbfl_name2no_encoding"] = createExportWrapper("mbfl_name2no_encoding");

var _mbfl_no2preferred_mime_name = Module["_mbfl_no2preferred_mime_name"] = createExportWrapper("mbfl_no2preferred_mime_name");

var _mbfl_buffer_converter_new = Module["_mbfl_buffer_converter_new"] = createExportWrapper("mbfl_buffer_converter_new");

var _mbfl_buffer_converter_illegal_mode = Module["_mbfl_buffer_converter_illegal_mode"] = createExportWrapper("mbfl_buffer_converter_illegal_mode");

var _mbfl_buffer_converter_illegal_substchar = Module["_mbfl_buffer_converter_illegal_substchar"] = createExportWrapper("mbfl_buffer_converter_illegal_substchar");

var _mbfl_string_init = Module["_mbfl_string_init"] = createExportWrapper("mbfl_string_init");

var _mbfl_buffer_converter_feed = Module["_mbfl_buffer_converter_feed"] = createExportWrapper("mbfl_buffer_converter_feed");

var _mbfl_buffer_converter_flush = Module["_mbfl_buffer_converter_flush"] = createExportWrapper("mbfl_buffer_converter_flush");

var _mbfl_buffer_converter_result = Module["_mbfl_buffer_converter_result"] = createExportWrapper("mbfl_buffer_converter_result");

var _mbfl_convert_filter_new = Module["_mbfl_convert_filter_new"] = createExportWrapper("mbfl_convert_filter_new");

var _mbfl_convert_filter_delete = Module["_mbfl_convert_filter_delete"] = createExportWrapper("mbfl_convert_filter_delete");

var _mbfl_memory_device_clear = Module["_mbfl_memory_device_clear"] = createExportWrapper("mbfl_memory_device_clear");

var _mbfl_convert_filter_flush = Module["_mbfl_convert_filter_flush"] = createExportWrapper("mbfl_convert_filter_flush");

var _mbfl_strpos = Module["_mbfl_strpos"] = createExportWrapper("mbfl_strpos");

var _php_mb_stripos = Module["_php_mb_stripos"] = createExportWrapper("php_mb_stripos");

var _mbfl_string_init_set = Module["_mbfl_string_init_set"] = createExportWrapper("mbfl_string_init_set");

var _mbfl_substr = Module["_mbfl_substr"] = createExportWrapper("mbfl_substr");

var _mbfl_substr_count = Module["_mbfl_substr_count"] = createExportWrapper("mbfl_substr_count");

var _mbfl_strlen = Module["_mbfl_strlen"] = createExportWrapper("mbfl_strlen");

var _mbfl_strcut = Module["_mbfl_strcut"] = createExportWrapper("mbfl_strcut");

var _php_mb_convert_encoding_ex = Module["_php_mb_convert_encoding_ex"] = createExportWrapper("php_mb_convert_encoding_ex");

var _mb_fast_convert = Module["_mb_fast_convert"] = createExportWrapper("mb_fast_convert");

var _php_mb_convert_encoding = Module["_php_mb_convert_encoding"] = createExportWrapper("php_mb_convert_encoding");

var _mbfl_identify_encoding = Module["_mbfl_identify_encoding"] = createExportWrapper("mbfl_identify_encoding");

var _php_mb_convert_encoding_recursive = Module["_php_mb_convert_encoding_recursive"] = createExportWrapper("php_mb_convert_encoding_recursive");

var _zend_hash_index_add = Module["_zend_hash_index_add"] = createExportWrapper("zend_hash_index_add");

var _php_unicode_convert_case = Module["_php_unicode_convert_case"] = createExportWrapper("php_unicode_convert_case");

var _php_mb_check_encoding = Module["_php_mb_check_encoding"] = createExportWrapper("php_mb_check_encoding");

var _mbfl_get_supported_encodings = Module["_mbfl_get_supported_encodings"] = createExportWrapper("mbfl_get_supported_encodings");

var _mbfl_no2language = Module["_mbfl_no2language"] = createExportWrapper("mbfl_no2language");

var _mbfl_mime_header_encode = Module["_mbfl_mime_header_encode"] = createExportWrapper("mbfl_mime_header_encode");

var _mbfl_mime_header_decode = Module["_mbfl_mime_header_decode"] = createExportWrapper("mbfl_mime_header_decode");

var _mbfl_encoding_detector_new = Module["_mbfl_encoding_detector_new"] = createExportWrapper("mbfl_encoding_detector_new");

var _mbfl_encoding_detector_judge = Module["_mbfl_encoding_detector_judge"] = createExportWrapper("mbfl_encoding_detector_judge");

var _mbfl_encoding_detector_delete = Module["_mbfl_encoding_detector_delete"] = createExportWrapper("mbfl_encoding_detector_delete");

var _mbfl_encoding_detector_feed = Module["_mbfl_encoding_detector_feed"] = createExportWrapper("mbfl_encoding_detector_feed");

var _mbfl_buffer_converter_feed_result = Module["_mbfl_buffer_converter_feed_result"] = createExportWrapper("mbfl_buffer_converter_feed_result");

var _zend_ini_string_ex = Module["_zend_ini_string_ex"] = createExportWrapper("zend_ini_string_ex");

var _php_trim = Module["_php_trim"] = createExportWrapper("php_trim");

var _php_mail_build_headers = Module["_php_mail_build_headers"] = createExportWrapper("php_mail_build_headers");

var _strtok_r = Module["_strtok_r"] = createExportWrapper("strtok_r");

var _mbfl_convert_encoding = Module["_mbfl_convert_encoding"] = createExportWrapper("mbfl_convert_encoding");

var _mbfl_memory_device_strncat = Module["_mbfl_memory_device_strncat"] = createExportWrapper("mbfl_memory_device_strncat");

var _mbfl_encoding_preferred_mime_name = Module["_mbfl_encoding_preferred_mime_name"] = createExportWrapper("mbfl_encoding_preferred_mime_name");

var _php_escape_shell_cmd = Module["_php_escape_shell_cmd"] = createExportWrapper("php_escape_shell_cmd");

var _php_mail = Module["_php_mail"] = createExportWrapper("php_mail");

var _zend_str_tolower = Module["_zend_str_tolower"] = createExportWrapper("zend_str_tolower");

var _mbfl_no_encoding2name = Module["_mbfl_no_encoding2name"] = createExportWrapper("mbfl_no_encoding2name");

var _mbfl_name2no_language = Module["_mbfl_name2no_language"] = createExportWrapper("mbfl_name2no_language");

var _sapi_unregister_post_entry = Module["_sapi_unregister_post_entry"] = createExportWrapper("sapi_unregister_post_entry");

var _sapi_read_standard_form_data = Module["_sapi_read_standard_form_data"] = createExportWrapper("sapi_read_standard_form_data");

var _rfc1867_post_handler = Module["_rfc1867_post_handler"] = createExportWrapper("rfc1867_post_handler");

var _php_std_post_handler = Module["_php_std_post_handler"] = createExportWrapper("php_std_post_handler");

var _php_unicode_is_prop1 = Module["_php_unicode_is_prop1"] = createExportWrapper("php_unicode_is_prop1");

var _php_unicode_is_prop = Module["_php_unicode_is_prop"] = createExportWrapper("php_unicode_is_prop");

var _php_default_treat_data = Module["_php_default_treat_data"] = createExportWrapper("php_default_treat_data");

var _sapi_handle_post = Module["_sapi_handle_post"] = createExportWrapper("sapi_handle_post");

var _php_url_decode = Module["_php_url_decode"] = createExportWrapper("php_url_decode");

var _php_register_variable_safe = Module["_php_register_variable_safe"] = createExportWrapper("php_register_variable_safe");

var __php_stream_seek = Module["__php_stream_seek"] = createExportWrapper("_php_stream_seek");

var _mbfl_filt_conv_illegal_output = Module["_mbfl_filt_conv_illegal_output"] = createExportWrapper("mbfl_filt_conv_illegal_output");

var _mb_illegal_output = Module["_mb_illegal_output"] = createExportWrapper("mb_illegal_output");

var _mbfl_filt_conv_common_ctor = Module["_mbfl_filt_conv_common_ctor"] = createExportWrapper("mbfl_filt_conv_common_ctor");

var _mbfl_filt_conv_common_flush = Module["_mbfl_filt_conv_common_flush"] = createExportWrapper("mbfl_filt_conv_common_flush");

var _mbfl_convert_filter_get_vtbl = Module["_mbfl_convert_filter_get_vtbl"] = createExportWrapper("mbfl_convert_filter_get_vtbl");

var _mbfl_memory_device_realloc = Module["_mbfl_memory_device_realloc"] = createExportWrapper("mbfl_memory_device_realloc");

var _zend_memnstr_ex = Module["_zend_memnstr_ex"] = createExportWrapper("zend_memnstr_ex");

var _memrchr = Module["_memrchr"] = createExportWrapper("memrchr");

var _zend_memnrstr_ex = Module["_zend_memnrstr_ex"] = createExportWrapper("zend_memnrstr_ex");

var _mbfl_wchar_device_init = Module["_mbfl_wchar_device_init"] = createExportWrapper("mbfl_wchar_device_init");

var _mbfl_wchar_device_output = Module["_mbfl_wchar_device_output"] = createExportWrapper("mbfl_wchar_device_output");

var _mbfl_convert_filter_feed_string = Module["_mbfl_convert_filter_feed_string"] = createExportWrapper("mbfl_convert_filter_feed_string");

var _mbfl_wchar_device_clear = Module["_mbfl_wchar_device_clear"] = createExportWrapper("mbfl_wchar_device_clear");

var _mbfl_filter_output_null = Module["_mbfl_filter_output_null"] = createExportWrapper("mbfl_filter_output_null");

var _mbfl_convert_filter_copy = Module["_mbfl_convert_filter_copy"] = createExportWrapper("mbfl_convert_filter_copy");

var _mime_header_encoder_result = Module["_mime_header_encoder_result"] = createExportWrapper("mime_header_encoder_result");

var _mbfl_memory_device_devcat = Module["_mbfl_memory_device_devcat"] = createExportWrapper("mbfl_memory_device_devcat");

var _mbfl_memory_device_reset = Module["_mbfl_memory_device_reset"] = createExportWrapper("mbfl_memory_device_reset");

var _mime_header_encoder_new = Module["_mime_header_encoder_new"] = createExportWrapper("mime_header_encoder_new");

var __emalloc_256 = Module["__emalloc_256"] = createExportWrapper("_emalloc_256");

var _mbfl_filter_output_pipe = Module["_mbfl_filter_output_pipe"] = createExportWrapper("mbfl_filter_output_pipe");

var _mime_header_encoder_delete = Module["_mime_header_encoder_delete"] = createExportWrapper("mime_header_encoder_delete");

var _mbfl_convert_filter_devcat = Module["_mbfl_convert_filter_devcat"] = createExportWrapper("mbfl_convert_filter_devcat");

var _mime_header_decoder_result = Module["_mime_header_decoder_result"] = createExportWrapper("mime_header_decoder_result");

var _mime_header_decoder_new = Module["_mime_header_decoder_new"] = createExportWrapper("mime_header_decoder_new");

var __emalloc_64 = Module["__emalloc_64"] = createExportWrapper("_emalloc_64");

var _mime_header_decoder_delete = Module["_mime_header_decoder_delete"] = createExportWrapper("mime_header_decoder_delete");

var _mbfl_convert_filter_reset = Module["_mbfl_convert_filter_reset"] = createExportWrapper("mbfl_convert_filter_reset");

var _mbfl_filt_conv_pass = Module["_mbfl_filt_conv_pass"] = createExportWrapper("mbfl_filt_conv_pass");

var _mbfl_convert_filter_new2 = Module["_mbfl_convert_filter_new2"] = createExportWrapper("mbfl_convert_filter_new2");

var _mbfl_convert_filter_feed = Module["_mbfl_convert_filter_feed"] = createExportWrapper("mbfl_convert_filter_feed");

var _mbfl_convert_filter_strcat = Module["_mbfl_convert_filter_strcat"] = createExportWrapper("mbfl_convert_filter_strcat");

var _mbfl_name2language = Module["_mbfl_name2language"] = createExportWrapper("mbfl_name2language");

var _php_pdo_get_dbh_ce = Module["_php_pdo_get_dbh_ce"] = createExportWrapper("php_pdo_get_dbh_ce");

var _php_pdo_get_exception = Module["_php_pdo_get_exception"] = createExportWrapper("php_pdo_get_exception");

var _zend_register_list_destructors_ex = Module["_zend_register_list_destructors_ex"] = createExportWrapper("zend_register_list_destructors_ex");

var _php_pdo_register_driver = Module["_php_pdo_register_driver"] = createExportWrapper("php_pdo_register_driver");

var _php_pdo_unregister_driver = Module["_php_pdo_unregister_driver"] = createExportWrapper("php_pdo_unregister_driver");

var _zend_hash_str_del = Module["_zend_hash_str_del"] = createExportWrapper("zend_hash_str_del");

var _php_pdo_parse_data_source = Module["_php_pdo_parse_data_source"] = createExportWrapper("php_pdo_parse_data_source");

var _pdo_throw_exception = Module["_pdo_throw_exception"] = createExportWrapper("pdo_throw_exception");

var _zend_update_property_long = Module["_zend_update_property_long"] = createExportWrapper("zend_update_property_long");

var _zend_update_property_string = Module["_zend_update_property_string"] = createExportWrapper("zend_update_property_string");

var _zend_throw_exception_object = Module["_zend_throw_exception_object"] = createExportWrapper("zend_throw_exception_object");

var _pdo_raise_impl_error = Module["_pdo_raise_impl_error"] = createExportWrapper("pdo_raise_impl_error");

var _pdo_handle_error = Module["_pdo_handle_error"] = createExportWrapper("pdo_handle_error");

var _zend_update_property_str = Module["_zend_update_property_str"] = createExportWrapper("zend_update_property_str");

var _cfg_get_string = Module["_cfg_get_string"] = createExportWrapper("cfg_get_string");

var _zend_list_close = Module["_zend_list_close"] = createExportWrapper("zend_list_close");

var _zend_register_persistent_resource = Module["_zend_register_persistent_resource"] = createExportWrapper("zend_register_persistent_resource");

var _pdo_get_long_param = Module["_pdo_get_long_param"] = createExportWrapper("pdo_get_long_param");

var _pdo_get_bool_param = Module["_pdo_get_bool_param"] = createExportWrapper("pdo_get_bool_param");

var _zend_fcall_info_args = Module["_zend_fcall_info_args"] = createExportWrapper("zend_fcall_info_args");

var _is_numeric_str_function = Module["_is_numeric_str_function"] = createExportWrapper("is_numeric_str_function");

var _zend_internal_run_time_cache_reserved_size = Module["_zend_internal_run_time_cache_reserved_size"] = createExportWrapper("zend_internal_run_time_cache_reserved_size");

var _zend_set_function_arg_flags = Module["_zend_set_function_arg_flags"] = createExportWrapper("zend_set_function_arg_flags");

var _zend_str_tolower_copy = Module["_zend_str_tolower_copy"] = createExportWrapper("zend_str_tolower_copy");

var _zend_std_get_method = Module["_zend_std_get_method"] = createExportWrapper("zend_std_get_method");

var _php_pdo_stmt_set_column_count = Module["_php_pdo_stmt_set_column_count"] = createExportWrapper("php_pdo_stmt_set_column_count");

var _pdo_parse_params = Module["_pdo_parse_params"] = createExportWrapper("pdo_parse_params");

var _convert_to_boolean = Module["_convert_to_boolean"] = createExportWrapper("convert_to_boolean");

var _zend_update_property_ex = Module["_zend_update_property_ex"] = createExportWrapper("zend_update_property_ex");

var _zend_parse_arg_class = Module["_zend_parse_arg_class"] = createExportWrapper("zend_parse_arg_class");

var _convert_to_null = Module["_convert_to_null"] = createExportWrapper("convert_to_null");

var __php_stream_memory_open = Module["__php_stream_memory_open"] = createExportWrapper("_php_stream_memory_open");

var _zend_fetch_class = Module["_zend_fetch_class"] = createExportWrapper("zend_fetch_class");

var _zend_argument_count_error = Module["_zend_argument_count_error"] = createExportWrapper("zend_argument_count_error");

var _zend_fcall_info_args_ex = Module["_zend_fcall_info_args_ex"] = createExportWrapper("zend_fcall_info_args_ex");

var __php_stream_printf = Module["__php_stream_printf"] = createExportWrapper("_php_stream_printf");

var _php_pdo_free_statement = Module["_php_pdo_free_statement"] = createExportWrapper("php_pdo_free_statement");

var _zend_objects_store_del = Module["_zend_objects_store_del"] = createExportWrapper("zend_objects_store_del");

var _gc_possible_root = Module["_gc_possible_root"] = createExportWrapper("gc_possible_root");

var _zend_std_unset_property = Module["_zend_std_unset_property"] = createExportWrapper("zend_std_unset_property");

var _zend_std_cast_object_tostring = Module["_zend_std_cast_object_tostring"] = createExportWrapper("zend_std_cast_object_tostring");

var _zend_object_is_true = Module["_zend_object_is_true"] = createExportWrapper("zend_object_is_true");

var _strncpy = Module["_strncpy"] = createExportWrapper("strncpy");

var _zend_declare_class_constant_long = Module["_zend_declare_class_constant_long"] = createExportWrapper("zend_declare_class_constant_long");

var _sqlite3_snprintf = Module["_sqlite3_snprintf"] = createExportWrapper("sqlite3_snprintf");

var _zend_i64_to_str = Module["_zend_i64_to_str"] = createExportWrapper("zend_i64_to_str");

var _sqlite3_column_decltype = Module["_sqlite3_column_decltype"] = createExportWrapper("sqlite3_column_decltype");

var _pib_storage_init = Module["_pib_storage_init"] = createExportWrapper("pib_storage_init");

var _pib_init = Module["_pib_init"] = createExportWrapper("pib_init");

var _putenv = Module["_putenv"] = createExportWrapper("putenv");

var _php_embed_init = Module["_php_embed_init"] = createExportWrapper("php_embed_init");

var _pib_destroy = Module["_pib_destroy"] = createExportWrapper("pib_destroy");

var _php_embed_shutdown = Module["_php_embed_shutdown"] = createExportWrapper("php_embed_shutdown");

var _pib_refresh = Module["_pib_refresh"] = createExportWrapper("pib_refresh");

var _pib_flush = Module["_pib_flush"] = createExportWrapper("pib_flush");

var _php_output_flush_all = Module["_php_output_flush_all"] = createExportWrapper("php_output_flush_all");

var _pib_exec = Module["_pib_exec"] = createExportWrapper("pib_exec");

var _saveSetjmp = Module["_saveSetjmp"] = createExportWrapper("saveSetjmp");

var getTempRet0 = createExportWrapper("getTempRet0");

var _zend_eval_string = Module["_zend_eval_string"] = createExportWrapper("zend_eval_string");

var _testSetjmp = Module["_testSetjmp"] = createExportWrapper("testSetjmp");

var setTempRet0 = createExportWrapper("setTempRet0");

var _emscripten_longjmp = Module["_emscripten_longjmp"] = createExportWrapper("emscripten_longjmp");

var _pib_run = Module["_pib_run"] = createExportWrapper("pib_run");

var _sapi_send_headers = Module["_sapi_send_headers"] = createExportWrapper("sapi_send_headers");

var _zend_exception_error = Module["_zend_exception_error"] = createExportWrapper("zend_exception_error");

var _pib_tokenize = Module["_pib_tokenize"] = createExportWrapper("pib_tokenize");

var _main = Module["_main"] = createExportWrapper("main");

var _php_random_status_alloc = Module["_php_random_status_alloc"] = createExportWrapper("php_random_status_alloc");

var _php_random_status_copy = Module["_php_random_status_copy"] = createExportWrapper("php_random_status_copy");

var _php_random_status_free = Module["_php_random_status_free"] = createExportWrapper("php_random_status_free");

var _php_random_engine_common_init = Module["_php_random_engine_common_init"] = createExportWrapper("php_random_engine_common_init");

var _php_random_engine_common_free_object = Module["_php_random_engine_common_free_object"] = createExportWrapper("php_random_engine_common_free_object");

var _php_random_engine_common_clone_object = Module["_php_random_engine_common_clone_object"] = createExportWrapper("php_random_engine_common_clone_object");

var _php_random_range = Module["_php_random_range"] = createExportWrapper("php_random_range");

var _php_random_default_algo = Module["_php_random_default_algo"] = createExportWrapper("php_random_default_algo");

var _php_random_default_status = Module["_php_random_default_status"] = createExportWrapper("php_random_default_status");

var _php_random_mt19937_seed_default = Module["_php_random_mt19937_seed_default"] = createExportWrapper("php_random_mt19937_seed_default");

var _php_random_bin2hex_le = Module["_php_random_bin2hex_le"] = createExportWrapper("php_random_bin2hex_le");

var _php_random_hex2bin_le = Module["_php_random_hex2bin_le"] = createExportWrapper("php_random_hex2bin_le");

var _php_combined_lcg = Module["_php_combined_lcg"] = createExportWrapper("php_combined_lcg");

var _php_random_combinedlcg_seed_default = Module["_php_random_combinedlcg_seed_default"] = createExportWrapper("php_random_combinedlcg_seed_default");

var _php_mt_srand = Module["_php_mt_srand"] = createExportWrapper("php_mt_srand");

var _php_mt_rand = Module["_php_mt_rand"] = createExportWrapper("php_mt_rand");

var _php_mt_rand_range = Module["_php_mt_rand_range"] = createExportWrapper("php_mt_rand_range");

var _php_mt_rand_common = Module["_php_mt_rand_common"] = createExportWrapper("php_mt_rand_common");

var _php_srand = Module["_php_srand"] = createExportWrapper("php_srand");

var _php_rand = Module["_php_rand"] = createExportWrapper("php_rand");

var _php_random_bytes = Module["_php_random_bytes"] = createExportWrapper("php_random_bytes");

var _open = Module["_open"] = createExportWrapper("open");

var _strerror = Module["_strerror"] = createExportWrapper("strerror");

var _fstat = Module["_fstat"] = createExportWrapper("fstat");

var _read = Module["_read"] = createExportWrapper("read");

var _php_random_int = Module["_php_random_int"] = createExportWrapper("php_random_int");

var _getpid = Module["_getpid"] = createExportWrapper("getpid");

var _php_random_pcgoneseq128xslrr64_advance = Module["_php_random_pcgoneseq128xslrr64_advance"] = createExportWrapper("php_random_pcgoneseq128xslrr64_advance");

var ___multi3 = Module["___multi3"] = createExportWrapper("__multi3");

var _php_random_xoshiro256starstar_jump = Module["_php_random_xoshiro256starstar_jump"] = createExportWrapper("php_random_xoshiro256starstar_jump");

var _php_random_xoshiro256starstar_jump_long = Module["_php_random_xoshiro256starstar_jump_long"] = createExportWrapper("php_random_xoshiro256starstar_jump_long");

var _zend_call_known_function = Module["_zend_call_known_function"] = createExportWrapper("zend_call_known_function");

var _php_array_data_shuffle = Module["_php_array_data_shuffle"] = createExportWrapper("php_array_data_shuffle");

var _php_binary_string_shuffle = Module["_php_binary_string_shuffle"] = createExportWrapper("php_binary_string_shuffle");

var _php_array_pick_keys = Module["_php_array_pick_keys"] = createExportWrapper("php_array_pick_keys");

var _zend_read_property = Module["_zend_read_property"] = createExportWrapper("zend_read_property");

var _zend_reflection_class_factory = Module["_zend_reflection_class_factory"] = createExportWrapper("zend_reflection_class_factory");

var _zend_get_closure_method_def = Module["_zend_get_closure_method_def"] = createExportWrapper("zend_get_closure_method_def");

var _zend_fetch_function = Module["_zend_fetch_function"] = createExportWrapper("zend_fetch_function");

var _smart_str_append_printf = Module["_smart_str_append_printf"] = createExportWrapper("smart_str_append_printf");

var _zend_type_to_string = Module["_zend_type_to_string"] = createExportWrapper("zend_type_to_string");

var _zend_get_closure_this_ptr = Module["_zend_get_closure_this_ptr"] = createExportWrapper("zend_get_closure_this_ptr");

var _zend_create_fake_closure = Module["_zend_create_fake_closure"] = createExportWrapper("zend_create_fake_closure");

var _zval_update_constant_ex = Module["_zval_update_constant_ex"] = createExportWrapper("zval_update_constant_ex");

var _zval_add_ref = Module["_zval_add_ref"] = createExportWrapper("zval_add_ref");

var __efree_32 = Module["__efree_32"] = createExportWrapper("_efree_32");

var _zend_generator_update_root = Module["_zend_generator_update_root"] = createExportWrapper("zend_generator_update_root");

var _zend_generator_update_current = Module["_zend_generator_update_current"] = createExportWrapper("zend_generator_update_current");

var _zend_fetch_debug_backtrace = Module["_zend_fetch_debug_backtrace"] = createExportWrapper("zend_fetch_debug_backtrace");

var _zend_get_closure_invoke_method = Module["_zend_get_closure_invoke_method"] = createExportWrapper("zend_get_closure_invoke_method");

var _zend_get_default_from_internal_arg_info = Module["_zend_get_default_from_internal_arg_info"] = createExportWrapper("zend_get_default_from_internal_arg_info");

var _zend_separate_class_constants_table = Module["_zend_separate_class_constants_table"] = createExportWrapper("zend_separate_class_constants_table");

var _zval_copy_ctor_func = Module["_zval_copy_ctor_func"] = createExportWrapper("zval_copy_ctor_func");

var _zend_update_class_constants = Module["_zend_update_class_constants"] = createExportWrapper("zend_update_class_constants");

var _zend_class_init_statics = Module["_zend_class_init_statics"] = createExportWrapper("zend_class_init_statics");

var _zend_std_get_static_property = Module["_zend_std_get_static_property"] = createExportWrapper("zend_std_get_static_property");

var _zend_std_get_static_property_with_info = Module["_zend_std_get_static_property_with_info"] = createExportWrapper("zend_std_get_static_property_with_info");

var _zend_clear_exception = Module["_zend_clear_exception"] = createExportWrapper("zend_clear_exception");

var _zend_verify_ref_assignable_zval = Module["_zend_verify_ref_assignable_zval"] = createExportWrapper("zend_verify_ref_assignable_zval");

var _zend_fetch_class_by_name = Module["_zend_fetch_class_by_name"] = createExportWrapper("zend_fetch_class_by_name");

var _zend_read_static_property_ex = Module["_zend_read_static_property_ex"] = createExportWrapper("zend_read_static_property_ex");

var _zend_read_property_ex = Module["_zend_read_property_ex"] = createExportWrapper("zend_read_property_ex");

var _zend_update_static_property_ex = Module["_zend_update_static_property_ex"] = createExportWrapper("zend_update_static_property_ex");

var _php_info_print_module = Module["_php_info_print_module"] = createExportWrapper("php_info_print_module");

var _zend_get_extension = Module["_zend_get_extension"] = createExportWrapper("zend_get_extension");

var _smart_str_append_scalar = Module["_smart_str_append_scalar"] = createExportWrapper("smart_str_append_scalar");

var _smart_str_append_escaped = Module["_smart_str_append_escaped"] = createExportWrapper("smart_str_append_escaped");

var _zend_ast_export = Module["_zend_ast_export"] = createExportWrapper("zend_ast_export");

var _zend_is_attribute_repeated = Module["_zend_is_attribute_repeated"] = createExportWrapper("zend_is_attribute_repeated");

var _zend_get_attribute_value = Module["_zend_get_attribute_value"] = createExportWrapper("zend_get_attribute_value");

var _zend_get_attribute_str = Module["_zend_get_attribute_str"] = createExportWrapper("zend_get_attribute_str");

var _zend_get_attribute_target_names = Module["_zend_get_attribute_target_names"] = createExportWrapper("zend_get_attribute_target_names");

var _zend_vm_stack_extend = Module["_zend_vm_stack_extend"] = createExportWrapper("zend_vm_stack_extend");

var _zend_lookup_class_ex = Module["_zend_lookup_class_ex"] = createExportWrapper("zend_lookup_class_ex");

var __zend_bailout = Module["__zend_bailout"] = createExportWrapper("_zend_bailout");

var _php_session_destroy = Module["_php_session_destroy"] = createExportWrapper("php_session_destroy");

var _php_add_session_var = Module["_php_add_session_var"] = createExportWrapper("php_add_session_var");

var _php_set_session_var = Module["_php_set_session_var"] = createExportWrapper("php_set_session_var");

var _php_get_session_var = Module["_php_get_session_var"] = createExportWrapper("php_get_session_var");

var _php_session_create_id = Module["_php_session_create_id"] = createExportWrapper("php_session_create_id");

var _php_session_valid_key = Module["_php_session_valid_key"] = createExportWrapper("php_session_valid_key");

var _php_var_serialize_init = Module["_php_var_serialize_init"] = createExportWrapper("php_var_serialize_init");

var _php_var_serialize = Module["_php_var_serialize"] = createExportWrapper("php_var_serialize");

var _php_var_serialize_destroy = Module["_php_var_serialize_destroy"] = createExportWrapper("php_var_serialize_destroy");

var _php_var_unserialize_init = Module["_php_var_unserialize_init"] = createExportWrapper("php_var_unserialize_init");

var _php_var_unserialize = Module["_php_var_unserialize"] = createExportWrapper("php_var_unserialize");

var _php_var_unserialize_destroy = Module["_php_var_unserialize_destroy"] = createExportWrapper("php_var_unserialize_destroy");

var _zend_hash_update_ind = Module["_zend_hash_update_ind"] = createExportWrapper("zend_hash_update_ind");

var _var_tmp_var = Module["_var_tmp_var"] = createExportWrapper("var_tmp_var");

var _php_session_register_serializer = Module["_php_session_register_serializer"] = createExportWrapper("php_session_register_serializer");

var _php_session_register_module = Module["_php_session_register_module"] = createExportWrapper("php_session_register_module");

var _php_session_validate_sid = Module["_php_session_validate_sid"] = createExportWrapper("php_session_validate_sid");

var _php_session_update_timestamp = Module["_php_session_update_timestamp"] = createExportWrapper("php_session_update_timestamp");

var __php_find_ps_module = Module["__php_find_ps_module"] = createExportWrapper("_php_find_ps_module");

var __php_find_ps_serializer = Module["__php_find_ps_serializer"] = createExportWrapper("_php_find_ps_serializer");

var _php_session_reset_id = Module["_php_session_reset_id"] = createExportWrapper("php_session_reset_id");

var _zend_register_stringl_constant = Module["_zend_register_stringl_constant"] = createExportWrapper("zend_register_stringl_constant");

var _php_url_scanner_reset_session_var = Module["_php_url_scanner_reset_session_var"] = createExportWrapper("php_url_scanner_reset_session_var");

var _php_url_scanner_add_session_var = Module["_php_url_scanner_add_session_var"] = createExportWrapper("php_url_scanner_add_session_var");

var _php_output_get_start_filename = Module["_php_output_get_start_filename"] = createExportWrapper("php_output_get_start_filename");

var _php_output_get_start_lineno = Module["_php_output_get_start_lineno"] = createExportWrapper("php_output_get_start_lineno");

var _php_url_encode = Module["_php_url_encode"] = createExportWrapper("php_url_encode");

var _php_session_start = Module["_php_session_start"] = createExportWrapper("php_session_start");

var _php_session_flush = Module["_php_session_flush"] = createExportWrapper("php_session_flush");

var _session_adapt_url = Module["_session_adapt_url"] = createExportWrapper("session_adapt_url");

var _php_url_scanner_adapt_single_url = Module["_php_url_scanner_adapt_single_url"] = createExportWrapper("php_url_scanner_adapt_single_url");

var _zend_alter_ini_entry_chars = Module["_zend_alter_ini_entry_chars"] = createExportWrapper("zend_alter_ini_entry_chars");

var _register_user_shutdown_function = Module["_register_user_shutdown_function"] = createExportWrapper("register_user_shutdown_function");

var _remove_user_shutdown_function = Module["_remove_user_shutdown_function"] = createExportWrapper("remove_user_shutdown_function");

var _zend_wrong_param_count = Module["_zend_wrong_param_count"] = createExportWrapper("zend_wrong_param_count");

var _zend_get_callable_name = Module["_zend_get_callable_name"] = createExportWrapper("zend_get_callable_name");

var _zend_hash_clean = Module["_zend_hash_clean"] = createExportWrapper("zend_hash_clean");

var _zend_alter_ini_entry_ex = Module["_zend_alter_ini_entry_ex"] = createExportWrapper("zend_alter_ini_entry_ex");

var _append_user_shutdown_function = Module["_append_user_shutdown_function"] = createExportWrapper("append_user_shutdown_function");

var _zend_register_auto_global = Module["_zend_register_auto_global"] = createExportWrapper("zend_register_auto_global");

var _sapi_free_header = Module["_sapi_free_header"] = createExportWrapper("sapi_free_header");

var _zend_delete_global_variable = Module["_zend_delete_global_variable"] = createExportWrapper("zend_delete_global_variable");

var _gmtime_r = Module["_gmtime_r"] = createExportWrapper("gmtime_r");

var _sapi_get_request_time = Module["_sapi_get_request_time"] = createExportWrapper("sapi_get_request_time");

var _OnUpdateStringUnempty = Module["_OnUpdateStringUnempty"] = createExportWrapper("OnUpdateStringUnempty");

var _atol = Module["_atol"] = createExportWrapper("atol");

var _OnUpdateLongGEZero = Module["_OnUpdateLongGEZero"] = createExportWrapper("OnUpdateLongGEZero");

var _OnUpdateReal = Module["_OnUpdateReal"] = createExportWrapper("OnUpdateReal");

var _php_get_temporary_directory = Module["_php_get_temporary_directory"] = createExportWrapper("php_get_temporary_directory");

var _lseek = Module["_lseek"] = createExportWrapper("lseek");

var _unlink = Module["_unlink"] = createExportWrapper("unlink");

var _access = Module["_access"] = createExportWrapper("access");

var _utime = Module["_utime"] = createExportWrapper("utime");

var _getuid = Module["_getuid"] = createExportWrapper("getuid");

var _geteuid = Module["_geteuid"] = createExportWrapper("geteuid");

var _flock = Module["_flock"] = createExportWrapper("flock");

var _fcntl = Module["_fcntl"] = createExportWrapper("fcntl");

var _ftruncate = Module["_ftruncate"] = createExportWrapper("ftruncate");

var _write = Module["_write"] = createExportWrapper("write");

var _opendir = Module["_opendir"] = createExportWrapper("opendir");

var _closedir = Module["_closedir"] = createExportWrapper("closedir");

var _readdir = Module["_readdir"] = createExportWrapper("readdir");

var _sxe_get_element_class_entry = Module["_sxe_get_element_class_entry"] = createExportWrapper("sxe_get_element_class_entry");

var _xmlXPathEval = Module["_xmlXPathEval"] = createExportWrapper("xmlXPathEval");

var _xmlSaveFile = Module["_xmlSaveFile"] = createExportWrapper("xmlSaveFile");

var _xmlDocDumpMemoryEnc = Module["_xmlDocDumpMemoryEnc"] = createExportWrapper("xmlDocDumpMemoryEnc");

var _xmlNewChild = Module["_xmlNewChild"] = createExportWrapper("xmlNewChild");

var _xmlNewNsProp = Module["_xmlNewNsProp"] = createExportWrapper("xmlNewNsProp");

var _php_sxe_rewind_iterator = Module["_php_sxe_rewind_iterator"] = createExportWrapper("php_sxe_rewind_iterator");

var _php_sxe_move_forward_iterator = Module["_php_sxe_move_forward_iterator"] = createExportWrapper("php_sxe_move_forward_iterator");

var _sxe_object_new = Module["_sxe_object_new"] = createExportWrapper("sxe_object_new");

var _xmlReadFile = Module["_xmlReadFile"] = createExportWrapper("xmlReadFile");

var _xmlReadMemory = Module["_xmlReadMemory"] = createExportWrapper("xmlReadMemory");

var __emalloc_80 = Module["__emalloc_80"] = createExportWrapper("_emalloc_80");

var _xmlStrcmp = Module["_xmlStrcmp"] = createExportWrapper("xmlStrcmp");

var _xmlCopyDoc = Module["_xmlCopyDoc"] = createExportWrapper("xmlCopyDoc");

var _zend_call_method = Module["_zend_call_method"] = createExportWrapper("zend_call_method");

var _convert_scalar_to_number = Module["_convert_scalar_to_number"] = createExportWrapper("convert_scalar_to_number");

var _xmlNewTextChild = Module["_xmlNewTextChild"] = createExportWrapper("xmlNewTextChild");

var _xmlEncodeEntitiesReentrant = Module["_xmlEncodeEntitiesReentrant"] = createExportWrapper("xmlEncodeEntitiesReentrant");

var _zend_stream_init_filename_ex = Module["_zend_stream_init_filename_ex"] = createExportWrapper("zend_stream_init_filename_ex");

var _php_stream_open_for_zend_ex = Module["_php_stream_open_for_zend_ex"] = createExportWrapper("php_stream_open_for_zend_ex");

var _zend_execute = Module["_zend_execute"] = createExportWrapper("zend_execute");

var _destroy_op_array = Module["_destroy_op_array"] = createExportWrapper("destroy_op_array");

var _zend_destroy_file_handle = Module["_zend_destroy_file_handle"] = createExportWrapper("zend_destroy_file_handle");

var _zend_hash_real_init_mixed = Module["_zend_hash_real_init_mixed"] = createExportWrapper("zend_hash_real_init_mixed");

var _zend_hash_rehash = Module["_zend_hash_rehash"] = createExportWrapper("zend_hash_rehash");

var _zend_hash_del_bucket = Module["_zend_hash_del_bucket"] = createExportWrapper("zend_hash_del_bucket");

var _add_next_index_object = Module["_add_next_index_object"] = createExportWrapper("add_next_index_object");

var _php_spl_object_hash = Module["_php_spl_object_hash"] = createExportWrapper("php_spl_object_hash");

var _zend_mangle_property_name = Module["_zend_mangle_property_name"] = createExportWrapper("zend_mangle_property_name");

var _zend_iterator_dtor = Module["_zend_iterator_dtor"] = createExportWrapper("zend_iterator_dtor");

var _zend_call_known_instance_method_with_2_params = Module["_zend_call_known_instance_method_with_2_params"] = createExportWrapper("zend_call_known_instance_method_with_2_params");

var _array_set_zval_key = Module["_array_set_zval_key"] = createExportWrapper("array_set_zval_key");

var _spl_iterator_apply = Module["_spl_iterator_apply"] = createExportWrapper("spl_iterator_apply");

var _zend_is_iterable = Module["_zend_is_iterable"] = createExportWrapper("zend_is_iterable");

var _zend_array_to_list = Module["_zend_array_to_list"] = createExportWrapper("zend_array_to_list");

var _zend_fcall_info_call = Module["_zend_fcall_info_call"] = createExportWrapper("zend_fcall_info_call");

var _zend_hash_iterator_del = Module["_zend_hash_iterator_del"] = createExportWrapper("zend_hash_iterator_del");

var _zend_hash_get_current_key_type_ex = Module["_zend_hash_get_current_key_type_ex"] = createExportWrapper("zend_hash_get_current_key_type_ex");

var _zend_hash_get_current_key_zval_ex = Module["_zend_hash_get_current_key_zval_ex"] = createExportWrapper("zend_hash_get_current_key_zval_ex");

var _zend_proptable_to_symtable = Module["_zend_proptable_to_symtable"] = createExportWrapper("zend_proptable_to_symtable");

var _zend_compare_symbol_tables = Module["_zend_compare_symbol_tables"] = createExportWrapper("zend_compare_symbol_tables");

var _zend_use_resource_as_offset = Module["_zend_use_resource_as_offset"] = createExportWrapper("zend_use_resource_as_offset");

var _zend_incompatible_double_to_long_error = Module["_zend_incompatible_double_to_long_error"] = createExportWrapper("zend_incompatible_double_to_long_error");

var _zend_hash_get_current_key_ex = Module["_zend_hash_get_current_key_ex"] = createExportWrapper("zend_hash_get_current_key_ex");

var _zend_ref_add_type_source = Module["_zend_ref_add_type_source"] = createExportWrapper("zend_ref_add_type_source");

var _zend_hash_get_current_pos = Module["_zend_hash_get_current_pos"] = createExportWrapper("zend_hash_get_current_pos");

var _zend_hash_iterator_add = Module["_zend_hash_iterator_add"] = createExportWrapper("zend_hash_iterator_add");

var _spl_filesystem_object_get_path = Module["_spl_filesystem_object_get_path"] = createExportWrapper("spl_filesystem_object_get_path");

var __php_glob_stream_get_path = Module["__php_glob_stream_get_path"] = createExportWrapper("_php_glob_stream_get_path");

var __php_stream_opendir = Module["__php_stream_opendir"] = createExportWrapper("_php_stream_opendir");

var __php_stream_readdir = Module["__php_stream_readdir"] = createExportWrapper("_php_stream_readdir");

var _php_basename = Module["_php_basename"] = createExportWrapper("php_basename");

var _php_stat = Module["_php_stat"] = createExportWrapper("php_stat");

var _expand_filepath_with_mode = Module["_expand_filepath_with_mode"] = createExportWrapper("expand_filepath_with_mode");

var _readlink = Module["_readlink"] = createExportWrapper("readlink");

var _php_dirname = Module["_php_dirname"] = createExportWrapper("php_dirname");

var __php_glob_stream_get_count = Module["__php_glob_stream_get_count"] = createExportWrapper("_php_glob_stream_get_count");

var __php_stream_eof = Module["__php_stream_eof"] = createExportWrapper("_php_stream_eof");

var _php_fgetcsv = Module["_php_fgetcsv"] = createExportWrapper("php_fgetcsv");

var _php_bc_fgetcsv_empty_line = Module["_php_bc_fgetcsv_empty_line"] = createExportWrapper("php_bc_fgetcsv_empty_line");

var _php_fputcsv = Module["_php_fputcsv"] = createExportWrapper("php_fputcsv");

var _php_flock_common = Module["_php_flock_common"] = createExportWrapper("php_flock_common");

var __php_stream_flush = Module["__php_stream_flush"] = createExportWrapper("_php_stream_flush");

var __php_stream_tell = Module["__php_stream_tell"] = createExportWrapper("_php_stream_tell");

var __php_stream_getc = Module["__php_stream_getc"] = createExportWrapper("_php_stream_getc");

var __php_stream_passthru = Module["__php_stream_passthru"] = createExportWrapper("_php_stream_passthru");

var _php_sscanf_internal = Module["_php_sscanf_internal"] = createExportWrapper("php_sscanf_internal");

var _php_stream_read_to_str = Module["_php_stream_read_to_str"] = createExportWrapper("php_stream_read_to_str");

var _php_fstat = Module["_php_fstat"] = createExportWrapper("php_fstat");

var __php_stream_set_option = Module["__php_stream_set_option"] = createExportWrapper("_php_stream_set_option");

var __php_stream_truncate_set_size = Module["__php_stream_truncate_set_size"] = createExportWrapper("_php_stream_truncate_set_size");

var _zend_objects_destroy_object = Module["_zend_objects_destroy_object"] = createExportWrapper("zend_objects_destroy_object");

var _zend_hash_index_lookup = Module["_zend_hash_index_lookup"] = createExportWrapper("zend_hash_index_lookup");

var _php_count_recursive = Module["_php_count_recursive"] = createExportWrapper("php_count_recursive");

var _var_push_dtor = Module["_var_push_dtor"] = createExportWrapper("var_push_dtor");

var _var_replace = Module["_var_replace"] = createExportWrapper("var_replace");

var _zend_is_identical = Module["_zend_is_identical"] = createExportWrapper("zend_is_identical");

var _zend_hash_compare = Module["_zend_hash_compare"] = createExportWrapper("zend_hash_compare");

var _zend_std_read_dimension = Module["_zend_std_read_dimension"] = createExportWrapper("zend_std_read_dimension");

var _zend_std_write_dimension = Module["_zend_std_write_dimension"] = createExportWrapper("zend_std_write_dimension");

var _zend_std_has_dimension = Module["_zend_std_has_dimension"] = createExportWrapper("zend_std_has_dimension");

var _zend_std_unset_dimension = Module["_zend_std_unset_dimension"] = createExportWrapper("zend_std_unset_dimension");

var _zend_compare = Module["_zend_compare"] = createExportWrapper("zend_compare");

var __safe_erealloc = Module["__safe_erealloc"] = createExportWrapper("_safe_erealloc");

var _zend_user_it_invalidate_current = Module["_zend_user_it_invalidate_current"] = createExportWrapper("zend_user_it_invalidate_current");

var _zend_hash_packed_to_hash = Module["_zend_hash_packed_to_hash"] = createExportWrapper("zend_hash_packed_to_hash");

var _strtoul = Module["_strtoul"] = createExportWrapper("strtoul");

var _strcspn = Module["_strcspn"] = createExportWrapper("strcspn");

var _realloc = Module["_realloc"] = createExportWrapper("realloc");

var _strcat = Module["_strcat"] = createExportWrapper("strcat");

var _zend_sort = Module["_zend_sort"] = createExportWrapper("zend_sort");

var _zend_hash_sort_ex = Module["_zend_hash_sort_ex"] = createExportWrapper("zend_hash_sort_ex");

var _zend_hash_internal_pointer_end_ex = Module["_zend_hash_internal_pointer_end_ex"] = createExportWrapper("zend_hash_internal_pointer_end_ex");

var _zend_hash_move_backwards_ex = Module["_zend_hash_move_backwards_ex"] = createExportWrapper("zend_hash_move_backwards_ex");

var _zend_hash_minmax = Module["_zend_hash_minmax"] = createExportWrapper("zend_hash_minmax");

var _is_smaller_function = Module["_is_smaller_function"] = createExportWrapper("is_smaller_function");

var _is_smaller_or_equal_function = Module["_is_smaller_or_equal_function"] = createExportWrapper("is_smaller_or_equal_function");

var _zend_hash_iterator_pos_ex = Module["_zend_hash_iterator_pos_ex"] = createExportWrapper("zend_hash_iterator_pos_ex");

var _zend_hash_iterator_pos = Module["_zend_hash_iterator_pos"] = createExportWrapper("zend_hash_iterator_pos");

var _zendi_smart_streq = Module["_zendi_smart_streq"] = createExportWrapper("zendi_smart_streq");

var _php_prefix_varname = Module["_php_prefix_varname"] = createExportWrapper("php_prefix_varname");

var _zend_rebuild_symbol_table = Module["_zend_rebuild_symbol_table"] = createExportWrapper("zend_rebuild_symbol_table");

var _zend_hash_find_known_hash = Module["_zend_hash_find_known_hash"] = createExportWrapper("zend_hash_find_known_hash");

var _zend_try_assign_typed_ref_zval_ex = Module["_zend_try_assign_typed_ref_zval_ex"] = createExportWrapper("zend_try_assign_typed_ref_zval_ex");

var _zend_get_this_object = Module["_zend_get_this_object"] = createExportWrapper("zend_get_this_object");

var _zend_hash_real_init_packed = Module["_zend_hash_real_init_packed"] = createExportWrapper("zend_hash_real_init_packed");

var _zend_parse_arg_number_slow = Module["_zend_parse_arg_number_slow"] = createExportWrapper("zend_parse_arg_number_slow");

var __php_math_round = Module["__php_math_round"] = createExportWrapper("_php_math_round");

var _zend_hash_to_packed = Module["_zend_hash_to_packed"] = createExportWrapper("zend_hash_to_packed");

var _zend_hash_iterators_lower_pos = Module["_zend_hash_iterators_lower_pos"] = createExportWrapper("zend_hash_iterators_lower_pos");

var __zend_hash_iterators_update = Module["__zend_hash_iterators_update"] = createExportWrapper("_zend_hash_iterators_update");

var _zend_hash_packed_del_val = Module["_zend_hash_packed_del_val"] = createExportWrapper("zend_hash_packed_del_val");

var _zend_hash_iterators_advance = Module["_zend_hash_iterators_advance"] = createExportWrapper("zend_hash_iterators_advance");

var _convert_to_array = Module["_convert_to_array"] = createExportWrapper("convert_to_array");

var _php_array_merge_recursive = Module["_php_array_merge_recursive"] = createExportWrapper("php_array_merge_recursive");

var _zend_cannot_add_element = Module["_zend_cannot_add_element"] = createExportWrapper("zend_cannot_add_element");

var _php_array_merge = Module["_php_array_merge"] = createExportWrapper("php_array_merge");

var _zend_hash_extend = Module["_zend_hash_extend"] = createExportWrapper("zend_hash_extend");

var _php_array_replace_recursive = Module["_php_array_replace_recursive"] = createExportWrapper("php_array_replace_recursive");

var _zend_string_hash_func = Module["_zend_string_hash_func"] = createExportWrapper("zend_string_hash_func");

var _zend_string_toupper_ex = Module["_zend_string_toupper_ex"] = createExportWrapper("zend_string_toupper_ex");

var _zend_hash_add_empty_element = Module["_zend_hash_add_empty_element"] = createExportWrapper("zend_hash_add_empty_element");

var _zend_hash_bucket_swap = Module["_zend_hash_bucket_swap"] = createExportWrapper("zend_hash_bucket_swap");

var _php_multisort_compare = Module["_php_multisort_compare"] = createExportWrapper("php_multisort_compare");

var _add_function = Module["_add_function"] = createExportWrapper("add_function");

var _zend_hash_real_init = Module["_zend_hash_real_init"] = createExportWrapper("zend_hash_real_init");

var _zend_binary_strcasecmp_l = Module["_zend_binary_strcasecmp_l"] = createExportWrapper("zend_binary_strcasecmp_l");

var _zend_binary_strcmp = Module["_zend_binary_strcmp"] = createExportWrapper("zend_binary_strcmp");

var _strcoll = Module["_strcoll"] = createExportWrapper("strcoll");

var _zendi_smart_strcmp = Module["_zendi_smart_strcmp"] = createExportWrapper("zendi_smart_strcmp");

var _strnatcmp_ex = Module["_strnatcmp_ex"] = createExportWrapper("strnatcmp_ex");

var _numeric_compare_function = Module["_numeric_compare_function"] = createExportWrapper("numeric_compare_function");

var _string_case_compare_function = Module["_string_case_compare_function"] = createExportWrapper("string_case_compare_function");

var _string_compare_function = Module["_string_compare_function"] = createExportWrapper("string_compare_function");

var _string_locale_compare_function = Module["_string_locale_compare_function"] = createExportWrapper("string_locale_compare_function");

var _php_register_incomplete_class_handlers = Module["_php_register_incomplete_class_handlers"] = createExportWrapper("php_register_incomplete_class_handlers");

var _umask = Module["_umask"] = createExportWrapper("umask");

var _setlocale = Module["_setlocale"] = createExportWrapper("setlocale");

var _zend_reset_lc_ctype_locale = Module["_zend_reset_lc_ctype_locale"] = createExportWrapper("zend_reset_lc_ctype_locale");

var _zend_update_current_locale = Module["_zend_update_current_locale"] = createExportWrapper("zend_update_current_locale");

var _php_get_nan = Module["_php_get_nan"] = createExportWrapper("php_get_nan");

var _php_get_inf = Module["_php_get_inf"] = createExportWrapper("php_get_inf");

var _zend_register_double_constant = Module["_zend_register_double_constant"] = createExportWrapper("zend_register_double_constant");

var _unsetenv = Module["_unsetenv"] = createExportWrapper("unsetenv");

var _tzset = Module["_tzset"] = createExportWrapper("tzset");

var _zend_get_executed_scope = Module["_zend_get_executed_scope"] = createExportWrapper("zend_get_executed_scope");

var _zend_get_constant_ex = Module["_zend_get_constant_ex"] = createExportWrapper("zend_get_constant_ex");

var _inet_ntop = Module["_inet_ntop"] = createExportWrapper("inet_ntop");

var _ntohl = Module["_ntohl"] = createExportWrapper("ntohl");

var _htonl = createExportWrapper("htonl");

var _php_getenv = Module["_php_getenv"] = createExportWrapper("php_getenv");

var _sapi_getenv = Module["_sapi_getenv"] = createExportWrapper("sapi_getenv");

var _php_getopt = Module["_php_getopt"] = createExportWrapper("php_getopt");

var _sapi_flush = Module["_sapi_flush"] = createExportWrapper("sapi_flush");

var _sleep = createExportWrapper("sleep");

var _usleep = Module["_usleep"] = createExportWrapper("usleep");

var _nanosleep = Module["_nanosleep"] = createExportWrapper("nanosleep");

var _php_get_current_user = Module["_php_get_current_user"] = createExportWrapper("php_get_current_user");

var _cfg_get_entry_ex = Module["_cfg_get_entry_ex"] = createExportWrapper("cfg_get_entry_ex");

var __php_error_log_ex = Module["__php_error_log_ex"] = createExportWrapper("_php_error_log_ex");

var _php_log_err_with_severity = Module["_php_log_err_with_severity"] = createExportWrapper("php_log_err_with_severity");

var __php_error_log = Module["__php_error_log"] = createExportWrapper("_php_error_log");

var _zend_get_called_scope = Module["_zend_get_called_scope"] = createExportWrapper("zend_get_called_scope");

var _php_call_shutdown_functions = Module["_php_call_shutdown_functions"] = createExportWrapper("php_call_shutdown_functions");

var _zend_hash_apply = Module["_zend_hash_apply"] = createExportWrapper("zend_hash_apply");

var _php_free_shutdown_functions = Module["_php_free_shutdown_functions"] = createExportWrapper("php_free_shutdown_functions");

var _zend_fcall_info_argp = Module["_zend_fcall_info_argp"] = createExportWrapper("zend_fcall_info_argp");

var _php_get_highlight_struct = Module["_php_get_highlight_struct"] = createExportWrapper("php_get_highlight_struct");

var _php_output_start_default = Module["_php_output_start_default"] = createExportWrapper("php_output_start_default");

var _highlight_file = Module["_highlight_file"] = createExportWrapper("highlight_file");

var _php_output_end = Module["_php_output_end"] = createExportWrapper("php_output_end");

var _php_output_get_contents = Module["_php_output_get_contents"] = createExportWrapper("php_output_get_contents");

var _php_output_discard = Module["_php_output_discard"] = createExportWrapper("php_output_discard");

var _zend_save_lexical_state = Module["_zend_save_lexical_state"] = createExportWrapper("zend_save_lexical_state");

var _open_file_for_scanning = Module["_open_file_for_scanning"] = createExportWrapper("open_file_for_scanning");

var _zend_restore_lexical_state = Module["_zend_restore_lexical_state"] = createExportWrapper("zend_restore_lexical_state");

var _zend_strip = Module["_zend_strip"] = createExportWrapper("zend_strip");

var _zend_make_compiled_string_description = Module["_zend_make_compiled_string_description"] = createExportWrapper("zend_make_compiled_string_description");

var _highlight_string = Module["_highlight_string"] = createExportWrapper("highlight_string");

var _zend_ini_parse_quantity = Module["_zend_ini_parse_quantity"] = createExportWrapper("zend_ini_parse_quantity");

var _zend_ini_get_value = Module["_zend_ini_get_value"] = createExportWrapper("zend_ini_get_value");

var _zend_ini_sort_entries = Module["_zend_ini_sort_entries"] = createExportWrapper("zend_ini_sort_entries");

var _zend_restore_ini_entry = Module["_zend_restore_ini_entry"] = createExportWrapper("zend_restore_ini_entry");

var _zend_print_zval_r_to_str = Module["_zend_print_zval_r_to_str"] = createExportWrapper("zend_print_zval_r_to_str");

var _zend_print_zval_r = Module["_zend_print_zval_r"] = createExportWrapper("zend_print_zval_r");

var _getservbyname = Module["_getservbyname"] = createExportWrapper("getservbyname");

var _ntohs = createExportWrapper("ntohs");

var _htons = createExportWrapper("htons");

var _getservbyport = Module["_getservbyport"] = createExportWrapper("getservbyport");

var _php_add_tick_function = Module["_php_add_tick_function"] = createExportWrapper("php_add_tick_function");

var _zend_llist_apply = Module["_zend_llist_apply"] = createExportWrapper("zend_llist_apply");

var _zend_binary_zval_strcmp = Module["_zend_binary_zval_strcmp"] = createExportWrapper("zend_binary_zval_strcmp");

var _zend_compare_arrays = Module["_zend_compare_arrays"] = createExportWrapper("zend_compare_arrays");

var _zend_compare_objects = Module["_zend_compare_objects"] = createExportWrapper("zend_compare_objects");

var _rename = Module["_rename"] = createExportWrapper("rename");

var _chmod = Module["_chmod"] = createExportWrapper("chmod");

var _php_copy_file_ex = Module["_php_copy_file_ex"] = createExportWrapper("php_copy_file_ex");

var _zend_parse_ini_file = Module["_zend_parse_ini_file"] = createExportWrapper("zend_parse_ini_file");

var _zend_parse_ini_string = Module["_zend_parse_ini_string"] = createExportWrapper("zend_parse_ini_string");

var _add_index_double = Module["_add_index_double"] = createExportWrapper("add_index_double");

var _zif_rewind = Module["_zif_rewind"] = createExportWrapper("zif_rewind");

var _zif_fclose = Module["_zif_fclose"] = createExportWrapper("zif_fclose");

var _zif_feof = Module["_zif_feof"] = createExportWrapper("zif_feof");

var _zif_fgetc = Module["_zif_fgetc"] = createExportWrapper("zif_fgetc");

var _zif_fgets = Module["_zif_fgets"] = createExportWrapper("zif_fgets");

var _zif_fread = Module["_zif_fread"] = createExportWrapper("zif_fread");

var _zif_fpassthru = Module["_zif_fpassthru"] = createExportWrapper("zif_fpassthru");

var _zif_fseek = Module["_zif_fseek"] = createExportWrapper("zif_fseek");

var _zif_ftell = Module["_zif_ftell"] = createExportWrapper("zif_ftell");

var _zif_fflush = Module["_zif_fflush"] = createExportWrapper("zif_fflush");

var _zif_fwrite = Module["_zif_fwrite"] = createExportWrapper("zif_fwrite");

var _fopen = Module["_fopen"] = createExportWrapper("fopen");

var _zend_stream_init_fp = Module["_zend_stream_init_fp"] = createExportWrapper("zend_stream_init_fp");

var _object_and_properties_init = Module["_object_and_properties_init"] = createExportWrapper("object_and_properties_init");

var __safe_realloc = Module["__safe_realloc"] = createExportWrapper("_safe_realloc");

var _php_crc32_bulk_update = Module["_php_crc32_bulk_update"] = createExportWrapper("php_crc32_bulk_update");

var _php_crc32_stream_bulk_update = Module["_php_crc32_stream_bulk_update"] = createExportWrapper("php_crc32_stream_bulk_update");

var _php_crypt = Module["_php_crypt"] = createExportWrapper("php_crypt");

var __emalloc_128 = Module["__emalloc_128"] = createExportWrapper("_emalloc_128");

var _php_std_date = Module["_php_std_date"] = createExportWrapper("php_std_date");

var _zend_fetch_resource = Module["_zend_fetch_resource"] = createExportWrapper("zend_fetch_resource");

var _zend_list_delete = Module["_zend_list_delete"] = createExportWrapper("zend_list_delete");

var _chroot = Module["_chroot"] = createExportWrapper("chroot");

var _php_clear_stat_cache = Module["_php_clear_stat_cache"] = createExportWrapper("php_clear_stat_cache");

var _chdir = Module["_chdir"] = createExportWrapper("chdir");

var _glob = Module["_glob"] = createExportWrapper("glob");

var _php_check_open_basedir_ex = Module["_php_check_open_basedir_ex"] = createExportWrapper("php_check_open_basedir_ex");

var _globfree = Module["_globfree"] = createExportWrapper("globfree");

var _php_stream_dirent_alphasort = Module["_php_stream_dirent_alphasort"] = createExportWrapper("php_stream_dirent_alphasort");

var __php_stream_scandir = Module["__php_stream_scandir"] = createExportWrapper("_php_stream_scandir");

var _php_stream_dirent_alphasortr = Module["_php_stream_dirent_alphasortr"] = createExportWrapper("php_stream_dirent_alphasortr");

var _zif_dl = Module["_zif_dl"] = createExportWrapper("zif_dl");

var _php_dl = Module["_php_dl"] = createExportWrapper("php_dl");

var _php_load_extension = Module["_php_load_extension"] = createExportWrapper("php_load_extension");

var _php_load_shlib = Module["_php_load_shlib"] = createExportWrapper("php_load_shlib");

var _dlopen = Module["_dlopen"] = createExportWrapper("dlopen");

var _dlerror = Module["_dlerror"] = createExportWrapper("dlerror");

var _dlsym = Module["_dlsym"] = createExportWrapper("dlsym");

var _dlclose = Module["_dlclose"] = createExportWrapper("dlclose");

var _zend_next_free_module = Module["_zend_next_free_module"] = createExportWrapper("zend_next_free_module");

var _zend_register_module_ex = Module["_zend_register_module_ex"] = createExportWrapper("zend_register_module_ex");

var _zend_startup_module_ex = Module["_zend_startup_module_ex"] = createExportWrapper("zend_startup_module_ex");

var _gethostname = Module["_gethostname"] = createExportWrapper("gethostname");

var _php_network_gethostbyname = Module["_php_network_gethostbyname"] = createExportWrapper("php_network_gethostbyname");

var _sysconf = Module["_sysconf"] = createExportWrapper("sysconf");

var _php_exec = Module["_php_exec"] = createExportWrapper("php_exec");

var _popen = Module["_popen"] = createExportWrapper("popen");

var __php_stream_fopen_from_pipe = Module["__php_stream_fopen_from_pipe"] = createExportWrapper("_php_stream_fopen_from_pipe");

var __emalloc_large = Module["__emalloc_large"] = createExportWrapper("_emalloc_large");

var _php_output_write = Module["_php_output_write"] = createExportWrapper("php_output_write");

var _mblen = Module["_mblen"] = createExportWrapper("mblen");

var _php_escape_shell_arg = Module["_php_escape_shell_arg"] = createExportWrapper("php_escape_shell_arg");

var _nice = Module["_nice"] = createExportWrapper("nice");

var _php_stream_context_free = Module["_php_stream_context_free"] = createExportWrapper("php_stream_context_free");

var _zend_fetch_resource2 = Module["_zend_fetch_resource2"] = createExportWrapper("zend_fetch_resource2");

var __php_stream_copy_to_stream_ex = Module["__php_stream_copy_to_stream_ex"] = createExportWrapper("_php_stream_copy_to_stream_ex");

var _php_stream_locate_eol = Module["_php_stream_locate_eol"] = createExportWrapper("php_stream_locate_eol");

var _add_index_stringl = Module["_add_index_stringl"] = createExportWrapper("add_index_stringl");

var _php_open_temporary_fd_ex = Module["_php_open_temporary_fd_ex"] = createExportWrapper("php_open_temporary_fd_ex");

var __php_stream_fopen_tmpfile = Module["__php_stream_fopen_tmpfile"] = createExportWrapper("_php_stream_fopen_tmpfile");

var _php_error_docref2 = Module["_php_error_docref2"] = createExportWrapper("php_error_docref2");

var _php_mkdir_ex = Module["_php_mkdir_ex"] = createExportWrapper("php_mkdir_ex");

var _mkdir = Module["_mkdir"] = createExportWrapper("mkdir");

var _php_mkdir = Module["_php_mkdir"] = createExportWrapper("php_mkdir");

var __php_stream_mkdir = Module["__php_stream_mkdir"] = createExportWrapper("_php_stream_mkdir");

var __php_stream_rmdir = Module["__php_stream_rmdir"] = createExportWrapper("_php_stream_rmdir");

var __php_stream_sync = Module["__php_stream_sync"] = createExportWrapper("_php_stream_sync");

var __php_stream_stat = Module["__php_stream_stat"] = createExportWrapper("_php_stream_stat");

var _zend_hash_str_add_new = Module["_zend_hash_str_add_new"] = createExportWrapper("zend_hash_str_add_new");

var _php_copy_file_ctx = Module["_php_copy_file_ctx"] = createExportWrapper("php_copy_file_ctx");

var __php_stream_stat_path = Module["__php_stream_stat_path"] = createExportWrapper("_php_stream_stat_path");

var _php_copy_file = Module["_php_copy_file"] = createExportWrapper("php_copy_file");

var _fnmatch = Module["_fnmatch"] = createExportWrapper("fnmatch");

var _zend_ini_parse_bool = Module["_zend_ini_parse_bool"] = createExportWrapper("zend_ini_parse_bool");

var _statvfs = Module["_statvfs"] = createExportWrapper("statvfs");

var _php_get_gid_by_name = Module["_php_get_gid_by_name"] = createExportWrapper("php_get_gid_by_name");

var _getgrnam = Module["_getgrnam"] = createExportWrapper("getgrnam");

var _lchown = Module["_lchown"] = createExportWrapper("lchown");

var _chown = Module["_chown"] = createExportWrapper("chown");

var _php_get_uid_by_name = Module["_php_get_uid_by_name"] = createExportWrapper("php_get_uid_by_name");

var _getpwnam = Module["_getpwnam"] = createExportWrapper("getpwnam");

var _fclose = Module["_fclose"] = createExportWrapper("fclose");

var _realpath_cache_del = Module["_realpath_cache_del"] = createExportWrapper("realpath_cache_del");

var _realpath_cache_clean = Module["_realpath_cache_clean"] = createExportWrapper("realpath_cache_clean");

var _getgid = Module["_getgid"] = createExportWrapper("getgid");

var _getgroups = Module["_getgroups"] = createExportWrapper("getgroups");

var _realpath_cache_size = Module["_realpath_cache_size"] = createExportWrapper("realpath_cache_size");

var _realpath_cache_get_buckets = Module["_realpath_cache_get_buckets"] = createExportWrapper("realpath_cache_get_buckets");

var _realpath_cache_max_buckets = Module["_realpath_cache_max_buckets"] = createExportWrapper("realpath_cache_max_buckets");

var _php_flock = Module["_php_flock"] = createExportWrapper("php_flock");

var _localeconv = Module["_localeconv"] = createExportWrapper("localeconv");

var _php_conv_fp = Module["_php_conv_fp"] = createExportWrapper("php_conv_fp");

var __php_stream_xport_create = Module["__php_stream_xport_create"] = createExportWrapper("_php_stream_xport_create");

var _zend_try_assign_typed_ref_empty_string = Module["_zend_try_assign_typed_ref_empty_string"] = createExportWrapper("zend_try_assign_typed_ref_empty_string");

var _sapi_header_op = Module["_sapi_header_op"] = createExportWrapper("sapi_header_op");

var _php_header = Module["_php_header"] = createExportWrapper("php_header");

var _php_setcookie = Module["_php_setcookie"] = createExportWrapper("php_setcookie");

var _php_raw_url_encode = Module["_php_raw_url_encode"] = createExportWrapper("php_raw_url_encode");

var _difftime = Module["_difftime"] = createExportWrapper("difftime");

var _zend_try_assign_typed_ref_string = Module["_zend_try_assign_typed_ref_string"] = createExportWrapper("zend_try_assign_typed_ref_string");

var _zend_llist_apply_with_argument = Module["_zend_llist_apply_with_argument"] = createExportWrapper("zend_llist_apply_with_argument");

var _php_unescape_html_entities = Module["_php_unescape_html_entities"] = createExportWrapper("php_unescape_html_entities");

var _php_escape_html_entities = Module["_php_escape_html_entities"] = createExportWrapper("php_escape_html_entities");

var _php_is_image_avif = Module["_php_is_image_avif"] = createExportWrapper("php_is_image_avif");

var _php_image_type_to_mime_type = Module["_php_image_type_to_mime_type"] = createExportWrapper("php_image_type_to_mime_type");

var _php_getimagetype = Module["_php_getimagetype"] = createExportWrapper("php_getimagetype");

var _sscanf = Module["_sscanf"] = createExportWrapper("sscanf");

var _strrchr = Module["_strrchr"] = createExportWrapper("strrchr");

var _php_info_print_style = Module["_php_info_print_style"] = createExportWrapper("php_info_print_style");

var _php_info_print_css = Module["_php_info_print_css"] = createExportWrapper("php_info_print_css");

var _php_info_html_esc = Module["_php_info_html_esc"] = createExportWrapper("php_info_html_esc");

var _php_get_uname = Module["_php_get_uname"] = createExportWrapper("php_get_uname");

var _uname = Module["_uname"] = createExportWrapper("uname");

var _php_print_info_htmlhead = Module["_php_print_info_htmlhead"] = createExportWrapper("php_print_info_htmlhead");

var _php_print_info = Module["_php_print_info"] = createExportWrapper("php_print_info");

var _get_zend_version = Module["_get_zend_version"] = createExportWrapper("get_zend_version");

var _php_info_print_box_start = Module["_php_info_print_box_start"] = createExportWrapper("php_info_print_box_start");

var _php_info_print_box_end = Module["_php_info_print_box_end"] = createExportWrapper("php_info_print_box_end");

var _is_zend_mm = Module["_is_zend_mm"] = createExportWrapper("is_zend_mm");

var _zend_multibyte_get_functions = Module["_zend_multibyte_get_functions"] = createExportWrapper("zend_multibyte_get_functions");

var __php_stream_get_url_stream_wrappers_hash = Module["__php_stream_get_url_stream_wrappers_hash"] = createExportWrapper("_php_stream_get_url_stream_wrappers_hash");

var _php_stream_xport_get_hash = Module["_php_stream_xport_get_hash"] = createExportWrapper("php_stream_xport_get_hash");

var __php_get_stream_filters_hash = Module["__php_get_stream_filters_hash"] = createExportWrapper("_php_get_stream_filters_hash");

var _zend_html_puts = Module["_zend_html_puts"] = createExportWrapper("zend_html_puts");

var _php_info_print_hr = Module["_php_info_print_hr"] = createExportWrapper("php_info_print_hr");

var _php_print_credits = Module["_php_print_credits"] = createExportWrapper("php_print_credits");

var _php_info_print_table_colspan_header = Module["_php_info_print_table_colspan_header"] = createExportWrapper("php_info_print_table_colspan_header");

var _php_info_print_table_row_ex = Module["_php_info_print_table_row_ex"] = createExportWrapper("php_info_print_table_row_ex");

var _zend_get_module_version = Module["_zend_get_module_version"] = createExportWrapper("zend_get_module_version");

var _fileno = createExportWrapper("fileno");

var _fgetc = Module["_fgetc"] = createExportWrapper("fgetc");

var _getc = Module["_getc"] = createExportWrapper("getc");

var _lstat = Module["_lstat"] = createExportWrapper("lstat");

var _expand_filepath_ex = Module["_expand_filepath_ex"] = createExportWrapper("expand_filepath_ex");

var _symlink = Module["_symlink"] = createExportWrapper("symlink");

var _link = Module["_link"] = createExportWrapper("link");

var _zend_get_executed_filename = Module["_zend_get_executed_filename"] = createExportWrapper("zend_get_executed_filename");

var _zend_get_executed_lineno = Module["_zend_get_executed_lineno"] = createExportWrapper("zend_get_executed_lineno");

var _pclose = Module["_pclose"] = createExportWrapper("pclose");

var _fprintf = Module["_fprintf"] = createExportWrapper("fprintf");

var _php_syslog = Module["_php_syslog"] = createExportWrapper("php_syslog");

var _log10 = Module["_log10"] = createExportWrapper("log10");

var _tan = Module["_tan"] = createExportWrapper("tan");

var _asin = Module["_asin"] = createExportWrapper("asin");

var _atan = Module["_atan"] = createExportWrapper("atan");

var _sinh = Module["_sinh"] = createExportWrapper("sinh");

var _cosh = Module["_cosh"] = createExportWrapper("cosh");

var _tanh = Module["_tanh"] = createExportWrapper("tanh");

var _asinh = Module["_asinh"] = createExportWrapper("asinh");

var _acosh = Module["_acosh"] = createExportWrapper("acosh");

var _atanh = Module["_atanh"] = createExportWrapper("atanh");

var _pow_function = Module["_pow_function"] = createExportWrapper("pow_function");

var _exp = Module["_exp"] = createExportWrapper("exp");

var _expm1 = Module["_expm1"] = createExportWrapper("expm1");

var _log1p = Module["_log1p"] = createExportWrapper("log1p");

var _log = Module["_log"] = createExportWrapper("log");

var _log2 = Module["_log2"] = createExportWrapper("log2");

var _hypot = Module["_hypot"] = createExportWrapper("hypot");

var __php_math_basetolong = Module["__php_math_basetolong"] = createExportWrapper("_php_math_basetolong");

var __php_math_basetozval = Module["__php_math_basetozval"] = createExportWrapper("_php_math_basetozval");

var __php_math_longtobase = Module["__php_math_longtobase"] = createExportWrapper("_php_math_longtobase");

var __php_math_zvaltobase = Module["__php_math_zvaltobase"] = createExportWrapper("_php_math_zvaltobase");

var _fmod = Module["_fmod"] = createExportWrapper("fmod");

var __php_math_number_format = Module["__php_math_number_format"] = createExportWrapper("_php_math_number_format");

var __php_math_number_format_ex = Module["__php_math_number_format_ex"] = createExportWrapper("_php_math_number_format_ex");

var _make_digest = Module["_make_digest"] = createExportWrapper("make_digest");

var _getrusage = Module["_getrusage"] = createExportWrapper("getrusage");

var _php_statpage = Module["_php_statpage"] = createExportWrapper("php_statpage");

var _sapi_get_stat = Module["_sapi_get_stat"] = createExportWrapper("sapi_get_stat");

var _php_getlastmod = Module["_php_getlastmod"] = createExportWrapper("php_getlastmod");

var _php_quot_print_encode = Module["_php_quot_print_encode"] = createExportWrapper("php_quot_print_encode");

var _localeconv_r = Module["_localeconv_r"] = createExportWrapper("localeconv_r");

var _php_strspn = Module["_php_strspn"] = createExportWrapper("php_strspn");

var _php_strcspn = Module["_php_strcspn"] = createExportWrapper("php_strcspn");

var _nl_langinfo = Module["_nl_langinfo"] = createExportWrapper("nl_langinfo");

var _php_explode = Module["_php_explode"] = createExportWrapper("php_explode");

var _zend_hash_packed_grow = Module["_zend_hash_packed_grow"] = createExportWrapper("zend_hash_packed_grow");

var _php_explode_negative_limit = Module["_php_explode_negative_limit"] = createExportWrapper("php_explode_negative_limit");

var _php_implode = Module["_php_implode"] = createExportWrapper("php_implode");

var _php_strtoupper = Module["_php_strtoupper"] = createExportWrapper("php_strtoupper");

var _zend_str_toupper = Module["_zend_str_toupper"] = createExportWrapper("zend_str_toupper");

var _php_string_toupper = Module["_php_string_toupper"] = createExportWrapper("php_string_toupper");

var _php_strtolower = Module["_php_strtolower"] = createExportWrapper("php_strtolower");

var _php_string_tolower = Module["_php_string_tolower"] = createExportWrapper("php_string_tolower");

var _zend_dirname = Module["_zend_dirname"] = createExportWrapper("zend_dirname");

var _add_index_str = Module["_add_index_str"] = createExportWrapper("add_index_str");

var _php_strtr = Module["_php_strtr"] = createExportWrapper("php_strtr");

var _php_str_to_str = Module["_php_str_to_str"] = createExportWrapper("php_str_to_str");

var _zend_try_assign_typed_ref_double = Module["_zend_try_assign_typed_ref_double"] = createExportWrapper("zend_try_assign_typed_ref_double");

var _php_addcslashes_str = Module["_php_addcslashes_str"] = createExportWrapper("php_addcslashes_str");

var _php_stripcslashes = Module["_php_stripcslashes"] = createExportWrapper("php_stripcslashes");

var _php_stripslashes = Module["_php_stripslashes"] = createExportWrapper("php_stripslashes");

var _php_addcslashes = Module["_php_addcslashes"] = createExportWrapper("php_addcslashes");

var _zend_str_tolower_dup_ex = Module["_zend_str_tolower_dup_ex"] = createExportWrapper("zend_str_tolower_dup_ex");

var __emalloc_1024 = Module["__emalloc_1024"] = createExportWrapper("_emalloc_1024");

var _php_strip_tags = Module["_php_strip_tags"] = createExportWrapper("php_strip_tags");

var _zend_binary_strncmp = Module["_zend_binary_strncmp"] = createExportWrapper("zend_binary_strncmp");

var _zend_binary_strncasecmp_l = Module["_zend_binary_strncasecmp_l"] = createExportWrapper("zend_binary_strncasecmp_l");

var _ValidateFormat = Module["_ValidateFormat"] = createExportWrapper("ValidateFormat");

var _php_openlog = Module["_php_openlog"] = createExportWrapper("php_openlog");

var _php_closelog = Module["_php_closelog"] = createExportWrapper("php_closelog");

var _php_syslog_str = Module["_php_syslog_str"] = createExportWrapper("php_syslog_str");

var _zend_zval_get_legacy_type = Module["_zend_zval_get_legacy_type"] = createExportWrapper("zend_zval_get_legacy_type");

var _zend_rsrc_list_get_rsrc_type = Module["_zend_rsrc_list_get_rsrc_type"] = createExportWrapper("zend_rsrc_list_get_rsrc_type");

var _convert_to_object = Module["_convert_to_object"] = createExportWrapper("convert_to_object");

var _zend_is_countable = Module["_zend_is_countable"] = createExportWrapper("zend_is_countable");

var _php_replace_controlchars_ex = Module["_php_replace_controlchars_ex"] = createExportWrapper("php_replace_controlchars_ex");

var _php_replace_controlchars = Module["_php_replace_controlchars"] = createExportWrapper("php_replace_controlchars");

var _php_url_parse = Module["_php_url_parse"] = createExportWrapper("php_url_parse");

var _php_url_parse_ex2 = Module["_php_url_parse_ex2"] = createExportWrapper("php_url_parse_ex2");

var _php_raw_url_decode = Module["_php_raw_url_decode"] = createExportWrapper("php_raw_url_decode");

var _php_var_dump = Module["_php_var_dump"] = createExportWrapper("php_var_dump");

var _php_printf = Module["_php_printf"] = createExportWrapper("php_printf");

var _php_printf_unchecked = Module["_php_printf_unchecked"] = createExportWrapper("php_printf_unchecked");

var _zend_array_count = Module["_zend_array_count"] = createExportWrapper("zend_array_count");

var _php_debug_zval_dump = Module["_php_debug_zval_dump"] = createExportWrapper("php_debug_zval_dump");

var _php_var_export_ex = Module["_php_var_export_ex"] = createExportWrapper("php_var_export_ex");

var _smart_str_append_double = Module["_smart_str_append_double"] = createExportWrapper("smart_str_append_double");

var _php_var_export = Module["_php_var_export"] = createExportWrapper("php_var_export");

var _php_lookup_class_name = Module["_php_lookup_class_name"] = createExportWrapper("php_lookup_class_name");

var _php_unserialize_with_options = Module["_php_unserialize_with_options"] = createExportWrapper("php_unserialize_with_options");

var _php_var_unserialize_get_allowed_classes = Module["_php_var_unserialize_get_allowed_classes"] = createExportWrapper("php_var_unserialize_get_allowed_classes");

var _php_var_unserialize_get_max_depth = Module["_php_var_unserialize_get_max_depth"] = createExportWrapper("php_var_unserialize_get_max_depth");

var _php_var_unserialize_get_cur_depth = Module["_php_var_unserialize_get_cur_depth"] = createExportWrapper("php_var_unserialize_get_cur_depth");

var _php_var_unserialize_set_allowed_classes = Module["_php_var_unserialize_set_allowed_classes"] = createExportWrapper("php_var_unserialize_set_allowed_classes");

var _php_var_unserialize_set_max_depth = Module["_php_var_unserialize_set_max_depth"] = createExportWrapper("php_var_unserialize_set_max_depth");

var _php_var_unserialize_set_cur_depth = Module["_php_var_unserialize_set_cur_depth"] = createExportWrapper("php_var_unserialize_set_cur_depth");

var _zend_memory_usage = Module["_zend_memory_usage"] = createExportWrapper("zend_memory_usage");

var _zend_memory_peak_usage = Module["_zend_memory_peak_usage"] = createExportWrapper("zend_memory_peak_usage");

var _zend_memory_reset_peak_usage = Module["_zend_memory_reset_peak_usage"] = createExportWrapper("zend_memory_reset_peak_usage");

var _php_canonicalize_version = Module["_php_canonicalize_version"] = createExportWrapper("php_canonicalize_version");

var _zend_throw_exception_internal = Module["_zend_throw_exception_internal"] = createExportWrapper("zend_throw_exception_internal");

var _zend_throw_unwind_exit = Module["_zend_throw_unwind_exit"] = createExportWrapper("zend_throw_unwind_exit");

var _zend_objects_new = Module["_zend_objects_new"] = createExportWrapper("zend_objects_new");

var _php_store_class_name = Module["_php_store_class_name"] = createExportWrapper("php_store_class_name");

var _php_output_start_internal = Module["_php_output_start_internal"] = createExportWrapper("php_output_start_internal");

var _php_url_scanner_add_var = Module["_php_url_scanner_add_var"] = createExportWrapper("php_url_scanner_add_var");

var _php_url_scanner_reset_session_vars = Module["_php_url_scanner_reset_session_vars"] = createExportWrapper("php_url_scanner_reset_session_vars");

var _php_url_scanner_reset_vars = Module["_php_url_scanner_reset_vars"] = createExportWrapper("php_url_scanner_reset_vars");

var _php_url_scanner_reset_var = Module["_php_url_scanner_reset_var"] = createExportWrapper("php_url_scanner_reset_var");

var _php_stream_wrapper_log_error = Module["_php_stream_wrapper_log_error"] = createExportWrapper("php_stream_wrapper_log_error");

var _php_stream_context_set = Module["_php_stream_context_set"] = createExportWrapper("php_stream_context_set");

var __php_stream_sock_open_host = Module["__php_stream_sock_open_host"] = createExportWrapper("_php_stream_sock_open_host");

var _zend_set_local_var_str = Module["_zend_set_local_var_str"] = createExportWrapper("zend_set_local_var_str");

var _php_stream_filter_create = Module["_php_stream_filter_create"] = createExportWrapper("php_stream_filter_create");

var _php_stream_filter_free = Module["_php_stream_filter_free"] = createExportWrapper("php_stream_filter_free");

var __php_stream_filter_append = Module["__php_stream_filter_append"] = createExportWrapper("_php_stream_filter_append");

var _sapi_read_post_block = Module["_sapi_read_post_block"] = createExportWrapper("sapi_read_post_block");

var _php_stream_mode_from_str = Module["_php_stream_mode_from_str"] = createExportWrapper("php_stream_mode_from_str");

var __php_stream_temp_create = Module["__php_stream_temp_create"] = createExportWrapper("_php_stream_temp_create");

var __php_stream_memory_create = Module["__php_stream_memory_create"] = createExportWrapper("_php_stream_memory_create");

var __php_stream_temp_create_ex = Module["__php_stream_temp_create_ex"] = createExportWrapper("_php_stream_temp_create_ex");

var _dup = Module["_dup"] = createExportWrapper("dup");

var __php_stream_sock_open_from_socket = Module["__php_stream_sock_open_from_socket"] = createExportWrapper("_php_stream_sock_open_from_socket");

var __php_stream_fopen_from_file = Module["__php_stream_fopen_from_file"] = createExportWrapper("_php_stream_fopen_from_file");

var __php_stream_fopen_from_fd = Module["__php_stream_fopen_from_fd"] = createExportWrapper("_php_stream_fopen_from_fd");

var _var_destroy = Module["_var_destroy"] = createExportWrapper("var_destroy");

var __efree_large = Module["__efree_large"] = createExportWrapper("_efree_large");

var _zend_is_valid_class_name = Module["_zend_is_valid_class_name"] = createExportWrapper("zend_is_valid_class_name");

var _zend_hash_lookup = Module["_zend_hash_lookup"] = createExportWrapper("zend_hash_lookup");

var _zend_ref_del_type_source = Module["_zend_ref_del_type_source"] = createExportWrapper("zend_ref_del_type_source");

var _zend_verify_prop_assignable_by_ref = Module["_zend_verify_prop_assignable_by_ref"] = createExportWrapper("zend_verify_prop_assignable_by_ref");

var _make_sha1_digest = Module["_make_sha1_digest"] = createExportWrapper("make_sha1_digest");

var _zend_register_resource = Module["_zend_register_resource"] = createExportWrapper("zend_register_resource");

var _php_stream_bucket_make_writeable = Module["_php_stream_bucket_make_writeable"] = createExportWrapper("php_stream_bucket_make_writeable");

var _add_property_zval_ex = Module["_add_property_zval_ex"] = createExportWrapper("add_property_zval_ex");

var _php_stream_bucket_prepend = Module["_php_stream_bucket_prepend"] = createExportWrapper("php_stream_bucket_prepend");

var _php_stream_filter_register_factory_volatile = Module["_php_stream_filter_register_factory_volatile"] = createExportWrapper("php_stream_filter_register_factory_volatile");

var _add_property_null_ex = Module["_add_property_null_ex"] = createExportWrapper("add_property_null_ex");

var _zend_call_method_if_exists = Module["_zend_call_method_if_exists"] = createExportWrapper("zend_call_method_if_exists");

var _php_uuencode = Module["_php_uuencode"] = createExportWrapper("php_uuencode");

var _php_uudecode = Module["_php_uudecode"] = createExportWrapper("php_uudecode");

var _waitpid = Module["_waitpid"] = createExportWrapper("waitpid");

var _kill = Module["_kill"] = createExportWrapper("kill");

var _fork = Module["_fork"] = createExportWrapper("fork");

var __exit = Module["__exit"] = createExportWrapper("_exit");

var _execvp = Module["_execvp"] = createExportWrapper("execvp");

var _execle = Module["_execle"] = createExportWrapper("execle");

var _execl = Module["_execl"] = createExportWrapper("execl");

var __php_stream_cast = Module["__php_stream_cast"] = createExportWrapper("_php_stream_cast");

var _dup2 = Module["_dup2"] = createExportWrapper("dup2");

var _pipe = Module["_pipe"] = createExportWrapper("pipe");

var _socketpair = Module["_socketpair"] = createExportWrapper("socketpair");

var _php_socket_error_str = Module["_php_socket_error_str"] = createExportWrapper("php_socket_error_str");

var _openpty = Module["_openpty"] = createExportWrapper("openpty");

var _add_next_index_resource = Module["_add_next_index_resource"] = createExportWrapper("add_next_index_resource");

var _php_stream_xport_accept = Module["_php_stream_xport_accept"] = createExportWrapper("php_stream_xport_accept");

var _php_stream_xport_get_name = Module["_php_stream_xport_get_name"] = createExportWrapper("php_stream_xport_get_name");

var _php_network_parse_network_address_with_port = Module["_php_network_parse_network_address_with_port"] = createExportWrapper("php_network_parse_network_address_with_port");

var _php_stream_xport_sendto = Module["_php_stream_xport_sendto"] = createExportWrapper("php_stream_xport_sendto");

var _php_stream_xport_recvfrom = Module["_php_stream_xport_recvfrom"] = createExportWrapper("php_stream_xport_recvfrom");

var _select = Module["_select"] = createExportWrapper("select");

var __php_emit_fd_setsize_warning = Module["__php_emit_fd_setsize_warning"] = createExportWrapper("_php_emit_fd_setsize_warning");

var _php_stream_notification_free = Module["_php_stream_notification_free"] = createExportWrapper("php_stream_notification_free");

var _php_stream_notification_alloc = Module["_php_stream_notification_alloc"] = createExportWrapper("php_stream_notification_alloc");

var _php_stream_filter_append_ex = Module["_php_stream_filter_append_ex"] = createExportWrapper("php_stream_filter_append_ex");

var _php_stream_filter_prepend_ex = Module["_php_stream_filter_prepend_ex"] = createExportWrapper("php_stream_filter_prepend_ex");

var _php_stream_filter_remove = Module["_php_stream_filter_remove"] = createExportWrapper("php_stream_filter_remove");

var _php_file_le_stream_filter = Module["_php_file_le_stream_filter"] = createExportWrapper("php_file_le_stream_filter");

var __php_stream_filter_flush = Module["__php_stream_filter_flush"] = createExportWrapper("_php_stream_filter_flush");

var _php_stream_get_record = Module["_php_stream_get_record"] = createExportWrapper("php_stream_get_record");

var _isatty = Module["_isatty"] = createExportWrapper("isatty");

var _php_url_encode_hash_ex = Module["_php_url_encode_hash_ex"] = createExportWrapper("php_url_encode_hash_ex");

var _zend_check_property_access = Module["_zend_check_property_access"] = createExportWrapper("zend_check_property_access");

var _php_password_algo_register = Module["_php_password_algo_register"] = createExportWrapper("php_password_algo_register");

var _php_password_algo_unregister = Module["_php_password_algo_unregister"] = createExportWrapper("php_password_algo_unregister");

var _php_password_algo_default = Module["_php_password_algo_default"] = createExportWrapper("php_password_algo_default");

var _php_password_algo_find = Module["_php_password_algo_find"] = createExportWrapper("php_password_algo_find");

var _php_password_algo_extract_ident = Module["_php_password_algo_extract_ident"] = createExportWrapper("php_password_algo_extract_ident");

var _php_password_algo_identify_ex = Module["_php_password_algo_identify_ex"] = createExportWrapper("php_password_algo_identify_ex");

var _php_inet_ntop = Module["_php_inet_ntop"] = createExportWrapper("php_inet_ntop");

var _getifaddrs = Module["_getifaddrs"] = createExportWrapper("getifaddrs");

var _freeifaddrs = Module["_freeifaddrs"] = createExportWrapper("freeifaddrs");

var _clock_gettime = Module["_clock_gettime"] = createExportWrapper("clock_gettime");

var _php_hrtime_current = Module["_php_hrtime_current"] = createExportWrapper("php_hrtime_current");

var _tidySetMallocCall = Module["_tidySetMallocCall"] = createExportWrapper("tidySetMallocCall");

var _tidySetReallocCall = Module["_tidySetReallocCall"] = createExportWrapper("tidySetReallocCall");

var _tidySetFreeCall = Module["_tidySetFreeCall"] = createExportWrapper("tidySetFreeCall");

var _tidySetPanicCall = Module["_tidySetPanicCall"] = createExportWrapper("tidySetPanicCall");

var _zend_ini_long = Module["_zend_ini_long"] = createExportWrapper("zend_ini_long");

var _tidyLibraryVersion = Module["_tidyLibraryVersion"] = createExportWrapper("tidyLibraryVersion");

var _tidyReleaseDate = Module["_tidyReleaseDate"] = createExportWrapper("tidyReleaseDate");

var _tidyLoadConfig = Module["_tidyLoadConfig"] = createExportWrapper("tidyLoadConfig");

var _tidySetCharEncoding = Module["_tidySetCharEncoding"] = createExportWrapper("tidySetCharEncoding");

var _tidyBufInit = Module["_tidyBufInit"] = createExportWrapper("tidyBufInit");

var _tidyBufAttach = Module["_tidyBufAttach"] = createExportWrapper("tidyBufAttach");

var _tidyParseBuffer = Module["_tidyParseBuffer"] = createExportWrapper("tidyParseBuffer");

var _tidySaveBuffer = Module["_tidySaveBuffer"] = createExportWrapper("tidySaveBuffer");

var _tidyBufFree = Module["_tidyBufFree"] = createExportWrapper("tidyBufFree");

var _tidyCleanAndRepair = Module["_tidyCleanAndRepair"] = createExportWrapper("tidyCleanAndRepair");

var _zend_update_property_stringl = Module["_zend_update_property_stringl"] = createExportWrapper("zend_update_property_stringl");

var _tidyCreate = Module["_tidyCreate"] = createExportWrapper("tidyCreate");

var _tidySetErrorBuffer = Module["_tidySetErrorBuffer"] = createExportWrapper("tidySetErrorBuffer");

var _tidyRelease = Module["_tidyRelease"] = createExportWrapper("tidyRelease");

var _tidyOptSetBool = Module["_tidyOptSetBool"] = createExportWrapper("tidyOptSetBool");

var _tidyRunDiagnostics = Module["_tidyRunDiagnostics"] = createExportWrapper("tidyRunDiagnostics");

var _tidyGetOptionByName = Module["_tidyGetOptionByName"] = createExportWrapper("tidyGetOptionByName");

var _tidyOptGetDoc = Module["_tidyOptGetDoc"] = createExportWrapper("tidyOptGetDoc");

var _tidyGetOptionList = Module["_tidyGetOptionList"] = createExportWrapper("tidyGetOptionList");

var _tidyGetNextOption = Module["_tidyGetNextOption"] = createExportWrapper("tidyGetNextOption");

var _tidyOptGetName = Module["_tidyOptGetName"] = createExportWrapper("tidyOptGetName");

var _tidyOptGetType = Module["_tidyOptGetType"] = createExportWrapper("tidyOptGetType");

var _tidyOptGetId = Module["_tidyOptGetId"] = createExportWrapper("tidyOptGetId");

var _tidyOptGetValue = Module["_tidyOptGetValue"] = createExportWrapper("tidyOptGetValue");

var _tidyOptGetInt = Module["_tidyOptGetInt"] = createExportWrapper("tidyOptGetInt");

var _tidyOptGetBool = Module["_tidyOptGetBool"] = createExportWrapper("tidyOptGetBool");

var _tidyStatus = Module["_tidyStatus"] = createExportWrapper("tidyStatus");

var _tidyDetectedHtmlVersion = Module["_tidyDetectedHtmlVersion"] = createExportWrapper("tidyDetectedHtmlVersion");

var _tidyDetectedXhtml = Module["_tidyDetectedXhtml"] = createExportWrapper("tidyDetectedXhtml");

var _tidyDetectedGenericXml = Module["_tidyDetectedGenericXml"] = createExportWrapper("tidyDetectedGenericXml");

var _tidyErrorCount = Module["_tidyErrorCount"] = createExportWrapper("tidyErrorCount");

var _tidyWarningCount = Module["_tidyWarningCount"] = createExportWrapper("tidyWarningCount");

var _tidyAccessWarningCount = Module["_tidyAccessWarningCount"] = createExportWrapper("tidyAccessWarningCount");

var _tidyConfigErrorCount = Module["_tidyConfigErrorCount"] = createExportWrapper("tidyConfigErrorCount");

var _tidyGetRoot = Module["_tidyGetRoot"] = createExportWrapper("tidyGetRoot");

var _tidyGetHtml = Module["_tidyGetHtml"] = createExportWrapper("tidyGetHtml");

var _tidyGetHead = Module["_tidyGetHead"] = createExportWrapper("tidyGetHead");

var _tidyGetBody = Module["_tidyGetBody"] = createExportWrapper("tidyGetBody");

var _tidyGetChild = Module["_tidyGetChild"] = createExportWrapper("tidyGetChild");

var _tidyGetNext = Module["_tidyGetNext"] = createExportWrapper("tidyGetNext");

var _tidyNodeGetType = Module["_tidyNodeGetType"] = createExportWrapper("tidyNodeGetType");

var _tidyGetParent = Module["_tidyGetParent"] = createExportWrapper("tidyGetParent");

var _tidyNodeGetText = Module["_tidyNodeGetText"] = createExportWrapper("tidyNodeGetText");

var _tidyNodeGetName = Module["_tidyNodeGetName"] = createExportWrapper("tidyNodeGetName");

var _tidyNodeLine = Module["_tidyNodeLine"] = createExportWrapper("tidyNodeLine");

var _tidyNodeColumn = Module["_tidyNodeColumn"] = createExportWrapper("tidyNodeColumn");

var _tidyNodeIsProp = Module["_tidyNodeIsProp"] = createExportWrapper("tidyNodeIsProp");

var _zend_update_property_bool = Module["_zend_update_property_bool"] = createExportWrapper("zend_update_property_bool");

var _zend_update_property_null = Module["_zend_update_property_null"] = createExportWrapper("zend_update_property_null");

var _tidyNodeGetId = Module["_tidyNodeGetId"] = createExportWrapper("tidyNodeGetId");

var _tidyAttrFirst = Module["_tidyAttrFirst"] = createExportWrapper("tidyAttrFirst");

var _tidyAttrName = Module["_tidyAttrName"] = createExportWrapper("tidyAttrName");

var _tidyAttrValue = Module["_tidyAttrValue"] = createExportWrapper("tidyAttrValue");

var _tidyAttrNext = Module["_tidyAttrNext"] = createExportWrapper("tidyAttrNext");

var _php_output_handler_started = Module["_php_output_handler_started"] = createExportWrapper("php_output_handler_started");

var _php_output_handler_start = Module["_php_output_handler_start"] = createExportWrapper("php_output_handler_start");

var _tidyOptIsReadOnly = Module["_tidyOptIsReadOnly"] = createExportWrapper("tidyOptIsReadOnly");

var _tidyOptSetValue = Module["_tidyOptSetValue"] = createExportWrapper("tidyOptSetValue");

var _tidyOptSetInt = Module["_tidyOptSetInt"] = createExportWrapper("tidyOptSetInt");

var _zend_prepare_string_for_scanning = Module["_zend_prepare_string_for_scanning"] = createExportWrapper("zend_prepare_string_for_scanning");

var _lex_scan = Module["_lex_scan"] = createExportWrapper("lex_scan");

var _zendparse = Module["_zendparse"] = createExportWrapper("zendparse");

var _zend_ast_destroy = Module["_zend_ast_destroy"] = createExportWrapper("zend_ast_destroy");

var _vrzno_expose_inc_zrefcount = Module["_vrzno_expose_inc_zrefcount"] = createExportWrapper("vrzno_expose_inc_zrefcount");

var _vrzno_expose_dec_zrefcount = Module["_vrzno_expose_dec_zrefcount"] = createExportWrapper("vrzno_expose_dec_zrefcount");

var _vrzno_expose_zrefcount = Module["_vrzno_expose_zrefcount"] = createExportWrapper("vrzno_expose_zrefcount");

var _vrzno_expose_inc_crefcount = Module["_vrzno_expose_inc_crefcount"] = createExportWrapper("vrzno_expose_inc_crefcount");

var _vrzno_expose_dec_crefcount = Module["_vrzno_expose_dec_crefcount"] = createExportWrapper("vrzno_expose_dec_crefcount");

var _vrzno_expose_crefcount = Module["_vrzno_expose_crefcount"] = createExportWrapper("vrzno_expose_crefcount");

var _vrzno_expose_efree = Module["_vrzno_expose_efree"] = createExportWrapper("vrzno_expose_efree");

var _vrzno_expose_create_bool = Module["_vrzno_expose_create_bool"] = createExportWrapper("vrzno_expose_create_bool");

var _vrzno_expose_create_null = Module["_vrzno_expose_create_null"] = createExportWrapper("vrzno_expose_create_null");

var _vrzno_expose_create_undef = Module["_vrzno_expose_create_undef"] = createExportWrapper("vrzno_expose_create_undef");

var _vrzno_expose_create_long = Module["_vrzno_expose_create_long"] = createExportWrapper("vrzno_expose_create_long");

var _vrzno_expose_create_double = Module["_vrzno_expose_create_double"] = createExportWrapper("vrzno_expose_create_double");

var _vrzno_expose_create_string = Module["_vrzno_expose_create_string"] = createExportWrapper("vrzno_expose_create_string");

var _vrzno_expose_create_object_for_target = Module["_vrzno_expose_create_object_for_target"] = createExportWrapper("vrzno_expose_create_object_for_target");

var _vrzno_expose_create_params = Module["_vrzno_expose_create_params"] = createExportWrapper("vrzno_expose_create_params");

var _vrzno_expose_set_param = Module["_vrzno_expose_set_param"] = createExportWrapper("vrzno_expose_set_param");

var _vrzno_expose_zval_is_target = Module["_vrzno_expose_zval_is_target"] = createExportWrapper("vrzno_expose_zval_is_target");

var _vrzno_expose_object_keys = Module["_vrzno_expose_object_keys"] = createExportWrapper("vrzno_expose_object_keys");

var _vrzno_expose_zval_dump = Module["_vrzno_expose_zval_dump"] = createExportWrapper("vrzno_expose_zval_dump");

var _vrzno_expose_type = Module["_vrzno_expose_type"] = createExportWrapper("vrzno_expose_type");

var _vrzno_expose_callable = Module["_vrzno_expose_callable"] = createExportWrapper("vrzno_expose_callable");

var _vrzno_expose_long = Module["_vrzno_expose_long"] = createExportWrapper("vrzno_expose_long");

var _vrzno_expose_double = Module["_vrzno_expose_double"] = createExportWrapper("vrzno_expose_double");

var _vrzno_expose_string = Module["_vrzno_expose_string"] = createExportWrapper("vrzno_expose_string");

var _vrzno_expose_property_pointer = Module["_vrzno_expose_property_pointer"] = createExportWrapper("vrzno_expose_property_pointer");

var _zend_register_internal_class = Module["_zend_register_internal_class"] = createExportWrapper("zend_register_internal_class");

var _vrzno_exec_callback = Module["_vrzno_exec_callback"] = createExportWrapper("vrzno_exec_callback");

var _vrzno_del_callback = Module["_vrzno_del_callback"] = createExportWrapper("vrzno_del_callback");

var _zend_ulong_to_str = Module["_zend_ulong_to_str"] = createExportWrapper("zend_ulong_to_str");

var _php_XML_ParserFree = Module["_php_XML_ParserFree"] = createExportWrapper("php_XML_ParserFree");

var _XML_GetUserData = Module["_XML_GetUserData"] = createExportWrapper("XML_GetUserData");

var _php_XML_ParserCreate_MM = Module["_php_XML_ParserCreate_MM"] = createExportWrapper("php_XML_ParserCreate_MM");

var _php_XML_SetUserData = Module["_php_XML_SetUserData"] = createExportWrapper("php_XML_SetUserData");

var _php_XML_SetElementHandler = Module["_php_XML_SetElementHandler"] = createExportWrapper("php_XML_SetElementHandler");

var _php_XML_SetCharacterDataHandler = Module["_php_XML_SetCharacterDataHandler"] = createExportWrapper("php_XML_SetCharacterDataHandler");

var _php_XML_SetProcessingInstructionHandler = Module["_php_XML_SetProcessingInstructionHandler"] = createExportWrapper("php_XML_SetProcessingInstructionHandler");

var _php_XML_SetDefaultHandler = Module["_php_XML_SetDefaultHandler"] = createExportWrapper("php_XML_SetDefaultHandler");

var _php_XML_SetUnparsedEntityDeclHandler = Module["_php_XML_SetUnparsedEntityDeclHandler"] = createExportWrapper("php_XML_SetUnparsedEntityDeclHandler");

var _php_XML_SetNotationDeclHandler = Module["_php_XML_SetNotationDeclHandler"] = createExportWrapper("php_XML_SetNotationDeclHandler");

var _php_XML_SetExternalEntityRefHandler = Module["_php_XML_SetExternalEntityRefHandler"] = createExportWrapper("php_XML_SetExternalEntityRefHandler");

var _php_XML_SetStartNamespaceDeclHandler = Module["_php_XML_SetStartNamespaceDeclHandler"] = createExportWrapper("php_XML_SetStartNamespaceDeclHandler");

var _php_XML_SetEndNamespaceDeclHandler = Module["_php_XML_SetEndNamespaceDeclHandler"] = createExportWrapper("php_XML_SetEndNamespaceDeclHandler");

var _php_XML_Parse = Module["_php_XML_Parse"] = createExportWrapper("php_XML_Parse");

var _php_XML_GetErrorCode = Module["_php_XML_GetErrorCode"] = createExportWrapper("php_XML_GetErrorCode");

var _php_XML_ErrorString = Module["_php_XML_ErrorString"] = createExportWrapper("php_XML_ErrorString");

var _php_XML_GetCurrentLineNumber = Module["_php_XML_GetCurrentLineNumber"] = createExportWrapper("php_XML_GetCurrentLineNumber");

var _php_XML_GetCurrentColumnNumber = Module["_php_XML_GetCurrentColumnNumber"] = createExportWrapper("php_XML_GetCurrentColumnNumber");

var _php_XML_GetCurrentByteIndex = Module["_php_XML_GetCurrentByteIndex"] = createExportWrapper("php_XML_GetCurrentByteIndex");

var _php_XML_ParserCreate = Module["_php_XML_ParserCreate"] = createExportWrapper("php_XML_ParserCreate");

var _xmlCreatePushParserCtxt = Module["_xmlCreatePushParserCtxt"] = createExportWrapper("xmlCreatePushParserCtxt");

var _php_XML_ParserCreateNS = Module["_php_XML_ParserCreateNS"] = createExportWrapper("php_XML_ParserCreateNS");

var _php_XML_SetCommentHandler = Module["_php_XML_SetCommentHandler"] = createExportWrapper("php_XML_SetCommentHandler");

var _xmlParseChunk = Module["_xmlParseChunk"] = createExportWrapper("xmlParseChunk");

var _php_XML_GetCurrentByteCount = Module["_php_XML_GetCurrentByteCount"] = createExportWrapper("php_XML_GetCurrentByteCount");

var _php_XML_ExpatVersion = Module["_php_XML_ExpatVersion"] = createExportWrapper("php_XML_ExpatVersion");

var _xmlGetPredefinedEntity = Module["_xmlGetPredefinedEntity"] = createExportWrapper("xmlGetPredefinedEntity");

var _xmlGetDocEntity = Module["_xmlGetDocEntity"] = createExportWrapper("xmlGetDocEntity");

var _xmlStrncatNew = Module["_xmlStrncatNew"] = createExportWrapper("xmlStrncatNew");

var _xmlStrncat = Module["_xmlStrncat"] = createExportWrapper("xmlStrncat");

var _xmlStopParser = Module["_xmlStopParser"] = createExportWrapper("xmlStopParser");

var _zip_libzip_version = Module["_zip_libzip_version"] = createExportWrapper("zip_libzip_version");

var _zip_open = Module["_zip_open"] = createExportWrapper("zip_open");

var _zip_get_num_entries = Module["_zip_get_num_entries"] = createExportWrapper("zip_get_num_entries");

var _zip_stat_index = Module["_zip_stat_index"] = createExportWrapper("zip_stat_index");

var _zip_fopen_index = Module["_zip_fopen_index"] = createExportWrapper("zip_fopen_index");

var _zip_fread = Module["_zip_fread"] = createExportWrapper("zip_fread");

var _zip_close = Module["_zip_close"] = createExportWrapper("zip_close");

var _zip_set_default_password = Module["_zip_set_default_password"] = createExportWrapper("zip_set_default_password");

var _zip_strerror = Module["_zip_strerror"] = createExportWrapper("zip_strerror");

var _zip_get_error = Module["_zip_get_error"] = createExportWrapper("zip_get_error");

var _zip_error_code_zip = Module["_zip_error_code_zip"] = createExportWrapper("zip_error_code_zip");

var _zip_error_code_system = Module["_zip_error_code_system"] = createExportWrapper("zip_error_code_system");

var _zip_error_fini = Module["_zip_error_fini"] = createExportWrapper("zip_error_fini");

var _zip_discard = Module["_zip_discard"] = createExportWrapper("zip_discard");

var _zip_error_clear = Module["_zip_error_clear"] = createExportWrapper("zip_error_clear");

var _zip_error_strerror = Module["_zip_error_strerror"] = createExportWrapper("zip_error_strerror");

var _zip_error_init = Module["_zip_error_init"] = createExportWrapper("zip_error_init");

var _zip_error_set = Module["_zip_error_set"] = createExportWrapper("zip_error_set");

var _zip_dir_add = Module["_zip_dir_add"] = createExportWrapper("zip_dir_add");

var _zip_set_file_compression = Module["_zip_set_file_compression"] = createExportWrapper("zip_set_file_compression");

var _zip_source_file = Module["_zip_source_file"] = createExportWrapper("zip_source_file");

var _zip_file_replace = Module["_zip_file_replace"] = createExportWrapper("zip_file_replace");

var _zip_source_free = Module["_zip_source_free"] = createExportWrapper("zip_source_free");

var _zip_file_add = Module["_zip_file_add"] = createExportWrapper("zip_file_add");

var _zip_source_buffer = Module["_zip_source_buffer"] = createExportWrapper("zip_source_buffer");

var _zip_stat = Module["_zip_stat"] = createExportWrapper("zip_stat");

var _zip_name_locate = Module["_zip_name_locate"] = createExportWrapper("zip_name_locate");

var _zip_get_name = Module["_zip_get_name"] = createExportWrapper("zip_get_name");

var _zip_set_archive_comment = Module["_zip_set_archive_comment"] = createExportWrapper("zip_set_archive_comment");

var _zip_get_archive_comment = Module["_zip_get_archive_comment"] = createExportWrapper("zip_get_archive_comment");

var _zip_file_set_comment = Module["_zip_file_set_comment"] = createExportWrapper("zip_file_set_comment");

var _zip_file_set_external_attributes = Module["_zip_file_set_external_attributes"] = createExportWrapper("zip_file_set_external_attributes");

var _zip_file_get_external_attributes = Module["_zip_file_get_external_attributes"] = createExportWrapper("zip_file_get_external_attributes");

var _zip_file_get_comment = Module["_zip_file_get_comment"] = createExportWrapper("zip_file_get_comment");

var _zip_delete = Module["_zip_delete"] = createExportWrapper("zip_delete");

var _zip_file_rename = Module["_zip_file_rename"] = createExportWrapper("zip_file_rename");

var _zip_unchange = Module["_zip_unchange"] = createExportWrapper("zip_unchange");

var _zip_unchange_all = Module["_zip_unchange_all"] = createExportWrapper("zip_unchange_all");

var _zip_unchange_archive = Module["_zip_unchange_archive"] = createExportWrapper("zip_unchange_archive");

var _virtual_file_ex = Module["_virtual_file_ex"] = createExportWrapper("virtual_file_ex");

var _zip_fopen = Module["_zip_fopen"] = createExportWrapper("zip_fopen");

var _zip_fclose = Module["_zip_fclose"] = createExportWrapper("zip_fclose");

var _zip_file_get_error = Module["_zip_file_get_error"] = createExportWrapper("zip_file_get_error");

var _zip_fseek = Module["_zip_fseek"] = createExportWrapper("zip_fseek");

var _zip_ftell = Module["_zip_ftell"] = createExportWrapper("zip_ftell");

var _zip_file_is_seekable = Module["_zip_file_is_seekable"] = createExportWrapper("zip_file_is_seekable");

var _php_during_module_startup = Module["_php_during_module_startup"] = createExportWrapper("php_during_module_startup");

var _php_during_module_shutdown = Module["_php_during_module_shutdown"] = createExportWrapper("php_during_module_shutdown");

var _php_get_module_initialized = Module["_php_get_module_initialized"] = createExportWrapper("php_get_module_initialized");

var _php_write = Module["_php_write"] = createExportWrapper("php_write");

var _get_active_class_name = Module["_get_active_class_name"] = createExportWrapper("get_active_class_name");

var _zend_error_zstr = Module["_zend_error_zstr"] = createExportWrapper("zend_error_zstr");

var _php_error_docref1 = Module["_php_error_docref1"] = createExportWrapper("php_error_docref1");

var _php_html_puts = Module["_php_html_puts"] = createExportWrapper("php_html_puts");

var _getpwuid = Module["_getpwuid"] = createExportWrapper("getpwuid");

var _zend_alter_ini_entry_chars_ex = Module["_zend_alter_ini_entry_chars_ex"] = createExportWrapper("zend_alter_ini_entry_chars_ex");

var _php_request_startup = Module["_php_request_startup"] = createExportWrapper("php_request_startup");

var _zend_interned_strings_activate = Module["_zend_interned_strings_activate"] = createExportWrapper("zend_interned_strings_activate");

var _php_output_activate = Module["_php_output_activate"] = createExportWrapper("php_output_activate");

var _zend_activate = Module["_zend_activate"] = createExportWrapper("zend_activate");

var _sapi_activate = Module["_sapi_activate"] = createExportWrapper("sapi_activate");

var _zend_set_timeout = Module["_zend_set_timeout"] = createExportWrapper("zend_set_timeout");

var _php_output_start_user = Module["_php_output_start_user"] = createExportWrapper("php_output_start_user");

var _php_output_set_implicit_flush = Module["_php_output_set_implicit_flush"] = createExportWrapper("php_output_set_implicit_flush");

var _php_hash_environment = Module["_php_hash_environment"] = createExportWrapper("php_hash_environment");

var _zend_activate_modules = Module["_zend_activate_modules"] = createExportWrapper("zend_activate_modules");

var _php_request_shutdown = Module["_php_request_shutdown"] = createExportWrapper("php_request_shutdown");

var _zend_observer_fcall_end_all = Module["_zend_observer_fcall_end_all"] = createExportWrapper("zend_observer_fcall_end_all");

var _zend_call_destructors = Module["_zend_call_destructors"] = createExportWrapper("zend_call_destructors");

var _php_output_end_all = Module["_php_output_end_all"] = createExportWrapper("php_output_end_all");

var _zend_unset_timeout = Module["_zend_unset_timeout"] = createExportWrapper("zend_unset_timeout");

var _php_output_deactivate = Module["_php_output_deactivate"] = createExportWrapper("php_output_deactivate");

var _zend_deactivate_modules = Module["_zend_deactivate_modules"] = createExportWrapper("zend_deactivate_modules");

var _shutdown_memory_manager = Module["_shutdown_memory_manager"] = createExportWrapper("shutdown_memory_manager");

var _zend_set_memory_limit = Module["_zend_set_memory_limit"] = createExportWrapper("zend_set_memory_limit");

var _zend_interned_strings_deactivate = Module["_zend_interned_strings_deactivate"] = createExportWrapper("zend_interned_strings_deactivate");

var _sapi_deactivate_module = Module["_sapi_deactivate_module"] = createExportWrapper("sapi_deactivate_module");

var _sapi_deactivate_destroy = Module["_sapi_deactivate_destroy"] = createExportWrapper("sapi_deactivate_destroy");

var _virtual_cwd_deactivate = Module["_virtual_cwd_deactivate"] = createExportWrapper("virtual_cwd_deactivate");

var _zend_post_deactivate_modules = Module["_zend_post_deactivate_modules"] = createExportWrapper("zend_post_deactivate_modules");

var _zend_deactivate = Module["_zend_deactivate"] = createExportWrapper("zend_deactivate");

var _php_com_initialize = Module["_php_com_initialize"] = createExportWrapper("php_com_initialize");

var _php_register_extensions = Module["_php_register_extensions"] = createExportWrapper("php_register_extensions");

var _zend_register_internal_module = Module["_zend_register_internal_module"] = createExportWrapper("zend_register_internal_module");

var _php_module_startup = Module["_php_module_startup"] = createExportWrapper("php_module_startup");

var _sapi_initialize_empty_request = Module["_sapi_initialize_empty_request"] = createExportWrapper("sapi_initialize_empty_request");

var _php_output_startup = Module["_php_output_startup"] = createExportWrapper("php_output_startup");

var _php_printf_to_smart_string = Module["_php_printf_to_smart_string"] = createExportWrapper("php_printf_to_smart_string");

var _php_printf_to_smart_str = Module["_php_printf_to_smart_str"] = createExportWrapper("php_printf_to_smart_str");

var _zend_observer_startup = Module["_zend_observer_startup"] = createExportWrapper("zend_observer_startup");

var _php_output_register_constants = Module["_php_output_register_constants"] = createExportWrapper("php_output_register_constants");

var _zend_startup_modules = Module["_zend_startup_modules"] = createExportWrapper("zend_startup_modules");

var _zend_collect_module_handlers = Module["_zend_collect_module_handlers"] = createExportWrapper("zend_collect_module_handlers");

var _zend_register_functions = Module["_zend_register_functions"] = createExportWrapper("zend_register_functions");

var _zend_disable_functions = Module["_zend_disable_functions"] = createExportWrapper("zend_disable_functions");

var _zend_observer_post_startup = Module["_zend_observer_post_startup"] = createExportWrapper("zend_observer_post_startup");

var _cfg_get_long = Module["_cfg_get_long"] = createExportWrapper("cfg_get_long");

var _sapi_deactivate = Module["_sapi_deactivate"] = createExportWrapper("sapi_deactivate");

var _virtual_cwd_activate = Module["_virtual_cwd_activate"] = createExportWrapper("virtual_cwd_activate");

var _zend_interned_strings_switch_storage = Module["_zend_interned_strings_switch_storage"] = createExportWrapper("zend_interned_strings_switch_storage");

var _zend_throw_error_exception = Module["_zend_throw_error_exception"] = createExportWrapper("zend_throw_error_exception");

var _zend_alloc_in_memory_limit_error_reporting = Module["_zend_alloc_in_memory_limit_error_reporting"] = createExportWrapper("zend_alloc_in_memory_limit_error_reporting");

var _php_output_discard_all = Module["_php_output_discard_all"] = createExportWrapper("php_output_discard_all");

var _zend_objects_store_mark_destructed = Module["_zend_objects_store_mark_destructed"] = createExportWrapper("zend_objects_store_mark_destructed");

var __php_stream_open_wrapper_as_file = Module["__php_stream_open_wrapper_as_file"] = createExportWrapper("_php_stream_open_wrapper_as_file");

var _php_strip_url_passwd = Module["_php_strip_url_passwd"] = createExportWrapper("php_strip_url_passwd");

var _asctime_r = Module["_asctime_r"] = createExportWrapper("asctime_r");

var _php_resolve_path = Module["_php_resolve_path"] = createExportWrapper("php_resolve_path");

var _strdup = Module["_strdup"] = createExportWrapper("strdup");

var _zend_disable_class = Module["_zend_disable_class"] = createExportWrapper("zend_disable_class");

var _php_module_shutdown_wrapper = Module["_php_module_shutdown_wrapper"] = createExportWrapper("php_module_shutdown_wrapper");

var _php_module_shutdown = Module["_php_module_shutdown"] = createExportWrapper("php_module_shutdown");

var _zend_ini_shutdown = Module["_zend_ini_shutdown"] = createExportWrapper("zend_ini_shutdown");

var _php_output_shutdown = Module["_php_output_shutdown"] = createExportWrapper("php_output_shutdown");

var _zend_interned_strings_dtor = Module["_zend_interned_strings_dtor"] = createExportWrapper("zend_interned_strings_dtor");

var _zend_observer_shutdown = Module["_zend_observer_shutdown"] = createExportWrapper("zend_observer_shutdown");

var _php_execute_script = Module["_php_execute_script"] = createExportWrapper("php_execute_script");

var _virtual_chdir_file = Module["_virtual_chdir_file"] = createExportWrapper("virtual_chdir_file");

var _zend_stream_init_filename = Module["_zend_stream_init_filename"] = createExportWrapper("zend_stream_init_filename");

var _zend_execute_scripts = Module["_zend_execute_scripts"] = createExportWrapper("zend_execute_scripts");

var _php_execute_simple_script = Module["_php_execute_simple_script"] = createExportWrapper("php_execute_simple_script");

var _php_handle_aborted_connection = Module["_php_handle_aborted_connection"] = createExportWrapper("php_handle_aborted_connection");

var _php_output_set_status = Module["_php_output_set_status"] = createExportWrapper("php_output_set_status");

var _php_handle_auth_data = Module["_php_handle_auth_data"] = createExportWrapper("php_handle_auth_data");

var _php_lint_script = Module["_php_lint_script"] = createExportWrapper("php_lint_script");

var _zend_ini_parse_uquantity_warn = Module["_zend_ini_parse_uquantity_warn"] = createExportWrapper("zend_ini_parse_uquantity_warn");

var _php_register_internal_extensions = Module["_php_register_internal_extensions"] = createExportWrapper("php_register_internal_extensions");

var _zend_ini_color_displayer_cb = Module["_zend_ini_color_displayer_cb"] = createExportWrapper("zend_ini_color_displayer_cb");

var _OnUpdateBaseDir = Module["_OnUpdateBaseDir"] = createExportWrapper("OnUpdateBaseDir");

var _ap_php_conv_10 = Module["_ap_php_conv_10"] = createExportWrapper("ap_php_conv_10");

var _ap_php_conv_p2 = Module["_ap_php_conv_p2"] = createExportWrapper("ap_php_conv_p2");

var _ap_php_vslprintf = Module["_ap_php_vslprintf"] = createExportWrapper("ap_php_vslprintf");

var _ap_php_vsnprintf = Module["_ap_php_vsnprintf"] = createExportWrapper("ap_php_vsnprintf");

var _ap_php_vasprintf = Module["_ap_php_vasprintf"] = createExportWrapper("ap_php_vasprintf");

var _ap_php_asprintf = Module["_ap_php_asprintf"] = createExportWrapper("ap_php_asprintf");

var _vasprintf = Module["_vasprintf"] = createExportWrapper("vasprintf");

var _zend_dtoa = Module["_zend_dtoa"] = createExportWrapper("zend_dtoa");

var _zend_freedtoa = Module["_zend_freedtoa"] = createExportWrapper("zend_freedtoa");

var _isascii = Module["_isascii"] = createExportWrapper("isascii");

var ___trunctfdf2 = Module["___trunctfdf2"] = createExportWrapper("__trunctfdf2");

var __smart_string_alloc_persistent = Module["__smart_string_alloc_persistent"] = createExportWrapper("_smart_string_alloc_persistent");

var __smart_string_alloc = Module["__smart_string_alloc"] = createExportWrapper("_smart_string_alloc");

var _strnlen = Module["_strnlen"] = createExportWrapper("strnlen");

var _php_check_specific_open_basedir = Module["_php_check_specific_open_basedir"] = createExportWrapper("php_check_specific_open_basedir");

var _php_fopen_primary_script = Module["_php_fopen_primary_script"] = createExportWrapper("php_fopen_primary_script");

var _zend_stream_open = Module["_zend_stream_open"] = createExportWrapper("zend_stream_open");

var _zend_get_executed_filename_ex = Module["_zend_get_executed_filename_ex"] = createExportWrapper("zend_get_executed_filename_ex");

var _php_fopen_with_path = Module["_php_fopen_with_path"] = createExportWrapper("php_fopen_with_path");

var _php_ini_builder_prepend = Module["_php_ini_builder_prepend"] = createExportWrapper("php_ini_builder_prepend");

var _php_ini_builder_unquoted = Module["_php_ini_builder_unquoted"] = createExportWrapper("php_ini_builder_unquoted");

var _php_ini_builder_quoted = Module["_php_ini_builder_quoted"] = createExportWrapper("php_ini_builder_quoted");

var _php_ini_builder_define = Module["_php_ini_builder_define"] = createExportWrapper("php_ini_builder_define");

var _config_zval_dtor = Module["_config_zval_dtor"] = createExportWrapper("config_zval_dtor");

var _free_estring = Module["_free_estring"] = createExportWrapper("free_estring");

var _strlcat = Module["_strlcat"] = createExportWrapper("strlcat");

var _alphasort = Module["_alphasort"] = createExportWrapper("alphasort");

var _scandir = Module["_scandir"] = createExportWrapper("scandir");

var _zend_load_extension = Module["_zend_load_extension"] = createExportWrapper("zend_load_extension");

var _zend_load_extension_handle = Module["_zend_load_extension_handle"] = createExportWrapper("zend_load_extension_handle");

var _php_parse_user_ini_file = Module["_php_parse_user_ini_file"] = createExportWrapper("php_parse_user_ini_file");

var _php_ini_activate_config = Module["_php_ini_activate_config"] = createExportWrapper("php_ini_activate_config");

var _php_ini_has_per_dir_config = Module["_php_ini_has_per_dir_config"] = createExportWrapper("php_ini_has_per_dir_config");

var _php_ini_activate_per_dir_config = Module["_php_ini_activate_per_dir_config"] = createExportWrapper("php_ini_activate_per_dir_config");

var _php_ini_has_per_host_config = Module["_php_ini_has_per_host_config"] = createExportWrapper("php_ini_has_per_host_config");

var _php_ini_activate_per_host_config = Module["_php_ini_activate_per_host_config"] = createExportWrapper("php_ini_activate_per_host_config");

var _cfg_get_double = Module["_cfg_get_double"] = createExportWrapper("cfg_get_double");

var _php_ini_get_configuration_hash = Module["_php_ini_get_configuration_hash"] = createExportWrapper("php_ini_get_configuration_hash");

var _sapi_startup = Module["_sapi_startup"] = createExportWrapper("sapi_startup");

var _sapi_shutdown = Module["_sapi_shutdown"] = createExportWrapper("sapi_shutdown");

var _sapi_get_default_content_type = Module["_sapi_get_default_content_type"] = createExportWrapper("sapi_get_default_content_type");

var _sapi_get_default_content_type_header = Module["_sapi_get_default_content_type_header"] = createExportWrapper("sapi_get_default_content_type_header");

var _sapi_apply_default_charset = Module["_sapi_apply_default_charset"] = createExportWrapper("sapi_apply_default_charset");

var _sapi_activate_headers_only = Module["_sapi_activate_headers_only"] = createExportWrapper("sapi_activate_headers_only");

var _destroy_uploaded_files_hash = Module["_destroy_uploaded_files_hash"] = createExportWrapper("destroy_uploaded_files_hash");

var _sapi_register_post_entry = Module["_sapi_register_post_entry"] = createExportWrapper("sapi_register_post_entry");

var _sapi_register_default_post_reader = Module["_sapi_register_default_post_reader"] = createExportWrapper("sapi_register_default_post_reader");

var _sapi_get_fd = Module["_sapi_get_fd"] = createExportWrapper("sapi_get_fd");

var _sapi_force_http_10 = Module["_sapi_force_http_10"] = createExportWrapper("sapi_force_http_10");

var _sapi_get_target_uid = Module["_sapi_get_target_uid"] = createExportWrapper("sapi_get_target_uid");

var _sapi_get_target_gid = Module["_sapi_get_target_gid"] = createExportWrapper("sapi_get_target_gid");

var _sapi_terminate_process = Module["_sapi_terminate_process"] = createExportWrapper("sapi_terminate_process");

var _sapi_add_request_header = Module["_sapi_add_request_header"] = createExportWrapper("sapi_add_request_header");

var _zend_multibyte_get_internal_encoding = Module["_zend_multibyte_get_internal_encoding"] = createExportWrapper("zend_multibyte_get_internal_encoding");

var _zend_multibyte_encoding_converter = Module["_zend_multibyte_encoding_converter"] = createExportWrapper("zend_multibyte_encoding_converter");

var _zend_multibyte_encoding_detector = Module["_zend_multibyte_encoding_detector"] = createExportWrapper("zend_multibyte_encoding_detector");

var _zend_hash_str_add_empty_element = Module["_zend_hash_str_add_empty_element"] = createExportWrapper("zend_hash_str_add_empty_element");

var _php_default_post_reader = Module["_php_default_post_reader"] = createExportWrapper("php_default_post_reader");

var _php_default_input_filter = Module["_php_default_input_filter"] = createExportWrapper("php_default_input_filter");

var _php_register_variable = Module["_php_register_variable"] = createExportWrapper("php_register_variable");

var _zend_hash_str_update_ind = Module["_zend_hash_str_update_ind"] = createExportWrapper("zend_hash_str_update_ind");

var _php_register_known_variable = Module["_php_register_known_variable"] = createExportWrapper("php_register_known_variable");

var _php_build_argv = Module["_php_build_argv"] = createExportWrapper("php_build_argv");

var _zend_activate_auto_globals = Module["_zend_activate_auto_globals"] = createExportWrapper("zend_activate_auto_globals");

var _php_remove_tick_function = Module["_php_remove_tick_function"] = createExportWrapper("php_remove_tick_function");

var _php_network_freeaddresses = Module["_php_network_freeaddresses"] = createExportWrapper("php_network_freeaddresses");

var _php_network_getaddresses = Module["_php_network_getaddresses"] = createExportWrapper("php_network_getaddresses");

var _socket = Module["_socket"] = createExportWrapper("socket");

var _gai_strerror = Module["_gai_strerror"] = createExportWrapper("gai_strerror");

var _freeaddrinfo = Module["_freeaddrinfo"] = createExportWrapper("freeaddrinfo");

var _php_network_connect_socket = Module["_php_network_connect_socket"] = createExportWrapper("php_network_connect_socket");

var _connect = Module["_connect"] = createExportWrapper("connect");

var _getsockopt = Module["_getsockopt"] = createExportWrapper("getsockopt");

var _php_network_bind_socket_to_local_addr = Module["_php_network_bind_socket_to_local_addr"] = createExportWrapper("php_network_bind_socket_to_local_addr");

var _setsockopt = Module["_setsockopt"] = createExportWrapper("setsockopt");

var _bind = Module["_bind"] = createExportWrapper("bind");

var _php_network_populate_name_from_sockaddr = Module["_php_network_populate_name_from_sockaddr"] = createExportWrapper("php_network_populate_name_from_sockaddr");

var _php_network_get_peer_name = Module["_php_network_get_peer_name"] = createExportWrapper("php_network_get_peer_name");

var _getpeername = Module["_getpeername"] = createExportWrapper("getpeername");

var _php_network_get_sock_name = Module["_php_network_get_sock_name"] = createExportWrapper("php_network_get_sock_name");

var _getsockname = Module["_getsockname"] = createExportWrapper("getsockname");

var _accept = Module["_accept"] = createExportWrapper("accept");

var _php_network_connect_socket_to_host = Module["_php_network_connect_socket_to_host"] = createExportWrapper("php_network_connect_socket_to_host");

var _php_any_addr = Module["_php_any_addr"] = createExportWrapper("php_any_addr");

var _php_sockaddr_size = Module["_php_sockaddr_size"] = createExportWrapper("php_sockaddr_size");

var _mkstemp = Module["_mkstemp"] = createExportWrapper("mkstemp");

var _php_open_temporary_fd = Module["_php_open_temporary_fd"] = createExportWrapper("php_open_temporary_fd");

var _php_open_temporary_file = Module["_php_open_temporary_file"] = createExportWrapper("php_open_temporary_file");

var _php_odbc_connstr_is_quoted = Module["_php_odbc_connstr_is_quoted"] = createExportWrapper("php_odbc_connstr_is_quoted");

var _php_odbc_connstr_should_quote = Module["_php_odbc_connstr_should_quote"] = createExportWrapper("php_odbc_connstr_should_quote");

var _php_odbc_connstr_estimate_quote_length = Module["_php_odbc_connstr_estimate_quote_length"] = createExportWrapper("php_odbc_connstr_estimate_quote_length");

var _php_odbc_connstr_quote = Module["_php_odbc_connstr_quote"] = createExportWrapper("php_odbc_connstr_quote");

var _fwrite = Module["_fwrite"] = createExportWrapper("fwrite");

var _zend_stack_init = Module["_zend_stack_init"] = createExportWrapper("zend_stack_init");

var _zend_stack_top = Module["_zend_stack_top"] = createExportWrapper("zend_stack_top");

var _php_output_handler_free = Module["_php_output_handler_free"] = createExportWrapper("php_output_handler_free");

var _zend_stack_del_top = Module["_zend_stack_del_top"] = createExportWrapper("zend_stack_del_top");

var _zend_stack_destroy = Module["_zend_stack_destroy"] = createExportWrapper("zend_stack_destroy");

var _zend_is_compiling = Module["_zend_is_compiling"] = createExportWrapper("zend_is_compiling");

var _zend_get_compiled_filename = Module["_zend_get_compiled_filename"] = createExportWrapper("zend_get_compiled_filename");

var _zend_get_compiled_lineno = Module["_zend_get_compiled_lineno"] = createExportWrapper("zend_get_compiled_lineno");

var _php_output_handler_dtor = Module["_php_output_handler_dtor"] = createExportWrapper("php_output_handler_dtor");

var _php_output_write_unbuffered = Module["_php_output_write_unbuffered"] = createExportWrapper("php_output_write_unbuffered");

var _zend_stack_count = Module["_zend_stack_count"] = createExportWrapper("zend_stack_count");

var _zend_stack_apply_with_argument = Module["_zend_stack_apply_with_argument"] = createExportWrapper("zend_stack_apply_with_argument");

var _php_output_flush = Module["_php_output_flush"] = createExportWrapper("php_output_flush");

var _zend_stack_push = Module["_zend_stack_push"] = createExportWrapper("zend_stack_push");

var _zend_fcall_info_argn = Module["_zend_fcall_info_argn"] = createExportWrapper("zend_fcall_info_argn");

var _php_output_clean = Module["_php_output_clean"] = createExportWrapper("php_output_clean");

var _php_output_clean_all = Module["_php_output_clean_all"] = createExportWrapper("php_output_clean_all");

var _php_output_get_length = Module["_php_output_get_length"] = createExportWrapper("php_output_get_length");

var _php_output_get_active_handler = Module["_php_output_get_active_handler"] = createExportWrapper("php_output_get_active_handler");

var _php_output_start_devnull = Module["_php_output_start_devnull"] = createExportWrapper("php_output_start_devnull");

var _php_output_handler_create_user = Module["_php_output_handler_create_user"] = createExportWrapper("php_output_handler_create_user");

var _php_output_handler_alias = Module["_php_output_handler_alias"] = createExportWrapper("php_output_handler_alias");

var _php_output_handler_set_context = Module["_php_output_handler_set_context"] = createExportWrapper("php_output_handler_set_context");

var _zend_stack_base = Module["_zend_stack_base"] = createExportWrapper("zend_stack_base");

var _php_output_handler_reverse_conflict_register = Module["_php_output_handler_reverse_conflict_register"] = createExportWrapper("php_output_handler_reverse_conflict_register");

var _syslog = Module["_syslog"] = createExportWrapper("syslog");

var _openlog = Module["_openlog"] = createExportWrapper("openlog");

var _closelog = Module["_closelog"] = createExportWrapper("closelog");

var _zend_vstrpprintf = Module["_zend_vstrpprintf"] = createExportWrapper("zend_vstrpprintf");

var _php_stream_get_url_stream_wrappers_hash_global = Module["_php_stream_get_url_stream_wrappers_hash_global"] = createExportWrapper("php_stream_get_url_stream_wrappers_hash_global");

var _php_stream_encloses = Module["_php_stream_encloses"] = createExportWrapper("php_stream_encloses");

var _php_stream_from_persistent_id = Module["_php_stream_from_persistent_id"] = createExportWrapper("php_stream_from_persistent_id");

var __php_stream_free_enclosed = Module["__php_stream_free_enclosed"] = createExportWrapper("_php_stream_free_enclosed");

var __php_stream_putc = Module["__php_stream_putc"] = createExportWrapper("_php_stream_putc");

var __php_stream_puts = Module["__php_stream_puts"] = createExportWrapper("_php_stream_puts");

var _fflush = Module["_fflush"] = createExportWrapper("fflush");

var __php_stream_mmap_range = Module["__php_stream_mmap_range"] = createExportWrapper("_php_stream_mmap_range");

var __php_stream_mmap_unmap_ex = Module["__php_stream_mmap_unmap_ex"] = createExportWrapper("_php_stream_mmap_unmap_ex");

var __php_stream_mmap_unmap = Module["__php_stream_mmap_unmap"] = createExportWrapper("_php_stream_mmap_unmap");

var __php_stream_copy_to_stream = Module["__php_stream_copy_to_stream"] = createExportWrapper("_php_stream_copy_to_stream");

var _php_get_stream_filters_hash_global = Module["_php_get_stream_filters_hash_global"] = createExportWrapper("php_get_stream_filters_hash_global");

var _php_register_url_stream_wrapper_volatile = Module["_php_register_url_stream_wrapper_volatile"] = createExportWrapper("php_register_url_stream_wrapper_volatile");

var _php_unregister_url_stream_wrapper_volatile = Module["_php_unregister_url_stream_wrapper_volatile"] = createExportWrapper("php_unregister_url_stream_wrapper_volatile");

var _zend_llist_count = Module["_zend_llist_count"] = createExportWrapper("zend_llist_count");

var __php_stream_make_seekable = Module["__php_stream_make_seekable"] = createExportWrapper("_php_stream_make_seekable");

var _qsort = Module["_qsort"] = createExportWrapper("qsort");

var _fopencookie = Module["_fopencookie"] = createExportWrapper("fopencookie");

var _fseek = Module["_fseek"] = createExportWrapper("fseek");

var __php_stream_mode_to_str = Module["__php_stream_mode_to_str"] = createExportWrapper("_php_stream_mode_to_str");

var __php_stream_memory_get_buffer = Module["__php_stream_memory_get_buffer"] = createExportWrapper("_php_stream_memory_get_buffer");

var __php_stream_fopen_temporary_file = Module["__php_stream_fopen_temporary_file"] = createExportWrapper("_php_stream_fopen_temporary_file");

var __php_stream_temp_open = Module["__php_stream_temp_open"] = createExportWrapper("_php_stream_temp_open");

var _php_stream_bucket_split = Module["_php_stream_bucket_split"] = createExportWrapper("php_stream_bucket_split");

var __emalloc_56 = Module["__emalloc_56"] = createExportWrapper("_emalloc_56");

var __php_stream_filter_prepend = Module["__php_stream_filter_prepend"] = createExportWrapper("_php_stream_filter_prepend");

var _php_stream_parse_fopen_modes = Module["_php_stream_parse_fopen_modes"] = createExportWrapper("php_stream_parse_fopen_modes");

var _ftell = Module["_ftell"] = createExportWrapper("ftell");

var _fread = Module["_fread"] = createExportWrapper("fread");

var _feof = Module["_feof"] = createExportWrapper("feof");

var _munmap = Module["_munmap"] = createExportWrapper("munmap");

var _setvbuf = Module["_setvbuf"] = createExportWrapper("setvbuf");

var _mmap = Module["_mmap"] = createExportWrapper("mmap");

var __php_stream_fopen = Module["__php_stream_fopen"] = createExportWrapper("_php_stream_fopen");

var __php_stream_fopen_with_path = Module["__php_stream_fopen_with_path"] = createExportWrapper("_php_stream_fopen_with_path");

var _fdatasync = Module["_fdatasync"] = createExportWrapper("fdatasync");

var _fsync = Module["_fsync"] = createExportWrapper("fsync");

var _rmdir = Module["_rmdir"] = createExportWrapper("rmdir");

var _rewinddir = Module["_rewinddir"] = createExportWrapper("rewinddir");

var _add_property_resource_ex = Module["_add_property_resource_ex"] = createExportWrapper("add_property_resource_ex");

var _php_stream_xport_connect = Module["_php_stream_xport_connect"] = createExportWrapper("php_stream_xport_connect");

var _php_stream_xport_bind = Module["_php_stream_xport_bind"] = createExportWrapper("php_stream_xport_bind");

var _php_stream_xport_listen = Module["_php_stream_xport_listen"] = createExportWrapper("php_stream_xport_listen");

var _send = Module["_send"] = createExportWrapper("send");

var _listen = Module["_listen"] = createExportWrapper("listen");

var _shutdown = Module["_shutdown"] = createExportWrapper("shutdown");

var _sendto = Module["_sendto"] = createExportWrapper("sendto");

var _recvfrom = Module["_recvfrom"] = createExportWrapper("recvfrom");

var __php_glob_stream_get_pattern = Module["__php_glob_stream_get_pattern"] = createExportWrapper("_php_glob_stream_get_pattern");

var _zend_lex_tstring = Module["_zend_lex_tstring"] = createExportWrapper("zend_lex_tstring");

var _zend_ast_create_zval = Module["_zend_ast_create_zval"] = createExportWrapper("zend_ast_create_zval");

var _zend_ast_list_add = Module["_zend_ast_list_add"] = createExportWrapper("zend_ast_list_add");

var _zend_ast_create_list_0 = Module["_zend_ast_create_list_0"] = createExportWrapper("zend_ast_create_list_0");

var _zend_ast_create_2 = Module["_zend_ast_create_2"] = createExportWrapper("zend_ast_create_2");

var _zend_ast_create_list_1 = Module["_zend_ast_create_list_1"] = createExportWrapper("zend_ast_create_list_1");

var _zend_get_scanned_file_offset = Module["_zend_get_scanned_file_offset"] = createExportWrapper("zend_get_scanned_file_offset");

var _zend_ast_create_zval_from_long = Module["_zend_ast_create_zval_from_long"] = createExportWrapper("zend_ast_create_zval_from_long");

var _zend_ast_create_1 = Module["_zend_ast_create_1"] = createExportWrapper("zend_ast_create_1");

var _zend_ast_create_4 = Module["_zend_ast_create_4"] = createExportWrapper("zend_ast_create_4");

var _zend_ast_create_3 = Module["_zend_ast_create_3"] = createExportWrapper("zend_ast_create_3");

var _zend_ast_create_decl = Module["_zend_ast_create_decl"] = createExportWrapper("zend_ast_create_decl");

var _zend_ast_create_zval_from_str = Module["_zend_ast_create_zval_from_str"] = createExportWrapper("zend_ast_create_zval_from_str");

var _zend_ast_create_5 = Module["_zend_ast_create_5"] = createExportWrapper("zend_ast_create_5");

var _zend_ast_create_0 = Module["_zend_ast_create_0"] = createExportWrapper("zend_ast_create_0");

var _zend_ast_create_list_2 = Module["_zend_ast_create_list_2"] = createExportWrapper("zend_ast_create_list_2");

var _zend_ast_create_zval_ex = Module["_zend_ast_create_zval_ex"] = createExportWrapper("zend_ast_create_zval_ex");

var _zend_ast_create_class_const_or_name = Module["_zend_ast_create_class_const_or_name"] = createExportWrapper("zend_ast_create_class_const_or_name");

var _zend_ptr_stack_init = Module["_zend_ptr_stack_init"] = createExportWrapper("zend_ptr_stack_init");

var _zend_ptr_stack_clean = Module["_zend_ptr_stack_clean"] = createExportWrapper("zend_ptr_stack_clean");

var _zend_ptr_stack_destroy = Module["_zend_ptr_stack_destroy"] = createExportWrapper("zend_ptr_stack_destroy");

var _zend_restore_compiled_filename = Module["_zend_restore_compiled_filename"] = createExportWrapper("zend_restore_compiled_filename");

var _zend_multibyte_set_filter = Module["_zend_multibyte_set_filter"] = createExportWrapper("zend_multibyte_set_filter");

var _zend_multibyte_check_lexer_compatibility = Module["_zend_multibyte_check_lexer_compatibility"] = createExportWrapper("zend_multibyte_check_lexer_compatibility");

var _zend_stream_fixup = Module["_zend_stream_fixup"] = createExportWrapper("zend_stream_fixup");

var _zend_multibyte_get_encoding_name = Module["_zend_multibyte_get_encoding_name"] = createExportWrapper("zend_multibyte_get_encoding_name");

var _zend_set_compiled_filename = Module["_zend_set_compiled_filename"] = createExportWrapper("zend_set_compiled_filename");

var _compile_file = Module["_compile_file"] = createExportWrapper("compile_file");

var _zend_message_dispatcher = Module["_zend_message_dispatcher"] = createExportWrapper("zend_message_dispatcher");

var _init_op_array = Module["_init_op_array"] = createExportWrapper("init_op_array");

var _pass_two = Module["_pass_two"] = createExportWrapper("pass_two");

var _zend_compile_string_to_ast = Module["_zend_compile_string_to_ast"] = createExportWrapper("zend_compile_string_to_ast");

var _compile_filename = Module["_compile_filename"] = createExportWrapper("compile_filename");

var _compile_string = Module["_compile_string"] = createExportWrapper("compile_string");

var _zend_highlight = Module["_zend_highlight"] = createExportWrapper("zend_highlight");

var _zend_multibyte_yyinput_again = Module["_zend_multibyte_yyinput_again"] = createExportWrapper("zend_multibyte_yyinput_again");

var _zend_stack_is_empty = Module["_zend_stack_is_empty"] = createExportWrapper("zend_stack_is_empty");

var _zend_ptr_stack_reverse_apply = Module["_zend_ptr_stack_reverse_apply"] = createExportWrapper("zend_ptr_stack_reverse_apply");

var _zend_exception_save = Module["_zend_exception_save"] = createExportWrapper("zend_exception_save");

var _zend_exception_restore = Module["_zend_exception_restore"] = createExportWrapper("zend_exception_restore");

var _zend_bin_strtod = Module["_zend_bin_strtod"] = createExportWrapper("zend_bin_strtod");

var _zend_oct_strtod = Module["_zend_oct_strtod"] = createExportWrapper("zend_oct_strtod");

var _zend_hex_strtod = Module["_zend_hex_strtod"] = createExportWrapper("zend_hex_strtod");

var _zend_ast_create_zval_with_lineno = Module["_zend_ast_create_zval_with_lineno"] = createExportWrapper("zend_ast_create_zval_with_lineno");

var _zend_get_configuration_directive = Module["_zend_get_configuration_directive"] = createExportWrapper("zend_get_configuration_directive");

var _zend_get_constant = Module["_zend_get_constant"] = createExportWrapper("zend_get_constant");

var _zend_mm_gc = Module["_zend_mm_gc"] = createExportWrapper("zend_mm_gc");

var _zend_mm_shutdown = Module["_zend_mm_shutdown"] = createExportWrapper("zend_mm_shutdown");

var __zend_mm_alloc = Module["__zend_mm_alloc"] = createExportWrapper("_zend_mm_alloc");

var __zend_mm_free = Module["__zend_mm_free"] = createExportWrapper("_zend_mm_free");

var __zend_mm_realloc = Module["__zend_mm_realloc"] = createExportWrapper("_zend_mm_realloc");

var __zend_mm_realloc2 = Module["__zend_mm_realloc2"] = createExportWrapper("_zend_mm_realloc2");

var __zend_mm_block_size = Module["__zend_mm_block_size"] = createExportWrapper("_zend_mm_block_size");

var _is_zend_ptr = Module["_is_zend_ptr"] = createExportWrapper("is_zend_ptr");

var __emalloc_192 = Module["__emalloc_192"] = createExportWrapper("_emalloc_192");

var __emalloc_224 = Module["__emalloc_224"] = createExportWrapper("_emalloc_224");

var __emalloc_320 = Module["__emalloc_320"] = createExportWrapper("_emalloc_320");

var __emalloc_384 = Module["__emalloc_384"] = createExportWrapper("_emalloc_384");

var __emalloc_448 = Module["__emalloc_448"] = createExportWrapper("_emalloc_448");

var __emalloc_512 = Module["__emalloc_512"] = createExportWrapper("_emalloc_512");

var __emalloc_640 = Module["__emalloc_640"] = createExportWrapper("_emalloc_640");

var __emalloc_768 = Module["__emalloc_768"] = createExportWrapper("_emalloc_768");

var __emalloc_896 = Module["__emalloc_896"] = createExportWrapper("_emalloc_896");

var __emalloc_1280 = Module["__emalloc_1280"] = createExportWrapper("_emalloc_1280");

var __emalloc_1536 = Module["__emalloc_1536"] = createExportWrapper("_emalloc_1536");

var __emalloc_1792 = Module["__emalloc_1792"] = createExportWrapper("_emalloc_1792");

var __emalloc_2048 = Module["__emalloc_2048"] = createExportWrapper("_emalloc_2048");

var __emalloc_2560 = Module["__emalloc_2560"] = createExportWrapper("_emalloc_2560");

var __emalloc_3072 = Module["__emalloc_3072"] = createExportWrapper("_emalloc_3072");

var __emalloc_huge = Module["__emalloc_huge"] = createExportWrapper("_emalloc_huge");

var __efree_8 = Module["__efree_8"] = createExportWrapper("_efree_8");

var __efree_16 = Module["__efree_16"] = createExportWrapper("_efree_16");

var __efree_24 = Module["__efree_24"] = createExportWrapper("_efree_24");

var __efree_40 = Module["__efree_40"] = createExportWrapper("_efree_40");

var __efree_56 = Module["__efree_56"] = createExportWrapper("_efree_56");

var __efree_64 = Module["__efree_64"] = createExportWrapper("_efree_64");

var __efree_80 = Module["__efree_80"] = createExportWrapper("_efree_80");

var __efree_96 = Module["__efree_96"] = createExportWrapper("_efree_96");

var __efree_112 = Module["__efree_112"] = createExportWrapper("_efree_112");

var __efree_128 = Module["__efree_128"] = createExportWrapper("_efree_128");

var __efree_160 = Module["__efree_160"] = createExportWrapper("_efree_160");

var __efree_192 = Module["__efree_192"] = createExportWrapper("_efree_192");

var __efree_224 = Module["__efree_224"] = createExportWrapper("_efree_224");

var __efree_256 = Module["__efree_256"] = createExportWrapper("_efree_256");

var __efree_320 = Module["__efree_320"] = createExportWrapper("_efree_320");

var __efree_384 = Module["__efree_384"] = createExportWrapper("_efree_384");

var __efree_448 = Module["__efree_448"] = createExportWrapper("_efree_448");

var __efree_512 = Module["__efree_512"] = createExportWrapper("_efree_512");

var __efree_640 = Module["__efree_640"] = createExportWrapper("_efree_640");

var __efree_768 = Module["__efree_768"] = createExportWrapper("_efree_768");

var __efree_896 = Module["__efree_896"] = createExportWrapper("_efree_896");

var __efree_1024 = Module["__efree_1024"] = createExportWrapper("_efree_1024");

var __efree_1280 = Module["__efree_1280"] = createExportWrapper("_efree_1280");

var __efree_1536 = Module["__efree_1536"] = createExportWrapper("_efree_1536");

var __efree_1792 = Module["__efree_1792"] = createExportWrapper("_efree_1792");

var __efree_2048 = Module["__efree_2048"] = createExportWrapper("_efree_2048");

var __efree_2560 = Module["__efree_2560"] = createExportWrapper("_efree_2560");

var __efree_3072 = Module["__efree_3072"] = createExportWrapper("_efree_3072");

var __efree_huge = Module["__efree_huge"] = createExportWrapper("_efree_huge");

var __erealloc2 = Module["__erealloc2"] = createExportWrapper("_erealloc2");

var __zend_mem_block_size = Module["__zend_mem_block_size"] = createExportWrapper("_zend_mem_block_size");

var _start_memory_manager = Module["_start_memory_manager"] = createExportWrapper("start_memory_manager");

var _zend_mm_set_heap = Module["_zend_mm_set_heap"] = createExportWrapper("zend_mm_set_heap");

var _zend_mm_get_heap = Module["_zend_mm_get_heap"] = createExportWrapper("zend_mm_get_heap");

var _zend_mm_is_custom_heap = Module["_zend_mm_is_custom_heap"] = createExportWrapper("zend_mm_is_custom_heap");

var _zend_mm_set_custom_handlers = Module["_zend_mm_set_custom_handlers"] = createExportWrapper("zend_mm_set_custom_handlers");

var _zend_mm_get_custom_handlers = Module["_zend_mm_get_custom_handlers"] = createExportWrapper("zend_mm_get_custom_handlers");

var _zend_mm_get_storage = Module["_zend_mm_get_storage"] = createExportWrapper("zend_mm_get_storage");

var _zend_mm_startup = Module["_zend_mm_startup"] = createExportWrapper("zend_mm_startup");

var _zend_mm_startup_ex = Module["_zend_mm_startup_ex"] = createExportWrapper("zend_mm_startup_ex");

var _madvise = Module["_madvise"] = createExportWrapper("madvise");

var _zend_init_rsrc_list = Module["_zend_init_rsrc_list"] = createExportWrapper("zend_init_rsrc_list");

var _zend_create_member_string = Module["_zend_create_member_string"] = createExportWrapper("zend_create_member_string");

var _zend_hash_str_find_ptr_lc = Module["_zend_hash_str_find_ptr_lc"] = createExportWrapper("zend_hash_str_find_ptr_lc");

var _zend_hash_find_ptr_lc = Module["_zend_hash_find_ptr_lc"] = createExportWrapper("zend_hash_find_ptr_lc");

var _function_add_ref = Module["_function_add_ref"] = createExportWrapper("function_add_ref");

var _do_bind_function = Module["_do_bind_function"] = createExportWrapper("do_bind_function");

var __zend_observer_function_declared_notify = Module["__zend_observer_function_declared_notify"] = createExportWrapper("_zend_observer_function_declared_notify");

var _zend_bind_class_in_slot = Module["_zend_bind_class_in_slot"] = createExportWrapper("zend_bind_class_in_slot");

var _zend_hash_set_bucket_key = Module["_zend_hash_set_bucket_key"] = createExportWrapper("zend_hash_set_bucket_key");

var _zend_get_object_type_case = Module["_zend_get_object_type_case"] = createExportWrapper("zend_get_object_type_case");

var _zend_do_link_class = Module["_zend_do_link_class"] = createExportWrapper("zend_do_link_class");

var __zend_observer_class_linked_notify = Module["__zend_observer_class_linked_notify"] = createExportWrapper("_zend_observer_class_linked_notify");

var _do_bind_class = Module["_do_bind_class"] = createExportWrapper("do_bind_class");

var _zend_is_auto_global_str = Module["_zend_is_auto_global_str"] = createExportWrapper("zend_is_auto_global_str");

var _zend_initialize_class_data = Module["_zend_initialize_class_data"] = createExportWrapper("zend_initialize_class_data");

var _zend_function_dtor = Module["_zend_function_dtor"] = createExportWrapper("zend_function_dtor");

var _zend_get_compiled_variable_name = Module["_zend_get_compiled_variable_name"] = createExportWrapper("zend_get_compiled_variable_name");

var _zend_is_smart_branch = Module["_zend_is_smart_branch"] = createExportWrapper("zend_is_smart_branch");

var _zend_get_call_op = Module["_zend_get_call_op"] = createExportWrapper("zend_get_call_op");

var _execute_ex = Module["_execute_ex"] = createExportWrapper("execute_ex");

var _zend_vm_set_opcode_handler = Module["_zend_vm_set_opcode_handler"] = createExportWrapper("zend_vm_set_opcode_handler");

var _zend_multibyte_fetch_encoding = Module["_zend_multibyte_fetch_encoding"] = createExportWrapper("zend_multibyte_fetch_encoding");

var _zend_is_op_long_compatible = Module["_zend_is_op_long_compatible"] = createExportWrapper("zend_is_op_long_compatible");

var _zend_binary_op_produces_error = Module["_zend_binary_op_produces_error"] = createExportWrapper("zend_binary_op_produces_error");

var _zend_unary_op_produces_error = Module["_zend_unary_op_produces_error"] = createExportWrapper("zend_unary_op_produces_error");

var _zend_ast_copy = Module["_zend_ast_copy"] = createExportWrapper("zend_ast_copy");

var _zend_ast_apply = Module["_zend_ast_apply"] = createExportWrapper("zend_ast_apply");

var _zend_check_magic_method_implementation = Module["_zend_check_magic_method_implementation"] = createExportWrapper("zend_check_magic_method_implementation");

var _zend_alloc_ce_cache = Module["_zend_alloc_ce_cache"] = createExportWrapper("zend_alloc_ce_cache");

var _zend_map_ptr_new = Module["_zend_map_ptr_new"] = createExportWrapper("zend_map_ptr_new");

var _zend_try_early_bind = Module["_zend_try_early_bind"] = createExportWrapper("zend_try_early_bind");

var _zend_ast_create_constant = Module["_zend_ast_create_constant"] = createExportWrapper("zend_ast_create_constant");

var __zend_get_special_const = Module["__zend_get_special_const"] = createExportWrapper("_zend_get_special_const");

var _zend_add_magic_method = Module["_zend_add_magic_method"] = createExportWrapper("zend_add_magic_method");

var _zend_internal_attribute_get = Module["_zend_internal_attribute_get"] = createExportWrapper("zend_internal_attribute_get");

var _zend_get_type_by_const = Module["_zend_get_type_by_const"] = createExportWrapper("zend_get_type_by_const");

var _zend_type_release = Module["_zend_type_release"] = createExportWrapper("zend_type_release");

var _zend_ast_create_znode = Module["_zend_ast_create_znode"] = createExportWrapper("zend_ast_create_znode");

var _zend_check_protected = Module["_zend_check_protected"] = createExportWrapper("zend_check_protected");

var _concat_function = Module["_concat_function"] = createExportWrapper("concat_function");

var _get_binary_op = Module["_get_binary_op"] = createExportWrapper("get_binary_op");

var _get_unary_op = Module["_get_unary_op"] = createExportWrapper("get_unary_op");

var _zval_internal_ptr_dtor = Module["_zval_internal_ptr_dtor"] = createExportWrapper("zval_internal_ptr_dtor");

var _zend_register_null_constant = Module["_zend_register_null_constant"] = createExportWrapper("zend_register_null_constant");

var _zend_register_constant = Module["_zend_register_constant"] = createExportWrapper("zend_register_constant");

var _zend_verify_const_access = Module["_zend_verify_const_access"] = createExportWrapper("zend_verify_const_access");

var _zend_get_class_constant_ex = Module["_zend_get_class_constant_ex"] = createExportWrapper("zend_get_class_constant_ex");

var _zend_init_fpu = Module["_zend_init_fpu"] = createExportWrapper("zend_init_fpu");

var _zend_vm_stack_init = Module["_zend_vm_stack_init"] = createExportWrapper("zend_vm_stack_init");

var _zend_objects_store_init = Module["_zend_objects_store_init"] = createExportWrapper("zend_objects_store_init");

var _zend_hash_reverse_apply = Module["_zend_hash_reverse_apply"] = createExportWrapper("zend_hash_reverse_apply");

var _zend_objects_store_call_destructors = Module["_zend_objects_store_call_destructors"] = createExportWrapper("zend_objects_store_call_destructors");

var _zend_shutdown_executor_values = Module["_zend_shutdown_executor_values"] = createExportWrapper("zend_shutdown_executor_values");

var _zend_hash_graceful_reverse_destroy = Module["_zend_hash_graceful_reverse_destroy"] = createExportWrapper("zend_hash_graceful_reverse_destroy");

var _zend_hash_discard = Module["_zend_hash_discard"] = createExportWrapper("zend_hash_discard");

var _zend_cleanup_internal_class_data = Module["_zend_cleanup_internal_class_data"] = createExportWrapper("zend_cleanup_internal_class_data");

var _zend_stack_clean = Module["_zend_stack_clean"] = createExportWrapper("zend_stack_clean");

var _zend_cleanup_mutable_class_data = Module["_zend_cleanup_mutable_class_data"] = createExportWrapper("zend_cleanup_mutable_class_data");

var _zend_objects_store_free_object_storage = Module["_zend_objects_store_free_object_storage"] = createExportWrapper("zend_objects_store_free_object_storage");

var _zend_vm_stack_destroy = Module["_zend_vm_stack_destroy"] = createExportWrapper("zend_vm_stack_destroy");

var _destroy_zend_class = Module["_destroy_zend_class"] = createExportWrapper("destroy_zend_class");

var _zend_objects_store_destroy = Module["_zend_objects_store_destroy"] = createExportWrapper("zend_objects_store_destroy");

var _zend_shutdown_fpu = Module["_zend_shutdown_fpu"] = createExportWrapper("zend_shutdown_fpu");

var _get_function_or_method_name = Module["_get_function_or_method_name"] = createExportWrapper("get_function_or_method_name");

var _get_function_arg_name = Module["_get_function_arg_name"] = createExportWrapper("get_function_arg_name");

var _zend_ast_evaluate = Module["_zend_ast_evaluate"] = createExportWrapper("zend_ast_evaluate");

var _zval_update_constant = Module["_zval_update_constant"] = createExportWrapper("zval_update_constant");

var _zend_get_callable_name_ex = Module["_zend_get_callable_name_ex"] = createExportWrapper("zend_get_callable_name_ex");

var _zend_deprecated_function = Module["_zend_deprecated_function"] = createExportWrapper("zend_deprecated_function");

var _zend_handle_undef_args = Module["_zend_handle_undef_args"] = createExportWrapper("zend_handle_undef_args");

var _zend_init_func_execute_data = Module["_zend_init_func_execute_data"] = createExportWrapper("zend_init_func_execute_data");

var _zend_observer_fcall_begin = Module["_zend_observer_fcall_begin"] = createExportWrapper("zend_observer_fcall_begin");

var _zend_observer_fcall_end = Module["_zend_observer_fcall_end"] = createExportWrapper("zend_observer_fcall_end");

var _zend_timeout = Module["_zend_timeout"] = createExportWrapper("zend_timeout");

var _zend_hash_index_add_empty_element = Module["_zend_hash_index_add_empty_element"] = createExportWrapper("zend_hash_index_add_empty_element");

var _zend_eval_stringl = Module["_zend_eval_stringl"] = createExportWrapper("zend_eval_stringl");

var _zend_destroy_static_vars = Module["_zend_destroy_static_vars"] = createExportWrapper("zend_destroy_static_vars");

var _zend_eval_stringl_ex = Module["_zend_eval_stringl_ex"] = createExportWrapper("zend_eval_stringl_ex");

var _zend_eval_string_ex = Module["_zend_eval_string_ex"] = createExportWrapper("zend_eval_string_ex");

var _setitimer = Module["_setitimer"] = createExportWrapper("setitimer");

var _zend_signal = Module["_zend_signal"] = createExportWrapper("zend_signal");

var _zend_fetch_class_with_scope = Module["_zend_fetch_class_with_scope"] = createExportWrapper("zend_fetch_class_with_scope");

var _zend_hash_del_ind = Module["_zend_hash_del_ind"] = createExportWrapper("zend_hash_del_ind");

var _zend_attach_symbol_table = Module["_zend_attach_symbol_table"] = createExportWrapper("zend_attach_symbol_table");

var _zend_detach_symbol_table = Module["_zend_detach_symbol_table"] = createExportWrapper("zend_detach_symbol_table");

var _zend_set_local_var = Module["_zend_set_local_var"] = createExportWrapper("zend_set_local_var");

var _zend_hash_func = Module["_zend_hash_func"] = createExportWrapper("zend_hash_func");

var _zend_html_putc = Module["_zend_html_putc"] = createExportWrapper("zend_html_putc");

var _zend_llist_prepend_element = Module["_zend_llist_prepend_element"] = createExportWrapper("zend_llist_prepend_element");

var _zend_llist_remove_tail = Module["_zend_llist_remove_tail"] = createExportWrapper("zend_llist_remove_tail");

var _zend_llist_copy = Module["_zend_llist_copy"] = createExportWrapper("zend_llist_copy");

var _zend_llist_apply_with_del = Module["_zend_llist_apply_with_del"] = createExportWrapper("zend_llist_apply_with_del");

var _zend_llist_sort = Module["_zend_llist_sort"] = createExportWrapper("zend_llist_sort");

var _zend_llist_apply_with_arguments = Module["_zend_llist_apply_with_arguments"] = createExportWrapper("zend_llist_apply_with_arguments");

var _zend_llist_get_last_ex = Module["_zend_llist_get_last_ex"] = createExportWrapper("zend_llist_get_last_ex");

var _zend_llist_get_prev_ex = Module["_zend_llist_get_prev_ex"] = createExportWrapper("zend_llist_get_prev_ex");

var _zend_get_opcode_name = Module["_zend_get_opcode_name"] = createExportWrapper("zend_get_opcode_name");

var _zend_get_opcode_flags = Module["_zend_get_opcode_flags"] = createExportWrapper("zend_get_opcode_flags");

var _zend_get_opcode_id = Module["_zend_get_opcode_id"] = createExportWrapper("zend_get_opcode_id");

var _destroy_zend_function = Module["_destroy_zend_function"] = createExportWrapper("destroy_zend_function");

var _zend_recalc_live_ranges = Module["_zend_recalc_live_ranges"] = createExportWrapper("zend_recalc_live_ranges");

var _bitwise_not_function = Module["_bitwise_not_function"] = createExportWrapper("bitwise_not_function");

var _boolean_not_function = Module["_boolean_not_function"] = createExportWrapper("boolean_not_function");

var _sub_function = Module["_sub_function"] = createExportWrapper("sub_function");

var _mul_function = Module["_mul_function"] = createExportWrapper("mul_function");

var _div_function = Module["_div_function"] = createExportWrapper("div_function");

var _mod_function = Module["_mod_function"] = createExportWrapper("mod_function");

var _shift_left_function = Module["_shift_left_function"] = createExportWrapper("shift_left_function");

var _shift_right_function = Module["_shift_right_function"] = createExportWrapper("shift_right_function");

var _is_identical_function = Module["_is_identical_function"] = createExportWrapper("is_identical_function");

var _is_not_identical_function = Module["_is_not_identical_function"] = createExportWrapper("is_not_identical_function");

var _is_equal_function = Module["_is_equal_function"] = createExportWrapper("is_equal_function");

var _is_not_equal_function = Module["_is_not_equal_function"] = createExportWrapper("is_not_equal_function");

var _compare_function = Module["_compare_function"] = createExportWrapper("compare_function");

var _bitwise_or_function = Module["_bitwise_or_function"] = createExportWrapper("bitwise_or_function");

var _bitwise_and_function = Module["_bitwise_and_function"] = createExportWrapper("bitwise_and_function");

var _bitwise_xor_function = Module["_bitwise_xor_function"] = createExportWrapper("bitwise_xor_function");

var _boolean_xor_function = Module["_boolean_xor_function"] = createExportWrapper("boolean_xor_function");

var _zend_atol = Module["_zend_atol"] = createExportWrapper("zend_atol");

var _zend_atoi = Module["_zend_atoi"] = createExportWrapper("zend_atoi");

var _zend_double_to_str = Module["_zend_double_to_str"] = createExportWrapper("zend_double_to_str");

var _zend_std_build_object_properties_array = Module["_zend_std_build_object_properties_array"] = createExportWrapper("zend_std_build_object_properties_array");

var _zend_symtable_to_proptable = Module["_zend_symtable_to_proptable"] = createExportWrapper("zend_symtable_to_proptable");

var _zend_error_unchecked = Module["_zend_error_unchecked"] = createExportWrapper("zend_error_unchecked");

var _zend_incompatible_string_to_long_error = Module["_zend_incompatible_string_to_long_error"] = createExportWrapper("zend_incompatible_string_to_long_error");

var _string_compare_function_ex = Module["_string_compare_function_ex"] = createExportWrapper("string_compare_function_ex");

var _zend_class_implements_interface = Module["_zend_class_implements_interface"] = createExportWrapper("zend_class_implements_interface");

var _increment_function = Module["_increment_function"] = createExportWrapper("increment_function");

var _decrement_function = Module["_decrement_function"] = createExportWrapper("decrement_function");

var ___ctype_get_mb_cur_max = Module["___ctype_get_mb_cur_max"] = createExportWrapper("__ctype_get_mb_cur_max");

var _zend_str_toupper_copy = Module["_zend_str_toupper_copy"] = createExportWrapper("zend_str_toupper_copy");

var _zend_str_toupper_dup = Module["_zend_str_toupper_dup"] = createExportWrapper("zend_str_toupper_dup");

var _zend_str_toupper_dup_ex = Module["_zend_str_toupper_dup_ex"] = createExportWrapper("zend_str_toupper_dup_ex");

var _zend_binary_zval_strncmp = Module["_zend_binary_zval_strncmp"] = createExportWrapper("zend_binary_zval_strncmp");

var _zend_u64_to_str = Module["_zend_u64_to_str"] = createExportWrapper("zend_u64_to_str");

var _zend_ptr_stack_init_ex = Module["_zend_ptr_stack_init_ex"] = createExportWrapper("zend_ptr_stack_init_ex");

var _zend_ptr_stack_n_push = Module["_zend_ptr_stack_n_push"] = createExportWrapper("zend_ptr_stack_n_push");

var _zend_ptr_stack_n_pop = Module["_zend_ptr_stack_n_pop"] = createExportWrapper("zend_ptr_stack_n_pop");

var _zend_ptr_stack_apply = Module["_zend_ptr_stack_apply"] = createExportWrapper("zend_ptr_stack_apply");

var _zend_ptr_stack_num_elements = Module["_zend_ptr_stack_num_elements"] = createExportWrapper("zend_ptr_stack_num_elements");

var _zend_stack_int_top = Module["_zend_stack_int_top"] = createExportWrapper("zend_stack_int_top");

var _zend_stack_apply = Module["_zend_stack_apply"] = createExportWrapper("zend_stack_apply");

var _zend_list_free = Module["_zend_list_free"] = createExportWrapper("zend_list_free");

var _zend_ast_ref_destroy = Module["_zend_ast_ref_destroy"] = createExportWrapper("zend_ast_ref_destroy");

var _zend_spprintf_unchecked = Module["_zend_spprintf_unchecked"] = createExportWrapper("zend_spprintf_unchecked");

var _zend_strpprintf_unchecked = Module["_zend_strpprintf_unchecked"] = createExportWrapper("zend_strpprintf_unchecked");

var _zend_make_printable_zval = Module["_zend_make_printable_zval"] = createExportWrapper("zend_make_printable_zval");

var _zend_print_zval = Module["_zend_print_zval"] = createExportWrapper("zend_print_zval");

var _zend_print_flat_zval_r = Module["_zend_print_flat_zval_r"] = createExportWrapper("zend_print_flat_zval_r");

var _virtual_cwd_startup = Module["_virtual_cwd_startup"] = createExportWrapper("virtual_cwd_startup");

var _zend_startup_strtod = Module["_zend_startup_strtod"] = createExportWrapper("zend_startup_strtod");

var _zend_gc_collect_cycles = Module["_zend_gc_collect_cycles"] = createExportWrapper("zend_gc_collect_cycles");

var _zend_interned_strings_init = Module["_zend_interned_strings_init"] = createExportWrapper("zend_interned_strings_init");

var _zend_ini_startup = Module["_zend_ini_startup"] = createExportWrapper("zend_ini_startup");

var _zend_destroy_modules = Module["_zend_destroy_modules"] = createExportWrapper("zend_destroy_modules");

var _virtual_cwd_shutdown = Module["_virtual_cwd_shutdown"] = createExportWrapper("virtual_cwd_shutdown");

var _zend_shutdown_strtod = Module["_zend_shutdown_strtod"] = createExportWrapper("zend_shutdown_strtod");

var _zend_output_debug_string = Module["_zend_output_debug_string"] = createExportWrapper("zend_output_debug_string");

var _gc_protect = Module["_gc_protect"] = createExportWrapper("gc_protect");

var _zend_get_page_size = Module["_zend_get_page_size"] = createExportWrapper("zend_get_page_size");

var _zend_append_version_info = Module["_zend_append_version_info"] = createExportWrapper("zend_append_version_info");

var _strncat = Module["_strncat"] = createExportWrapper("strncat");

var _zend_init_internal_run_time_cache = Module["_zend_init_internal_run_time_cache"] = createExportWrapper("zend_init_internal_run_time_cache");

var _zend_observer_activate = Module["_zend_observer_activate"] = createExportWrapper("zend_observer_activate");

var _zend_ini_deactivate = Module["_zend_ini_deactivate"] = createExportWrapper("zend_ini_deactivate");

var _zend_map_ptr_reset = Module["_zend_map_ptr_reset"] = createExportWrapper("zend_map_ptr_reset");

var _zend_error_zstr_at = Module["_zend_error_zstr_at"] = createExportWrapper("zend_error_zstr_at");

var __zend_observer_error_notify = Module["__zend_observer_error_notify"] = createExportWrapper("_zend_observer_error_notify");

var _zend_error_at = Module["_zend_error_at"] = createExportWrapper("zend_error_at");

var _zend_error_at_noreturn = Module["_zend_error_at_noreturn"] = createExportWrapper("zend_error_at_noreturn");

var _zend_strerror_noreturn = Module["_zend_strerror_noreturn"] = createExportWrapper("zend_strerror_noreturn");

var _strerror_r = Module["_strerror_r"] = createExportWrapper("strerror_r");

var _zend_begin_record_errors = Module["_zend_begin_record_errors"] = createExportWrapper("zend_begin_record_errors");

var _zend_emit_recorded_errors = Module["_zend_emit_recorded_errors"] = createExportWrapper("zend_emit_recorded_errors");

var _zend_free_recorded_errors = Module["_zend_free_recorded_errors"] = createExportWrapper("zend_free_recorded_errors");

var _zend_user_exception_handler = Module["_zend_user_exception_handler"] = createExportWrapper("zend_user_exception_handler");

var _zend_is_unwind_exit = Module["_zend_is_unwind_exit"] = createExportWrapper("zend_is_unwind_exit");

var _zend_map_ptr_extend = Module["_zend_map_ptr_extend"] = createExportWrapper("zend_map_ptr_extend");

var _gc_enable = Module["_gc_enable"] = createExportWrapper("gc_enable");

var _gc_enabled = Module["_gc_enabled"] = createExportWrapper("gc_enabled");

var _zend_multibyte_set_script_encoding_by_string = Module["_zend_multibyte_set_script_encoding_by_string"] = createExportWrapper("zend_multibyte_set_script_encoding_by_string");

var _zend_get_parameters_array_ex = Module["_zend_get_parameters_array_ex"] = createExportWrapper("zend_get_parameters_array_ex");

var _zend_copy_parameters_array = Module["_zend_copy_parameters_array"] = createExportWrapper("zend_copy_parameters_array");

var _zend_wrong_property_read = Module["_zend_wrong_property_read"] = createExportWrapper("zend_wrong_property_read");

var _zend_wrong_callback_error = Module["_zend_wrong_callback_error"] = createExportWrapper("zend_wrong_callback_error");

var _zend_wrong_callback_or_null_error = Module["_zend_wrong_callback_or_null_error"] = createExportWrapper("zend_wrong_callback_or_null_error");

var _zend_wrong_parameter_class_error = Module["_zend_wrong_parameter_class_error"] = createExportWrapper("zend_wrong_parameter_class_error");

var _zend_wrong_parameter_class_or_null_error = Module["_zend_wrong_parameter_class_or_null_error"] = createExportWrapper("zend_wrong_parameter_class_or_null_error");

var _zend_wrong_parameter_class_or_string_error = Module["_zend_wrong_parameter_class_or_string_error"] = createExportWrapper("zend_wrong_parameter_class_or_string_error");

var _zend_wrong_parameter_class_or_string_or_null_error = Module["_zend_wrong_parameter_class_or_string_or_null_error"] = createExportWrapper("zend_wrong_parameter_class_or_string_or_null_error");

var _zend_wrong_parameter_class_or_long_error = Module["_zend_wrong_parameter_class_or_long_error"] = createExportWrapper("zend_wrong_parameter_class_or_long_error");

var _zend_wrong_parameter_class_or_long_or_null_error = Module["_zend_wrong_parameter_class_or_long_or_null_error"] = createExportWrapper("zend_wrong_parameter_class_or_long_or_null_error");

var _zend_wrong_parameter_type_error = Module["_zend_wrong_parameter_type_error"] = createExportWrapper("zend_wrong_parameter_type_error");

var _zend_unexpected_extra_named_error = Module["_zend_unexpected_extra_named_error"] = createExportWrapper("zend_unexpected_extra_named_error");

var _zend_parse_arg_bool_weak = Module["_zend_parse_arg_bool_weak"] = createExportWrapper("zend_parse_arg_bool_weak");

var _zend_parse_arg_long_weak = Module["_zend_parse_arg_long_weak"] = createExportWrapper("zend_parse_arg_long_weak");

var _zend_parse_arg_double_weak = Module["_zend_parse_arg_double_weak"] = createExportWrapper("zend_parse_arg_double_weak");

var _zend_parse_arg_str_weak = Module["_zend_parse_arg_str_weak"] = createExportWrapper("zend_parse_arg_str_weak");

var _zend_parse_parameter = Module["_zend_parse_parameter"] = createExportWrapper("zend_parse_parameter");

var _zend_parse_method_parameters_ex = Module["_zend_parse_method_parameters_ex"] = createExportWrapper("zend_parse_method_parameters_ex");

var _zend_merge_properties = Module["_zend_merge_properties"] = createExportWrapper("zend_merge_properties");

var _object_properties_init_ex = Module["_object_properties_init_ex"] = createExportWrapper("object_properties_init_ex");

var _add_assoc_resource_ex = Module["_add_assoc_resource_ex"] = createExportWrapper("add_assoc_resource_ex");

var _add_assoc_array_ex = Module["_add_assoc_array_ex"] = createExportWrapper("add_assoc_array_ex");

var _add_assoc_object_ex = Module["_add_assoc_object_ex"] = createExportWrapper("add_assoc_object_ex");

var _add_assoc_reference_ex = Module["_add_assoc_reference_ex"] = createExportWrapper("add_assoc_reference_ex");

var _add_index_null = Module["_add_index_null"] = createExportWrapper("add_index_null");

var _add_index_resource = Module["_add_index_resource"] = createExportWrapper("add_index_resource");

var _add_index_array = Module["_add_index_array"] = createExportWrapper("add_index_array");

var _add_index_object = Module["_add_index_object"] = createExportWrapper("add_index_object");

var _add_index_reference = Module["_add_index_reference"] = createExportWrapper("add_index_reference");

var _add_next_index_bool = Module["_add_next_index_bool"] = createExportWrapper("add_next_index_bool");

var _add_next_index_double = Module["_add_next_index_double"] = createExportWrapper("add_next_index_double");

var _add_next_index_array = Module["_add_next_index_array"] = createExportWrapper("add_next_index_array");

var _add_next_index_reference = Module["_add_next_index_reference"] = createExportWrapper("add_next_index_reference");

var _add_property_bool_ex = Module["_add_property_bool_ex"] = createExportWrapper("add_property_bool_ex");

var _add_property_double_ex = Module["_add_property_double_ex"] = createExportWrapper("add_property_double_ex");

var _add_property_str_ex = Module["_add_property_str_ex"] = createExportWrapper("add_property_str_ex");

var _add_property_array_ex = Module["_add_property_array_ex"] = createExportWrapper("add_property_array_ex");

var _add_property_object_ex = Module["_add_property_object_ex"] = createExportWrapper("add_property_object_ex");

var _add_property_reference_ex = Module["_add_property_reference_ex"] = createExportWrapper("add_property_reference_ex");

var _zend_unregister_functions = Module["_zend_unregister_functions"] = createExportWrapper("zend_unregister_functions");

var _zend_startup_module = Module["_zend_startup_module"] = createExportWrapper("zend_startup_module");

var _zend_get_module_started = Module["_zend_get_module_started"] = createExportWrapper("zend_get_module_started");

var _zend_do_inheritance_ex = Module["_zend_do_inheritance_ex"] = createExportWrapper("zend_do_inheritance_ex");

var _zend_do_implement_interface = Module["_zend_do_implement_interface"] = createExportWrapper("zend_do_implement_interface");

var _zend_register_class_alias_ex = Module["_zend_register_class_alias_ex"] = createExportWrapper("zend_register_class_alias_ex");

var _zend_set_hash_symbol = Module["_zend_set_hash_symbol"] = createExportWrapper("zend_set_hash_symbol");

var _zend_is_callable_at_frame = Module["_zend_is_callable_at_frame"] = createExportWrapper("zend_is_callable_at_frame");

var _zend_get_call_trampoline_func = Module["_zend_get_call_trampoline_func"] = createExportWrapper("zend_get_call_trampoline_func");

var _zend_std_get_static_method = Module["_zend_std_get_static_method"] = createExportWrapper("zend_std_get_static_method");

var _zend_fcall_info_args_save = Module["_zend_fcall_info_args_save"] = createExportWrapper("zend_fcall_info_args_save");

var _zend_fcall_info_args_restore = Module["_zend_fcall_info_args_restore"] = createExportWrapper("zend_fcall_info_args_restore");

var _zend_fcall_info_argv = Module["_zend_fcall_info_argv"] = createExportWrapper("zend_fcall_info_argv");

var _zend_try_assign_typed_ref_ex = Module["_zend_try_assign_typed_ref_ex"] = createExportWrapper("zend_try_assign_typed_ref_ex");

var _zend_try_assign_typed_ref_res = Module["_zend_try_assign_typed_ref_res"] = createExportWrapper("zend_try_assign_typed_ref_res");

var _zend_try_assign_typed_ref_zval = Module["_zend_try_assign_typed_ref_zval"] = createExportWrapper("zend_try_assign_typed_ref_zval");

var _zend_declare_property = Module["_zend_declare_property"] = createExportWrapper("zend_declare_property");

var _zend_declare_property_null = Module["_zend_declare_property_null"] = createExportWrapper("zend_declare_property_null");

var _zend_declare_property_bool = Module["_zend_declare_property_bool"] = createExportWrapper("zend_declare_property_bool");

var _zend_declare_property_long = Module["_zend_declare_property_long"] = createExportWrapper("zend_declare_property_long");

var _zend_declare_property_double = Module["_zend_declare_property_double"] = createExportWrapper("zend_declare_property_double");

var _zend_declare_property_string = Module["_zend_declare_property_string"] = createExportWrapper("zend_declare_property_string");

var _zend_declare_property_stringl = Module["_zend_declare_property_stringl"] = createExportWrapper("zend_declare_property_stringl");

var _zend_declare_class_constant = Module["_zend_declare_class_constant"] = createExportWrapper("zend_declare_class_constant");

var _zend_declare_class_constant_null = Module["_zend_declare_class_constant_null"] = createExportWrapper("zend_declare_class_constant_null");

var _zend_declare_class_constant_bool = Module["_zend_declare_class_constant_bool"] = createExportWrapper("zend_declare_class_constant_bool");

var _zend_declare_class_constant_double = Module["_zend_declare_class_constant_double"] = createExportWrapper("zend_declare_class_constant_double");

var _zend_declare_class_constant_stringl = Module["_zend_declare_class_constant_stringl"] = createExportWrapper("zend_declare_class_constant_stringl");

var _zend_declare_class_constant_string = Module["_zend_declare_class_constant_string"] = createExportWrapper("zend_declare_class_constant_string");

var _zend_unset_property = Module["_zend_unset_property"] = createExportWrapper("zend_unset_property");

var _zend_update_property_double = Module["_zend_update_property_double"] = createExportWrapper("zend_update_property_double");

var _zend_assign_to_typed_ref = Module["_zend_assign_to_typed_ref"] = createExportWrapper("zend_assign_to_typed_ref");

var _zend_update_static_property = Module["_zend_update_static_property"] = createExportWrapper("zend_update_static_property");

var _zend_update_static_property_null = Module["_zend_update_static_property_null"] = createExportWrapper("zend_update_static_property_null");

var _zend_update_static_property_bool = Module["_zend_update_static_property_bool"] = createExportWrapper("zend_update_static_property_bool");

var _zend_update_static_property_long = Module["_zend_update_static_property_long"] = createExportWrapper("zend_update_static_property_long");

var _zend_update_static_property_double = Module["_zend_update_static_property_double"] = createExportWrapper("zend_update_static_property_double");

var _zend_update_static_property_string = Module["_zend_update_static_property_string"] = createExportWrapper("zend_update_static_property_string");

var _zend_update_static_property_stringl = Module["_zend_update_static_property_stringl"] = createExportWrapper("zend_update_static_property_stringl");

var _zend_read_static_property = Module["_zend_read_static_property"] = createExportWrapper("zend_read_static_property");

var _zend_save_error_handling = Module["_zend_save_error_handling"] = createExportWrapper("zend_save_error_handling");

var _zend_register_extension = Module["_zend_register_extension"] = createExportWrapper("zend_register_extension");

var _zend_extension_dispatch_message = Module["_zend_extension_dispatch_message"] = createExportWrapper("zend_extension_dispatch_message");

var _zend_get_resource_handle = Module["_zend_get_resource_handle"] = createExportWrapper("zend_get_resource_handle");

var _zend_add_system_entropy = Module["_zend_add_system_entropy"] = createExportWrapper("zend_add_system_entropy");

var _zend_get_op_array_extension_handle = Module["_zend_get_op_array_extension_handle"] = createExportWrapper("zend_get_op_array_extension_handle");

var _zend_get_op_array_extension_handles = Module["_zend_get_op_array_extension_handles"] = createExportWrapper("zend_get_op_array_extension_handles");

var _zend_extensions_op_array_persist_calc = Module["_zend_extensions_op_array_persist_calc"] = createExportWrapper("zend_extensions_op_array_persist_calc");

var _zend_extensions_op_array_persist = Module["_zend_extensions_op_array_persist"] = createExportWrapper("zend_extensions_op_array_persist");

var _zend_hash_add_or_update = Module["_zend_hash_add_or_update"] = createExportWrapper("zend_hash_add_or_update");

var _zend_hash_str_add_or_update = Module["_zend_hash_str_add_or_update"] = createExportWrapper("zend_hash_str_add_or_update");

var _zend_hash_index_add_or_update = Module["_zend_hash_index_add_or_update"] = createExportWrapper("zend_hash_index_add_or_update");

var _zend_hash_str_del_ind = Module["_zend_hash_str_del_ind"] = createExportWrapper("zend_hash_str_del_ind");

var _gc_remove_from_buffer = Module["_gc_remove_from_buffer"] = createExportWrapper("gc_remove_from_buffer");

var _zend_symtable_clean = Module["_zend_symtable_clean"] = createExportWrapper("zend_symtable_clean");

var _zend_hash_graceful_destroy = Module["_zend_hash_graceful_destroy"] = createExportWrapper("zend_hash_graceful_destroy");

var _zend_hash_apply_with_arguments = Module["_zend_hash_apply_with_arguments"] = createExportWrapper("zend_hash_apply_with_arguments");

var _zend_hash_merge_ex = Module["_zend_hash_merge_ex"] = createExportWrapper("zend_hash_merge_ex");

var __zend_hash_index_find = Module["__zend_hash_index_find"] = createExportWrapper("_zend_hash_index_find");

var _zend_hash_bucket_renum_swap = Module["_zend_hash_bucket_renum_swap"] = createExportWrapper("zend_hash_bucket_renum_swap");

var _zend_hash_bucket_packed_swap = Module["_zend_hash_bucket_packed_swap"] = createExportWrapper("zend_hash_bucket_packed_swap");

var _zend_list_insert = Module["_zend_list_insert"] = createExportWrapper("zend_list_insert");

var _zend_fetch_list_dtor_id = Module["_zend_fetch_list_dtor_id"] = createExportWrapper("zend_fetch_list_dtor_id");

var _zend_register_persistent_resource_ex = Module["_zend_register_persistent_resource_ex"] = createExportWrapper("zend_register_persistent_resource_ex");

var _zend_register_default_classes = Module["_zend_register_default_classes"] = createExportWrapper("zend_register_default_classes");

var _zend_gc_get_status = Module["_zend_gc_get_status"] = createExportWrapper("zend_gc_get_status");

var _zend_trace_to_string = Module["_zend_trace_to_string"] = createExportWrapper("zend_trace_to_string");

var _zend_generator_check_placeholder_frame = Module["_zend_generator_check_placeholder_frame"] = createExportWrapper("zend_generator_check_placeholder_frame");

var _zend_std_get_class_name = Module["_zend_std_get_class_name"] = createExportWrapper("zend_std_get_class_name");

var _zend_get_parameter_attribute_str = Module["_zend_get_parameter_attribute_str"] = createExportWrapper("zend_get_parameter_attribute_str");

var _zend_get_attribute = Module["_zend_get_attribute"] = createExportWrapper("zend_get_attribute");

var _zend_get_parameter_attribute = Module["_zend_get_parameter_attribute"] = createExportWrapper("zend_get_parameter_attribute");

var _zend_mark_internal_attribute = Module["_zend_mark_internal_attribute"] = createExportWrapper("zend_mark_internal_attribute");

var _zend_internal_attribute_register = Module["_zend_internal_attribute_register"] = createExportWrapper("zend_internal_attribute_register");

var _zend_vm_stack_init_ex = Module["_zend_vm_stack_init_ex"] = createExportWrapper("zend_vm_stack_init_ex");

var _zend_get_compiled_variable_value = Module["_zend_get_compiled_variable_value"] = createExportWrapper("zend_get_compiled_variable_value");

var _zend_gcc_global_regs = Module["_zend_gcc_global_regs"] = createExportWrapper("zend_gcc_global_regs");

var _zend_cannot_pass_by_reference = Module["_zend_cannot_pass_by_reference"] = createExportWrapper("zend_cannot_pass_by_reference");

var _zend_verify_arg_error = Module["_zend_verify_arg_error"] = createExportWrapper("zend_verify_arg_error");

var _zend_verify_scalar_type_hint = Module["_zend_verify_scalar_type_hint"] = createExportWrapper("zend_verify_scalar_type_hint");

var _zend_readonly_property_modification_error = Module["_zend_readonly_property_modification_error"] = createExportWrapper("zend_readonly_property_modification_error");

var _zend_readonly_property_indirect_modification_error = Module["_zend_readonly_property_indirect_modification_error"] = createExportWrapper("zend_readonly_property_indirect_modification_error");

var _zend_check_user_type_slow = Module["_zend_check_user_type_slow"] = createExportWrapper("zend_check_user_type_slow");

var _zend_missing_arg_error = Module["_zend_missing_arg_error"] = createExportWrapper("zend_missing_arg_error");

var _zend_verify_return_error = Module["_zend_verify_return_error"] = createExportWrapper("zend_verify_return_error");

var _zend_verify_never_error = Module["_zend_verify_never_error"] = createExportWrapper("zend_verify_never_error");

var _zend_wrong_string_offset_error = Module["_zend_wrong_string_offset_error"] = createExportWrapper("zend_wrong_string_offset_error");

var _zend_false_to_array_deprecated = Module["_zend_false_to_array_deprecated"] = createExportWrapper("zend_false_to_array_deprecated");

var _zend_undefined_offset_write = Module["_zend_undefined_offset_write"] = createExportWrapper("zend_undefined_offset_write");

var _zend_undefined_index_write = Module["_zend_undefined_index_write"] = createExportWrapper("zend_undefined_index_write");

var _zend_fetch_dimension_const = Module["_zend_fetch_dimension_const"] = createExportWrapper("zend_fetch_dimension_const");

var _zend_verify_ref_array_assignable = Module["_zend_verify_ref_array_assignable"] = createExportWrapper("zend_verify_ref_array_assignable");

var _zend_throw_ref_type_error_type = Module["_zend_throw_ref_type_error_type"] = createExportWrapper("zend_throw_ref_type_error_type");

var _zend_throw_ref_type_error_zval = Module["_zend_throw_ref_type_error_zval"] = createExportWrapper("zend_throw_ref_type_error_zval");

var _zend_throw_conflicting_coercion_error = Module["_zend_throw_conflicting_coercion_error"] = createExportWrapper("zend_throw_conflicting_coercion_error");

var _execute_internal = Module["_execute_internal"] = createExportWrapper("execute_internal");

var _zend_clean_and_cache_symbol_table = Module["_zend_clean_and_cache_symbol_table"] = createExportWrapper("zend_clean_and_cache_symbol_table");

var _zend_free_compiled_variables = Module["_zend_free_compiled_variables"] = createExportWrapper("zend_free_compiled_variables");

var _zend_fetch_function_str = Module["_zend_fetch_function_str"] = createExportWrapper("zend_fetch_function_str");

var _zend_init_func_run_time_cache = Module["_zend_init_func_run_time_cache"] = createExportWrapper("zend_init_func_run_time_cache");

var _zend_init_code_execute_data = Module["_zend_init_code_execute_data"] = createExportWrapper("zend_init_code_execute_data");

var _zend_init_execute_data = Module["_zend_init_execute_data"] = createExportWrapper("zend_init_execute_data");

var _zend_unfinished_calls_gc = Module["_zend_unfinished_calls_gc"] = createExportWrapper("zend_unfinished_calls_gc");

var _zend_cleanup_unfinished_execution = Module["_zend_cleanup_unfinished_execution"] = createExportWrapper("zend_cleanup_unfinished_execution");

var _zend_free_extra_named_params = Module["_zend_free_extra_named_params"] = createExportWrapper("zend_free_extra_named_params");

var _zend_unfinished_execution_gc = Module["_zend_unfinished_execution_gc"] = createExportWrapper("zend_unfinished_execution_gc");

var _zend_unfinished_execution_gc_ex = Module["_zend_unfinished_execution_gc_ex"] = createExportWrapper("zend_unfinished_execution_gc_ex");

var _zend_fiber_switch_block = Module["_zend_fiber_switch_block"] = createExportWrapper("zend_fiber_switch_block");

var _zend_fiber_switch_unblock = Module["_zend_fiber_switch_unblock"] = createExportWrapper("zend_fiber_switch_unblock");

var _zend_iterator_unwrap = Module["_zend_iterator_unwrap"] = createExportWrapper("zend_iterator_unwrap");

var _zend_create_closure = Module["_zend_create_closure"] = createExportWrapper("zend_create_closure");

var _zend_generator_close = Module["_zend_generator_close"] = createExportWrapper("zend_generator_close");

var _zend_std_unset_static_property = Module["_zend_std_unset_static_property"] = createExportWrapper("zend_std_unset_static_property");

var _zend_serialize_opcode_handler = Module["_zend_serialize_opcode_handler"] = createExportWrapper("zend_serialize_opcode_handler");

var _zend_deserialize_opcode_handler = Module["_zend_deserialize_opcode_handler"] = createExportWrapper("zend_deserialize_opcode_handler");

var _zend_get_opcode_handler_func = Module["_zend_get_opcode_handler_func"] = createExportWrapper("zend_get_opcode_handler_func");

var _zend_get_halt_op = Module["_zend_get_halt_op"] = createExportWrapper("zend_get_halt_op");

var _zend_vm_kind = Module["_zend_vm_kind"] = createExportWrapper("zend_vm_kind");

var _zend_vm_set_opcode_handler_ex = Module["_zend_vm_set_opcode_handler_ex"] = createExportWrapper("zend_vm_set_opcode_handler_ex");

var _zend_vm_call_opcode_handler = Module["_zend_vm_call_opcode_handler"] = createExportWrapper("zend_vm_call_opcode_handler");

var _zend_set_user_opcode_handler = Module["_zend_set_user_opcode_handler"] = createExportWrapper("zend_set_user_opcode_handler");

var _zend_get_user_opcode_handler = Module["_zend_get_user_opcode_handler"] = createExportWrapper("zend_get_user_opcode_handler");

var _zend_get_zval_ptr = Module["_zend_get_zval_ptr"] = createExportWrapper("zend_get_zval_ptr");

var _zend_is_graceful_exit = Module["_zend_is_graceful_exit"] = createExportWrapper("zend_is_graceful_exit");

var _zend_exception_set_previous = Module["_zend_exception_set_previous"] = createExportWrapper("zend_exception_set_previous");

var _zend_ini_dtor = Module["_zend_ini_dtor"] = createExportWrapper("zend_ini_dtor");

var _zend_ini_global_shutdown = Module["_zend_ini_global_shutdown"] = createExportWrapper("zend_ini_global_shutdown");

var _zend_register_ini_entries = Module["_zend_register_ini_entries"] = createExportWrapper("zend_register_ini_entries");

var _zend_unregister_ini_entries = Module["_zend_unregister_ini_entries"] = createExportWrapper("zend_unregister_ini_entries");

var _zend_ini_register_displayer = Module["_zend_ini_register_displayer"] = createExportWrapper("zend_ini_register_displayer");

var _zend_ini_parse_uquantity = Module["_zend_ini_parse_uquantity"] = createExportWrapper("zend_ini_parse_uquantity");

var _display_link_numbers = Module["_display_link_numbers"] = createExportWrapper("display_link_numbers");

var _OnUpdateStr = Module["_OnUpdateStr"] = createExportWrapper("OnUpdateStr");

var _OnUpdateStrNotEmpty = Module["_OnUpdateStrNotEmpty"] = createExportWrapper("OnUpdateStrNotEmpty");

var _zend_insert_sort = Module["_zend_insert_sort"] = createExportWrapper("zend_insert_sort");

var _zend_multibyte_set_script_encoding = Module["_zend_multibyte_set_script_encoding"] = createExportWrapper("zend_multibyte_set_script_encoding");

var _zend_multibyte_parse_encoding_list = Module["_zend_multibyte_parse_encoding_list"] = createExportWrapper("zend_multibyte_parse_encoding_list");

var _zend_multibyte_get_script_encoding = Module["_zend_multibyte_get_script_encoding"] = createExportWrapper("zend_multibyte_get_script_encoding");

var _zend_register_iterator_wrapper = Module["_zend_register_iterator_wrapper"] = createExportWrapper("zend_register_iterator_wrapper");

var _zend_user_it_new_iterator = Module["_zend_user_it_new_iterator"] = createExportWrapper("zend_user_it_new_iterator");

var _zend_user_it_valid = Module["_zend_user_it_valid"] = createExportWrapper("zend_user_it_valid");

var _zend_user_it_get_current_data = Module["_zend_user_it_get_current_data"] = createExportWrapper("zend_user_it_get_current_data");

var _zend_user_it_get_current_key = Module["_zend_user_it_get_current_key"] = createExportWrapper("zend_user_it_get_current_key");

var _zend_user_it_move_forward = Module["_zend_user_it_move_forward"] = createExportWrapper("zend_user_it_move_forward");

var _zend_user_it_rewind = Module["_zend_user_it_rewind"] = createExportWrapper("zend_user_it_rewind");

var _zend_user_it_get_gc = Module["_zend_user_it_get_gc"] = createExportWrapper("zend_user_it_get_gc");

var _zend_user_it_get_new_iterator = Module["_zend_user_it_get_new_iterator"] = createExportWrapper("zend_user_it_get_new_iterator");

var _zend_user_serialize = Module["_zend_user_serialize"] = createExportWrapper("zend_user_serialize");

var _zend_user_unserialize = Module["_zend_user_unserialize"] = createExportWrapper("zend_user_unserialize");

var _zend_register_interfaces = Module["_zend_register_interfaces"] = createExportWrapper("zend_register_interfaces");

var _zend_get_exception_base = Module["_zend_get_exception_base"] = createExportWrapper("zend_get_exception_base");

var _zend_exception_get_default = Module["_zend_exception_get_default"] = createExportWrapper("zend_exception_get_default");

var _zend_get_error_exception = Module["_zend_get_error_exception"] = createExportWrapper("zend_get_error_exception");

var _zend_create_unwind_exit = Module["_zend_create_unwind_exit"] = createExportWrapper("zend_create_unwind_exit");

var _zend_create_graceful_exit = Module["_zend_create_graceful_exit"] = createExportWrapper("zend_create_graceful_exit");

var _zend_throw_graceful_exit = Module["_zend_throw_graceful_exit"] = createExportWrapper("zend_throw_graceful_exit");

var _gc_protected = Module["_gc_protected"] = createExportWrapper("gc_protected");

var _zend_weakrefs_hash_add = Module["_zend_weakrefs_hash_add"] = createExportWrapper("zend_weakrefs_hash_add");

var _zend_weakrefs_hash_del = Module["_zend_weakrefs_hash_del"] = createExportWrapper("zend_weakrefs_hash_del");

var _zend_weakrefs_notify = Module["_zend_weakrefs_notify"] = createExportWrapper("zend_weakrefs_notify");

var _zend_ensure_fpu_mode = Module["_zend_ensure_fpu_mode"] = createExportWrapper("zend_ensure_fpu_mode");

var _zend_interned_string_find_permanent = Module["_zend_interned_string_find_permanent"] = createExportWrapper("zend_interned_string_find_permanent");

var _zend_interned_strings_set_request_storage_handlers = Module["_zend_interned_strings_set_request_storage_handlers"] = createExportWrapper("zend_interned_strings_set_request_storage_handlers");

var __vgr00000ZU_NONE_zend_string_equal_val = Module["__vgr00000ZU_NONE_zend_string_equal_val"] = createExportWrapper("_vgr00000ZU_NONE_zend_string_equal_val");

var _sigaction = Module["_sigaction"] = createExportWrapper("sigaction");

var _sigemptyset = Module["_sigemptyset"] = createExportWrapper("sigemptyset");

var _sigaddset = Module["_sigaddset"] = createExportWrapper("sigaddset");

var _sigprocmask = Module["_sigprocmask"] = createExportWrapper("sigprocmask");

var _zend_signal_handler_unblock = Module["_zend_signal_handler_unblock"] = createExportWrapper("zend_signal_handler_unblock");

var _zend_sigaction = Module["_zend_sigaction"] = createExportWrapper("zend_sigaction");

var _zend_signal_startup = Module["_zend_signal_startup"] = createExportWrapper("zend_signal_startup");

var _sigfillset = Module["_sigfillset"] = createExportWrapper("sigfillset");

var _sigdelset = Module["_sigdelset"] = createExportWrapper("sigdelset");

var _zend_generator_restore_call_stack = Module["_zend_generator_restore_call_stack"] = createExportWrapper("zend_generator_restore_call_stack");

var _zend_generator_freeze_call_stack = Module["_zend_generator_freeze_call_stack"] = createExportWrapper("zend_generator_freeze_call_stack");

var _zend_generator_resume = Module["_zend_generator_resume"] = createExportWrapper("zend_generator_resume");

var _zend_observer_generator_resume = Module["_zend_observer_generator_resume"] = createExportWrapper("zend_observer_generator_resume");

var _virtual_getcwd_ex = Module["_virtual_getcwd_ex"] = createExportWrapper("virtual_getcwd_ex");

var _virtual_getcwd = Module["_virtual_getcwd"] = createExportWrapper("virtual_getcwd");

var _realpath_cache_lookup = Module["_realpath_cache_lookup"] = createExportWrapper("realpath_cache_lookup");

var _virtual_chdir = Module["_virtual_chdir"] = createExportWrapper("virtual_chdir");

var _virtual_realpath = Module["_virtual_realpath"] = createExportWrapper("virtual_realpath");

var _virtual_filepath_ex = Module["_virtual_filepath_ex"] = createExportWrapper("virtual_filepath_ex");

var _virtual_filepath = Module["_virtual_filepath"] = createExportWrapper("virtual_filepath");

var _virtual_fopen = Module["_virtual_fopen"] = createExportWrapper("virtual_fopen");

var _virtual_access = Module["_virtual_access"] = createExportWrapper("virtual_access");

var _virtual_utime = Module["_virtual_utime"] = createExportWrapper("virtual_utime");

var _virtual_chmod = Module["_virtual_chmod"] = createExportWrapper("virtual_chmod");

var _virtual_chown = Module["_virtual_chown"] = createExportWrapper("virtual_chown");

var _virtual_open = Module["_virtual_open"] = createExportWrapper("virtual_open");

var _virtual_creat = Module["_virtual_creat"] = createExportWrapper("virtual_creat");

var _creat = Module["_creat"] = createExportWrapper("creat");

var _virtual_rename = Module["_virtual_rename"] = createExportWrapper("virtual_rename");

var _virtual_stat = Module["_virtual_stat"] = createExportWrapper("virtual_stat");

var _virtual_lstat = Module["_virtual_lstat"] = createExportWrapper("virtual_lstat");

var _virtual_unlink = Module["_virtual_unlink"] = createExportWrapper("virtual_unlink");

var _virtual_mkdir = Module["_virtual_mkdir"] = createExportWrapper("virtual_mkdir");

var _virtual_rmdir = Module["_virtual_rmdir"] = createExportWrapper("virtual_rmdir");

var _virtual_opendir = Module["_virtual_opendir"] = createExportWrapper("virtual_opendir");

var _virtual_popen = Module["_virtual_popen"] = createExportWrapper("virtual_popen");

var _zend_objects_store_put = Module["_zend_objects_store_put"] = createExportWrapper("zend_objects_store_put");

var _zend_objects_clone_obj = Module["_zend_objects_clone_obj"] = createExportWrapper("zend_objects_clone_obj");

var _zend_std_get_debug_info = Module["_zend_std_get_debug_info"] = createExportWrapper("zend_std_get_debug_info");

var _zend_get_property_guard = Module["_zend_get_property_guard"] = createExportWrapper("zend_get_property_guard");

var _zend_std_get_constructor = Module["_zend_std_get_constructor"] = createExportWrapper("zend_std_get_constructor");

var _zend_std_get_closure = Module["_zend_std_get_closure"] = createExportWrapper("zend_std_get_closure");

var _smart_str_append_escaped_truncated = Module["_smart_str_append_escaped_truncated"] = createExportWrapper("smart_str_append_escaped_truncated");

var _zend_cpu_supports = Module["_zend_cpu_supports"] = createExportWrapper("zend_cpu_supports");

var ___jit_debug_register_code = Module["___jit_debug_register_code"] = createExportWrapper("__jit_debug_register_code");

var _zend_gdb_register_code = Module["_zend_gdb_register_code"] = createExportWrapper("zend_gdb_register_code");

var _zend_gdb_unregister_all = Module["_zend_gdb_unregister_all"] = createExportWrapper("zend_gdb_unregister_all");

var _zend_gdb_present = Module["_zend_gdb_present"] = createExportWrapper("zend_gdb_present");

var _zend_observer_fcall_register = Module["_zend_observer_fcall_register"] = createExportWrapper("zend_observer_fcall_register");

var _zend_observer_add_begin_handler = Module["_zend_observer_add_begin_handler"] = createExportWrapper("zend_observer_add_begin_handler");

var _zend_observer_remove_begin_handler = Module["_zend_observer_remove_begin_handler"] = createExportWrapper("zend_observer_remove_begin_handler");

var _zend_observer_add_end_handler = Module["_zend_observer_add_end_handler"] = createExportWrapper("zend_observer_add_end_handler");

var _zend_observer_remove_end_handler = Module["_zend_observer_remove_end_handler"] = createExportWrapper("zend_observer_remove_end_handler");

var _zend_observer_function_declared_register = Module["_zend_observer_function_declared_register"] = createExportWrapper("zend_observer_function_declared_register");

var _zend_observer_class_linked_register = Module["_zend_observer_class_linked_register"] = createExportWrapper("zend_observer_class_linked_register");

var _zend_observer_error_register = Module["_zend_observer_error_register"] = createExportWrapper("zend_observer_error_register");

var _zend_observer_fiber_init_register = Module["_zend_observer_fiber_init_register"] = createExportWrapper("zend_observer_fiber_init_register");

var _zend_observer_fiber_switch_register = Module["_zend_observer_fiber_switch_register"] = createExportWrapper("zend_observer_fiber_switch_register");

var _zend_observer_fiber_destroy_register = Module["_zend_observer_fiber_destroy_register"] = createExportWrapper("zend_observer_fiber_destroy_register");

var _zend_observer_fiber_init_notify = Module["_zend_observer_fiber_init_notify"] = createExportWrapper("zend_observer_fiber_init_notify");

var _zend_observer_fiber_switch_notify = Module["_zend_observer_fiber_switch_notify"] = createExportWrapper("zend_observer_fiber_switch_notify");

var _zend_observer_fiber_destroy_notify = Module["_zend_observer_fiber_destroy_notify"] = createExportWrapper("zend_observer_fiber_destroy_notify");

var _zend_enum_get_case_by_value = Module["_zend_enum_get_case_by_value"] = createExportWrapper("zend_enum_get_case_by_value");

var _zend_register_internal_enum = Module["_zend_register_internal_enum"] = createExportWrapper("zend_register_internal_enum");

var _zend_enum_add_case = Module["_zend_enum_add_case"] = createExportWrapper("zend_enum_add_case");

var _zend_enum_add_case_cstr = Module["_zend_enum_add_case_cstr"] = createExportWrapper("zend_enum_add_case_cstr");

var _zend_enum_get_case = Module["_zend_enum_get_case"] = createExportWrapper("zend_enum_get_case");

var _zend_enum_get_case_cstr = Module["_zend_enum_get_case_cstr"] = createExportWrapper("zend_enum_get_case_cstr");

var _zend_fiber_switch_blocked = Module["_zend_fiber_switch_blocked"] = createExportWrapper("zend_fiber_switch_blocked");

var _zend_fiber_init_context = Module["_zend_fiber_init_context"] = createExportWrapper("zend_fiber_init_context");

var _mprotect = Module["_mprotect"] = createExportWrapper("mprotect");

var _zend_fiber_destroy_context = Module["_zend_fiber_destroy_context"] = createExportWrapper("zend_fiber_destroy_context");

var _zend_fiber_switch_context = Module["_zend_fiber_switch_context"] = createExportWrapper("zend_fiber_switch_context");

var _zend_atomic_bool_init = Module["_zend_atomic_bool_init"] = createExportWrapper("zend_atomic_bool_init");

var _zend_atomic_bool_exchange = Module["_zend_atomic_bool_exchange"] = createExportWrapper("zend_atomic_bool_exchange");

var _zend_atomic_bool_store = Module["_zend_atomic_bool_store"] = createExportWrapper("zend_atomic_bool_store");

var _zend_atomic_bool_load = Module["_zend_atomic_bool_load"] = createExportWrapper("zend_atomic_bool_load");

var _zend_optimize_script = Module["_zend_optimize_script"] = createExportWrapper("zend_optimize_script");

var _zend_build_call_graph = Module["_zend_build_call_graph"] = createExportWrapper("zend_build_call_graph");

var _zend_analyze_call_graph = Module["_zend_analyze_call_graph"] = createExportWrapper("zend_analyze_call_graph");

var _zend_build_call_map = Module["_zend_build_call_map"] = createExportWrapper("zend_build_call_map");

var _zend_init_func_return_info = Module["_zend_init_func_return_info"] = createExportWrapper("zend_init_func_return_info");

var _zend_dump_op_array = Module["_zend_dump_op_array"] = createExportWrapper("zend_dump_op_array");

var _zend_array_type_info = Module["_zend_array_type_info"] = createExportWrapper("zend_array_type_info");

var _zend_optimizer_register_pass = Module["_zend_optimizer_register_pass"] = createExportWrapper("zend_optimizer_register_pass");

var _zend_optimizer_unregister_pass = Module["_zend_optimizer_unregister_pass"] = createExportWrapper("zend_optimizer_unregister_pass");

var _zend_build_cfg = Module["_zend_build_cfg"] = createExportWrapper("zend_build_cfg");

var _zend_cfg_build_predecessors = Module["_zend_cfg_build_predecessors"] = createExportWrapper("zend_cfg_build_predecessors");

var _zend_cfg_compute_dominators_tree = Module["_zend_cfg_compute_dominators_tree"] = createExportWrapper("zend_cfg_compute_dominators_tree");

var _zend_cfg_identify_loops = Module["_zend_cfg_identify_loops"] = createExportWrapper("zend_cfg_identify_loops");

var _zend_dfg_add_use_def_op = Module["_zend_dfg_add_use_def_op"] = createExportWrapper("zend_dfg_add_use_def_op");

var _zend_build_ssa = Module["_zend_build_ssa"] = createExportWrapper("zend_build_ssa");

var _zend_ssa_compute_use_def_chains = Module["_zend_ssa_compute_use_def_chains"] = createExportWrapper("zend_ssa_compute_use_def_chains");

var _zend_ssa_find_false_dependencies = Module["_zend_ssa_find_false_dependencies"] = createExportWrapper("zend_ssa_find_false_dependencies");

var _zend_ssa_find_sccs = Module["_zend_ssa_find_sccs"] = createExportWrapper("zend_ssa_find_sccs");

var _zend_ssa_inference = Module["_zend_ssa_inference"] = createExportWrapper("zend_ssa_inference");

var _zend_may_throw = Module["_zend_may_throw"] = createExportWrapper("zend_may_throw");

var _zend_ssa_rename_op = Module["_zend_ssa_rename_op"] = createExportWrapper("zend_ssa_rename_op");

var _zend_inference_propagate_range = Module["_zend_inference_propagate_range"] = createExportWrapper("zend_inference_propagate_range");

var _zend_array_element_type = Module["_zend_array_element_type"] = createExportWrapper("zend_array_element_type");

var _zend_fetch_arg_info_type = Module["_zend_fetch_arg_info_type"] = createExportWrapper("zend_fetch_arg_info_type");

var _zend_update_type_info = Module["_zend_update_type_info"] = createExportWrapper("zend_update_type_info");

var _zend_get_func_info = Module["_zend_get_func_info"] = createExportWrapper("zend_get_func_info");

var _zend_may_throw_ex = Module["_zend_may_throw_ex"] = createExportWrapper("zend_may_throw_ex");

var _zend_analyze_calls = Module["_zend_analyze_calls"] = createExportWrapper("zend_analyze_calls");

var _zend_dump_var = Module["_zend_dump_var"] = createExportWrapper("zend_dump_var");

var _zend_dump_ssa_var = Module["_zend_dump_ssa_var"] = createExportWrapper("zend_dump_ssa_var");

var _zend_dump_op = Module["_zend_dump_op"] = createExportWrapper("zend_dump_op");

var _zend_dump_op_line = Module["_zend_dump_op_line"] = createExportWrapper("zend_dump_op_line");

var _signal = Module["_signal"] = createExportWrapper("signal");

var _zip_source_error = Module["_zip_source_error"] = createExportWrapper("zip_source_error");

var _zip_error_set_from_source = Module["_zip_error_set_from_source"] = createExportWrapper("zip_error_set_from_source");

var _zip_source_begin_write_cloning = Module["_zip_source_begin_write_cloning"] = createExportWrapper("zip_source_begin_write_cloning");

var _zip_source_begin_write = Module["_zip_source_begin_write"] = createExportWrapper("zip_source_begin_write");

var _zip_source_tell_write = Module["_zip_source_tell_write"] = createExportWrapper("zip_source_tell_write");

var _zip_source_zip_file_create = Module["_zip_source_zip_file_create"] = createExportWrapper("zip_source_zip_file_create");

var _zip_source_seek = Module["_zip_source_seek"] = createExportWrapper("zip_source_seek");

var _zip_source_commit_write = Module["_zip_source_commit_write"] = createExportWrapper("zip_source_commit_write");

var _zip_source_rollback_write = Module["_zip_source_rollback_write"] = createExportWrapper("zip_source_rollback_write");

var _zip_source_stat = Module["_zip_source_stat"] = createExportWrapper("zip_source_stat");

var _zip_source_keep = Module["_zip_source_keep"] = createExportWrapper("zip_source_keep");

var _zip_stat_init = Module["_zip_stat_init"] = createExportWrapper("zip_stat_init");

var _zip_source_open = Module["_zip_source_open"] = createExportWrapper("zip_source_open");

var _zip_source_read = Module["_zip_source_read"] = createExportWrapper("zip_source_read");

var _zip_source_close = Module["_zip_source_close"] = createExportWrapper("zip_source_close");

var _zip_source_get_file_attributes = Module["_zip_source_get_file_attributes"] = createExportWrapper("zip_source_get_file_attributes");

var _zip_source_seek_write = Module["_zip_source_seek_write"] = createExportWrapper("zip_source_seek_write");

var _crc32 = Module["_crc32"] = createExportWrapper("crc32");

var _zip_error_init_with_code = Module["_zip_error_init_with_code"] = createExportWrapper("zip_error_init_with_code");

var _zip_error_system_type = Module["_zip_error_system_type"] = createExportWrapper("zip_error_system_type");

var _zip_error_to_data = Module["_zip_error_to_data"] = createExportWrapper("zip_error_to_data");

var _zip_error_get = Module["_zip_error_get"] = createExportWrapper("zip_error_get");

var _zError = Module["_zError"] = createExportWrapper("zError");

var _zip_fopen_index_encrypted = Module["_zip_fopen_index_encrypted"] = createExportWrapper("zip_fopen_index_encrypted");

var _zip_source_is_seekable = Module["_zip_source_is_seekable"] = createExportWrapper("zip_source_is_seekable");

var _zip_source_tell = Module["_zip_source_tell"] = createExportWrapper("zip_source_tell");

var _zip_encryption_method_supported = Module["_zip_encryption_method_supported"] = createExportWrapper("zip_encryption_method_supported");

var _calloc = Module["_calloc"] = createExportWrapper("calloc");

var _zip_source_write = Module["_zip_source_write"] = createExportWrapper("zip_source_write");

var _zip_source_file_create = Module["_zip_source_file_create"] = createExportWrapper("zip_source_file_create");

var _zip_open_from_source = Module["_zip_open_from_source"] = createExportWrapper("zip_open_from_source");

var _zip_register_progress_callback_with_state = Module["_zip_register_progress_callback_with_state"] = createExportWrapper("zip_register_progress_callback_with_state");

var _zip_register_cancel_callback_with_state = Module["_zip_register_cancel_callback_with_state"] = createExportWrapper("zip_register_cancel_callback_with_state");

var _zip_register_progress_callback = Module["_zip_register_progress_callback"] = createExportWrapper("zip_register_progress_callback");

var _zip_compression_method_supported = Module["_zip_compression_method_supported"] = createExportWrapper("zip_compression_method_supported");

var _zip_source_buffer_create = Module["_zip_source_buffer_create"] = createExportWrapper("zip_source_buffer_create");

var _zip_file_attributes_init = Module["_zip_file_attributes_init"] = createExportWrapper("zip_file_attributes_init");

var _zip_source_function_create = Module["_zip_source_function_create"] = createExportWrapper("zip_source_function_create");

var _zip_source_buffer_fragment = Module["_zip_source_buffer_fragment"] = createExportWrapper("zip_source_buffer_fragment");

var _zip_source_buffer_fragment_create = Module["_zip_source_buffer_fragment_create"] = createExportWrapper("zip_source_buffer_fragment_create");

var _zip_source_seek_compute_offset = Module["_zip_source_seek_compute_offset"] = createExportWrapper("zip_source_seek_compute_offset");

var _zip_source_make_command_bitmap = Module["_zip_source_make_command_bitmap"] = createExportWrapper("zip_source_make_command_bitmap");

var _deflateInit2_ = Module["_deflateInit2_"] = createExportWrapper("deflateInit2_");

var _inflateInit2_ = Module["_inflateInit2_"] = createExportWrapper("inflateInit2_");

var _deflateEnd = Module["_deflateEnd"] = createExportWrapper("deflateEnd");

var _inflateEnd = Module["_inflateEnd"] = createExportWrapper("inflateEnd");

var _deflate = Module["_deflate"] = createExportWrapper("deflate");

var _inflate = Module["_inflate"] = createExportWrapper("inflate");

var _zip_source_layered = Module["_zip_source_layered"] = createExportWrapper("zip_source_layered");

var _zip_source_pass_to_lower_layer = Module["_zip_source_pass_to_lower_layer"] = createExportWrapper("zip_source_pass_to_lower_layer");

var _zip_source_layered_create = Module["_zip_source_layered_create"] = createExportWrapper("zip_source_layered_create");

var _zip_source_filep = Module["_zip_source_filep"] = createExportWrapper("zip_source_filep");

var _zip_source_filep_create = Module["_zip_source_filep_create"] = createExportWrapper("zip_source_filep_create");

var _zip_source_function = Module["_zip_source_function"] = createExportWrapper("zip_source_function");

var _zip_secure_random = Module["_zip_secure_random"] = createExportWrapper("zip_secure_random");

var _zip_source_window_create = Module["_zip_source_window_create"] = createExportWrapper("zip_source_window_create");

var _zip_source_zip_file = Module["_zip_source_zip_file"] = createExportWrapper("zip_source_zip_file");

var _fchmod = Module["_fchmod"] = createExportWrapper("fchmod");

var _remove = Module["_remove"] = createExportWrapper("remove");

var _clearerr = Module["_clearerr"] = createExportWrapper("clearerr");

var _ferror = Module["_ferror"] = createExportWrapper("ferror");

var _fseeko = Module["_fseeko"] = createExportWrapper("fseeko");

var _ftello = Module["_ftello"] = createExportWrapper("ftello");

var _srand = Module["_srand"] = createExportWrapper("srand");

var _rand = Module["_rand"] = createExportWrapper("rand");

var _dtls1_default_timeout = Module["_dtls1_default_timeout"] = createExportWrapper("dtls1_default_timeout");

var _dtls1_new = Module["_dtls1_new"] = createExportWrapper("dtls1_new");

var _dtls1_clear_received_buffer = Module["_dtls1_clear_received_buffer"] = createExportWrapper("dtls1_clear_received_buffer");

var _dtls1_clear_sent_buffer = Module["_dtls1_clear_sent_buffer"] = createExportWrapper("dtls1_clear_sent_buffer");

var _dtls1_free = Module["_dtls1_free"] = createExportWrapper("dtls1_free");

var _dtls1_clear = Module["_dtls1_clear"] = createExportWrapper("dtls1_clear");

var _dtls1_ctrl = Module["_dtls1_ctrl"] = createExportWrapper("dtls1_ctrl");

var _dtls1_handle_timeout = Module["_dtls1_handle_timeout"] = createExportWrapper("dtls1_handle_timeout");

var _dtls1_get_timeout = Module["_dtls1_get_timeout"] = createExportWrapper("dtls1_get_timeout");

var _dtls1_start_timer = Module["_dtls1_start_timer"] = createExportWrapper("dtls1_start_timer");

var _dtls1_is_timer_expired = Module["_dtls1_is_timer_expired"] = createExportWrapper("dtls1_is_timer_expired");

var _dtls1_stop_timer = Module["_dtls1_stop_timer"] = createExportWrapper("dtls1_stop_timer");

var _dtls1_check_timeout_num = Module["_dtls1_check_timeout_num"] = createExportWrapper("dtls1_check_timeout_num");

var _DTLSv1_listen = Module["_DTLSv1_listen"] = createExportWrapper("DTLSv1_listen");

var _dtls1_shutdown = Module["_dtls1_shutdown"] = createExportWrapper("dtls1_shutdown");

var _dtls1_query_mtu = Module["_dtls1_query_mtu"] = createExportWrapper("dtls1_query_mtu");

var _dtls1_min_mtu = Module["_dtls1_min_mtu"] = createExportWrapper("dtls1_min_mtu");

var _DTLS_get_data_mtu = Module["_DTLS_get_data_mtu"] = createExportWrapper("DTLS_get_data_mtu");

var _DTLS_set_timer_cb = Module["_DTLS_set_timer_cb"] = createExportWrapper("DTLS_set_timer_cb");

var _dtls1_write_app_data_bytes = Module["_dtls1_write_app_data_bytes"] = createExportWrapper("dtls1_write_app_data_bytes");

var _dtls1_dispatch_alert = Module["_dtls1_dispatch_alert"] = createExportWrapper("dtls1_dispatch_alert");

var _TLS_method = Module["_TLS_method"] = createExportWrapper("TLS_method");

var _tlsv1_3_method = Module["_tlsv1_3_method"] = createExportWrapper("tlsv1_3_method");

var _tlsv1_2_method = Module["_tlsv1_2_method"] = createExportWrapper("tlsv1_2_method");

var _tlsv1_1_method = Module["_tlsv1_1_method"] = createExportWrapper("tlsv1_1_method");

var _tlsv1_method = Module["_tlsv1_method"] = createExportWrapper("tlsv1_method");

var _tlsv1_3_server_method = Module["_tlsv1_3_server_method"] = createExportWrapper("tlsv1_3_server_method");

var _tlsv1_2_server_method = Module["_tlsv1_2_server_method"] = createExportWrapper("tlsv1_2_server_method");

var _tlsv1_1_server_method = Module["_tlsv1_1_server_method"] = createExportWrapper("tlsv1_1_server_method");

var _tlsv1_server_method = Module["_tlsv1_server_method"] = createExportWrapper("tlsv1_server_method");

var _tlsv1_3_client_method = Module["_tlsv1_3_client_method"] = createExportWrapper("tlsv1_3_client_method");

var _tlsv1_2_client_method = Module["_tlsv1_2_client_method"] = createExportWrapper("tlsv1_2_client_method");

var _tlsv1_1_client_method = Module["_tlsv1_1_client_method"] = createExportWrapper("tlsv1_1_client_method");

var _tlsv1_client_method = Module["_tlsv1_client_method"] = createExportWrapper("tlsv1_client_method");

var _dtlsv1_method = Module["_dtlsv1_method"] = createExportWrapper("dtlsv1_method");

var _dtlsv1_2_method = Module["_dtlsv1_2_method"] = createExportWrapper("dtlsv1_2_method");

var _DTLS_method = Module["_DTLS_method"] = createExportWrapper("DTLS_method");

var _dtlsv1_server_method = Module["_dtlsv1_server_method"] = createExportWrapper("dtlsv1_server_method");

var _dtlsv1_2_server_method = Module["_dtlsv1_2_server_method"] = createExportWrapper("dtlsv1_2_server_method");

var _DTLS_server_method = Module["_DTLS_server_method"] = createExportWrapper("DTLS_server_method");

var _dtlsv1_client_method = Module["_dtlsv1_client_method"] = createExportWrapper("dtlsv1_client_method");

var _dtls_bad_ver_client_method = Module["_dtls_bad_ver_client_method"] = createExportWrapper("dtls_bad_ver_client_method");

var _dtlsv1_2_client_method = Module["_dtlsv1_2_client_method"] = createExportWrapper("dtlsv1_2_client_method");

var _DTLS_client_method = Module["_DTLS_client_method"] = createExportWrapper("DTLS_client_method");

var _TLSv1_2_method = Module["_TLSv1_2_method"] = createExportWrapper("TLSv1_2_method");

var _TLSv1_2_server_method = Module["_TLSv1_2_server_method"] = createExportWrapper("TLSv1_2_server_method");

var _TLSv1_2_client_method = Module["_TLSv1_2_client_method"] = createExportWrapper("TLSv1_2_client_method");

var _TLSv1_1_method = Module["_TLSv1_1_method"] = createExportWrapper("TLSv1_1_method");

var _TLSv1_1_server_method = Module["_TLSv1_1_server_method"] = createExportWrapper("TLSv1_1_server_method");

var _TLSv1_1_client_method = Module["_TLSv1_1_client_method"] = createExportWrapper("TLSv1_1_client_method");

var _TLSv1_method = Module["_TLSv1_method"] = createExportWrapper("TLSv1_method");

var _TLSv1_server_method = Module["_TLSv1_server_method"] = createExportWrapper("TLSv1_server_method");

var _TLSv1_client_method = Module["_TLSv1_client_method"] = createExportWrapper("TLSv1_client_method");

var _DTLSv1_2_method = Module["_DTLSv1_2_method"] = createExportWrapper("DTLSv1_2_method");

var _DTLSv1_2_server_method = Module["_DTLSv1_2_server_method"] = createExportWrapper("DTLSv1_2_server_method");

var _DTLSv1_2_client_method = Module["_DTLSv1_2_client_method"] = createExportWrapper("DTLSv1_2_client_method");

var _DTLSv1_method = Module["_DTLSv1_method"] = createExportWrapper("DTLSv1_method");

var _DTLSv1_server_method = Module["_DTLSv1_server_method"] = createExportWrapper("DTLSv1_server_method");

var _DTLSv1_client_method = Module["_DTLSv1_client_method"] = createExportWrapper("DTLSv1_client_method");

var _tls1_new = Module["_tls1_new"] = createExportWrapper("tls1_new");

var _tls1_clear = Module["_tls1_clear"] = createExportWrapper("tls1_clear");

var _tls1_free = Module["_tls1_free"] = createExportWrapper("tls1_free");

var _ossl_statem_accept = Module["_ossl_statem_accept"] = createExportWrapper("ossl_statem_accept");

var _ossl_statem_connect = Module["_ossl_statem_connect"] = createExportWrapper("ossl_statem_connect");

var _ssl3_read = Module["_ssl3_read"] = createExportWrapper("ssl3_read");

var _ssl3_peek = Module["_ssl3_peek"] = createExportWrapper("ssl3_peek");

var _ssl3_write = Module["_ssl3_write"] = createExportWrapper("ssl3_write");

var _ssl3_shutdown = Module["_ssl3_shutdown"] = createExportWrapper("ssl3_shutdown");

var _ssl3_renegotiate = Module["_ssl3_renegotiate"] = createExportWrapper("ssl3_renegotiate");

var _ssl3_renegotiate_check = Module["_ssl3_renegotiate_check"] = createExportWrapper("ssl3_renegotiate_check");

var _ssl3_read_bytes = Module["_ssl3_read_bytes"] = createExportWrapper("ssl3_read_bytes");

var _ssl3_write_bytes = Module["_ssl3_write_bytes"] = createExportWrapper("ssl3_write_bytes");

var _ssl3_dispatch_alert = Module["_ssl3_dispatch_alert"] = createExportWrapper("ssl3_dispatch_alert");

var _ssl3_ctrl = Module["_ssl3_ctrl"] = createExportWrapper("ssl3_ctrl");

var _ssl3_ctx_ctrl = Module["_ssl3_ctx_ctrl"] = createExportWrapper("ssl3_ctx_ctrl");

var _ssl3_get_cipher_by_char = Module["_ssl3_get_cipher_by_char"] = createExportWrapper("ssl3_get_cipher_by_char");

var _ssl3_put_cipher_by_char = Module["_ssl3_put_cipher_by_char"] = createExportWrapper("ssl3_put_cipher_by_char");

var _ssl3_pending = Module["_ssl3_pending"] = createExportWrapper("ssl3_pending");

var _ssl3_num_ciphers = Module["_ssl3_num_ciphers"] = createExportWrapper("ssl3_num_ciphers");

var _ssl3_get_cipher = Module["_ssl3_get_cipher"] = createExportWrapper("ssl3_get_cipher");

var _tls1_default_timeout = Module["_tls1_default_timeout"] = createExportWrapper("tls1_default_timeout");

var _ssl_undefined_void_function = Module["_ssl_undefined_void_function"] = createExportWrapper("ssl_undefined_void_function");

var _ssl3_callback_ctrl = Module["_ssl3_callback_ctrl"] = createExportWrapper("ssl3_callback_ctrl");

var _ssl3_ctx_callback_ctrl = Module["_ssl3_ctx_callback_ctrl"] = createExportWrapper("ssl3_ctx_callback_ctrl");

var _ssl_undefined_function = Module["_ssl_undefined_function"] = createExportWrapper("ssl_undefined_function");

var _dtls1_do_write = Module["_dtls1_do_write"] = createExportWrapper("dtls1_do_write");

var _DTLS_RECORD_LAYER_new = Module["_DTLS_RECORD_LAYER_new"] = createExportWrapper("DTLS_RECORD_LAYER_new");

var _ssl3_new = Module["_ssl3_new"] = createExportWrapper("ssl3_new");

var _CRYPTO_zalloc = Module["_CRYPTO_zalloc"] = createExportWrapper("CRYPTO_zalloc");

var _ssl3_free = Module["_ssl3_free"] = createExportWrapper("ssl3_free");

var _pqueue_new = Module["_pqueue_new"] = createExportWrapper("pqueue_new");

var _pqueue_free = Module["_pqueue_free"] = createExportWrapper("pqueue_free");

var _pqueue_pop = Module["_pqueue_pop"] = createExportWrapper("pqueue_pop");

var _dtls1_hm_fragment_free = Module["_dtls1_hm_fragment_free"] = createExportWrapper("dtls1_hm_fragment_free");

var _pitem_free = Module["_pitem_free"] = createExportWrapper("pitem_free");

var _DTLS_RECORD_LAYER_free = Module["_DTLS_RECORD_LAYER_free"] = createExportWrapper("DTLS_RECORD_LAYER_free");

var _DTLS_RECORD_LAYER_clear = Module["_DTLS_RECORD_LAYER_clear"] = createExportWrapper("DTLS_RECORD_LAYER_clear");

var _SSL_get_options = Module["_SSL_get_options"] = createExportWrapper("SSL_get_options");

var _ssl3_clear = Module["_ssl3_clear"] = createExportWrapper("ssl3_clear");

var _SSL_get_wbio = Module["_SSL_get_wbio"] = createExportWrapper("SSL_get_wbio");

var _ossl_statem_fatal = Module["_ossl_statem_fatal"] = createExportWrapper("ossl_statem_fatal");

var _dtls1_retransmit_buffered_messages = Module["_dtls1_retransmit_buffered_messages"] = createExportWrapper("dtls1_retransmit_buffered_messages");

var _SSL_get_rbio = Module["_SSL_get_rbio"] = createExportWrapper("SSL_get_rbio");

var _SSL_clear = Module["_SSL_clear"] = createExportWrapper("SSL_clear");

var _ERR_put_error = Module["_ERR_put_error"] = createExportWrapper("ERR_put_error");

var _ssl3_setup_buffers = Module["_ssl3_setup_buffers"] = createExportWrapper("ssl3_setup_buffers");

var _BIO_read = Module["_BIO_read"] = createExportWrapper("BIO_read");

var _ssl_get_max_send_fragment = Module["_ssl_get_max_send_fragment"] = createExportWrapper("ssl_get_max_send_fragment");

var _WPACKET_init_static_len = Module["_WPACKET_init_static_len"] = createExportWrapper("WPACKET_init_static_len");

var _WPACKET_put_bytes__ = Module["_WPACKET_put_bytes__"] = createExportWrapper("WPACKET_put_bytes__");

var _WPACKET_memcpy = Module["_WPACKET_memcpy"] = createExportWrapper("WPACKET_memcpy");

var _WPACKET_start_sub_packet_len__ = Module["_WPACKET_start_sub_packet_len__"] = createExportWrapper("WPACKET_start_sub_packet_len__");

var _dtls_raw_hello_verify_request = Module["_dtls_raw_hello_verify_request"] = createExportWrapper("dtls_raw_hello_verify_request");

var _WPACKET_close = Module["_WPACKET_close"] = createExportWrapper("WPACKET_close");

var _WPACKET_get_total_written = Module["_WPACKET_get_total_written"] = createExportWrapper("WPACKET_get_total_written");

var _WPACKET_finish = Module["_WPACKET_finish"] = createExportWrapper("WPACKET_finish");

var _WPACKET_cleanup = Module["_WPACKET_cleanup"] = createExportWrapper("WPACKET_cleanup");

var _BIO_ADDR_new = Module["_BIO_ADDR_new"] = createExportWrapper("BIO_ADDR_new");

var _BIO_ADDR_free = Module["_BIO_ADDR_free"] = createExportWrapper("BIO_ADDR_free");

var _BIO_test_flags = Module["_BIO_test_flags"] = createExportWrapper("BIO_test_flags");

var _DTLS_RECORD_LAYER_set_write_sequence = Module["_DTLS_RECORD_LAYER_set_write_sequence"] = createExportWrapper("DTLS_RECORD_LAYER_set_write_sequence");

var _SSL_set_options = Module["_SSL_set_options"] = createExportWrapper("SSL_set_options");

var _ossl_statem_set_hello_verify_done = Module["_ossl_statem_set_hello_verify_done"] = createExportWrapper("ossl_statem_set_hello_verify_done");

var _BIO_ADDR_clear = Module["_BIO_ADDR_clear"] = createExportWrapper("BIO_ADDR_clear");

var _dtls_buffer_listen_record = Module["_dtls_buffer_listen_record"] = createExportWrapper("dtls_buffer_listen_record");

var _ssl_cipher_get_overhead = Module["_ssl_cipher_get_overhead"] = createExportWrapper("ssl_cipher_get_overhead");

var _tls1_enc = Module["_tls1_enc"] = createExportWrapper("tls1_enc");

var _tls1_mac = Module["_tls1_mac"] = createExportWrapper("tls1_mac");

var _tls1_setup_key_block = Module["_tls1_setup_key_block"] = createExportWrapper("tls1_setup_key_block");

var _tls1_generate_master_secret = Module["_tls1_generate_master_secret"] = createExportWrapper("tls1_generate_master_secret");

var _tls1_change_cipher_state = Module["_tls1_change_cipher_state"] = createExportWrapper("tls1_change_cipher_state");

var _tls1_final_finish_mac = Module["_tls1_final_finish_mac"] = createExportWrapper("tls1_final_finish_mac");

var _tls1_alert_code = Module["_tls1_alert_code"] = createExportWrapper("tls1_alert_code");

var _tls1_export_keying_material = Module["_tls1_export_keying_material"] = createExportWrapper("tls1_export_keying_material");

var _dtls1_set_handshake_header = Module["_dtls1_set_handshake_header"] = createExportWrapper("dtls1_set_handshake_header");

var _dtls1_close_construct_packet = Module["_dtls1_close_construct_packet"] = createExportWrapper("dtls1_close_construct_packet");

var _dtls1_read_bytes = Module["_dtls1_read_bytes"] = createExportWrapper("dtls1_read_bytes");

var _SSL_in_init = Module["_SSL_in_init"] = createExportWrapper("SSL_in_init");

var _ossl_statem_get_in_handshake = Module["_ossl_statem_get_in_handshake"] = createExportWrapper("ossl_statem_get_in_handshake");

var _dtls1_write_bytes = Module["_dtls1_write_bytes"] = createExportWrapper("dtls1_write_bytes");

var _do_dtls1_write = Module["_do_dtls1_write"] = createExportWrapper("do_dtls1_write");

var _WPACKET_allocate_bytes = Module["_WPACKET_allocate_bytes"] = createExportWrapper("WPACKET_allocate_bytes");

var _WPACKET_reserve_bytes = Module["_WPACKET_reserve_bytes"] = createExportWrapper("WPACKET_reserve_bytes");

var _WPACKET_sub_allocate_bytes__ = Module["_WPACKET_sub_allocate_bytes__"] = createExportWrapper("WPACKET_sub_allocate_bytes__");

var _BUF_MEM_grow = Module["_BUF_MEM_grow"] = createExportWrapper("BUF_MEM_grow");

var _WPACKET_get_curr = Module["_WPACKET_get_curr"] = createExportWrapper("WPACKET_get_curr");

var _WPACKET_sub_reserve_bytes__ = Module["_WPACKET_sub_reserve_bytes__"] = createExportWrapper("WPACKET_sub_reserve_bytes__");

var _WPACKET_init_len = Module["_WPACKET_init_len"] = createExportWrapper("WPACKET_init_len");

var _WPACKET_init = Module["_WPACKET_init"] = createExportWrapper("WPACKET_init");

var _WPACKET_set_flags = Module["_WPACKET_set_flags"] = createExportWrapper("WPACKET_set_flags");

var _WPACKET_fill_lengths = Module["_WPACKET_fill_lengths"] = createExportWrapper("WPACKET_fill_lengths");

var _WPACKET_start_sub_packet = Module["_WPACKET_start_sub_packet"] = createExportWrapper("WPACKET_start_sub_packet");

var _WPACKET_set_max_size = Module["_WPACKET_set_max_size"] = createExportWrapper("WPACKET_set_max_size");

var _WPACKET_memset = Module["_WPACKET_memset"] = createExportWrapper("WPACKET_memset");

var _WPACKET_sub_memcpy__ = Module["_WPACKET_sub_memcpy__"] = createExportWrapper("WPACKET_sub_memcpy__");

var _WPACKET_get_length = Module["_WPACKET_get_length"] = createExportWrapper("WPACKET_get_length");

var _pitem_new = Module["_pitem_new"] = createExportWrapper("pitem_new");

var _CRYPTO_malloc = Module["_CRYPTO_malloc"] = createExportWrapper("CRYPTO_malloc");

var _pqueue_insert = Module["_pqueue_insert"] = createExportWrapper("pqueue_insert");

var _pqueue_peek = Module["_pqueue_peek"] = createExportWrapper("pqueue_peek");

var _pqueue_find = Module["_pqueue_find"] = createExportWrapper("pqueue_find");

var _pqueue_iterator = Module["_pqueue_iterator"] = createExportWrapper("pqueue_iterator");

var _pqueue_next = Module["_pqueue_next"] = createExportWrapper("pqueue_next");

var _pqueue_size = Module["_pqueue_size"] = createExportWrapper("pqueue_size");

var _dtls1_record_replay_check = Module["_dtls1_record_replay_check"] = createExportWrapper("dtls1_record_replay_check");

var _dtls1_record_bitmap_update = Module["_dtls1_record_bitmap_update"] = createExportWrapper("dtls1_record_bitmap_update");

var _DTLS_RECORD_LAYER_set_saved_w_epoch = Module["_DTLS_RECORD_LAYER_set_saved_w_epoch"] = createExportWrapper("DTLS_RECORD_LAYER_set_saved_w_epoch");

var _dtls1_buffer_record = Module["_dtls1_buffer_record"] = createExportWrapper("dtls1_buffer_record");

var _dtls1_retrieve_buffered_record = Module["_dtls1_retrieve_buffered_record"] = createExportWrapper("dtls1_retrieve_buffered_record");

var _SSL3_BUFFER_release = Module["_SSL3_BUFFER_release"] = createExportWrapper("SSL3_BUFFER_release");

var _dtls1_process_buffered_records = Module["_dtls1_process_buffered_records"] = createExportWrapper("dtls1_process_buffered_records");

var _SSL3_RECORD_set_seq_num = Module["_SSL3_RECORD_set_seq_num"] = createExportWrapper("SSL3_RECORD_set_seq_num");

var _dtls1_process_record = Module["_dtls1_process_record"] = createExportWrapper("dtls1_process_record");

var _ossl_statem_in_error = Module["_ossl_statem_in_error"] = createExportWrapper("ossl_statem_in_error");

var _dtls1_get_bitmap = Module["_dtls1_get_bitmap"] = createExportWrapper("dtls1_get_bitmap");

var _SSL_is_init_finished = Module["_SSL_is_init_finished"] = createExportWrapper("SSL_is_init_finished");

var _dtls1_get_record = Module["_dtls1_get_record"] = createExportWrapper("dtls1_get_record");

var _dtls1_read_failed = Module["_dtls1_read_failed"] = createExportWrapper("dtls1_read_failed");

var _BIO_snprintf = Module["_BIO_snprintf"] = createExportWrapper("BIO_snprintf");

var _ERR_add_error_data = Module["_ERR_add_error_data"] = createExportWrapper("ERR_add_error_data");

var _SSL_CTX_remove_session = Module["_SSL_CTX_remove_session"] = createExportWrapper("SSL_CTX_remove_session");

var _dtls1_get_message_header = Module["_dtls1_get_message_header"] = createExportWrapper("dtls1_get_message_header");

var _BIO_clear_flags = Module["_BIO_clear_flags"] = createExportWrapper("BIO_clear_flags");

var _BIO_set_flags = Module["_BIO_set_flags"] = createExportWrapper("BIO_set_flags");

var _ossl_statem_set_in_init = Module["_ossl_statem_set_in_init"] = createExportWrapper("ossl_statem_set_in_init");

var _ossl_statem_app_data_allowed = Module["_ossl_statem_app_data_allowed"] = createExportWrapper("ossl_statem_app_data_allowed");

var _EVP_MD_CTX_md = Module["_EVP_MD_CTX_md"] = createExportWrapper("EVP_MD_CTX_md");

var _EVP_CIPHER_CTX_cipher = Module["_EVP_CIPHER_CTX_cipher"] = createExportWrapper("EVP_CIPHER_CTX_cipher");

var _EVP_CIPHER_CTX_iv_length = Module["_EVP_CIPHER_CTX_iv_length"] = createExportWrapper("EVP_CIPHER_CTX_iv_length");

var _ssl3_do_compress = Module["_ssl3_do_compress"] = createExportWrapper("ssl3_do_compress");

var _ssl3_record_sequence_update = Module["_ssl3_record_sequence_update"] = createExportWrapper("ssl3_record_sequence_update");

var _ssl3_write_pending = Module["_ssl3_write_pending"] = createExportWrapper("ssl3_write_pending");

var _dtls1_reset_seq_numbers = Module["_dtls1_reset_seq_numbers"] = createExportWrapper("dtls1_reset_seq_numbers");

var _RECORD_LAYER_init = Module["_RECORD_LAYER_init"] = createExportWrapper("RECORD_LAYER_init");

var _RECORD_LAYER_clear = Module["_RECORD_LAYER_clear"] = createExportWrapper("RECORD_LAYER_clear");

var _RECORD_LAYER_reset_read_sequence = Module["_RECORD_LAYER_reset_read_sequence"] = createExportWrapper("RECORD_LAYER_reset_read_sequence");

var _RECORD_LAYER_reset_write_sequence = Module["_RECORD_LAYER_reset_write_sequence"] = createExportWrapper("RECORD_LAYER_reset_write_sequence");

var _RECORD_LAYER_release = Module["_RECORD_LAYER_release"] = createExportWrapper("RECORD_LAYER_release");

var _RECORD_LAYER_read_pending = Module["_RECORD_LAYER_read_pending"] = createExportWrapper("RECORD_LAYER_read_pending");

var _RECORD_LAYER_processed_read_pending = Module["_RECORD_LAYER_processed_read_pending"] = createExportWrapper("RECORD_LAYER_processed_read_pending");

var _RECORD_LAYER_write_pending = Module["_RECORD_LAYER_write_pending"] = createExportWrapper("RECORD_LAYER_write_pending");

var _SSL3_RECORD_clear = Module["_SSL3_RECORD_clear"] = createExportWrapper("SSL3_RECORD_clear");

var _SSL3_BUFFER_clear = Module["_SSL3_BUFFER_clear"] = createExportWrapper("SSL3_BUFFER_clear");

var _ssl3_release_write_buffer = Module["_ssl3_release_write_buffer"] = createExportWrapper("ssl3_release_write_buffer");

var _ssl3_release_read_buffer = Module["_ssl3_release_read_buffer"] = createExportWrapper("ssl3_release_read_buffer");

var _SSL3_RECORD_release = Module["_SSL3_RECORD_release"] = createExportWrapper("SSL3_RECORD_release");

var _SSL_CTX_set_default_read_buffer_len = Module["_SSL_CTX_set_default_read_buffer_len"] = createExportWrapper("SSL_CTX_set_default_read_buffer_len");

var _SSL_set_default_read_buffer_len = Module["_SSL_set_default_read_buffer_len"] = createExportWrapper("SSL_set_default_read_buffer_len");

var _SSL_rstate_string_long = Module["_SSL_rstate_string_long"] = createExportWrapper("SSL_rstate_string_long");

var _SSL_rstate_string = Module["_SSL_rstate_string"] = createExportWrapper("SSL_rstate_string");

var _ssl3_read_n = Module["_ssl3_read_n"] = createExportWrapper("ssl3_read_n");

var _ssl3_setup_read_buffer = Module["_ssl3_setup_read_buffer"] = createExportWrapper("ssl3_setup_read_buffer");

var _early_data_count_ok = Module["_early_data_count_ok"] = createExportWrapper("early_data_count_ok");

var _ssl_get_split_send_fragment = Module["_ssl_get_split_send_fragment"] = createExportWrapper("ssl_get_split_send_fragment");

var _do_ssl3_write = Module["_do_ssl3_write"] = createExportWrapper("do_ssl3_write");

var _ssl3_setup_write_buffer = Module["_ssl3_setup_write_buffer"] = createExportWrapper("ssl3_setup_write_buffer");

var _SSL_get_state = Module["_SSL_get_state"] = createExportWrapper("SSL_get_state");

var _tls13_enc = Module["_tls13_enc"] = createExportWrapper("tls13_enc");

var _ssl3_get_record = Module["_ssl3_get_record"] = createExportWrapper("ssl3_get_record");

var _ossl_statem_skip_early_data = Module["_ossl_statem_skip_early_data"] = createExportWrapper("ossl_statem_skip_early_data");

var _RECORD_LAYER_is_sslv2_record = Module["_RECORD_LAYER_is_sslv2_record"] = createExportWrapper("RECORD_LAYER_is_sslv2_record");

var _RECORD_LAYER_get_rrec_length = Module["_RECORD_LAYER_get_rrec_length"] = createExportWrapper("RECORD_LAYER_get_rrec_length");

var _SSL3_BUFFER_set_data = Module["_SSL3_BUFFER_set_data"] = createExportWrapper("SSL3_BUFFER_set_data");

var _ssl_allow_compression = Module["_ssl_allow_compression"] = createExportWrapper("ssl_allow_compression");

var _CRYPTO_memcmp = Module["_CRYPTO_memcmp"] = createExportWrapper("CRYPTO_memcmp");

var _ssl3_cbc_copy_mac = Module["_ssl3_cbc_copy_mac"] = createExportWrapper("ssl3_cbc_copy_mac");

var _COMP_expand_block = Module["_COMP_expand_block"] = createExportWrapper("COMP_expand_block");

var _ssl3_do_uncompress = Module["_ssl3_do_uncompress"] = createExportWrapper("ssl3_do_uncompress");

var _COMP_compress_block = Module["_COMP_compress_block"] = createExportWrapper("COMP_compress_block");

var _ssl3_enc = Module["_ssl3_enc"] = createExportWrapper("ssl3_enc");

var _EVP_Cipher = Module["_EVP_Cipher"] = createExportWrapper("EVP_Cipher");

var _ssl3_cbc_remove_padding = Module["_ssl3_cbc_remove_padding"] = createExportWrapper("ssl3_cbc_remove_padding");

var _tls1_cbc_remove_padding = Module["_tls1_cbc_remove_padding"] = createExportWrapper("tls1_cbc_remove_padding");

var _n_ssl3_mac = Module["_n_ssl3_mac"] = createExportWrapper("n_ssl3_mac");

var _ssl3_cbc_record_digest_supported = Module["_ssl3_cbc_record_digest_supported"] = createExportWrapper("ssl3_cbc_record_digest_supported");

var _ssl3_cbc_digest_record = Module["_ssl3_cbc_digest_record"] = createExportWrapper("ssl3_cbc_digest_record");

var _EVP_MD_CTX_copy_ex = Module["_EVP_MD_CTX_copy_ex"] = createExportWrapper("EVP_MD_CTX_copy_ex");

var _EVP_DigestFinal_ex = Module["_EVP_DigestFinal_ex"] = createExportWrapper("EVP_DigestFinal_ex");

var _EVP_MD_CTX_copy = Module["_EVP_MD_CTX_copy"] = createExportWrapper("EVP_MD_CTX_copy");

var _EVP_DigestSignFinal = Module["_EVP_DigestSignFinal"] = createExportWrapper("EVP_DigestSignFinal");

var _EVP_CipherFinal_ex = Module["_EVP_CipherFinal_ex"] = createExportWrapper("EVP_CipherFinal_ex");

var _EVP_MD_type = Module["_EVP_MD_type"] = createExportWrapper("EVP_MD_type");

var _MD5_Init = Module["_MD5_Init"] = createExportWrapper("MD5_Init");

var _MD5_Transform = Module["_MD5_Transform"] = createExportWrapper("MD5_Transform");

var _SHA1_Init = Module["_SHA1_Init"] = createExportWrapper("SHA1_Init");

var _SHA1_Transform = Module["_SHA1_Transform"] = createExportWrapper("SHA1_Transform");

var _SHA224_Init = Module["_SHA224_Init"] = createExportWrapper("SHA224_Init");

var _SHA256_Transform = Module["_SHA256_Transform"] = createExportWrapper("SHA256_Transform");

var _SHA256_Init = Module["_SHA256_Init"] = createExportWrapper("SHA256_Init");

var _SHA384_Init = Module["_SHA384_Init"] = createExportWrapper("SHA384_Init");

var _SHA512_Transform = Module["_SHA512_Transform"] = createExportWrapper("SHA512_Transform");

var _SHA512_Init = Module["_SHA512_Init"] = createExportWrapper("SHA512_Init");

var _EVP_DigestInit_ex = Module["_EVP_DigestInit_ex"] = createExportWrapper("EVP_DigestInit_ex");

var _ssl3_change_cipher_state = Module["_ssl3_change_cipher_state"] = createExportWrapper("ssl3_change_cipher_state");

var _ssl3_setup_key_block = Module["_ssl3_setup_key_block"] = createExportWrapper("ssl3_setup_key_block");

var _ssl3_cleanup_key_block = Module["_ssl3_cleanup_key_block"] = createExportWrapper("ssl3_cleanup_key_block");

var _ssl3_init_finished_mac = Module["_ssl3_init_finished_mac"] = createExportWrapper("ssl3_init_finished_mac");

var _ssl3_free_digest_list = Module["_ssl3_free_digest_list"] = createExportWrapper("ssl3_free_digest_list");

var _ssl3_finish_mac = Module["_ssl3_finish_mac"] = createExportWrapper("ssl3_finish_mac");

var _ssl3_digest_cached_records = Module["_ssl3_digest_cached_records"] = createExportWrapper("ssl3_digest_cached_records");

var _ssl3_final_finish_mac = Module["_ssl3_final_finish_mac"] = createExportWrapper("ssl3_final_finish_mac");

var _ssl3_generate_master_secret = Module["_ssl3_generate_master_secret"] = createExportWrapper("ssl3_generate_master_secret");

var _ssl3_alert_code = Module["_ssl3_alert_code"] = createExportWrapper("ssl3_alert_code");

var _ssl_sort_cipher_list = Module["_ssl_sort_cipher_list"] = createExportWrapper("ssl_sort_cipher_list");

var _ssl3_set_handshake_header = Module["_ssl3_set_handshake_header"] = createExportWrapper("ssl3_set_handshake_header");

var _ssl3_handshake_write = Module["_ssl3_handshake_write"] = createExportWrapper("ssl3_handshake_write");

var _ssl3_default_timeout = Module["_ssl3_default_timeout"] = createExportWrapper("ssl3_default_timeout");

var _ssl3_do_write = Module["_ssl3_do_write"] = createExportWrapper("ssl3_do_write");

var _SSL_SRP_CTX_init = Module["_SSL_SRP_CTX_init"] = createExportWrapper("SSL_SRP_CTX_init");

var _ssl_replace_hash = Module["_ssl_replace_hash"] = createExportWrapper("ssl_replace_hash");

var _COMP_CTX_free = Module["_COMP_CTX_free"] = createExportWrapper("COMP_CTX_free");

var _COMP_CTX_new = Module["_COMP_CTX_new"] = createExportWrapper("COMP_CTX_new");

var _ssl_cipher_get_evp = Module["_ssl_cipher_get_evp"] = createExportWrapper("ssl_cipher_get_evp");

var _CRYPTO_clear_free = Module["_CRYPTO_clear_free"] = createExportWrapper("CRYPTO_clear_free");

var _EVP_MD_CTX_set_flags = Module["_EVP_MD_CTX_set_flags"] = createExportWrapper("EVP_MD_CTX_set_flags");

var _OPENSSL_cleanse = Module["_OPENSSL_cleanse"] = createExportWrapper("OPENSSL_cleanse");

var _ssl_handshake_md = Module["_ssl_handshake_md"] = createExportWrapper("ssl_handshake_md");

var _EVP_MD_CTX_ctrl = Module["_EVP_MD_CTX_ctrl"] = createExportWrapper("EVP_MD_CTX_ctrl");

var _X509_NAME_free = Module["_X509_NAME_free"] = createExportWrapper("X509_NAME_free");

var _SSL_SRP_CTX_free = Module["_SSL_SRP_CTX_free"] = createExportWrapper("SSL_SRP_CTX_free");

var _ssl_free_wbio_buffer = Module["_ssl_free_wbio_buffer"] = createExportWrapper("ssl_free_wbio_buffer");

var _ssl_dh_to_pkey = Module["_ssl_dh_to_pkey"] = createExportWrapper("ssl_dh_to_pkey");

var _EVP_PKEY_security_bits = Module["_EVP_PKEY_security_bits"] = createExportWrapper("EVP_PKEY_security_bits");

var _ssl_security = Module["_ssl_security"] = createExportWrapper("ssl_security");

var _tls1_set_groups = Module["_tls1_set_groups"] = createExportWrapper("tls1_set_groups");

var _CRYPTO_strdup = Module["_CRYPTO_strdup"] = createExportWrapper("CRYPTO_strdup");

var _ssl_cert_set1_chain = Module["_ssl_cert_set1_chain"] = createExportWrapper("ssl_cert_set1_chain");

var _ssl_cert_set0_chain = Module["_ssl_cert_set0_chain"] = createExportWrapper("ssl_cert_set0_chain");

var _ssl_cert_add1_chain_cert = Module["_ssl_cert_add1_chain_cert"] = createExportWrapper("ssl_cert_add1_chain_cert");

var _ssl_cert_add0_chain_cert = Module["_ssl_cert_add0_chain_cert"] = createExportWrapper("ssl_cert_add0_chain_cert");

var _ssl_cert_select_current = Module["_ssl_cert_select_current"] = createExportWrapper("ssl_cert_select_current");

var _ssl_cert_set_current = Module["_ssl_cert_set_current"] = createExportWrapper("ssl_cert_set_current");

var _tls1_group_id_lookup = Module["_tls1_group_id_lookup"] = createExportWrapper("tls1_group_id_lookup");

var _tls1_set_groups_list = Module["_tls1_set_groups_list"] = createExportWrapper("tls1_set_groups_list");

var _tls1_shared_group = Module["_tls1_shared_group"] = createExportWrapper("tls1_shared_group");

var _tls1_set_sigalgs = Module["_tls1_set_sigalgs"] = createExportWrapper("tls1_set_sigalgs");

var _tls1_set_sigalgs_list = Module["_tls1_set_sigalgs_list"] = createExportWrapper("tls1_set_sigalgs_list");

var _ssl_build_cert_chain = Module["_ssl_build_cert_chain"] = createExportWrapper("ssl_build_cert_chain");

var _ssl_cert_set_cert_store = Module["_ssl_cert_set_cert_store"] = createExportWrapper("ssl_cert_set_cert_store");

var _ssl_cert_get_cert_store = Module["_ssl_cert_get_cert_store"] = createExportWrapper("ssl_cert_get_cert_store");

var _EVP_PKEY_set1_DH = Module["_EVP_PKEY_set1_DH"] = createExportWrapper("EVP_PKEY_set1_DH");

var _CRYPTO_memdup = Module["_CRYPTO_memdup"] = createExportWrapper("CRYPTO_memdup");

var _ssl_ctx_security = Module["_ssl_ctx_security"] = createExportWrapper("ssl_ctx_security");

var _ssl3_get_cipher_by_id = Module["_ssl3_get_cipher_by_id"] = createExportWrapper("ssl3_get_cipher_by_id");

var _OBJ_bsearch_ssl_cipher_id = Module["_OBJ_bsearch_ssl_cipher_id"] = createExportWrapper("OBJ_bsearch_ssl_cipher_id");

var _ssl3_get_cipher_by_std_name = Module["_ssl3_get_cipher_by_std_name"] = createExportWrapper("ssl3_get_cipher_by_std_name");

var _ssl3_choose_cipher = Module["_ssl3_choose_cipher"] = createExportWrapper("ssl3_choose_cipher");

var _OPENSSL_sk_new_reserve = Module["_OPENSSL_sk_new_reserve"] = createExportWrapper("OPENSSL_sk_new_reserve");

var _tls1_set_cert_validity = Module["_tls1_set_cert_validity"] = createExportWrapper("tls1_set_cert_validity");

var _ssl_set_masks = Module["_ssl_set_masks"] = createExportWrapper("ssl_set_masks");

var _tls1_check_ec_tmp_key = Module["_tls1_check_ec_tmp_key"] = createExportWrapper("tls1_check_ec_tmp_key");

var _OPENSSL_sk_find = Module["_OPENSSL_sk_find"] = createExportWrapper("OPENSSL_sk_find");

var _ssl3_get_req_cert_type = Module["_ssl3_get_req_cert_type"] = createExportWrapper("ssl3_get_req_cert_type");

var _ssl_set_sig_mask = Module["_ssl_set_sig_mask"] = createExportWrapper("ssl_set_sig_mask");

var _SSL_in_before = Module["_SSL_in_before"] = createExportWrapper("SSL_in_before");

var _ssl3_send_alert = Module["_ssl3_send_alert"] = createExportWrapper("ssl3_send_alert");

var _ossl_statem_set_renegotiate = Module["_ossl_statem_set_renegotiate"] = createExportWrapper("ossl_statem_set_renegotiate");

var _ossl_statem_set_in_handshake = Module["_ossl_statem_set_in_handshake"] = createExportWrapper("ossl_statem_set_in_handshake");

var _ssl_get_algorithm2 = Module["_ssl_get_algorithm2"] = createExportWrapper("ssl_get_algorithm2");

var _ssl_fill_hello_random = Module["_ssl_fill_hello_random"] = createExportWrapper("ssl_fill_hello_random");

var _ssl_generate_master_secret = Module["_ssl_generate_master_secret"] = createExportWrapper("ssl_generate_master_secret");

var _ssl_generate_pkey = Module["_ssl_generate_pkey"] = createExportWrapper("ssl_generate_pkey");

var _ssl_generate_pkey_group = Module["_ssl_generate_pkey_group"] = createExportWrapper("ssl_generate_pkey_group");

var _ssl_generate_param_group = Module["_ssl_generate_param_group"] = createExportWrapper("ssl_generate_param_group");

var _EVP_PKEY_set_type = Module["_EVP_PKEY_set_type"] = createExportWrapper("EVP_PKEY_set_type");

var _ssl_derive = Module["_ssl_derive"] = createExportWrapper("ssl_derive");

var _tls13_generate_secret = Module["_tls13_generate_secret"] = createExportWrapper("tls13_generate_secret");

var _tls13_generate_handshake_secret = Module["_tls13_generate_handshake_secret"] = createExportWrapper("tls13_generate_handshake_secret");

var _tls_close_construct_packet = Module["_tls_close_construct_packet"] = createExportWrapper("tls_close_construct_packet");

var _ssl3_do_change_cipher_spec = Module["_ssl3_do_change_cipher_spec"] = createExportWrapper("ssl3_do_change_cipher_spec");

var _tls13_alert_code = Module["_tls13_alert_code"] = createExportWrapper("tls13_alert_code");

var _i2d_SSL_SESSION = Module["_i2d_SSL_SESSION"] = createExportWrapper("i2d_SSL_SESSION");

var _d2i_SSL_SESSION = Module["_d2i_SSL_SESSION"] = createExportWrapper("d2i_SSL_SESSION");

var _CRYPTO_THREAD_run_once = Module["_CRYPTO_THREAD_run_once"] = createExportWrapper("CRYPTO_THREAD_run_once");

var _ssl_cert_new = Module["_ssl_cert_new"] = createExportWrapper("ssl_cert_new");

var _CRYPTO_THREAD_lock_new = Module["_CRYPTO_THREAD_lock_new"] = createExportWrapper("CRYPTO_THREAD_lock_new");

var _SSL_CTX_get_security_level = Module["_SSL_CTX_get_security_level"] = createExportWrapper("SSL_CTX_get_security_level");

var _SSL_get_security_level = Module["_SSL_get_security_level"] = createExportWrapper("SSL_get_security_level");

var _ssl_cert_dup = Module["_ssl_cert_dup"] = createExportWrapper("ssl_cert_dup");

var _X509_up_ref = Module["_X509_up_ref"] = createExportWrapper("X509_up_ref");

var _X509_chain_up_ref = Module["_X509_chain_up_ref"] = createExportWrapper("X509_chain_up_ref");

var _X509_STORE_up_ref = Module["_X509_STORE_up_ref"] = createExportWrapper("X509_STORE_up_ref");

var _custom_exts_copy = Module["_custom_exts_copy"] = createExportWrapper("custom_exts_copy");

var _ssl_cert_free = Module["_ssl_cert_free"] = createExportWrapper("ssl_cert_free");

var _ssl_cert_clear_certs = Module["_ssl_cert_clear_certs"] = createExportWrapper("ssl_cert_clear_certs");

var _custom_exts_free = Module["_custom_exts_free"] = createExportWrapper("custom_exts_free");

var _CRYPTO_THREAD_lock_free = Module["_CRYPTO_THREAD_lock_free"] = createExportWrapper("CRYPTO_THREAD_lock_free");

var _ssl_security_cert = Module["_ssl_security_cert"] = createExportWrapper("ssl_security_cert");

var _X509_cmp = Module["_X509_cmp"] = createExportWrapper("X509_cmp");

var _ssl_cert_set_cert_cb = Module["_ssl_cert_set_cert_cb"] = createExportWrapper("ssl_cert_set_cert_cb");

var _ssl_verify_cert_chain = Module["_ssl_verify_cert_chain"] = createExportWrapper("ssl_verify_cert_chain");

var _X509_STORE_CTX_get0_param = Module["_X509_STORE_CTX_get0_param"] = createExportWrapper("X509_STORE_CTX_get0_param");

var _X509_VERIFY_PARAM_set_auth_level = Module["_X509_VERIFY_PARAM_set_auth_level"] = createExportWrapper("X509_VERIFY_PARAM_set_auth_level");

var _X509_STORE_CTX_set_flags = Module["_X509_STORE_CTX_set_flags"] = createExportWrapper("X509_STORE_CTX_set_flags");

var _X509_STORE_CTX_set_ex_data = Module["_X509_STORE_CTX_set_ex_data"] = createExportWrapper("X509_STORE_CTX_set_ex_data");

var _X509_STORE_CTX_set0_dane = Module["_X509_STORE_CTX_set0_dane"] = createExportWrapper("X509_STORE_CTX_set0_dane");

var _X509_STORE_CTX_set_default = Module["_X509_STORE_CTX_set_default"] = createExportWrapper("X509_STORE_CTX_set_default");

var _X509_VERIFY_PARAM_set1 = Module["_X509_VERIFY_PARAM_set1"] = createExportWrapper("X509_VERIFY_PARAM_set1");

var _X509_STORE_CTX_set_verify_cb = Module["_X509_STORE_CTX_set_verify_cb"] = createExportWrapper("X509_STORE_CTX_set_verify_cb");

var _X509_STORE_CTX_get0_chain = Module["_X509_STORE_CTX_get0_chain"] = createExportWrapper("X509_STORE_CTX_get0_chain");

var _X509_STORE_CTX_get1_chain = Module["_X509_STORE_CTX_get1_chain"] = createExportWrapper("X509_STORE_CTX_get1_chain");

var _X509_VERIFY_PARAM_move_peername = Module["_X509_VERIFY_PARAM_move_peername"] = createExportWrapper("X509_VERIFY_PARAM_move_peername");

var _SSL_dup_CA_list = Module["_SSL_dup_CA_list"] = createExportWrapper("SSL_dup_CA_list");

var _X509_NAME_dup = Module["_X509_NAME_dup"] = createExportWrapper("X509_NAME_dup");

var _SSL_set0_CA_list = Module["_SSL_set0_CA_list"] = createExportWrapper("SSL_set0_CA_list");

var _SSL_CTX_set0_CA_list = Module["_SSL_CTX_set0_CA_list"] = createExportWrapper("SSL_CTX_set0_CA_list");

var _SSL_CTX_get0_CA_list = Module["_SSL_CTX_get0_CA_list"] = createExportWrapper("SSL_CTX_get0_CA_list");

var _SSL_get0_CA_list = Module["_SSL_get0_CA_list"] = createExportWrapper("SSL_get0_CA_list");

var _SSL_CTX_get_client_CA_list = Module["_SSL_CTX_get_client_CA_list"] = createExportWrapper("SSL_CTX_get_client_CA_list");

var _SSL_set_client_CA_list = Module["_SSL_set_client_CA_list"] = createExportWrapper("SSL_set_client_CA_list");

var _SSL_get0_peer_CA_list = Module["_SSL_get0_peer_CA_list"] = createExportWrapper("SSL_get0_peer_CA_list");

var _SSL_get_client_CA_list = Module["_SSL_get_client_CA_list"] = createExportWrapper("SSL_get_client_CA_list");

var _SSL_add1_to_CA_list = Module["_SSL_add1_to_CA_list"] = createExportWrapper("SSL_add1_to_CA_list");

var _SSL_CTX_add1_to_CA_list = Module["_SSL_CTX_add1_to_CA_list"] = createExportWrapper("SSL_CTX_add1_to_CA_list");

var _SSL_add_client_CA = Module["_SSL_add_client_CA"] = createExportWrapper("SSL_add_client_CA");

var _SSL_CTX_add_client_CA = Module["_SSL_CTX_add_client_CA"] = createExportWrapper("SSL_CTX_add_client_CA");

var _BIO_s_file = Module["_BIO_s_file"] = createExportWrapper("BIO_s_file");

var _OPENSSL_LH_new = Module["_OPENSSL_LH_new"] = createExportWrapper("OPENSSL_LH_new");

var _OPENSSL_LH_retrieve = Module["_OPENSSL_LH_retrieve"] = createExportWrapper("OPENSSL_LH_retrieve");

var _OPENSSL_LH_insert = Module["_OPENSSL_LH_insert"] = createExportWrapper("OPENSSL_LH_insert");

var _OPENSSL_LH_free = Module["_OPENSSL_LH_free"] = createExportWrapper("OPENSSL_LH_free");

var _X509_NAME_hash = Module["_X509_NAME_hash"] = createExportWrapper("X509_NAME_hash");

var _i2d_X509_NAME = Module["_i2d_X509_NAME"] = createExportWrapper("i2d_X509_NAME");

var _SSL_add_file_cert_subjects_to_stack = Module["_SSL_add_file_cert_subjects_to_stack"] = createExportWrapper("SSL_add_file_cert_subjects_to_stack");

var _OPENSSL_sk_set_cmp_func = Module["_OPENSSL_sk_set_cmp_func"] = createExportWrapper("OPENSSL_sk_set_cmp_func");

var _SSL_add_dir_cert_subjects_to_stack = Module["_SSL_add_dir_cert_subjects_to_stack"] = createExportWrapper("SSL_add_dir_cert_subjects_to_stack");

var _OPENSSL_DIR_read = Module["_OPENSSL_DIR_read"] = createExportWrapper("OPENSSL_DIR_read");

var _OPENSSL_DIR_end = Module["_OPENSSL_DIR_end"] = createExportWrapper("OPENSSL_DIR_end");

var _X509_get_extension_flags = Module["_X509_get_extension_flags"] = createExportWrapper("X509_get_extension_flags");

var _ssl_get_security_level_bits = Module["_ssl_get_security_level_bits"] = createExportWrapper("ssl_get_security_level_bits");

var _ssl_cert_lookup_by_nid = Module["_ssl_cert_lookup_by_nid"] = createExportWrapper("ssl_cert_lookup_by_nid");

var _ssl_cert_lookup_by_pkey = Module["_ssl_cert_lookup_by_pkey"] = createExportWrapper("ssl_cert_lookup_by_pkey");

var _EVP_PKEY_id = Module["_EVP_PKEY_id"] = createExportWrapper("EVP_PKEY_id");

var _ssl_cert_lookup_by_idx = Module["_ssl_cert_lookup_by_idx"] = createExportWrapper("ssl_cert_lookup_by_idx");

var _ssl_load_ciphers = Module["_ssl_load_ciphers"] = createExportWrapper("ssl_load_ciphers");

var _EVP_PKEY_asn1_find_str = Module["_EVP_PKEY_asn1_find_str"] = createExportWrapper("EVP_PKEY_asn1_find_str");

var _EVP_PKEY_asn1_get0_info = Module["_EVP_PKEY_asn1_get0_info"] = createExportWrapper("EVP_PKEY_asn1_get0_info");

var _EVP_enc_null = Module["_EVP_enc_null"] = createExportWrapper("EVP_enc_null");

var _ssl_md = Module["_ssl_md"] = createExportWrapper("ssl_md");

var _ssl_prf_md = Module["_ssl_prf_md"] = createExportWrapper("ssl_prf_md");

var _SSL_CTX_set_ciphersuites = Module["_SSL_CTX_set_ciphersuites"] = createExportWrapper("SSL_CTX_set_ciphersuites");

var _CONF_parse_list = Module["_CONF_parse_list"] = createExportWrapper("CONF_parse_list");

var _OPENSSL_sk_dup = Module["_OPENSSL_sk_dup"] = createExportWrapper("OPENSSL_sk_dup");

var _OPENSSL_sk_delete = Module["_OPENSSL_sk_delete"] = createExportWrapper("OPENSSL_sk_delete");

var _OPENSSL_sk_insert = Module["_OPENSSL_sk_insert"] = createExportWrapper("OPENSSL_sk_insert");

var _ssl_cipher_ptr_id_cmp = Module["_ssl_cipher_ptr_id_cmp"] = createExportWrapper("ssl_cipher_ptr_id_cmp");

var _OPENSSL_sk_sort = Module["_OPENSSL_sk_sort"] = createExportWrapper("OPENSSL_sk_sort");

var _SSL_set_ciphersuites = Module["_SSL_set_ciphersuites"] = createExportWrapper("SSL_set_ciphersuites");

var _SSL_get_ciphers = Module["_SSL_get_ciphers"] = createExportWrapper("SSL_get_ciphers");

var _ssl_create_cipher_list = Module["_ssl_create_cipher_list"] = createExportWrapper("ssl_create_cipher_list");

var _SSL_CIPHER_description = Module["_SSL_CIPHER_description"] = createExportWrapper("SSL_CIPHER_description");

var _ssl_protocol_to_string = Module["_ssl_protocol_to_string"] = createExportWrapper("ssl_protocol_to_string");

var _SSL_CIPHER_standard_name = Module["_SSL_CIPHER_standard_name"] = createExportWrapper("SSL_CIPHER_standard_name");

var _OPENSSL_cipher_name = Module["_OPENSSL_cipher_name"] = createExportWrapper("OPENSSL_cipher_name");

var _SSL_CIPHER_get_id = Module["_SSL_CIPHER_get_id"] = createExportWrapper("SSL_CIPHER_get_id");

var _SSL_CIPHER_get_protocol_id = Module["_SSL_CIPHER_get_protocol_id"] = createExportWrapper("SSL_CIPHER_get_protocol_id");

var _ssl3_comp_find = Module["_ssl3_comp_find"] = createExportWrapper("ssl3_comp_find");

var _SSL_COMP_get_compression_methods = Module["_SSL_COMP_get_compression_methods"] = createExportWrapper("SSL_COMP_get_compression_methods");

var _SSL_COMP_set0_compression_methods = Module["_SSL_COMP_set0_compression_methods"] = createExportWrapper("SSL_COMP_set0_compression_methods");

var _ssl_comp_free_compression_methods_int = Module["_ssl_comp_free_compression_methods_int"] = createExportWrapper("ssl_comp_free_compression_methods_int");

var _SSL_COMP_add_compression_method = Module["_SSL_COMP_add_compression_method"] = createExportWrapper("SSL_COMP_add_compression_method");

var _COMP_get_type = Module["_COMP_get_type"] = createExportWrapper("COMP_get_type");

var _CRYPTO_mem_ctrl = Module["_CRYPTO_mem_ctrl"] = createExportWrapper("CRYPTO_mem_ctrl");

var _SSL_COMP_get_name = Module["_SSL_COMP_get_name"] = createExportWrapper("SSL_COMP_get_name");

var _COMP_get_name = Module["_COMP_get_name"] = createExportWrapper("COMP_get_name");

var _SSL_COMP_get0_name = Module["_SSL_COMP_get0_name"] = createExportWrapper("SSL_COMP_get0_name");

var _SSL_COMP_get_id = Module["_SSL_COMP_get_id"] = createExportWrapper("SSL_COMP_get_id");

var _ssl_get_cipher_by_char = Module["_ssl_get_cipher_by_char"] = createExportWrapper("ssl_get_cipher_by_char");

var _SSL_CIPHER_find = Module["_SSL_CIPHER_find"] = createExportWrapper("SSL_CIPHER_find");

var _SSL_CIPHER_get_cipher_nid = Module["_SSL_CIPHER_get_cipher_nid"] = createExportWrapper("SSL_CIPHER_get_cipher_nid");

var _SSL_CIPHER_get_digest_nid = Module["_SSL_CIPHER_get_digest_nid"] = createExportWrapper("SSL_CIPHER_get_digest_nid");

var _SSL_CIPHER_get_kx_nid = Module["_SSL_CIPHER_get_kx_nid"] = createExportWrapper("SSL_CIPHER_get_kx_nid");

var _SSL_CIPHER_get_auth_nid = Module["_SSL_CIPHER_get_auth_nid"] = createExportWrapper("SSL_CIPHER_get_auth_nid");

var _SSL_CIPHER_get_handshake_digest = Module["_SSL_CIPHER_get_handshake_digest"] = createExportWrapper("SSL_CIPHER_get_handshake_digest");

var _SSL_CIPHER_is_aead = Module["_SSL_CIPHER_is_aead"] = createExportWrapper("SSL_CIPHER_is_aead");

var _ssl_cert_is_disabled = Module["_ssl_cert_is_disabled"] = createExportWrapper("ssl_cert_is_disabled");

var _COMP_zlib = Module["_COMP_zlib"] = createExportWrapper("COMP_zlib");

var _OPENSSL_sk_new = Module["_OPENSSL_sk_new"] = createExportWrapper("OPENSSL_sk_new");

var _SSL_CONF_cmd = Module["_SSL_CONF_cmd"] = createExportWrapper("SSL_CONF_cmd");

var _SSL_CONF_cmd_argv = Module["_SSL_CONF_cmd_argv"] = createExportWrapper("SSL_CONF_cmd_argv");

var _SSL_CONF_cmd_value_type = Module["_SSL_CONF_cmd_value_type"] = createExportWrapper("SSL_CONF_cmd_value_type");

var _SSL_CONF_CTX_new = Module["_SSL_CONF_CTX_new"] = createExportWrapper("SSL_CONF_CTX_new");

var _SSL_CONF_CTX_finish = Module["_SSL_CONF_CTX_finish"] = createExportWrapper("SSL_CONF_CTX_finish");

var _SSL_CONF_CTX_free = Module["_SSL_CONF_CTX_free"] = createExportWrapper("SSL_CONF_CTX_free");

var _SSL_CONF_CTX_set_flags = Module["_SSL_CONF_CTX_set_flags"] = createExportWrapper("SSL_CONF_CTX_set_flags");

var _SSL_CONF_CTX_clear_flags = Module["_SSL_CONF_CTX_clear_flags"] = createExportWrapper("SSL_CONF_CTX_clear_flags");

var _SSL_CONF_CTX_set1_prefix = Module["_SSL_CONF_CTX_set1_prefix"] = createExportWrapper("SSL_CONF_CTX_set1_prefix");

var _SSL_CONF_CTX_set_ssl = Module["_SSL_CONF_CTX_set_ssl"] = createExportWrapper("SSL_CONF_CTX_set_ssl");

var _SSL_CONF_CTX_set_ssl_ctx = Module["_SSL_CONF_CTX_set_ssl_ctx"] = createExportWrapper("SSL_CONF_CTX_set_ssl_ctx");

var _OPENSSL_init_crypto = Module["_OPENSSL_init_crypto"] = createExportWrapper("OPENSSL_init_crypto");

var _EVP_add_cipher = Module["_EVP_add_cipher"] = createExportWrapper("EVP_add_cipher");

var _EVP_idea_cbc = Module["_EVP_idea_cbc"] = createExportWrapper("EVP_idea_cbc");

var _EVP_rc4 = Module["_EVP_rc4"] = createExportWrapper("EVP_rc4");

var _EVP_rc4_hmac_md5 = Module["_EVP_rc4_hmac_md5"] = createExportWrapper("EVP_rc4_hmac_md5");

var _EVP_aes_128_gcm = Module["_EVP_aes_128_gcm"] = createExportWrapper("EVP_aes_128_gcm");

var _EVP_aes_256_gcm = Module["_EVP_aes_256_gcm"] = createExportWrapper("EVP_aes_256_gcm");

var _EVP_aes_128_ccm = Module["_EVP_aes_128_ccm"] = createExportWrapper("EVP_aes_128_ccm");

var _EVP_aes_256_ccm = Module["_EVP_aes_256_ccm"] = createExportWrapper("EVP_aes_256_ccm");

var _EVP_aes_128_cbc_hmac_sha1 = Module["_EVP_aes_128_cbc_hmac_sha1"] = createExportWrapper("EVP_aes_128_cbc_hmac_sha1");

var _EVP_aes_256_cbc_hmac_sha1 = Module["_EVP_aes_256_cbc_hmac_sha1"] = createExportWrapper("EVP_aes_256_cbc_hmac_sha1");

var _EVP_aes_128_cbc_hmac_sha256 = Module["_EVP_aes_128_cbc_hmac_sha256"] = createExportWrapper("EVP_aes_128_cbc_hmac_sha256");

var _EVP_aes_256_cbc_hmac_sha256 = Module["_EVP_aes_256_cbc_hmac_sha256"] = createExportWrapper("EVP_aes_256_cbc_hmac_sha256");

var _EVP_aria_128_gcm = Module["_EVP_aria_128_gcm"] = createExportWrapper("EVP_aria_128_gcm");

var _EVP_aria_256_gcm = Module["_EVP_aria_256_gcm"] = createExportWrapper("EVP_aria_256_gcm");

var _EVP_camellia_128_cbc = Module["_EVP_camellia_128_cbc"] = createExportWrapper("EVP_camellia_128_cbc");

var _EVP_camellia_256_cbc = Module["_EVP_camellia_256_cbc"] = createExportWrapper("EVP_camellia_256_cbc");

var _EVP_chacha20_poly1305 = Module["_EVP_chacha20_poly1305"] = createExportWrapper("EVP_chacha20_poly1305");

var _EVP_seed_cbc = Module["_EVP_seed_cbc"] = createExportWrapper("EVP_seed_cbc");

var _EVP_add_digest = Module["_EVP_add_digest"] = createExportWrapper("EVP_add_digest");

var _OBJ_NAME_add = Module["_OBJ_NAME_add"] = createExportWrapper("OBJ_NAME_add");

var _EVP_md5_sha1 = Module["_EVP_md5_sha1"] = createExportWrapper("EVP_md5_sha1");

var _OPENSSL_atexit = Module["_OPENSSL_atexit"] = createExportWrapper("OPENSSL_atexit");

var _ssl_clear_bad_session = Module["_ssl_clear_bad_session"] = createExportWrapper("ssl_clear_bad_session");

var _SSL_SESSION_free = Module["_SSL_SESSION_free"] = createExportWrapper("SSL_SESSION_free");

var _ossl_statem_clear = Module["_ossl_statem_clear"] = createExportWrapper("ossl_statem_clear");

var _BUF_MEM_free = Module["_BUF_MEM_free"] = createExportWrapper("BUF_MEM_free");

var _SSL_CTX_set_ssl_version = Module["_SSL_CTX_set_ssl_version"] = createExportWrapper("SSL_CTX_set_ssl_version");

var _X509_VERIFY_PARAM_new = Module["_X509_VERIFY_PARAM_new"] = createExportWrapper("X509_VERIFY_PARAM_new");

var _X509_VERIFY_PARAM_inherit = Module["_X509_VERIFY_PARAM_inherit"] = createExportWrapper("X509_VERIFY_PARAM_inherit");

var _CRYPTO_new_ex_data = Module["_CRYPTO_new_ex_data"] = createExportWrapper("CRYPTO_new_ex_data");

var _SSL_set_ct_validation_callback = Module["_SSL_set_ct_validation_callback"] = createExportWrapper("SSL_set_ct_validation_callback");

var _SSL_CTX_up_ref = Module["_SSL_CTX_up_ref"] = createExportWrapper("SSL_CTX_up_ref");

var _SSL_CTX_has_client_custom_ext = Module["_SSL_CTX_has_client_custom_ext"] = createExportWrapper("SSL_CTX_has_client_custom_ext");

var _X509_VERIFY_PARAM_free = Module["_X509_VERIFY_PARAM_free"] = createExportWrapper("X509_VERIFY_PARAM_free");

var _CRYPTO_free_ex_data = Module["_CRYPTO_free_ex_data"] = createExportWrapper("CRYPTO_free_ex_data");

var _BIO_pop = Module["_BIO_pop"] = createExportWrapper("BIO_pop");

var _X509_EXTENSION_free = Module["_X509_EXTENSION_free"] = createExportWrapper("X509_EXTENSION_free");

var _SCT_LIST_free = Module["_SCT_LIST_free"] = createExportWrapper("SCT_LIST_free");

var _ASYNC_WAIT_CTX_free = Module["_ASYNC_WAIT_CTX_free"] = createExportWrapper("ASYNC_WAIT_CTX_free");

var _SSL_is_dtls = Module["_SSL_is_dtls"] = createExportWrapper("SSL_is_dtls");

var _SSL_up_ref = Module["_SSL_up_ref"] = createExportWrapper("SSL_up_ref");

var _SSL_CTX_set_session_id_context = Module["_SSL_CTX_set_session_id_context"] = createExportWrapper("SSL_CTX_set_session_id_context");

var _SSL_set_session_id_context = Module["_SSL_set_session_id_context"] = createExportWrapper("SSL_set_session_id_context");

var _SSL_CTX_set_generate_session_id = Module["_SSL_CTX_set_generate_session_id"] = createExportWrapper("SSL_CTX_set_generate_session_id");

var _CRYPTO_THREAD_write_lock = Module["_CRYPTO_THREAD_write_lock"] = createExportWrapper("CRYPTO_THREAD_write_lock");

var _CRYPTO_THREAD_unlock = Module["_CRYPTO_THREAD_unlock"] = createExportWrapper("CRYPTO_THREAD_unlock");

var _SSL_set_generate_session_id = Module["_SSL_set_generate_session_id"] = createExportWrapper("SSL_set_generate_session_id");

var _SSL_has_matching_session_id = Module["_SSL_has_matching_session_id"] = createExportWrapper("SSL_has_matching_session_id");

var _CRYPTO_THREAD_read_lock = Module["_CRYPTO_THREAD_read_lock"] = createExportWrapper("CRYPTO_THREAD_read_lock");

var _SSL_CTX_set_purpose = Module["_SSL_CTX_set_purpose"] = createExportWrapper("SSL_CTX_set_purpose");

var _X509_VERIFY_PARAM_set_purpose = Module["_X509_VERIFY_PARAM_set_purpose"] = createExportWrapper("X509_VERIFY_PARAM_set_purpose");

var _SSL_set_purpose = Module["_SSL_set_purpose"] = createExportWrapper("SSL_set_purpose");

var _SSL_CTX_set_trust = Module["_SSL_CTX_set_trust"] = createExportWrapper("SSL_CTX_set_trust");

var _X509_VERIFY_PARAM_set_trust = Module["_X509_VERIFY_PARAM_set_trust"] = createExportWrapper("X509_VERIFY_PARAM_set_trust");

var _SSL_set_trust = Module["_SSL_set_trust"] = createExportWrapper("SSL_set_trust");

var _SSL_set1_host = Module["_SSL_set1_host"] = createExportWrapper("SSL_set1_host");

var _X509_VERIFY_PARAM_set1_host = Module["_X509_VERIFY_PARAM_set1_host"] = createExportWrapper("X509_VERIFY_PARAM_set1_host");

var _SSL_add1_host = Module["_SSL_add1_host"] = createExportWrapper("SSL_add1_host");

var _X509_VERIFY_PARAM_add1_host = Module["_X509_VERIFY_PARAM_add1_host"] = createExportWrapper("X509_VERIFY_PARAM_add1_host");

var _SSL_set_hostflags = Module["_SSL_set_hostflags"] = createExportWrapper("SSL_set_hostflags");

var _X509_VERIFY_PARAM_set_hostflags = Module["_X509_VERIFY_PARAM_set_hostflags"] = createExportWrapper("X509_VERIFY_PARAM_set_hostflags");

var _SSL_get0_peername = Module["_SSL_get0_peername"] = createExportWrapper("SSL_get0_peername");

var _X509_VERIFY_PARAM_get0_peername = Module["_X509_VERIFY_PARAM_get0_peername"] = createExportWrapper("X509_VERIFY_PARAM_get0_peername");

var _SSL_CTX_dane_enable = Module["_SSL_CTX_dane_enable"] = createExportWrapper("SSL_CTX_dane_enable");

var _SSL_CTX_dane_set_flags = Module["_SSL_CTX_dane_set_flags"] = createExportWrapper("SSL_CTX_dane_set_flags");

var _SSL_CTX_dane_clear_flags = Module["_SSL_CTX_dane_clear_flags"] = createExportWrapper("SSL_CTX_dane_clear_flags");

var _SSL_dane_enable = Module["_SSL_dane_enable"] = createExportWrapper("SSL_dane_enable");

var _ssl_set_version_bound = Module["_ssl_set_version_bound"] = createExportWrapper("ssl_set_version_bound");

var _SSL_dane_set_flags = Module["_SSL_dane_set_flags"] = createExportWrapper("SSL_dane_set_flags");

var _SSL_dane_clear_flags = Module["_SSL_dane_clear_flags"] = createExportWrapper("SSL_dane_clear_flags");

var _SSL_get0_dane_authority = Module["_SSL_get0_dane_authority"] = createExportWrapper("SSL_get0_dane_authority");

var _SSL_get0_dane_tlsa = Module["_SSL_get0_dane_tlsa"] = createExportWrapper("SSL_get0_dane_tlsa");

var _SSL_get0_dane = Module["_SSL_get0_dane"] = createExportWrapper("SSL_get0_dane");

var _SSL_dane_tlsa_add = Module["_SSL_dane_tlsa_add"] = createExportWrapper("SSL_dane_tlsa_add");

var _X509_get0_pubkey = Module["_X509_get0_pubkey"] = createExportWrapper("X509_get0_pubkey");

var _d2i_PUBKEY = Module["_d2i_PUBKEY"] = createExportWrapper("d2i_PUBKEY");

var _SSL_CTX_dane_mtype_set = Module["_SSL_CTX_dane_mtype_set"] = createExportWrapper("SSL_CTX_dane_mtype_set");

var _CRYPTO_realloc = Module["_CRYPTO_realloc"] = createExportWrapper("CRYPTO_realloc");

var _SSL_CTX_set1_param = Module["_SSL_CTX_set1_param"] = createExportWrapper("SSL_CTX_set1_param");

var _SSL_set1_param = Module["_SSL_set1_param"] = createExportWrapper("SSL_set1_param");

var _SSL_CTX_get0_param = Module["_SSL_CTX_get0_param"] = createExportWrapper("SSL_CTX_get0_param");

var _SSL_get0_param = Module["_SSL_get0_param"] = createExportWrapper("SSL_get0_param");

var _SSL_certs_clear = Module["_SSL_certs_clear"] = createExportWrapper("SSL_certs_clear");

var _SSL_CTX_flush_sessions = Module["_SSL_CTX_flush_sessions"] = createExportWrapper("SSL_CTX_flush_sessions");

var _CTLOG_STORE_free = Module["_CTLOG_STORE_free"] = createExportWrapper("CTLOG_STORE_free");

var _SSL_CTX_SRP_CTX_free = Module["_SSL_CTX_SRP_CTX_free"] = createExportWrapper("SSL_CTX_SRP_CTX_free");

var _CRYPTO_secure_free = Module["_CRYPTO_secure_free"] = createExportWrapper("CRYPTO_secure_free");

var _SSL_set0_rbio = Module["_SSL_set0_rbio"] = createExportWrapper("SSL_set0_rbio");

var _SSL_set0_wbio = Module["_SSL_set0_wbio"] = createExportWrapper("SSL_set0_wbio");

var _BIO_push = Module["_BIO_push"] = createExportWrapper("BIO_push");

var _SSL_set_bio = Module["_SSL_set_bio"] = createExportWrapper("SSL_set_bio");

var _BIO_next = Module["_BIO_next"] = createExportWrapper("BIO_next");

var _BIO_up_ref = Module["_BIO_up_ref"] = createExportWrapper("BIO_up_ref");

var _SSL_get_fd = Module["_SSL_get_fd"] = createExportWrapper("SSL_get_fd");

var _BIO_find_type = Module["_BIO_find_type"] = createExportWrapper("BIO_find_type");

var _SSL_get_rfd = Module["_SSL_get_rfd"] = createExportWrapper("SSL_get_rfd");

var _SSL_get_wfd = Module["_SSL_get_wfd"] = createExportWrapper("SSL_get_wfd");

var _BIO_s_socket = Module["_BIO_s_socket"] = createExportWrapper("BIO_s_socket");

var _BIO_int_ctrl = Module["_BIO_int_ctrl"] = createExportWrapper("BIO_int_ctrl");

var _SSL_set_wfd = Module["_SSL_set_wfd"] = createExportWrapper("SSL_set_wfd");

var _BIO_method_type = Module["_BIO_method_type"] = createExportWrapper("BIO_method_type");

var _SSL_set_rfd = Module["_SSL_set_rfd"] = createExportWrapper("SSL_set_rfd");

var _SSL_get_finished = Module["_SSL_get_finished"] = createExportWrapper("SSL_get_finished");

var _SSL_get_peer_finished = Module["_SSL_get_peer_finished"] = createExportWrapper("SSL_get_peer_finished");

var _SSL_get_verify_mode = Module["_SSL_get_verify_mode"] = createExportWrapper("SSL_get_verify_mode");

var _SSL_get_verify_depth = Module["_SSL_get_verify_depth"] = createExportWrapper("SSL_get_verify_depth");

var _X509_VERIFY_PARAM_get_depth = Module["_X509_VERIFY_PARAM_get_depth"] = createExportWrapper("X509_VERIFY_PARAM_get_depth");

var _SSL_get_verify_callback = Module["_SSL_get_verify_callback"] = createExportWrapper("SSL_get_verify_callback");

var _SSL_CTX_get_verify_mode = Module["_SSL_CTX_get_verify_mode"] = createExportWrapper("SSL_CTX_get_verify_mode");

var _SSL_CTX_get_verify_depth = Module["_SSL_CTX_get_verify_depth"] = createExportWrapper("SSL_CTX_get_verify_depth");

var _SSL_CTX_get_verify_callback = Module["_SSL_CTX_get_verify_callback"] = createExportWrapper("SSL_CTX_get_verify_callback");

var _SSL_set_verify = Module["_SSL_set_verify"] = createExportWrapper("SSL_set_verify");

var _SSL_set_verify_depth = Module["_SSL_set_verify_depth"] = createExportWrapper("SSL_set_verify_depth");

var _X509_VERIFY_PARAM_set_depth = Module["_X509_VERIFY_PARAM_set_depth"] = createExportWrapper("X509_VERIFY_PARAM_set_depth");

var _SSL_set_read_ahead = Module["_SSL_set_read_ahead"] = createExportWrapper("SSL_set_read_ahead");

var _SSL_get_read_ahead = Module["_SSL_get_read_ahead"] = createExportWrapper("SSL_get_read_ahead");

var _SSL_has_pending = Module["_SSL_has_pending"] = createExportWrapper("SSL_has_pending");

var _SSL_get_session = Module["_SSL_get_session"] = createExportWrapper("SSL_get_session");

var _SSL_set_session = Module["_SSL_set_session"] = createExportWrapper("SSL_set_session");

var _SSL_check_private_key = Module["_SSL_check_private_key"] = createExportWrapper("SSL_check_private_key");

var _SSL_waiting_for_async = Module["_SSL_waiting_for_async"] = createExportWrapper("SSL_waiting_for_async");

var _SSL_get_all_async_fds = Module["_SSL_get_all_async_fds"] = createExportWrapper("SSL_get_all_async_fds");

var _ASYNC_WAIT_CTX_get_all_fds = Module["_ASYNC_WAIT_CTX_get_all_fds"] = createExportWrapper("ASYNC_WAIT_CTX_get_all_fds");

var _SSL_get_changed_async_fds = Module["_SSL_get_changed_async_fds"] = createExportWrapper("SSL_get_changed_async_fds");

var _ASYNC_WAIT_CTX_get_changed_fds = Module["_ASYNC_WAIT_CTX_get_changed_fds"] = createExportWrapper("ASYNC_WAIT_CTX_get_changed_fds");

var _SSL_do_handshake = Module["_SSL_do_handshake"] = createExportWrapper("SSL_do_handshake");

var _ossl_statem_check_finish_init = Module["_ossl_statem_check_finish_init"] = createExportWrapper("ossl_statem_check_finish_init");

var _ASYNC_get_current_job = Module["_ASYNC_get_current_job"] = createExportWrapper("ASYNC_get_current_job");

var _SSL_get_default_timeout = Module["_SSL_get_default_timeout"] = createExportWrapper("SSL_get_default_timeout");

var _ssl_read_internal = Module["_ssl_read_internal"] = createExportWrapper("ssl_read_internal");

var _ASYNC_WAIT_CTX_new = Module["_ASYNC_WAIT_CTX_new"] = createExportWrapper("ASYNC_WAIT_CTX_new");

var _ASYNC_start_job = Module["_ASYNC_start_job"] = createExportWrapper("ASYNC_start_job");

var _SSL_read_ex = Module["_SSL_read_ex"] = createExportWrapper("SSL_read_ex");

var _SSL_read_early_data = Module["_SSL_read_early_data"] = createExportWrapper("SSL_read_early_data");

var _SSL_get_early_data_status = Module["_SSL_get_early_data_status"] = createExportWrapper("SSL_get_early_data_status");

var _SSL_peek_ex = Module["_SSL_peek_ex"] = createExportWrapper("SSL_peek_ex");

var _ssl_write_internal = Module["_ssl_write_internal"] = createExportWrapper("ssl_write_internal");

var _SSL_write_ex = Module["_SSL_write_ex"] = createExportWrapper("SSL_write_ex");

var _SSL_write_early_data = Module["_SSL_write_early_data"] = createExportWrapper("SSL_write_early_data");

var _statem_flush = Module["_statem_flush"] = createExportWrapper("statem_flush");

var _SSL_key_update = Module["_SSL_key_update"] = createExportWrapper("SSL_key_update");

var _SSL_get_key_update_type = Module["_SSL_get_key_update_type"] = createExportWrapper("SSL_get_key_update_type");

var _SSL_renegotiate = Module["_SSL_renegotiate"] = createExportWrapper("SSL_renegotiate");

var _SSL_renegotiate_abbreviated = Module["_SSL_renegotiate_abbreviated"] = createExportWrapper("SSL_renegotiate_abbreviated");

var _SSL_renegotiate_pending = Module["_SSL_renegotiate_pending"] = createExportWrapper("SSL_renegotiate_pending");

var _SSL_callback_ctrl = Module["_SSL_callback_ctrl"] = createExportWrapper("SSL_callback_ctrl");

var _SSL_CTX_sessions = Module["_SSL_CTX_sessions"] = createExportWrapper("SSL_CTX_sessions");

var _OPENSSL_LH_num_items = Module["_OPENSSL_LH_num_items"] = createExportWrapper("OPENSSL_LH_num_items");

var _ssl_cipher_id_cmp = Module["_ssl_cipher_id_cmp"] = createExportWrapper("ssl_cipher_id_cmp");

var _SSL_get_client_ciphers = Module["_SSL_get_client_ciphers"] = createExportWrapper("SSL_get_client_ciphers");

var _SSL_get1_supported_ciphers = Module["_SSL_get1_supported_ciphers"] = createExportWrapper("SSL_get1_supported_ciphers");

var _ssl_set_client_disabled = Module["_ssl_set_client_disabled"] = createExportWrapper("ssl_set_client_disabled");

var _ssl_cipher_disabled = Module["_ssl_cipher_disabled"] = createExportWrapper("ssl_cipher_disabled");

var _ssl_get_ciphers_by_id = Module["_ssl_get_ciphers_by_id"] = createExportWrapper("ssl_get_ciphers_by_id");

var _SSL_get_cipher_list = Module["_SSL_get_cipher_list"] = createExportWrapper("SSL_get_cipher_list");

var _SSL_CTX_get_ciphers = Module["_SSL_CTX_get_ciphers"] = createExportWrapper("SSL_CTX_get_ciphers");

var _SSL_set_cipher_list = Module["_SSL_set_cipher_list"] = createExportWrapper("SSL_set_cipher_list");

var _SSL_get_shared_ciphers = Module["_SSL_get_shared_ciphers"] = createExportWrapper("SSL_get_shared_ciphers");

var _SSL_get_servername_type = Module["_SSL_get_servername_type"] = createExportWrapper("SSL_get_servername_type");

var _SSL_get0_next_proto_negotiated = Module["_SSL_get0_next_proto_negotiated"] = createExportWrapper("SSL_get0_next_proto_negotiated");

var _SSL_CTX_set_next_protos_advertised_cb = Module["_SSL_CTX_set_next_protos_advertised_cb"] = createExportWrapper("SSL_CTX_set_next_protos_advertised_cb");

var _SSL_CTX_set_next_proto_select_cb = Module["_SSL_CTX_set_next_proto_select_cb"] = createExportWrapper("SSL_CTX_set_next_proto_select_cb");

var _SSL_set_alpn_protos = Module["_SSL_set_alpn_protos"] = createExportWrapper("SSL_set_alpn_protos");

var _SSL_export_keying_material = Module["_SSL_export_keying_material"] = createExportWrapper("SSL_export_keying_material");

var _SSL_export_keying_material_early = Module["_SSL_export_keying_material_early"] = createExportWrapper("SSL_export_keying_material_early");

var _tls13_export_keying_material_early = Module["_tls13_export_keying_material_early"] = createExportWrapper("tls13_export_keying_material_early");

var _CTLOG_STORE_new = Module["_CTLOG_STORE_new"] = createExportWrapper("CTLOG_STORE_new");

var _CRYPTO_secure_zalloc = Module["_CRYPTO_secure_zalloc"] = createExportWrapper("CRYPTO_secure_zalloc");

var _RAND_priv_bytes = Module["_RAND_priv_bytes"] = createExportWrapper("RAND_priv_bytes");

var _SSL_CTX_SRP_CTX_init = Module["_SSL_CTX_SRP_CTX_init"] = createExportWrapper("SSL_CTX_SRP_CTX_init");

var _ssl_ctx_system_config = Module["_ssl_ctx_system_config"] = createExportWrapper("ssl_ctx_system_config");

var _SSL_CTX_get_default_passwd_cb = Module["_SSL_CTX_get_default_passwd_cb"] = createExportWrapper("SSL_CTX_get_default_passwd_cb");

var _SSL_CTX_get_default_passwd_cb_userdata = Module["_SSL_CTX_get_default_passwd_cb_userdata"] = createExportWrapper("SSL_CTX_get_default_passwd_cb_userdata");

var _SSL_set_default_passwd_cb = Module["_SSL_set_default_passwd_cb"] = createExportWrapper("SSL_set_default_passwd_cb");

var _SSL_set_default_passwd_cb_userdata = Module["_SSL_set_default_passwd_cb_userdata"] = createExportWrapper("SSL_set_default_passwd_cb_userdata");

var _SSL_get_default_passwd_cb = Module["_SSL_get_default_passwd_cb"] = createExportWrapper("SSL_get_default_passwd_cb");

var _SSL_get_default_passwd_cb_userdata = Module["_SSL_get_default_passwd_cb_userdata"] = createExportWrapper("SSL_get_default_passwd_cb_userdata");

var _SSL_CTX_set_cert_verify_callback = Module["_SSL_CTX_set_cert_verify_callback"] = createExportWrapper("SSL_CTX_set_cert_verify_callback");

var _SSL_CTX_set_verify_depth = Module["_SSL_CTX_set_verify_depth"] = createExportWrapper("SSL_CTX_set_verify_depth");

var _SSL_CTX_set_cert_cb = Module["_SSL_CTX_set_cert_cb"] = createExportWrapper("SSL_CTX_set_cert_cb");

var _SSL_set_cert_cb = Module["_SSL_set_cert_cb"] = createExportWrapper("SSL_set_cert_cb");

var _X509_get_key_usage = Module["_X509_get_key_usage"] = createExportWrapper("X509_get_key_usage");

var _ssl_check_srvr_ecc_cert_and_alg = Module["_ssl_check_srvr_ecc_cert_and_alg"] = createExportWrapper("ssl_check_srvr_ecc_cert_and_alg");

var _ssl_get_server_cert_serverinfo = Module["_ssl_get_server_cert_serverinfo"] = createExportWrapper("ssl_get_server_cert_serverinfo");

var _ssl_update_cache = Module["_ssl_update_cache"] = createExportWrapper("ssl_update_cache");

var _SSL_CTX_add_session = Module["_SSL_CTX_add_session"] = createExportWrapper("SSL_CTX_add_session");

var _SSL_SESSION_up_ref = Module["_SSL_SESSION_up_ref"] = createExportWrapper("SSL_SESSION_up_ref");

var _SSL_CTX_get_ssl_method = Module["_SSL_CTX_get_ssl_method"] = createExportWrapper("SSL_CTX_get_ssl_method");

var _SSL_get_ssl_method = Module["_SSL_get_ssl_method"] = createExportWrapper("SSL_get_ssl_method");

var _SSL_set_ssl_method = Module["_SSL_set_ssl_method"] = createExportWrapper("SSL_set_ssl_method");

var _BIO_get_retry_reason = Module["_BIO_get_retry_reason"] = createExportWrapper("BIO_get_retry_reason");

var _SSL_want = Module["_SSL_want"] = createExportWrapper("SSL_want");

var _ssl_undefined_const_function = Module["_ssl_undefined_const_function"] = createExportWrapper("ssl_undefined_const_function");

var _ssl_bad_method = Module["_ssl_bad_method"] = createExportWrapper("ssl_bad_method");

var _SSL_get_version = Module["_SSL_get_version"] = createExportWrapper("SSL_get_version");

var _SSL_dup = Module["_SSL_dup"] = createExportWrapper("SSL_dup");

var _CRYPTO_dup_ex_data = Module["_CRYPTO_dup_ex_data"] = createExportWrapper("CRYPTO_dup_ex_data");

var _SSL_get_SSL_CTX = Module["_SSL_get_SSL_CTX"] = createExportWrapper("SSL_get_SSL_CTX");

var _SSL_get_info_callback = Module["_SSL_get_info_callback"] = createExportWrapper("SSL_get_info_callback");

var _ssl_clear_cipher_ctx = Module["_ssl_clear_cipher_ctx"] = createExportWrapper("ssl_clear_cipher_ctx");

var _SSL_get_certificate = Module["_SSL_get_certificate"] = createExportWrapper("SSL_get_certificate");

var _SSL_get_privatekey = Module["_SSL_get_privatekey"] = createExportWrapper("SSL_get_privatekey");

var _SSL_CTX_get0_certificate = Module["_SSL_CTX_get0_certificate"] = createExportWrapper("SSL_CTX_get0_certificate");

var _SSL_CTX_get0_privatekey = Module["_SSL_CTX_get0_privatekey"] = createExportWrapper("SSL_CTX_get0_privatekey");

var _SSL_get_pending_cipher = Module["_SSL_get_pending_cipher"] = createExportWrapper("SSL_get_pending_cipher");

var _SSL_get_current_compression = Module["_SSL_get_current_compression"] = createExportWrapper("SSL_get_current_compression");

var _COMP_CTX_get_method = Module["_COMP_CTX_get_method"] = createExportWrapper("COMP_CTX_get_method");

var _SSL_get_current_expansion = Module["_SSL_get_current_expansion"] = createExportWrapper("SSL_get_current_expansion");

var _ssl_init_wbio_buffer = Module["_ssl_init_wbio_buffer"] = createExportWrapper("ssl_init_wbio_buffer");

var _BIO_f_buffer = Module["_BIO_f_buffer"] = createExportWrapper("BIO_f_buffer");

var _SSL_CTX_set_quiet_shutdown = Module["_SSL_CTX_set_quiet_shutdown"] = createExportWrapper("SSL_CTX_set_quiet_shutdown");

var _SSL_CTX_get_quiet_shutdown = Module["_SSL_CTX_get_quiet_shutdown"] = createExportWrapper("SSL_CTX_get_quiet_shutdown");

var _SSL_set_quiet_shutdown = Module["_SSL_set_quiet_shutdown"] = createExportWrapper("SSL_set_quiet_shutdown");

var _SSL_get_quiet_shutdown = Module["_SSL_get_quiet_shutdown"] = createExportWrapper("SSL_get_quiet_shutdown");

var _SSL_get_shutdown = Module["_SSL_get_shutdown"] = createExportWrapper("SSL_get_shutdown");

var _SSL_client_version = Module["_SSL_client_version"] = createExportWrapper("SSL_client_version");

var _custom_exts_copy_flags = Module["_custom_exts_copy_flags"] = createExportWrapper("custom_exts_copy_flags");

var _X509_STORE_set_default_paths = Module["_X509_STORE_set_default_paths"] = createExportWrapper("X509_STORE_set_default_paths");

var _SSL_CTX_set_default_verify_dir = Module["_SSL_CTX_set_default_verify_dir"] = createExportWrapper("SSL_CTX_set_default_verify_dir");

var _SSL_CTX_set_default_verify_file = Module["_SSL_CTX_set_default_verify_file"] = createExportWrapper("SSL_CTX_set_default_verify_file");

var _X509_STORE_load_locations = Module["_X509_STORE_load_locations"] = createExportWrapper("X509_STORE_load_locations");

var _SSL_set_verify_result = Module["_SSL_set_verify_result"] = createExportWrapper("SSL_set_verify_result");

var _SSL_get_client_random = Module["_SSL_get_client_random"] = createExportWrapper("SSL_get_client_random");

var _SSL_get_server_random = Module["_SSL_get_server_random"] = createExportWrapper("SSL_get_server_random");

var _SSL_SESSION_get_master_key = Module["_SSL_SESSION_get_master_key"] = createExportWrapper("SSL_SESSION_get_master_key");

var _SSL_SESSION_set1_master_key = Module["_SSL_SESSION_set1_master_key"] = createExportWrapper("SSL_SESSION_set1_master_key");

var _CRYPTO_set_ex_data = Module["_CRYPTO_set_ex_data"] = createExportWrapper("CRYPTO_set_ex_data");

var _CRYPTO_get_ex_data = Module["_CRYPTO_get_ex_data"] = createExportWrapper("CRYPTO_get_ex_data");

var _SSL_CTX_set_ex_data = Module["_SSL_CTX_set_ex_data"] = createExportWrapper("SSL_CTX_set_ex_data");

var _SSL_CTX_get_ex_data = Module["_SSL_CTX_get_ex_data"] = createExportWrapper("SSL_CTX_get_ex_data");

var _SSL_CTX_set_cert_store = Module["_SSL_CTX_set_cert_store"] = createExportWrapper("SSL_CTX_set_cert_store");

var _SSL_CTX_set1_cert_store = Module["_SSL_CTX_set1_cert_store"] = createExportWrapper("SSL_CTX_set1_cert_store");

var _SSL_CTX_set_tmp_dh_callback = Module["_SSL_CTX_set_tmp_dh_callback"] = createExportWrapper("SSL_CTX_set_tmp_dh_callback");

var _SSL_set_tmp_dh_callback = Module["_SSL_set_tmp_dh_callback"] = createExportWrapper("SSL_set_tmp_dh_callback");

var _SSL_set_psk_find_session_callback = Module["_SSL_set_psk_find_session_callback"] = createExportWrapper("SSL_set_psk_find_session_callback");

var _SSL_CTX_set_psk_find_session_callback = Module["_SSL_CTX_set_psk_find_session_callback"] = createExportWrapper("SSL_CTX_set_psk_find_session_callback");

var _SSL_set_psk_use_session_callback = Module["_SSL_set_psk_use_session_callback"] = createExportWrapper("SSL_set_psk_use_session_callback");

var _SSL_CTX_set_psk_use_session_callback = Module["_SSL_CTX_set_psk_use_session_callback"] = createExportWrapper("SSL_CTX_set_psk_use_session_callback");

var _SSL_CTX_set_msg_callback = Module["_SSL_CTX_set_msg_callback"] = createExportWrapper("SSL_CTX_set_msg_callback");

var _SSL_set_msg_callback = Module["_SSL_set_msg_callback"] = createExportWrapper("SSL_set_msg_callback");

var _SSL_CTX_set_not_resumable_session_callback = Module["_SSL_CTX_set_not_resumable_session_callback"] = createExportWrapper("SSL_CTX_set_not_resumable_session_callback");

var _SSL_set_not_resumable_session_callback = Module["_SSL_set_not_resumable_session_callback"] = createExportWrapper("SSL_set_not_resumable_session_callback");

var _SSL_CTX_set_record_padding_callback = Module["_SSL_CTX_set_record_padding_callback"] = createExportWrapper("SSL_CTX_set_record_padding_callback");

var _SSL_CTX_set_record_padding_callback_arg = Module["_SSL_CTX_set_record_padding_callback_arg"] = createExportWrapper("SSL_CTX_set_record_padding_callback_arg");

var _SSL_CTX_get_record_padding_callback_arg = Module["_SSL_CTX_get_record_padding_callback_arg"] = createExportWrapper("SSL_CTX_get_record_padding_callback_arg");

var _SSL_CTX_set_block_padding = Module["_SSL_CTX_set_block_padding"] = createExportWrapper("SSL_CTX_set_block_padding");

var _SSL_set_record_padding_callback = Module["_SSL_set_record_padding_callback"] = createExportWrapper("SSL_set_record_padding_callback");

var _SSL_set_record_padding_callback_arg = Module["_SSL_set_record_padding_callback_arg"] = createExportWrapper("SSL_set_record_padding_callback_arg");

var _SSL_get_record_padding_callback_arg = Module["_SSL_get_record_padding_callback_arg"] = createExportWrapper("SSL_get_record_padding_callback_arg");

var _SSL_set_block_padding = Module["_SSL_set_block_padding"] = createExportWrapper("SSL_set_block_padding");

var _SSL_set_num_tickets = Module["_SSL_set_num_tickets"] = createExportWrapper("SSL_set_num_tickets");

var _SSL_get_num_tickets = Module["_SSL_get_num_tickets"] = createExportWrapper("SSL_get_num_tickets");

var _SSL_CTX_set_num_tickets = Module["_SSL_CTX_set_num_tickets"] = createExportWrapper("SSL_CTX_set_num_tickets");

var _SSL_CTX_get_num_tickets = Module["_SSL_CTX_get_num_tickets"] = createExportWrapper("SSL_CTX_get_num_tickets");

var _ssl_clear_hash_ctx = Module["_ssl_clear_hash_ctx"] = createExportWrapper("ssl_clear_hash_ctx");

var _ssl_handshake_hash = Module["_ssl_handshake_hash"] = createExportWrapper("ssl_handshake_hash");

var _SSL_session_reused = Module["_SSL_session_reused"] = createExportWrapper("SSL_session_reused");

var _SSL_is_server = Module["_SSL_is_server"] = createExportWrapper("SSL_is_server");

var _SSL_set_debug = Module["_SSL_set_debug"] = createExportWrapper("SSL_set_debug");

var _SSL_set_security_level = Module["_SSL_set_security_level"] = createExportWrapper("SSL_set_security_level");

var _SSL_set_security_callback = Module["_SSL_set_security_callback"] = createExportWrapper("SSL_set_security_callback");

var _SSL_get_security_callback = Module["_SSL_get_security_callback"] = createExportWrapper("SSL_get_security_callback");

var _SSL_set0_security_ex_data = Module["_SSL_set0_security_ex_data"] = createExportWrapper("SSL_set0_security_ex_data");

var _SSL_get0_security_ex_data = Module["_SSL_get0_security_ex_data"] = createExportWrapper("SSL_get0_security_ex_data");

var _SSL_CTX_set_security_callback = Module["_SSL_CTX_set_security_callback"] = createExportWrapper("SSL_CTX_set_security_callback");

var _SSL_CTX_get_security_callback = Module["_SSL_CTX_get_security_callback"] = createExportWrapper("SSL_CTX_get_security_callback");

var _SSL_CTX_set0_security_ex_data = Module["_SSL_CTX_set0_security_ex_data"] = createExportWrapper("SSL_CTX_set0_security_ex_data");

var _SSL_CTX_get0_security_ex_data = Module["_SSL_CTX_get0_security_ex_data"] = createExportWrapper("SSL_CTX_get0_security_ex_data");

var _SSL_CTX_clear_options = Module["_SSL_CTX_clear_options"] = createExportWrapper("SSL_CTX_clear_options");

var _SSL_clear_options = Module["_SSL_clear_options"] = createExportWrapper("SSL_clear_options");

var _SSL_get0_verified_chain = Module["_SSL_get0_verified_chain"] = createExportWrapper("SSL_get0_verified_chain");

var _OBJ_bsearch_ = Module["_OBJ_bsearch_"] = createExportWrapper("OBJ_bsearch_");

var _SSL_get0_peer_scts = Module["_SSL_get0_peer_scts"] = createExportWrapper("SSL_get0_peer_scts");

var _o2i_SCT_LIST = Module["_o2i_SCT_LIST"] = createExportWrapper("o2i_SCT_LIST");

var _SSL_CTX_set_ct_validation_callback = Module["_SSL_CTX_set_ct_validation_callback"] = createExportWrapper("SSL_CTX_set_ct_validation_callback");

var _SSL_ct_is_enabled = Module["_SSL_ct_is_enabled"] = createExportWrapper("SSL_ct_is_enabled");

var _SSL_CTX_ct_is_enabled = Module["_SSL_CTX_ct_is_enabled"] = createExportWrapper("SSL_CTX_ct_is_enabled");

var _ssl_validate_ct = Module["_ssl_validate_ct"] = createExportWrapper("ssl_validate_ct");

var _CT_POLICY_EVAL_CTX_new = Module["_CT_POLICY_EVAL_CTX_new"] = createExportWrapper("CT_POLICY_EVAL_CTX_new");

var _CT_POLICY_EVAL_CTX_set1_cert = Module["_CT_POLICY_EVAL_CTX_set1_cert"] = createExportWrapper("CT_POLICY_EVAL_CTX_set1_cert");

var _CT_POLICY_EVAL_CTX_set1_issuer = Module["_CT_POLICY_EVAL_CTX_set1_issuer"] = createExportWrapper("CT_POLICY_EVAL_CTX_set1_issuer");

var _CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE = Module["_CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE"] = createExportWrapper("CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE");

var _SSL_SESSION_get_time = Module["_SSL_SESSION_get_time"] = createExportWrapper("SSL_SESSION_get_time");

var _CT_POLICY_EVAL_CTX_set_time = Module["_CT_POLICY_EVAL_CTX_set_time"] = createExportWrapper("CT_POLICY_EVAL_CTX_set_time");

var _SCT_LIST_validate = Module["_SCT_LIST_validate"] = createExportWrapper("SCT_LIST_validate");

var _CT_POLICY_EVAL_CTX_free = Module["_CT_POLICY_EVAL_CTX_free"] = createExportWrapper("CT_POLICY_EVAL_CTX_free");

var _SSL_CTX_enable_ct = Module["_SSL_CTX_enable_ct"] = createExportWrapper("SSL_CTX_enable_ct");

var _SCT_get_validation_status = Module["_SCT_get_validation_status"] = createExportWrapper("SCT_get_validation_status");

var _SSL_enable_ct = Module["_SSL_enable_ct"] = createExportWrapper("SSL_enable_ct");

var _SSL_CTX_set_default_ctlog_list_file = Module["_SSL_CTX_set_default_ctlog_list_file"] = createExportWrapper("SSL_CTX_set_default_ctlog_list_file");

var _CTLOG_STORE_load_default_file = Module["_CTLOG_STORE_load_default_file"] = createExportWrapper("CTLOG_STORE_load_default_file");

var _SSL_CTX_set_ctlog_list_file = Module["_SSL_CTX_set_ctlog_list_file"] = createExportWrapper("SSL_CTX_set_ctlog_list_file");

var _CTLOG_STORE_load_file = Module["_CTLOG_STORE_load_file"] = createExportWrapper("CTLOG_STORE_load_file");

var _SSL_CTX_set0_ctlog_store = Module["_SSL_CTX_set0_ctlog_store"] = createExportWrapper("SSL_CTX_set0_ctlog_store");

var _SSL_CTX_get0_ctlog_store = Module["_SSL_CTX_get0_ctlog_store"] = createExportWrapper("SSL_CTX_get0_ctlog_store");

var _SSL_CTX_set_client_hello_cb = Module["_SSL_CTX_set_client_hello_cb"] = createExportWrapper("SSL_CTX_set_client_hello_cb");

var _SSL_client_hello_isv2 = Module["_SSL_client_hello_isv2"] = createExportWrapper("SSL_client_hello_isv2");

var _SSL_client_hello_get0_legacy_version = Module["_SSL_client_hello_get0_legacy_version"] = createExportWrapper("SSL_client_hello_get0_legacy_version");

var _SSL_client_hello_get0_random = Module["_SSL_client_hello_get0_random"] = createExportWrapper("SSL_client_hello_get0_random");

var _SSL_client_hello_get0_session_id = Module["_SSL_client_hello_get0_session_id"] = createExportWrapper("SSL_client_hello_get0_session_id");

var _SSL_client_hello_get0_ciphers = Module["_SSL_client_hello_get0_ciphers"] = createExportWrapper("SSL_client_hello_get0_ciphers");

var _SSL_client_hello_get0_compression_methods = Module["_SSL_client_hello_get0_compression_methods"] = createExportWrapper("SSL_client_hello_get0_compression_methods");

var _SSL_client_hello_get1_extensions_present = Module["_SSL_client_hello_get1_extensions_present"] = createExportWrapper("SSL_client_hello_get1_extensions_present");

var _SSL_client_hello_get0_ext = Module["_SSL_client_hello_get0_ext"] = createExportWrapper("SSL_client_hello_get0_ext");

var _SSL_free_buffers = Module["_SSL_free_buffers"] = createExportWrapper("SSL_free_buffers");

var _SSL_alloc_buffers = Module["_SSL_alloc_buffers"] = createExportWrapper("SSL_alloc_buffers");

var _SSL_CTX_set_keylog_callback = Module["_SSL_CTX_set_keylog_callback"] = createExportWrapper("SSL_CTX_set_keylog_callback");

var _SSL_CTX_get_keylog_callback = Module["_SSL_CTX_get_keylog_callback"] = createExportWrapper("SSL_CTX_get_keylog_callback");

var _ssl_log_rsa_client_key_exchange = Module["_ssl_log_rsa_client_key_exchange"] = createExportWrapper("ssl_log_rsa_client_key_exchange");

var _siprintf = Module["_siprintf"] = createExportWrapper("siprintf");

var _ssl_log_secret = Module["_ssl_log_secret"] = createExportWrapper("ssl_log_secret");

var _ssl_cache_cipherlist = Module["_ssl_cache_cipherlist"] = createExportWrapper("ssl_cache_cipherlist");

var _SSL_bytes_to_cipher_list = Module["_SSL_bytes_to_cipher_list"] = createExportWrapper("SSL_bytes_to_cipher_list");

var _bytes_to_cipher_list = Module["_bytes_to_cipher_list"] = createExportWrapper("bytes_to_cipher_list");

var _SSL_CTX_set_max_early_data = Module["_SSL_CTX_set_max_early_data"] = createExportWrapper("SSL_CTX_set_max_early_data");

var _SSL_CTX_get_max_early_data = Module["_SSL_CTX_get_max_early_data"] = createExportWrapper("SSL_CTX_get_max_early_data");

var _SSL_set_max_early_data = Module["_SSL_set_max_early_data"] = createExportWrapper("SSL_set_max_early_data");

var _SSL_get_max_early_data = Module["_SSL_get_max_early_data"] = createExportWrapper("SSL_get_max_early_data");

var _SSL_CTX_set_recv_max_early_data = Module["_SSL_CTX_set_recv_max_early_data"] = createExportWrapper("SSL_CTX_set_recv_max_early_data");

var _SSL_CTX_get_recv_max_early_data = Module["_SSL_CTX_get_recv_max_early_data"] = createExportWrapper("SSL_CTX_get_recv_max_early_data");

var _SSL_set_recv_max_early_data = Module["_SSL_set_recv_max_early_data"] = createExportWrapper("SSL_set_recv_max_early_data");

var _SSL_get_recv_max_early_data = Module["_SSL_get_recv_max_early_data"] = createExportWrapper("SSL_get_recv_max_early_data");

var _SSL_stateless = Module["_SSL_stateless"] = createExportWrapper("SSL_stateless");

var _SSL_CTX_set_post_handshake_auth = Module["_SSL_CTX_set_post_handshake_auth"] = createExportWrapper("SSL_CTX_set_post_handshake_auth");

var _SSL_set_post_handshake_auth = Module["_SSL_set_post_handshake_auth"] = createExportWrapper("SSL_set_post_handshake_auth");

var _SSL_verify_client_post_handshake = Module["_SSL_verify_client_post_handshake"] = createExportWrapper("SSL_verify_client_post_handshake");

var _send_certificate_request = Module["_send_certificate_request"] = createExportWrapper("send_certificate_request");

var _SSL_CTX_set_session_ticket_cb = Module["_SSL_CTX_set_session_ticket_cb"] = createExportWrapper("SSL_CTX_set_session_ticket_cb");

var _SSL_CTX_set_allow_early_data_cb = Module["_SSL_CTX_set_allow_early_data_cb"] = createExportWrapper("SSL_CTX_set_allow_early_data_cb");

var _SSL_set_allow_early_data_cb = Module["_SSL_set_allow_early_data_cb"] = createExportWrapper("SSL_set_allow_early_data_cb");

var _SCT_set_source = Module["_SCT_set_source"] = createExportWrapper("SCT_set_source");

var _SSL_add_ssl_module = Module["_SSL_add_ssl_module"] = createExportWrapper("SSL_add_ssl_module");

var _SSL_config = Module["_SSL_config"] = createExportWrapper("SSL_config");

var _SSL_CTX_config = Module["_SSL_CTX_config"] = createExportWrapper("SSL_CTX_config");

var _conf_ssl_name_find = Module["_conf_ssl_name_find"] = createExportWrapper("conf_ssl_name_find");

var _conf_ssl_get = Module["_conf_ssl_get"] = createExportWrapper("conf_ssl_get");

var _SSL_use_PrivateKey_file = Module["_SSL_use_PrivateKey_file"] = createExportWrapper("SSL_use_PrivateKey_file");

var _EC_curve_nist2nid = Module["_EC_curve_nist2nid"] = createExportWrapper("EC_curve_nist2nid");

var _EC_KEY_new_by_curve_name = Module["_EC_KEY_new_by_curve_name"] = createExportWrapper("EC_KEY_new_by_curve_name");

var _SSL_use_certificate_chain_file = Module["_SSL_use_certificate_chain_file"] = createExportWrapper("SSL_use_certificate_chain_file");

var _SSL_CTX_use_serverinfo_file = Module["_SSL_CTX_use_serverinfo_file"] = createExportWrapper("SSL_CTX_use_serverinfo_file");

var _conf_ssl_get_cmd = Module["_conf_ssl_get_cmd"] = createExportWrapper("conf_ssl_get_cmd");

var _SSL_use_certificate = Module["_SSL_use_certificate"] = createExportWrapper("SSL_use_certificate");

var _SSL_use_certificate_file = Module["_SSL_use_certificate_file"] = createExportWrapper("SSL_use_certificate_file");

var _SSL_use_certificate_ASN1 = Module["_SSL_use_certificate_ASN1"] = createExportWrapper("SSL_use_certificate_ASN1");

var _SSL_use_RSAPrivateKey = Module["_SSL_use_RSAPrivateKey"] = createExportWrapper("SSL_use_RSAPrivateKey");

var _SSL_use_RSAPrivateKey_file = Module["_SSL_use_RSAPrivateKey_file"] = createExportWrapper("SSL_use_RSAPrivateKey_file");

var _SSL_use_RSAPrivateKey_ASN1 = Module["_SSL_use_RSAPrivateKey_ASN1"] = createExportWrapper("SSL_use_RSAPrivateKey_ASN1");

var _SSL_use_PrivateKey = Module["_SSL_use_PrivateKey"] = createExportWrapper("SSL_use_PrivateKey");

var _EC_KEY_can_sign = Module["_EC_KEY_can_sign"] = createExportWrapper("EC_KEY_can_sign");

var _EVP_PKEY_copy_parameters = Module["_EVP_PKEY_copy_parameters"] = createExportWrapper("EVP_PKEY_copy_parameters");

var _d2i_X509_bio = Module["_d2i_X509_bio"] = createExportWrapper("d2i_X509_bio");

var _RSA_up_ref = Module["_RSA_up_ref"] = createExportWrapper("RSA_up_ref");

var _PEM_read_bio_RSAPrivateKey = Module["_PEM_read_bio_RSAPrivateKey"] = createExportWrapper("PEM_read_bio_RSAPrivateKey");

var _d2i_RSAPrivateKey_bio = Module["_d2i_RSAPrivateKey_bio"] = createExportWrapper("d2i_RSAPrivateKey_bio");

var _d2i_RSAPrivateKey = Module["_d2i_RSAPrivateKey"] = createExportWrapper("d2i_RSAPrivateKey");

var _d2i_PrivateKey_bio = Module["_d2i_PrivateKey_bio"] = createExportWrapper("d2i_PrivateKey_bio");

var _SSL_use_PrivateKey_ASN1 = Module["_SSL_use_PrivateKey_ASN1"] = createExportWrapper("SSL_use_PrivateKey_ASN1");

var _d2i_PrivateKey = Module["_d2i_PrivateKey"] = createExportWrapper("d2i_PrivateKey");

var _SSL_CTX_use_certificate = Module["_SSL_CTX_use_certificate"] = createExportWrapper("SSL_CTX_use_certificate");

var _SSL_CTX_use_certificate_file = Module["_SSL_CTX_use_certificate_file"] = createExportWrapper("SSL_CTX_use_certificate_file");

var _SSL_CTX_use_certificate_ASN1 = Module["_SSL_CTX_use_certificate_ASN1"] = createExportWrapper("SSL_CTX_use_certificate_ASN1");

var _SSL_CTX_use_RSAPrivateKey = Module["_SSL_CTX_use_RSAPrivateKey"] = createExportWrapper("SSL_CTX_use_RSAPrivateKey");

var _SSL_CTX_use_RSAPrivateKey_file = Module["_SSL_CTX_use_RSAPrivateKey_file"] = createExportWrapper("SSL_CTX_use_RSAPrivateKey_file");

var _SSL_CTX_use_RSAPrivateKey_ASN1 = Module["_SSL_CTX_use_RSAPrivateKey_ASN1"] = createExportWrapper("SSL_CTX_use_RSAPrivateKey_ASN1");

var _SSL_CTX_use_PrivateKey = Module["_SSL_CTX_use_PrivateKey"] = createExportWrapper("SSL_CTX_use_PrivateKey");

var _SSL_CTX_use_PrivateKey_ASN1 = Module["_SSL_CTX_use_PrivateKey_ASN1"] = createExportWrapper("SSL_CTX_use_PrivateKey_ASN1");

var _PEM_read_bio_X509_AUX = Module["_PEM_read_bio_X509_AUX"] = createExportWrapper("PEM_read_bio_X509_AUX");

var _ERR_peek_last_error = Module["_ERR_peek_last_error"] = createExportWrapper("ERR_peek_last_error");

var _SSL_CTX_use_serverinfo_ex = Module["_SSL_CTX_use_serverinfo_ex"] = createExportWrapper("SSL_CTX_use_serverinfo_ex");

var _SSL_CTX_add_server_custom_ext = Module["_SSL_CTX_add_server_custom_ext"] = createExportWrapper("SSL_CTX_add_server_custom_ext");

var _SSL_CTX_add_custom_ext = Module["_SSL_CTX_add_custom_ext"] = createExportWrapper("SSL_CTX_add_custom_ext");

var _SSL_CTX_use_serverinfo = Module["_SSL_CTX_use_serverinfo"] = createExportWrapper("SSL_CTX_use_serverinfo");

var _PEM_read_bio = Module["_PEM_read_bio"] = createExportWrapper("PEM_read_bio");

var _SSL_use_cert_and_key = Module["_SSL_use_cert_and_key"] = createExportWrapper("SSL_use_cert_and_key");

var _EVP_PKEY_missing_parameters = Module["_EVP_PKEY_missing_parameters"] = createExportWrapper("EVP_PKEY_missing_parameters");

var _EVP_PKEY_cmp = Module["_EVP_PKEY_cmp"] = createExportWrapper("EVP_PKEY_cmp");

var _SSL_CTX_use_cert_and_key = Module["_SSL_CTX_use_cert_and_key"] = createExportWrapper("SSL_CTX_use_cert_and_key");

var _SSL_get1_session = Module["_SSL_get1_session"] = createExportWrapper("SSL_get1_session");

var _SSL_SESSION_set_ex_data = Module["_SSL_SESSION_set_ex_data"] = createExportWrapper("SSL_SESSION_set_ex_data");

var _SSL_SESSION_get_ex_data = Module["_SSL_SESSION_get_ex_data"] = createExportWrapper("SSL_SESSION_get_ex_data");

var _SSL_SESSION_new = Module["_SSL_SESSION_new"] = createExportWrapper("SSL_SESSION_new");

var _SSL_SESSION_dup = Module["_SSL_SESSION_dup"] = createExportWrapper("SSL_SESSION_dup");

var _ssl_session_dup = Module["_ssl_session_dup"] = createExportWrapper("ssl_session_dup");

var _SSL_SESSION_get_id = Module["_SSL_SESSION_get_id"] = createExportWrapper("SSL_SESSION_get_id");

var _SSL_SESSION_get0_id_context = Module["_SSL_SESSION_get0_id_context"] = createExportWrapper("SSL_SESSION_get0_id_context");

var _SSL_SESSION_get_compress_id = Module["_SSL_SESSION_get_compress_id"] = createExportWrapper("SSL_SESSION_get_compress_id");

var _ssl_generate_session_id = Module["_ssl_generate_session_id"] = createExportWrapper("ssl_generate_session_id");

var _ssl_get_new_session = Module["_ssl_get_new_session"] = createExportWrapper("ssl_get_new_session");

var _lookup_sess_in_cache = Module["_lookup_sess_in_cache"] = createExportWrapper("lookup_sess_in_cache");

var _ssl_get_prev_session = Module["_ssl_get_prev_session"] = createExportWrapper("ssl_get_prev_session");

var _tls_parse_extension = Module["_tls_parse_extension"] = createExportWrapper("tls_parse_extension");

var _tls_get_ticket_from_client = Module["_tls_get_ticket_from_client"] = createExportWrapper("tls_get_ticket_from_client");

var _OPENSSL_LH_delete = Module["_OPENSSL_LH_delete"] = createExportWrapper("OPENSSL_LH_delete");

var _SSL_SESSION_set1_id = Module["_SSL_SESSION_set1_id"] = createExportWrapper("SSL_SESSION_set1_id");

var _SSL_SESSION_set_timeout = Module["_SSL_SESSION_set_timeout"] = createExportWrapper("SSL_SESSION_set_timeout");

var _SSL_SESSION_get_timeout = Module["_SSL_SESSION_get_timeout"] = createExportWrapper("SSL_SESSION_get_timeout");

var _SSL_SESSION_set_time = Module["_SSL_SESSION_set_time"] = createExportWrapper("SSL_SESSION_set_time");

var _SSL_SESSION_get_protocol_version = Module["_SSL_SESSION_get_protocol_version"] = createExportWrapper("SSL_SESSION_get_protocol_version");

var _SSL_SESSION_set_protocol_version = Module["_SSL_SESSION_set_protocol_version"] = createExportWrapper("SSL_SESSION_set_protocol_version");

var _SSL_SESSION_get0_cipher = Module["_SSL_SESSION_get0_cipher"] = createExportWrapper("SSL_SESSION_get0_cipher");

var _SSL_SESSION_set_cipher = Module["_SSL_SESSION_set_cipher"] = createExportWrapper("SSL_SESSION_set_cipher");

var _SSL_SESSION_get0_hostname = Module["_SSL_SESSION_get0_hostname"] = createExportWrapper("SSL_SESSION_get0_hostname");

var _SSL_SESSION_set1_hostname = Module["_SSL_SESSION_set1_hostname"] = createExportWrapper("SSL_SESSION_set1_hostname");

var _SSL_SESSION_has_ticket = Module["_SSL_SESSION_has_ticket"] = createExportWrapper("SSL_SESSION_has_ticket");

var _SSL_SESSION_get_ticket_lifetime_hint = Module["_SSL_SESSION_get_ticket_lifetime_hint"] = createExportWrapper("SSL_SESSION_get_ticket_lifetime_hint");

var _SSL_SESSION_get0_ticket = Module["_SSL_SESSION_get0_ticket"] = createExportWrapper("SSL_SESSION_get0_ticket");

var _SSL_SESSION_get_max_early_data = Module["_SSL_SESSION_get_max_early_data"] = createExportWrapper("SSL_SESSION_get_max_early_data");

var _SSL_SESSION_set_max_early_data = Module["_SSL_SESSION_set_max_early_data"] = createExportWrapper("SSL_SESSION_set_max_early_data");

var _SSL_SESSION_get0_alpn_selected = Module["_SSL_SESSION_get0_alpn_selected"] = createExportWrapper("SSL_SESSION_get0_alpn_selected");

var _SSL_SESSION_set1_alpn_selected = Module["_SSL_SESSION_set1_alpn_selected"] = createExportWrapper("SSL_SESSION_set1_alpn_selected");

var _SSL_SESSION_get0_peer = Module["_SSL_SESSION_get0_peer"] = createExportWrapper("SSL_SESSION_get0_peer");

var _SSL_SESSION_set1_id_context = Module["_SSL_SESSION_set1_id_context"] = createExportWrapper("SSL_SESSION_set1_id_context");

var _SSL_SESSION_is_resumable = Module["_SSL_SESSION_is_resumable"] = createExportWrapper("SSL_SESSION_is_resumable");

var _SSL_CTX_set_timeout = Module["_SSL_CTX_set_timeout"] = createExportWrapper("SSL_CTX_set_timeout");

var _SSL_CTX_get_timeout = Module["_SSL_CTX_get_timeout"] = createExportWrapper("SSL_CTX_get_timeout");

var _SSL_set_session_secret_cb = Module["_SSL_set_session_secret_cb"] = createExportWrapper("SSL_set_session_secret_cb");

var _SSL_set_session_ticket_ext_cb = Module["_SSL_set_session_ticket_ext_cb"] = createExportWrapper("SSL_set_session_ticket_ext_cb");

var _SSL_set_session_ticket_ext = Module["_SSL_set_session_ticket_ext"] = createExportWrapper("SSL_set_session_ticket_ext");

var _OPENSSL_LH_get_down_load = Module["_OPENSSL_LH_get_down_load"] = createExportWrapper("OPENSSL_LH_get_down_load");

var _OPENSSL_LH_set_down_load = Module["_OPENSSL_LH_set_down_load"] = createExportWrapper("OPENSSL_LH_set_down_load");

var _OPENSSL_LH_doall_arg = Module["_OPENSSL_LH_doall_arg"] = createExportWrapper("OPENSSL_LH_doall_arg");

var _SSL_CTX_sess_set_new_cb = Module["_SSL_CTX_sess_set_new_cb"] = createExportWrapper("SSL_CTX_sess_set_new_cb");

var _SSL_CTX_sess_get_new_cb = Module["_SSL_CTX_sess_get_new_cb"] = createExportWrapper("SSL_CTX_sess_get_new_cb");

var _SSL_CTX_sess_set_remove_cb = Module["_SSL_CTX_sess_set_remove_cb"] = createExportWrapper("SSL_CTX_sess_set_remove_cb");

var _SSL_CTX_sess_get_remove_cb = Module["_SSL_CTX_sess_get_remove_cb"] = createExportWrapper("SSL_CTX_sess_get_remove_cb");

var _SSL_CTX_sess_set_get_cb = Module["_SSL_CTX_sess_set_get_cb"] = createExportWrapper("SSL_CTX_sess_set_get_cb");

var _SSL_CTX_sess_get_get_cb = Module["_SSL_CTX_sess_get_get_cb"] = createExportWrapper("SSL_CTX_sess_get_get_cb");

var _SSL_CTX_set_info_callback = Module["_SSL_CTX_set_info_callback"] = createExportWrapper("SSL_CTX_set_info_callback");

var _SSL_CTX_get_info_callback = Module["_SSL_CTX_get_info_callback"] = createExportWrapper("SSL_CTX_get_info_callback");

var _SSL_CTX_set_client_cert_cb = Module["_SSL_CTX_set_client_cert_cb"] = createExportWrapper("SSL_CTX_set_client_cert_cb");

var _SSL_CTX_get_client_cert_cb = Module["_SSL_CTX_get_client_cert_cb"] = createExportWrapper("SSL_CTX_get_client_cert_cb");

var _SSL_CTX_set_cookie_generate_cb = Module["_SSL_CTX_set_cookie_generate_cb"] = createExportWrapper("SSL_CTX_set_cookie_generate_cb");

var _SSL_CTX_set_cookie_verify_cb = Module["_SSL_CTX_set_cookie_verify_cb"] = createExportWrapper("SSL_CTX_set_cookie_verify_cb");

var _SSL_SESSION_set1_ticket_appdata = Module["_SSL_SESSION_set1_ticket_appdata"] = createExportWrapper("SSL_SESSION_set1_ticket_appdata");

var _SSL_SESSION_get0_ticket_appdata = Module["_SSL_SESSION_get0_ticket_appdata"] = createExportWrapper("SSL_SESSION_get0_ticket_appdata");

var _SSL_CTX_set_stateless_cookie_generate_cb = Module["_SSL_CTX_set_stateless_cookie_generate_cb"] = createExportWrapper("SSL_CTX_set_stateless_cookie_generate_cb");

var _SSL_CTX_set_stateless_cookie_verify_cb = Module["_SSL_CTX_set_stateless_cookie_verify_cb"] = createExportWrapper("SSL_CTX_set_stateless_cookie_verify_cb");

var _PEM_read_bio_SSL_SESSION = Module["_PEM_read_bio_SSL_SESSION"] = createExportWrapper("PEM_read_bio_SSL_SESSION");

var _ASN1_item_i2d = Module["_ASN1_item_i2d"] = createExportWrapper("ASN1_item_i2d");

var _ASN1_item_free = Module["_ASN1_item_free"] = createExportWrapper("ASN1_item_free");

var _CRYPTO_strndup = Module["_CRYPTO_strndup"] = createExportWrapper("CRYPTO_strndup");

var _PEM_write_bio_SSL_SESSION = Module["_PEM_write_bio_SSL_SESSION"] = createExportWrapper("PEM_write_bio_SSL_SESSION");

var _PEM_ASN1_write_bio = Module["_PEM_ASN1_write_bio"] = createExportWrapper("PEM_ASN1_write_bio");

var _tls_validate_all_contexts = Module["_tls_validate_all_contexts"] = createExportWrapper("tls_validate_all_contexts");

var _extension_is_relevant = Module["_extension_is_relevant"] = createExportWrapper("extension_is_relevant");

var _tls_collect_extensions = Module["_tls_collect_extensions"] = createExportWrapper("tls_collect_extensions");

var _custom_ext_find = Module["_custom_ext_find"] = createExportWrapper("custom_ext_find");

var _custom_ext_init = Module["_custom_ext_init"] = createExportWrapper("custom_ext_init");

var _custom_ext_parse = Module["_custom_ext_parse"] = createExportWrapper("custom_ext_parse");

var _tls_parse_all_extensions = Module["_tls_parse_all_extensions"] = createExportWrapper("tls_parse_all_extensions");

var _should_add_extension = Module["_should_add_extension"] = createExportWrapper("should_add_extension");

var _tls_construct_extensions = Module["_tls_construct_extensions"] = createExportWrapper("tls_construct_extensions");

var _ssl_get_min_max_version = Module["_ssl_get_min_max_version"] = createExportWrapper("ssl_get_min_max_version");

var _custom_ext_add = Module["_custom_ext_add"] = createExportWrapper("custom_ext_add");

var _tls_psk_do_binder = Module["_tls_psk_do_binder"] = createExportWrapper("tls_psk_do_binder");

var _tls13_hkdf_expand = Module["_tls13_hkdf_expand"] = createExportWrapper("tls13_hkdf_expand");

var _tls13_derive_finishedkey = Module["_tls13_derive_finishedkey"] = createExportWrapper("tls13_derive_finishedkey");

var _EVP_PKEY_new_raw_private_key = Module["_EVP_PKEY_new_raw_private_key"] = createExportWrapper("EVP_PKEY_new_raw_private_key");

var _EVP_DigestSignInit = Module["_EVP_DigestSignInit"] = createExportWrapper("EVP_DigestSignInit");

var _tls_handle_alpn = Module["_tls_handle_alpn"] = createExportWrapper("tls_handle_alpn");

var _tls1_get_supported_groups = Module["_tls1_get_supported_groups"] = createExportWrapper("tls1_get_supported_groups");

var _check_in_list = Module["_check_in_list"] = createExportWrapper("check_in_list");

var _tls13_change_cipher_state = Module["_tls13_change_cipher_state"] = createExportWrapper("tls13_change_cipher_state");

var _parse_ca_names = Module["_parse_ca_names"] = createExportWrapper("parse_ca_names");

var _get_ca_names = Module["_get_ca_names"] = createExportWrapper("get_ca_names");

var _construct_ca_names = Module["_construct_ca_names"] = createExportWrapper("construct_ca_names");

var _tls_parse_ctos_renegotiate = Module["_tls_parse_ctos_renegotiate"] = createExportWrapper("tls_parse_ctos_renegotiate");

var _tls_parse_stoc_renegotiate = Module["_tls_parse_stoc_renegotiate"] = createExportWrapper("tls_parse_stoc_renegotiate");

var _tls_construct_stoc_renegotiate = Module["_tls_construct_stoc_renegotiate"] = createExportWrapper("tls_construct_stoc_renegotiate");

var _tls_construct_ctos_renegotiate = Module["_tls_construct_ctos_renegotiate"] = createExportWrapper("tls_construct_ctos_renegotiate");

var _tls_parse_ctos_server_name = Module["_tls_parse_ctos_server_name"] = createExportWrapper("tls_parse_ctos_server_name");

var _tls_parse_stoc_server_name = Module["_tls_parse_stoc_server_name"] = createExportWrapper("tls_parse_stoc_server_name");

var _tls_construct_stoc_server_name = Module["_tls_construct_stoc_server_name"] = createExportWrapper("tls_construct_stoc_server_name");

var _tls_construct_ctos_server_name = Module["_tls_construct_ctos_server_name"] = createExportWrapper("tls_construct_ctos_server_name");

var _tls_parse_ctos_maxfragmentlen = Module["_tls_parse_ctos_maxfragmentlen"] = createExportWrapper("tls_parse_ctos_maxfragmentlen");

var _tls_parse_stoc_maxfragmentlen = Module["_tls_parse_stoc_maxfragmentlen"] = createExportWrapper("tls_parse_stoc_maxfragmentlen");

var _tls_construct_stoc_maxfragmentlen = Module["_tls_construct_stoc_maxfragmentlen"] = createExportWrapper("tls_construct_stoc_maxfragmentlen");

var _tls_construct_ctos_maxfragmentlen = Module["_tls_construct_ctos_maxfragmentlen"] = createExportWrapper("tls_construct_ctos_maxfragmentlen");

var _tls_parse_ctos_srp = Module["_tls_parse_ctos_srp"] = createExportWrapper("tls_parse_ctos_srp");

var _tls_construct_ctos_srp = Module["_tls_construct_ctos_srp"] = createExportWrapper("tls_construct_ctos_srp");

var _tls_parse_ctos_ec_pt_formats = Module["_tls_parse_ctos_ec_pt_formats"] = createExportWrapper("tls_parse_ctos_ec_pt_formats");

var _tls_parse_stoc_ec_pt_formats = Module["_tls_parse_stoc_ec_pt_formats"] = createExportWrapper("tls_parse_stoc_ec_pt_formats");

var _tls_construct_stoc_ec_pt_formats = Module["_tls_construct_stoc_ec_pt_formats"] = createExportWrapper("tls_construct_stoc_ec_pt_formats");

var _tls_construct_ctos_ec_pt_formats = Module["_tls_construct_ctos_ec_pt_formats"] = createExportWrapper("tls_construct_ctos_ec_pt_formats");

var _tls_parse_ctos_supported_groups = Module["_tls_parse_ctos_supported_groups"] = createExportWrapper("tls_parse_ctos_supported_groups");

var _tls_construct_stoc_supported_groups = Module["_tls_construct_stoc_supported_groups"] = createExportWrapper("tls_construct_stoc_supported_groups");

var _tls_construct_ctos_supported_groups = Module["_tls_construct_ctos_supported_groups"] = createExportWrapper("tls_construct_ctos_supported_groups");

var _tls_parse_ctos_session_ticket = Module["_tls_parse_ctos_session_ticket"] = createExportWrapper("tls_parse_ctos_session_ticket");

var _tls_parse_stoc_session_ticket = Module["_tls_parse_stoc_session_ticket"] = createExportWrapper("tls_parse_stoc_session_ticket");

var _tls_construct_stoc_session_ticket = Module["_tls_construct_stoc_session_ticket"] = createExportWrapper("tls_construct_stoc_session_ticket");

var _tls_construct_ctos_session_ticket = Module["_tls_construct_ctos_session_ticket"] = createExportWrapper("tls_construct_ctos_session_ticket");

var _tls_parse_ctos_npn = Module["_tls_parse_ctos_npn"] = createExportWrapper("tls_parse_ctos_npn");

var _tls_parse_stoc_npn = Module["_tls_parse_stoc_npn"] = createExportWrapper("tls_parse_stoc_npn");

var _tls_construct_stoc_next_proto_neg = Module["_tls_construct_stoc_next_proto_neg"] = createExportWrapper("tls_construct_stoc_next_proto_neg");

var _tls_construct_ctos_npn = Module["_tls_construct_ctos_npn"] = createExportWrapper("tls_construct_ctos_npn");

var _tls_parse_ctos_alpn = Module["_tls_parse_ctos_alpn"] = createExportWrapper("tls_parse_ctos_alpn");

var _tls_parse_stoc_alpn = Module["_tls_parse_stoc_alpn"] = createExportWrapper("tls_parse_stoc_alpn");

var _tls_construct_stoc_alpn = Module["_tls_construct_stoc_alpn"] = createExportWrapper("tls_construct_stoc_alpn");

var _tls_construct_ctos_alpn = Module["_tls_construct_ctos_alpn"] = createExportWrapper("tls_construct_ctos_alpn");

var _tls_parse_ctos_etm = Module["_tls_parse_ctos_etm"] = createExportWrapper("tls_parse_ctos_etm");

var _tls_parse_stoc_etm = Module["_tls_parse_stoc_etm"] = createExportWrapper("tls_parse_stoc_etm");

var _tls_construct_stoc_etm = Module["_tls_construct_stoc_etm"] = createExportWrapper("tls_construct_stoc_etm");

var _tls_construct_ctos_etm = Module["_tls_construct_ctos_etm"] = createExportWrapper("tls_construct_ctos_etm");

var _tls_parse_stoc_sct = Module["_tls_parse_stoc_sct"] = createExportWrapper("tls_parse_stoc_sct");

var _tls_construct_ctos_sct = Module["_tls_construct_ctos_sct"] = createExportWrapper("tls_construct_ctos_sct");

var _tls_parse_ctos_ems = Module["_tls_parse_ctos_ems"] = createExportWrapper("tls_parse_ctos_ems");

var _tls_parse_stoc_ems = Module["_tls_parse_stoc_ems"] = createExportWrapper("tls_parse_stoc_ems");

var _tls_construct_stoc_ems = Module["_tls_construct_stoc_ems"] = createExportWrapper("tls_construct_stoc_ems");

var _tls_construct_ctos_ems = Module["_tls_construct_ctos_ems"] = createExportWrapper("tls_construct_ctos_ems");

var _tls_parse_ctos_sig_algs_cert = Module["_tls_parse_ctos_sig_algs_cert"] = createExportWrapper("tls_parse_ctos_sig_algs_cert");

var _tls_parse_ctos_post_handshake_auth = Module["_tls_parse_ctos_post_handshake_auth"] = createExportWrapper("tls_parse_ctos_post_handshake_auth");

var _tls_construct_ctos_post_handshake_auth = Module["_tls_construct_ctos_post_handshake_auth"] = createExportWrapper("tls_construct_ctos_post_handshake_auth");

var _tls_parse_ctos_sig_algs = Module["_tls_parse_ctos_sig_algs"] = createExportWrapper("tls_parse_ctos_sig_algs");

var _tls_construct_ctos_sig_algs = Module["_tls_construct_ctos_sig_algs"] = createExportWrapper("tls_construct_ctos_sig_algs");

var _tls_parse_stoc_supported_versions = Module["_tls_parse_stoc_supported_versions"] = createExportWrapper("tls_parse_stoc_supported_versions");

var _tls_construct_stoc_supported_versions = Module["_tls_construct_stoc_supported_versions"] = createExportWrapper("tls_construct_stoc_supported_versions");

var _tls_construct_ctos_supported_versions = Module["_tls_construct_ctos_supported_versions"] = createExportWrapper("tls_construct_ctos_supported_versions");

var _tls_parse_ctos_psk_kex_modes = Module["_tls_parse_ctos_psk_kex_modes"] = createExportWrapper("tls_parse_ctos_psk_kex_modes");

var _tls_construct_ctos_psk_kex_modes = Module["_tls_construct_ctos_psk_kex_modes"] = createExportWrapper("tls_construct_ctos_psk_kex_modes");

var _tls_parse_ctos_key_share = Module["_tls_parse_ctos_key_share"] = createExportWrapper("tls_parse_ctos_key_share");

var _tls_parse_stoc_key_share = Module["_tls_parse_stoc_key_share"] = createExportWrapper("tls_parse_stoc_key_share");

var _tls_construct_stoc_key_share = Module["_tls_construct_stoc_key_share"] = createExportWrapper("tls_construct_stoc_key_share");

var _tls_construct_ctos_key_share = Module["_tls_construct_ctos_key_share"] = createExportWrapper("tls_construct_ctos_key_share");

var _tls_parse_ctos_cookie = Module["_tls_parse_ctos_cookie"] = createExportWrapper("tls_parse_ctos_cookie");

var _tls_parse_stoc_cookie = Module["_tls_parse_stoc_cookie"] = createExportWrapper("tls_parse_stoc_cookie");

var _tls_construct_stoc_cookie = Module["_tls_construct_stoc_cookie"] = createExportWrapper("tls_construct_stoc_cookie");

var _tls_construct_ctos_cookie = Module["_tls_construct_ctos_cookie"] = createExportWrapper("tls_construct_ctos_cookie");

var _tls_construct_stoc_cryptopro_bug = Module["_tls_construct_stoc_cryptopro_bug"] = createExportWrapper("tls_construct_stoc_cryptopro_bug");

var _tls_parse_ctos_early_data = Module["_tls_parse_ctos_early_data"] = createExportWrapper("tls_parse_ctos_early_data");

var _tls_parse_stoc_early_data = Module["_tls_parse_stoc_early_data"] = createExportWrapper("tls_parse_stoc_early_data");

var _tls_construct_stoc_early_data = Module["_tls_construct_stoc_early_data"] = createExportWrapper("tls_construct_stoc_early_data");

var _tls_construct_ctos_early_data = Module["_tls_construct_ctos_early_data"] = createExportWrapper("tls_construct_ctos_early_data");

var _tls_construct_ctos_padding = Module["_tls_construct_ctos_padding"] = createExportWrapper("tls_construct_ctos_padding");

var _tls_parse_ctos_psk = Module["_tls_parse_ctos_psk"] = createExportWrapper("tls_parse_ctos_psk");

var _tls_parse_stoc_psk = Module["_tls_parse_stoc_psk"] = createExportWrapper("tls_parse_stoc_psk");

var _tls_construct_stoc_psk = Module["_tls_construct_stoc_psk"] = createExportWrapper("tls_construct_stoc_psk");

var _tls_construct_ctos_psk = Module["_tls_construct_ctos_psk"] = createExportWrapper("tls_construct_ctos_psk");

var _tls1_get_formatlist = Module["_tls1_get_formatlist"] = createExportWrapper("tls1_get_formatlist");

var _tls_curve_allowed = Module["_tls_curve_allowed"] = createExportWrapper("tls_curve_allowed");

var _tls_use_ticket = Module["_tls_use_ticket"] = createExportWrapper("tls_use_ticket");

var _tls12_get_psigalgs = Module["_tls12_get_psigalgs"] = createExportWrapper("tls12_get_psigalgs");

var _tls12_copy_sigalgs = Module["_tls12_copy_sigalgs"] = createExportWrapper("tls12_copy_sigalgs");

var _EVP_PKEY_get1_tls_encodedpoint = Module["_EVP_PKEY_get1_tls_encodedpoint"] = createExportWrapper("EVP_PKEY_get1_tls_encodedpoint");

var _EVP_PKEY_set1_tls_encodedpoint = Module["_EVP_PKEY_set1_tls_encodedpoint"] = createExportWrapper("EVP_PKEY_set1_tls_encodedpoint");

var _SSL_CTX_add_client_custom_ext = Module["_SSL_CTX_add_client_custom_ext"] = createExportWrapper("SSL_CTX_add_client_custom_ext");

var _SSL_extension_supported = Module["_SSL_extension_supported"] = createExportWrapper("SSL_extension_supported");

var _tls1_save_sigalgs = Module["_tls1_save_sigalgs"] = createExportWrapper("tls1_save_sigalgs");

var _EVP_DigestSign = Module["_EVP_DigestSign"] = createExportWrapper("EVP_DigestSign");

var _create_synthetic_message_hash = Module["_create_synthetic_message_hash"] = createExportWrapper("create_synthetic_message_hash");

var _tls1_save_u16 = Module["_tls1_save_u16"] = createExportWrapper("tls1_save_u16");

var _tls_decrypt_ticket = Module["_tls_decrypt_ticket"] = createExportWrapper("tls_decrypt_ticket");

var _BUF_MEM_new = Module["_BUF_MEM_new"] = createExportWrapper("BUF_MEM_new");

var _tls_setup_handshake = Module["_tls_setup_handshake"] = createExportWrapper("tls_setup_handshake");

var _ossl_statem_client_max_message_size = Module["_ossl_statem_client_max_message_size"] = createExportWrapper("ossl_statem_client_max_message_size");

var _ossl_statem_server_max_message_size = Module["_ossl_statem_server_max_message_size"] = createExportWrapper("ossl_statem_server_max_message_size");

var _ossl_statem_client_post_process_message = Module["_ossl_statem_client_post_process_message"] = createExportWrapper("ossl_statem_client_post_process_message");

var _ossl_statem_server_post_process_message = Module["_ossl_statem_server_post_process_message"] = createExportWrapper("ossl_statem_server_post_process_message");

var _ossl_statem_client_process_message = Module["_ossl_statem_client_process_message"] = createExportWrapper("ossl_statem_client_process_message");

var _ossl_statem_server_process_message = Module["_ossl_statem_server_process_message"] = createExportWrapper("ossl_statem_server_process_message");

var _ossl_statem_client_read_transition = Module["_ossl_statem_client_read_transition"] = createExportWrapper("ossl_statem_client_read_transition");

var _ossl_statem_server_read_transition = Module["_ossl_statem_server_read_transition"] = createExportWrapper("ossl_statem_server_read_transition");

var _dtls_get_message = Module["_dtls_get_message"] = createExportWrapper("dtls_get_message");

var _tls_get_message_header = Module["_tls_get_message_header"] = createExportWrapper("tls_get_message_header");

var _BUF_MEM_grow_clean = Module["_BUF_MEM_grow_clean"] = createExportWrapper("BUF_MEM_grow_clean");

var _tls_get_message_body = Module["_tls_get_message_body"] = createExportWrapper("tls_get_message_body");

var _ossl_statem_client_construct_message = Module["_ossl_statem_client_construct_message"] = createExportWrapper("ossl_statem_client_construct_message");

var _ossl_statem_server_construct_message = Module["_ossl_statem_server_construct_message"] = createExportWrapper("ossl_statem_server_construct_message");

var _ossl_statem_client_post_work = Module["_ossl_statem_client_post_work"] = createExportWrapper("ossl_statem_client_post_work");

var _ossl_statem_server_post_work = Module["_ossl_statem_server_post_work"] = createExportWrapper("ossl_statem_server_post_work");

var _ossl_statem_client_pre_work = Module["_ossl_statem_client_pre_work"] = createExportWrapper("ossl_statem_client_pre_work");

var _ossl_statem_server_pre_work = Module["_ossl_statem_server_pre_work"] = createExportWrapper("ossl_statem_server_pre_work");

var _ossl_statem_client_write_transition = Module["_ossl_statem_client_write_transition"] = createExportWrapper("ossl_statem_client_write_transition");

var _ossl_statem_server_write_transition = Module["_ossl_statem_server_write_transition"] = createExportWrapper("ossl_statem_server_write_transition");

var _ossl_statem_export_allowed = Module["_ossl_statem_export_allowed"] = createExportWrapper("ossl_statem_export_allowed");

var _ossl_statem_export_early_allowed = Module["_ossl_statem_export_early_allowed"] = createExportWrapper("ossl_statem_export_early_allowed");

var _tls13_restore_handshake_digest_for_pha = Module["_tls13_restore_handshake_digest_for_pha"] = createExportWrapper("tls13_restore_handshake_digest_for_pha");

var _tls_finish_handshake = Module["_tls_finish_handshake"] = createExportWrapper("tls_finish_handshake");

var _tls_client_key_exchange_post_work = Module["_tls_client_key_exchange_post_work"] = createExportWrapper("tls_client_key_exchange_post_work");

var _tls13_save_handshake_digest_for_pha = Module["_tls13_save_handshake_digest_for_pha"] = createExportWrapper("tls13_save_handshake_digest_for_pha");

var _tls13_update_key = Module["_tls13_update_key"] = createExportWrapper("tls13_update_key");

var _srp_generate_client_master_secret = Module["_srp_generate_client_master_secret"] = createExportWrapper("srp_generate_client_master_secret");

var _tls_construct_change_cipher_spec = Module["_tls_construct_change_cipher_spec"] = createExportWrapper("tls_construct_change_cipher_spec");

var _dtls_construct_change_cipher_spec = Module["_dtls_construct_change_cipher_spec"] = createExportWrapper("dtls_construct_change_cipher_spec");

var _tls_construct_client_hello = Module["_tls_construct_client_hello"] = createExportWrapper("tls_construct_client_hello");

var _tls_construct_end_of_early_data = Module["_tls_construct_end_of_early_data"] = createExportWrapper("tls_construct_end_of_early_data");

var _tls_construct_client_certificate = Module["_tls_construct_client_certificate"] = createExportWrapper("tls_construct_client_certificate");

var _tls_construct_client_key_exchange = Module["_tls_construct_client_key_exchange"] = createExportWrapper("tls_construct_client_key_exchange");

var _tls_construct_cert_verify = Module["_tls_construct_cert_verify"] = createExportWrapper("tls_construct_cert_verify");

var _tls_construct_next_proto = Module["_tls_construct_next_proto"] = createExportWrapper("tls_construct_next_proto");

var _tls_construct_finished = Module["_tls_construct_finished"] = createExportWrapper("tls_construct_finished");

var _tls_construct_key_update = Module["_tls_construct_key_update"] = createExportWrapper("tls_construct_key_update");

var _ssl_set_client_hello_version = Module["_ssl_set_client_hello_version"] = createExportWrapper("ssl_set_client_hello_version");

var _ssl_version_supported = Module["_ssl_version_supported"] = createExportWrapper("ssl_version_supported");

var _ssl3_output_cert_chain = Module["_ssl3_output_cert_chain"] = createExportWrapper("ssl3_output_cert_chain");

var _tls_process_server_hello = Module["_tls_process_server_hello"] = createExportWrapper("tls_process_server_hello");

var _tls_process_server_certificate = Module["_tls_process_server_certificate"] = createExportWrapper("tls_process_server_certificate");

var _tls_process_cert_verify = Module["_tls_process_cert_verify"] = createExportWrapper("tls_process_cert_verify");

var _tls_process_cert_status_body = Module["_tls_process_cert_status_body"] = createExportWrapper("tls_process_cert_status_body");

var _tls_process_key_exchange = Module["_tls_process_key_exchange"] = createExportWrapper("tls_process_key_exchange");

var _tls_process_certificate_request = Module["_tls_process_certificate_request"] = createExportWrapper("tls_process_certificate_request");

var _SRP_Calc_A_param = Module["_SRP_Calc_A_param"] = createExportWrapper("SRP_Calc_A_param");

var _tls_process_initial_server_flight = Module["_tls_process_initial_server_flight"] = createExportWrapper("tls_process_initial_server_flight");

var _tls_process_change_cipher_spec = Module["_tls_process_change_cipher_spec"] = createExportWrapper("tls_process_change_cipher_spec");

var _tls_process_new_session_ticket = Module["_tls_process_new_session_ticket"] = createExportWrapper("tls_process_new_session_ticket");

var _tls_process_finished = Module["_tls_process_finished"] = createExportWrapper("tls_process_finished");

var _tls_process_key_update = Module["_tls_process_key_update"] = createExportWrapper("tls_process_key_update");

var _ssl_choose_client_version = Module["_ssl_choose_client_version"] = createExportWrapper("ssl_choose_client_version");

var _dtls_process_hello_verify = Module["_dtls_process_hello_verify"] = createExportWrapper("dtls_process_hello_verify");

var _ssl_x509err2alert = Module["_ssl_x509err2alert"] = createExportWrapper("ssl_x509err2alert");

var _tls_process_cert_status = Module["_tls_process_cert_status"] = createExportWrapper("tls_process_cert_status");

var _srp_verify_server_param = Module["_srp_verify_server_param"] = createExportWrapper("srp_verify_server_param");

var _DH_check_params = Module["_DH_check_params"] = createExportWrapper("DH_check_params");

var _tls1_set_peer_legacy_sigalg = Module["_tls1_set_peer_legacy_sigalg"] = createExportWrapper("tls1_set_peer_legacy_sigalg");

var _tls12_check_peer_sigalg = Module["_tls12_check_peer_sigalg"] = createExportWrapper("tls12_check_peer_sigalg");

var _tls1_lookup_md = Module["_tls1_lookup_md"] = createExportWrapper("tls1_lookup_md");

var _EVP_DigestVerifyInit = Module["_EVP_DigestVerifyInit"] = createExportWrapper("EVP_DigestVerifyInit");

var _construct_key_exchange_tbs = Module["_construct_key_exchange_tbs"] = createExportWrapper("construct_key_exchange_tbs");

var _EVP_DigestVerify = Module["_EVP_DigestVerify"] = createExportWrapper("EVP_DigestVerify");

var _ssl3_check_cert_and_algorithm = Module["_ssl3_check_cert_and_algorithm"] = createExportWrapper("ssl3_check_cert_and_algorithm");

var _tls1_process_sigalgs = Module["_tls1_process_sigalgs"] = createExportWrapper("tls1_process_sigalgs");

var _tls_process_server_done = Module["_tls_process_server_done"] = createExportWrapper("tls_process_server_done");

var _EVP_Digest = Module["_EVP_Digest"] = createExportWrapper("EVP_Digest");

var _tls_process_hello_req = Module["_tls_process_hello_req"] = createExportWrapper("tls_process_hello_req");

var _tls_prepare_client_certificate = Module["_tls_prepare_client_certificate"] = createExportWrapper("tls_prepare_client_certificate");

var _tls_choose_sigalg = Module["_tls_choose_sigalg"] = createExportWrapper("tls_choose_sigalg");

var _tls1_check_chain = Module["_tls1_check_chain"] = createExportWrapper("tls1_check_chain");

var _tls1_check_group_id = Module["_tls1_check_group_id"] = createExportWrapper("tls1_check_group_id");

var _ssl_do_client_cert_cb = Module["_ssl_do_client_cert_cb"] = createExportWrapper("ssl_do_client_cert_cb");

var _ssl3_take_mac = Module["_ssl3_take_mac"] = createExportWrapper("ssl3_take_mac");

var _dtls1_get_queue_priority = Module["_dtls1_get_queue_priority"] = createExportWrapper("dtls1_get_queue_priority");

var _dtls1_retransmit_message = Module["_dtls1_retransmit_message"] = createExportWrapper("dtls1_retransmit_message");

var _dtls1_buffer_message = Module["_dtls1_buffer_message"] = createExportWrapper("dtls1_buffer_message");

var _dtls1_set_message_header = Module["_dtls1_set_message_header"] = createExportWrapper("dtls1_set_message_header");

var _BUF_reverse = Module["_BUF_reverse"] = createExportWrapper("BUF_reverse");

var _EVP_DigestVerifyFinal = Module["_EVP_DigestVerifyFinal"] = createExportWrapper("EVP_DigestVerifyFinal");

var _ssl_security_cert_chain = Module["_ssl_security_cert_chain"] = createExportWrapper("ssl_security_cert_chain");

var _tls_check_sigalg_curve = Module["_tls_check_sigalg_curve"] = createExportWrapper("tls_check_sigalg_curve");

var _ssl_check_version_downgrade = Module["_ssl_check_version_downgrade"] = createExportWrapper("ssl_check_version_downgrade");

var _ssl_choose_server_version = Module["_ssl_choose_server_version"] = createExportWrapper("ssl_choose_server_version");

var _d2i_X509_NAME = Module["_d2i_X509_NAME"] = createExportWrapper("d2i_X509_NAME");

var _X509_NAME_cmp = Module["_X509_NAME_cmp"] = createExportWrapper("X509_NAME_cmp");

var _i2d_X509 = Module["_i2d_X509"] = createExportWrapper("i2d_X509");

var _d2i_GOST_KX_MESSAGE = Module["_d2i_GOST_KX_MESSAGE"] = createExportWrapper("d2i_GOST_KX_MESSAGE");

var _i2d_GOST_KX_MESSAGE = Module["_i2d_GOST_KX_MESSAGE"] = createExportWrapper("i2d_GOST_KX_MESSAGE");

var _GOST_KX_MESSAGE_new = Module["_GOST_KX_MESSAGE_new"] = createExportWrapper("GOST_KX_MESSAGE_new");

var _GOST_KX_MESSAGE_free = Module["_GOST_KX_MESSAGE_free"] = createExportWrapper("GOST_KX_MESSAGE_free");

var _ASN1_item_new = Module["_ASN1_item_new"] = createExportWrapper("ASN1_item_new");

var _dtls_construct_hello_verify_request = Module["_dtls_construct_hello_verify_request"] = createExportWrapper("dtls_construct_hello_verify_request");

var _tls_construct_server_hello = Module["_tls_construct_server_hello"] = createExportWrapper("tls_construct_server_hello");

var _tls_construct_server_certificate = Module["_tls_construct_server_certificate"] = createExportWrapper("tls_construct_server_certificate");

var _tls_construct_server_key_exchange = Module["_tls_construct_server_key_exchange"] = createExportWrapper("tls_construct_server_key_exchange");

var _tls_construct_certificate_request = Module["_tls_construct_certificate_request"] = createExportWrapper("tls_construct_certificate_request");

var _tls_construct_server_done = Module["_tls_construct_server_done"] = createExportWrapper("tls_construct_server_done");

var _tls_construct_new_session_ticket = Module["_tls_construct_new_session_ticket"] = createExportWrapper("tls_construct_new_session_ticket");

var _tls_construct_cert_status = Module["_tls_construct_cert_status"] = createExportWrapper("tls_construct_cert_status");

var _ssl_get_auto_dh = Module["_ssl_get_auto_dh"] = createExportWrapper("ssl_get_auto_dh");

var _HMAC_CTX_new = Module["_HMAC_CTX_new"] = createExportWrapper("HMAC_CTX_new");

var _HMAC_CTX_free = Module["_HMAC_CTX_free"] = createExportWrapper("HMAC_CTX_free");

var _EVP_EncryptInit_ex = Module["_EVP_EncryptInit_ex"] = createExportWrapper("EVP_EncryptInit_ex");

var _HMAC_Init_ex = Module["_HMAC_Init_ex"] = createExportWrapper("HMAC_Init_ex");

var _HMAC_Update = Module["_HMAC_Update"] = createExportWrapper("HMAC_Update");

var _HMAC_Final = Module["_HMAC_Final"] = createExportWrapper("HMAC_Final");

var _tls_process_client_hello = Module["_tls_process_client_hello"] = createExportWrapper("tls_process_client_hello");

var _tls_process_end_of_early_data = Module["_tls_process_end_of_early_data"] = createExportWrapper("tls_process_end_of_early_data");

var _tls_process_client_certificate = Module["_tls_process_client_certificate"] = createExportWrapper("tls_process_client_certificate");

var _tls_process_client_key_exchange = Module["_tls_process_client_key_exchange"] = createExportWrapper("tls_process_client_key_exchange");

var _tls_process_next_proto = Module["_tls_process_next_proto"] = createExportWrapper("tls_process_next_proto");

var _RSA_size = Module["_RSA_size"] = createExportWrapper("RSA_size");

var _RSA_private_decrypt = Module["_RSA_private_decrypt"] = createExportWrapper("RSA_private_decrypt");

var _tls_post_process_client_hello = Module["_tls_post_process_client_hello"] = createExportWrapper("tls_post_process_client_hello");

var _tls1_set_server_sigalgs = Module["_tls1_set_server_sigalgs"] = createExportWrapper("tls1_set_server_sigalgs");

var _SSL_srp_server_param_with_username = Module["_SSL_srp_server_param_with_username"] = createExportWrapper("SSL_srp_server_param_with_username");

var _tls_post_process_client_key_exchange = Module["_tls_post_process_client_key_exchange"] = createExportWrapper("tls_post_process_client_key_exchange");

var _BN_ucmp = Module["_BN_ucmp"] = createExportWrapper("BN_ucmp");

var _srp_generate_server_master_secret = Module["_srp_generate_server_master_secret"] = createExportWrapper("srp_generate_server_master_secret");

var _ASN1_TYPE_get = Module["_ASN1_TYPE_get"] = createExportWrapper("ASN1_TYPE_get");

var _tls_construct_cert_status_body = Module["_tls_construct_cert_status_body"] = createExportWrapper("tls_construct_cert_status_body");

var _EVP_PKEY_new_mac_key = Module["_EVP_PKEY_new_mac_key"] = createExportWrapper("EVP_PKEY_new_mac_key");

var _EC_KEY_get_conv_form = Module["_EC_KEY_get_conv_form"] = createExportWrapper("EC_KEY_get_conv_form");

var _EC_GROUP_method_of = Module["_EC_GROUP_method_of"] = createExportWrapper("EC_GROUP_method_of");

var _EC_METHOD_get_field_type = Module["_EC_METHOD_get_field_type"] = createExportWrapper("EC_METHOD_get_field_type");

var _SSL_get_peer_signature_type_nid = Module["_SSL_get_peer_signature_type_nid"] = createExportWrapper("SSL_get_peer_signature_type_nid");

var _SSL_get_signature_type_nid = Module["_SSL_get_signature_type_nid"] = createExportWrapper("SSL_get_signature_type_nid");

var _EVP_DecryptInit_ex = Module["_EVP_DecryptInit_ex"] = createExportWrapper("EVP_DecryptInit_ex");

var _HMAC_size = Module["_HMAC_size"] = createExportWrapper("HMAC_size");

var _SSL_get_sigalgs = Module["_SSL_get_sigalgs"] = createExportWrapper("SSL_get_sigalgs");

var _SSL_get_shared_sigalgs = Module["_SSL_get_shared_sigalgs"] = createExportWrapper("SSL_get_shared_sigalgs");

var _tls1_set_raw_sigalgs = Module["_tls1_set_raw_sigalgs"] = createExportWrapper("tls1_set_raw_sigalgs");

var _X509_chain_check_suiteb = Module["_X509_chain_check_suiteb"] = createExportWrapper("X509_chain_check_suiteb");

var _EVP_PKEY_get0 = Module["_EVP_PKEY_get0"] = createExportWrapper("EVP_PKEY_get0");

var _SSL_check_chain = Module["_SSL_check_chain"] = createExportWrapper("SSL_check_chain");

var _BN_set_word = Module["_BN_set_word"] = createExportWrapper("BN_set_word");

var _BN_get_rfc3526_prime_8192 = Module["_BN_get_rfc3526_prime_8192"] = createExportWrapper("BN_get_rfc3526_prime_8192");

var _BN_get_rfc3526_prime_4096 = Module["_BN_get_rfc3526_prime_4096"] = createExportWrapper("BN_get_rfc3526_prime_4096");

var _BN_get_rfc3526_prime_3072 = Module["_BN_get_rfc3526_prime_3072"] = createExportWrapper("BN_get_rfc3526_prime_3072");

var _BN_get_rfc3526_prime_2048 = Module["_BN_get_rfc3526_prime_2048"] = createExportWrapper("BN_get_rfc3526_prime_2048");

var _BN_get_rfc2409_prime_1024 = Module["_BN_get_rfc2409_prime_1024"] = createExportWrapper("BN_get_rfc2409_prime_1024");

var _X509_get_signature_info = Module["_X509_get_signature_info"] = createExportWrapper("X509_get_signature_info");

var _SSL_CTX_set_tlsext_max_fragment_length = Module["_SSL_CTX_set_tlsext_max_fragment_length"] = createExportWrapper("SSL_CTX_set_tlsext_max_fragment_length");

var _SSL_set_tlsext_max_fragment_length = Module["_SSL_set_tlsext_max_fragment_length"] = createExportWrapper("SSL_set_tlsext_max_fragment_length");

var _SSL_SESSION_get_max_fragment_length = Module["_SSL_SESSION_get_max_fragment_length"] = createExportWrapper("SSL_SESSION_get_max_fragment_length");

var _EVP_PKEY_get_default_digest_nid = Module["_EVP_PKEY_get_default_digest_nid"] = createExportWrapper("EVP_PKEY_get_default_digest_nid");

var _tls13_setup_key_block = Module["_tls13_setup_key_block"] = createExportWrapper("tls13_setup_key_block");

var _tls13_generate_master_secret = Module["_tls13_generate_master_secret"] = createExportWrapper("tls13_generate_master_secret");

var _tls13_final_finish_mac = Module["_tls13_final_finish_mac"] = createExportWrapper("tls13_final_finish_mac");

var _tls13_export_keying_material = Module["_tls13_export_keying_material"] = createExportWrapper("tls13_export_keying_material");

var _tls13_derive_key = Module["_tls13_derive_key"] = createExportWrapper("tls13_derive_key");

var _tls13_derive_iv = Module["_tls13_derive_iv"] = createExportWrapper("tls13_derive_iv");

var _BN_dup = Module["_BN_dup"] = createExportWrapper("BN_dup");

var _SRP_Calc_B = Module["_SRP_Calc_B"] = createExportWrapper("SRP_Calc_B");

var _SSL_set_srp_server_param_pw = Module["_SSL_set_srp_server_param_pw"] = createExportWrapper("SSL_set_srp_server_param_pw");

var _SRP_get_default_gN = Module["_SRP_get_default_gN"] = createExportWrapper("SRP_get_default_gN");

var _BN_clear_free = Module["_BN_clear_free"] = createExportWrapper("BN_clear_free");

var _SRP_create_verifier_BN = Module["_SRP_create_verifier_BN"] = createExportWrapper("SRP_create_verifier_BN");

var _SSL_set_srp_server_param = Module["_SSL_set_srp_server_param"] = createExportWrapper("SSL_set_srp_server_param");

var _BN_copy = Module["_BN_copy"] = createExportWrapper("BN_copy");

var _SRP_Verify_A_mod_N = Module["_SRP_Verify_A_mod_N"] = createExportWrapper("SRP_Verify_A_mod_N");

var _SRP_Calc_u = Module["_SRP_Calc_u"] = createExportWrapper("SRP_Calc_u");

var _SRP_Calc_server_key = Module["_SRP_Calc_server_key"] = createExportWrapper("SRP_Calc_server_key");

var _SRP_Verify_B_mod_N = Module["_SRP_Verify_B_mod_N"] = createExportWrapper("SRP_Verify_B_mod_N");

var _SRP_Calc_x = Module["_SRP_Calc_x"] = createExportWrapper("SRP_Calc_x");

var _SRP_Calc_client_key = Module["_SRP_Calc_client_key"] = createExportWrapper("SRP_Calc_client_key");

var _SRP_check_known_gN_param = Module["_SRP_check_known_gN_param"] = createExportWrapper("SRP_check_known_gN_param");

var _SRP_Calc_A = Module["_SRP_Calc_A"] = createExportWrapper("SRP_Calc_A");

var _SSL_get_srp_g = Module["_SSL_get_srp_g"] = createExportWrapper("SSL_get_srp_g");

var _SSL_get_srp_N = Module["_SSL_get_srp_N"] = createExportWrapper("SSL_get_srp_N");

var _SSL_get_srp_username = Module["_SSL_get_srp_username"] = createExportWrapper("SSL_get_srp_username");

var _SSL_get_srp_userinfo = Module["_SSL_get_srp_userinfo"] = createExportWrapper("SSL_get_srp_userinfo");

var _SSL_CTX_set_srp_username = Module["_SSL_CTX_set_srp_username"] = createExportWrapper("SSL_CTX_set_srp_username");

var _SSL_CTX_set_srp_password = Module["_SSL_CTX_set_srp_password"] = createExportWrapper("SSL_CTX_set_srp_password");

var _SSL_CTX_set_srp_strength = Module["_SSL_CTX_set_srp_strength"] = createExportWrapper("SSL_CTX_set_srp_strength");

var _SSL_CTX_set_srp_verify_param_callback = Module["_SSL_CTX_set_srp_verify_param_callback"] = createExportWrapper("SSL_CTX_set_srp_verify_param_callback");

var _SSL_CTX_set_srp_cb_arg = Module["_SSL_CTX_set_srp_cb_arg"] = createExportWrapper("SSL_CTX_set_srp_cb_arg");

var _SSL_CTX_set_srp_username_callback = Module["_SSL_CTX_set_srp_username_callback"] = createExportWrapper("SSL_CTX_set_srp_username_callback");

var _SSL_CTX_set_srp_client_pwd_callback = Module["_SSL_CTX_set_srp_client_pwd_callback"] = createExportWrapper("SSL_CTX_set_srp_client_pwd_callback");

var _AES_cbc_encrypt = Module["_AES_cbc_encrypt"] = createExportWrapper("AES_cbc_encrypt");

var _AES_set_encrypt_key = Module["_AES_set_encrypt_key"] = createExportWrapper("AES_set_encrypt_key");

var _AES_set_decrypt_key = Module["_AES_set_decrypt_key"] = createExportWrapper("AES_set_decrypt_key");

var _AES_encrypt = Module["_AES_encrypt"] = createExportWrapper("AES_encrypt");

var _AES_decrypt = Module["_AES_decrypt"] = createExportWrapper("AES_decrypt");

var _AES_wrap_key = Module["_AES_wrap_key"] = createExportWrapper("AES_wrap_key");

var _AES_unwrap_key = Module["_AES_unwrap_key"] = createExportWrapper("AES_unwrap_key");

var _aria_encrypt = Module["_aria_encrypt"] = createExportWrapper("aria_encrypt");

var _aria_set_encrypt_key = Module["_aria_set_encrypt_key"] = createExportWrapper("aria_set_encrypt_key");

var _aria_set_decrypt_key = Module["_aria_set_decrypt_key"] = createExportWrapper("aria_set_decrypt_key");

var _ASN1_BIT_STRING_set = Module["_ASN1_BIT_STRING_set"] = createExportWrapper("ASN1_BIT_STRING_set");

var _i2c_ASN1_BIT_STRING = Module["_i2c_ASN1_BIT_STRING"] = createExportWrapper("i2c_ASN1_BIT_STRING");

var _c2i_ASN1_BIT_STRING = Module["_c2i_ASN1_BIT_STRING"] = createExportWrapper("c2i_ASN1_BIT_STRING");

var _ASN1_BIT_STRING_set_bit = Module["_ASN1_BIT_STRING_set_bit"] = createExportWrapper("ASN1_BIT_STRING_set_bit");

var _ASN1_BIT_STRING_get_bit = Module["_ASN1_BIT_STRING_get_bit"] = createExportWrapper("ASN1_BIT_STRING_get_bit");

var _ASN1_BIT_STRING_check = Module["_ASN1_BIT_STRING_check"] = createExportWrapper("ASN1_BIT_STRING_check");

var _ASN1_d2i_bio = Module["_ASN1_d2i_bio"] = createExportWrapper("ASN1_d2i_bio");

var _asn1_d2i_read_bio = Module["_asn1_d2i_read_bio"] = createExportWrapper("asn1_d2i_read_bio");

var _ASN1_item_d2i_bio = Module["_ASN1_item_d2i_bio"] = createExportWrapper("ASN1_item_d2i_bio");

var _ASN1_digest = Module["_ASN1_digest"] = createExportWrapper("ASN1_digest");

var _ASN1_item_digest = Module["_ASN1_item_digest"] = createExportWrapper("ASN1_item_digest");

var _ASN1_dup = Module["_ASN1_dup"] = createExportWrapper("ASN1_dup");

var _ASN1_item_dup = Module["_ASN1_item_dup"] = createExportWrapper("ASN1_item_dup");

var _asn1_generalizedtime_to_tm = Module["_asn1_generalizedtime_to_tm"] = createExportWrapper("asn1_generalizedtime_to_tm");

var _ASN1_GENERALIZEDTIME_check = Module["_ASN1_GENERALIZEDTIME_check"] = createExportWrapper("ASN1_GENERALIZEDTIME_check");

var _ASN1_GENERALIZEDTIME_set_string = Module["_ASN1_GENERALIZEDTIME_set_string"] = createExportWrapper("ASN1_GENERALIZEDTIME_set_string");

var _ASN1_GENERALIZEDTIME_set = Module["_ASN1_GENERALIZEDTIME_set"] = createExportWrapper("ASN1_GENERALIZEDTIME_set");

var _ASN1_GENERALIZEDTIME_adj = Module["_ASN1_GENERALIZEDTIME_adj"] = createExportWrapper("ASN1_GENERALIZEDTIME_adj");

var _ASN1_GENERALIZEDTIME_print = Module["_ASN1_GENERALIZEDTIME_print"] = createExportWrapper("ASN1_GENERALIZEDTIME_print");

var _ASN1_i2d_bio = Module["_ASN1_i2d_bio"] = createExportWrapper("ASN1_i2d_bio");

var _ASN1_item_i2d_bio = Module["_ASN1_item_i2d_bio"] = createExportWrapper("ASN1_item_i2d_bio");

var _ASN1_INTEGER_dup = Module["_ASN1_INTEGER_dup"] = createExportWrapper("ASN1_INTEGER_dup");

var _ASN1_INTEGER_cmp = Module["_ASN1_INTEGER_cmp"] = createExportWrapper("ASN1_INTEGER_cmp");

var _i2c_ASN1_INTEGER = Module["_i2c_ASN1_INTEGER"] = createExportWrapper("i2c_ASN1_INTEGER");

var _c2i_ASN1_INTEGER = Module["_c2i_ASN1_INTEGER"] = createExportWrapper("c2i_ASN1_INTEGER");

var _d2i_ASN1_UINTEGER = Module["_d2i_ASN1_UINTEGER"] = createExportWrapper("d2i_ASN1_UINTEGER");

var _ASN1_INTEGER_get_int64 = Module["_ASN1_INTEGER_get_int64"] = createExportWrapper("ASN1_INTEGER_get_int64");

var _ASN1_STRING_dup = Module["_ASN1_STRING_dup"] = createExportWrapper("ASN1_STRING_dup");

var _ASN1_STRING_cmp = Module["_ASN1_STRING_cmp"] = createExportWrapper("ASN1_STRING_cmp");

var _ASN1_INTEGER_new = Module["_ASN1_INTEGER_new"] = createExportWrapper("ASN1_INTEGER_new");

var _ASN1_INTEGER_free = Module["_ASN1_INTEGER_free"] = createExportWrapper("ASN1_INTEGER_free");

var _ASN1_get_object = Module["_ASN1_get_object"] = createExportWrapper("ASN1_get_object");

var _ASN1_INTEGER_get_uint64 = Module["_ASN1_INTEGER_get_uint64"] = createExportWrapper("ASN1_INTEGER_get_uint64");

var _ASN1_INTEGER_set_uint64 = Module["_ASN1_INTEGER_set_uint64"] = createExportWrapper("ASN1_INTEGER_set_uint64");

var _ASN1_INTEGER_set = Module["_ASN1_INTEGER_set"] = createExportWrapper("ASN1_INTEGER_set");

var _ASN1_INTEGER_get = Module["_ASN1_INTEGER_get"] = createExportWrapper("ASN1_INTEGER_get");

var _BN_to_ASN1_INTEGER = Module["_BN_to_ASN1_INTEGER"] = createExportWrapper("BN_to_ASN1_INTEGER");

var _ASN1_STRING_type_new = Module["_ASN1_STRING_type_new"] = createExportWrapper("ASN1_STRING_type_new");

var _BN_is_negative = Module["_BN_is_negative"] = createExportWrapper("BN_is_negative");

var _BN_set_negative = Module["_BN_set_negative"] = createExportWrapper("BN_set_negative");

var _ASN1_ENUMERATED_get_int64 = Module["_ASN1_ENUMERATED_get_int64"] = createExportWrapper("ASN1_ENUMERATED_get_int64");

var _ASN1_ENUMERATED_set_int64 = Module["_ASN1_ENUMERATED_set_int64"] = createExportWrapper("ASN1_ENUMERATED_set_int64");

var _ASN1_ENUMERATED_set = Module["_ASN1_ENUMERATED_set"] = createExportWrapper("ASN1_ENUMERATED_set");

var _ASN1_ENUMERATED_get = Module["_ASN1_ENUMERATED_get"] = createExportWrapper("ASN1_ENUMERATED_get");

var _BN_to_ASN1_ENUMERATED = Module["_BN_to_ASN1_ENUMERATED"] = createExportWrapper("BN_to_ASN1_ENUMERATED");

var _ASN1_ENUMERATED_to_BN = Module["_ASN1_ENUMERATED_to_BN"] = createExportWrapper("ASN1_ENUMERATED_to_BN");

var _c2i_uint64_int = Module["_c2i_uint64_int"] = createExportWrapper("c2i_uint64_int");

var _i2c_uint64_int = Module["_i2c_uint64_int"] = createExportWrapper("i2c_uint64_int");

var _ASN1_mbstring_copy = Module["_ASN1_mbstring_copy"] = createExportWrapper("ASN1_mbstring_copy");

var _ASN1_mbstring_ncopy = Module["_ASN1_mbstring_ncopy"] = createExportWrapper("ASN1_mbstring_ncopy");

var _i2d_ASN1_OBJECT = Module["_i2d_ASN1_OBJECT"] = createExportWrapper("i2d_ASN1_OBJECT");

var _a2d_ASN1_OBJECT = Module["_a2d_ASN1_OBJECT"] = createExportWrapper("a2d_ASN1_OBJECT");

var _i2t_ASN1_OBJECT = Module["_i2t_ASN1_OBJECT"] = createExportWrapper("i2t_ASN1_OBJECT");

var _i2a_ASN1_OBJECT = Module["_i2a_ASN1_OBJECT"] = createExportWrapper("i2a_ASN1_OBJECT");

var _d2i_ASN1_OBJECT = Module["_d2i_ASN1_OBJECT"] = createExportWrapper("d2i_ASN1_OBJECT");

var _c2i_ASN1_OBJECT = Module["_c2i_ASN1_OBJECT"] = createExportWrapper("c2i_ASN1_OBJECT");

var _ASN1_object_size = Module["_ASN1_object_size"] = createExportWrapper("ASN1_object_size");

var _ASN1_put_object = Module["_ASN1_put_object"] = createExportWrapper("ASN1_put_object");

var _ossl_ctype_check = Module["_ossl_ctype_check"] = createExportWrapper("ossl_ctype_check");

var _BN_mul_word = Module["_BN_mul_word"] = createExportWrapper("BN_mul_word");

var _BN_add_word = Module["_BN_add_word"] = createExportWrapper("BN_add_word");

var _BN_div_word = Module["_BN_div_word"] = createExportWrapper("BN_div_word");

var _BIO_dump = Module["_BIO_dump"] = createExportWrapper("BIO_dump");

var _ASN1_OBJECT_new = Module["_ASN1_OBJECT_new"] = createExportWrapper("ASN1_OBJECT_new");

var _ASN1_OBJECT_create = Module["_ASN1_OBJECT_create"] = createExportWrapper("ASN1_OBJECT_create");

var _OBJ_dup = Module["_OBJ_dup"] = createExportWrapper("OBJ_dup");

var _ASN1_OCTET_STRING_dup = Module["_ASN1_OCTET_STRING_dup"] = createExportWrapper("ASN1_OCTET_STRING_dup");

var _ASN1_OCTET_STRING_cmp = Module["_ASN1_OCTET_STRING_cmp"] = createExportWrapper("ASN1_OCTET_STRING_cmp");

var _ASN1_OCTET_STRING_set = Module["_ASN1_OCTET_STRING_set"] = createExportWrapper("ASN1_OCTET_STRING_set");

var _ASN1_PRINTABLE_type = Module["_ASN1_PRINTABLE_type"] = createExportWrapper("ASN1_PRINTABLE_type");

var _ASN1_UNIVERSALSTRING_to_string = Module["_ASN1_UNIVERSALSTRING_to_string"] = createExportWrapper("ASN1_UNIVERSALSTRING_to_string");

var _ASN1_STRING_print = Module["_ASN1_STRING_print"] = createExportWrapper("ASN1_STRING_print");

var _ASN1_sign = Module["_ASN1_sign"] = createExportWrapper("ASN1_sign");

var _ASN1_item_sign = Module["_ASN1_item_sign"] = createExportWrapper("ASN1_item_sign");

var _ASN1_item_sign_ctx = Module["_ASN1_item_sign_ctx"] = createExportWrapper("ASN1_item_sign_ctx");

var _X509_NAME_print_ex = Module["_X509_NAME_print_ex"] = createExportWrapper("X509_NAME_print_ex");

var _ASN1_STRING_print_ex = Module["_ASN1_STRING_print_ex"] = createExportWrapper("ASN1_STRING_print_ex");

var _X509_NAME_print = Module["_X509_NAME_print"] = createExportWrapper("X509_NAME_print");

var _X509_NAME_ENTRY_set = Module["_X509_NAME_ENTRY_set"] = createExportWrapper("X509_NAME_ENTRY_set");

var _ASN1_tag2str = Module["_ASN1_tag2str"] = createExportWrapper("ASN1_tag2str");

var _i2d_ASN1_TYPE = Module["_i2d_ASN1_TYPE"] = createExportWrapper("i2d_ASN1_TYPE");

var _UTF8_getc = Module["_UTF8_getc"] = createExportWrapper("UTF8_getc");

var _ASN1_STRING_free = Module["_ASN1_STRING_free"] = createExportWrapper("ASN1_STRING_free");

var _UTF8_putc = Module["_UTF8_putc"] = createExportWrapper("UTF8_putc");

var _ASN1_STRING_set_default_mask = Module["_ASN1_STRING_set_default_mask"] = createExportWrapper("ASN1_STRING_set_default_mask");

var _ASN1_STRING_get_default_mask = Module["_ASN1_STRING_get_default_mask"] = createExportWrapper("ASN1_STRING_get_default_mask");

var _ASN1_STRING_set_by_NID = Module["_ASN1_STRING_set_by_NID"] = createExportWrapper("ASN1_STRING_set_by_NID");

var _ASN1_STRING_TABLE_get = Module["_ASN1_STRING_TABLE_get"] = createExportWrapper("ASN1_STRING_TABLE_get");

var _ASN1_STRING_TABLE_add = Module["_ASN1_STRING_TABLE_add"] = createExportWrapper("ASN1_STRING_TABLE_add");

var _ASN1_STRING_TABLE_cleanup = Module["_ASN1_STRING_TABLE_cleanup"] = createExportWrapper("ASN1_STRING_TABLE_cleanup");

var _d2i_ASN1_TIME = Module["_d2i_ASN1_TIME"] = createExportWrapper("d2i_ASN1_TIME");

var _i2d_ASN1_TIME = Module["_i2d_ASN1_TIME"] = createExportWrapper("i2d_ASN1_TIME");

var _ASN1_TIME_new = Module["_ASN1_TIME_new"] = createExportWrapper("ASN1_TIME_new");

var _ASN1_TIME_free = Module["_ASN1_TIME_free"] = createExportWrapper("ASN1_TIME_free");

var _asn1_time_to_tm = Module["_asn1_time_to_tm"] = createExportWrapper("asn1_time_to_tm");

var _asn1_time_from_tm = Module["_asn1_time_from_tm"] = createExportWrapper("asn1_time_from_tm");

var _ASN1_TIME_set = Module["_ASN1_TIME_set"] = createExportWrapper("ASN1_TIME_set");

var _ASN1_TIME_adj = Module["_ASN1_TIME_adj"] = createExportWrapper("ASN1_TIME_adj");

var _ASN1_TIME_check = Module["_ASN1_TIME_check"] = createExportWrapper("ASN1_TIME_check");

var _ASN1_TIME_to_generalizedtime = Module["_ASN1_TIME_to_generalizedtime"] = createExportWrapper("ASN1_TIME_to_generalizedtime");

var _ASN1_TIME_to_tm = Module["_ASN1_TIME_to_tm"] = createExportWrapper("ASN1_TIME_to_tm");

var _ASN1_TIME_set_string = Module["_ASN1_TIME_set_string"] = createExportWrapper("ASN1_TIME_set_string");

var _ASN1_TIME_set_string_X509 = Module["_ASN1_TIME_set_string_X509"] = createExportWrapper("ASN1_TIME_set_string_X509");

var _ASN1_TIME_diff = Module["_ASN1_TIME_diff"] = createExportWrapper("ASN1_TIME_diff");

var _ASN1_TIME_print = Module["_ASN1_TIME_print"] = createExportWrapper("ASN1_TIME_print");

var _ASN1_TIME_cmp_time_t = Module["_ASN1_TIME_cmp_time_t"] = createExportWrapper("ASN1_TIME_cmp_time_t");

var _ASN1_TIME_normalize = Module["_ASN1_TIME_normalize"] = createExportWrapper("ASN1_TIME_normalize");

var _ASN1_TIME_compare = Module["_ASN1_TIME_compare"] = createExportWrapper("ASN1_TIME_compare");

var _ASN1_TYPE_set = Module["_ASN1_TYPE_set"] = createExportWrapper("ASN1_TYPE_set");

var _asn1_primitive_free = Module["_asn1_primitive_free"] = createExportWrapper("asn1_primitive_free");

var _ASN1_TYPE_set1 = Module["_ASN1_TYPE_set1"] = createExportWrapper("ASN1_TYPE_set1");

var _ASN1_TYPE_cmp = Module["_ASN1_TYPE_cmp"] = createExportWrapper("ASN1_TYPE_cmp");

var _OBJ_cmp = Module["_OBJ_cmp"] = createExportWrapper("OBJ_cmp");

var _ASN1_TYPE_pack_sequence = Module["_ASN1_TYPE_pack_sequence"] = createExportWrapper("ASN1_TYPE_pack_sequence");

var _ASN1_item_pack = Module["_ASN1_item_pack"] = createExportWrapper("ASN1_item_pack");

var _ASN1_TYPE_new = Module["_ASN1_TYPE_new"] = createExportWrapper("ASN1_TYPE_new");

var _ASN1_OCTET_STRING_free = Module["_ASN1_OCTET_STRING_free"] = createExportWrapper("ASN1_OCTET_STRING_free");

var _ASN1_TYPE_unpack_sequence = Module["_ASN1_TYPE_unpack_sequence"] = createExportWrapper("ASN1_TYPE_unpack_sequence");

var _ASN1_item_unpack = Module["_ASN1_item_unpack"] = createExportWrapper("ASN1_item_unpack");

var _asn1_utctime_to_tm = Module["_asn1_utctime_to_tm"] = createExportWrapper("asn1_utctime_to_tm");

var _ASN1_UTCTIME_check = Module["_ASN1_UTCTIME_check"] = createExportWrapper("ASN1_UTCTIME_check");

var _ASN1_UTCTIME_set_string = Module["_ASN1_UTCTIME_set_string"] = createExportWrapper("ASN1_UTCTIME_set_string");

var _ASN1_UTCTIME_set = Module["_ASN1_UTCTIME_set"] = createExportWrapper("ASN1_UTCTIME_set");

var _ASN1_UTCTIME_adj = Module["_ASN1_UTCTIME_adj"] = createExportWrapper("ASN1_UTCTIME_adj");

var _ASN1_UTCTIME_cmp_time_t = Module["_ASN1_UTCTIME_cmp_time_t"] = createExportWrapper("ASN1_UTCTIME_cmp_time_t");

var _ASN1_UTCTIME_print = Module["_ASN1_UTCTIME_print"] = createExportWrapper("ASN1_UTCTIME_print");

var _ASN1_verify = Module["_ASN1_verify"] = createExportWrapper("ASN1_verify");

var _ASN1_item_verify = Module["_ASN1_item_verify"] = createExportWrapper("ASN1_item_verify");

var _EVP_PKEY_asn1_get_count = Module["_EVP_PKEY_asn1_get_count"] = createExportWrapper("EVP_PKEY_asn1_get_count");

var _EVP_PKEY_asn1_get0 = Module["_EVP_PKEY_asn1_get0"] = createExportWrapper("EVP_PKEY_asn1_get0");

var _EVP_PKEY_asn1_find = Module["_EVP_PKEY_asn1_find"] = createExportWrapper("EVP_PKEY_asn1_find");

var _EVP_PKEY_asn1_add0 = Module["_EVP_PKEY_asn1_add0"] = createExportWrapper("EVP_PKEY_asn1_add0");

var _EVP_PKEY_asn1_add_alias = Module["_EVP_PKEY_asn1_add_alias"] = createExportWrapper("EVP_PKEY_asn1_add_alias");

var _EVP_PKEY_asn1_new = Module["_EVP_PKEY_asn1_new"] = createExportWrapper("EVP_PKEY_asn1_new");

var _EVP_PKEY_asn1_free = Module["_EVP_PKEY_asn1_free"] = createExportWrapper("EVP_PKEY_asn1_free");

var _EVP_PKEY_get0_asn1 = Module["_EVP_PKEY_get0_asn1"] = createExportWrapper("EVP_PKEY_get0_asn1");

var _EVP_PKEY_asn1_copy = Module["_EVP_PKEY_asn1_copy"] = createExportWrapper("EVP_PKEY_asn1_copy");

var _EVP_PKEY_asn1_set_public = Module["_EVP_PKEY_asn1_set_public"] = createExportWrapper("EVP_PKEY_asn1_set_public");

var _EVP_PKEY_asn1_set_private = Module["_EVP_PKEY_asn1_set_private"] = createExportWrapper("EVP_PKEY_asn1_set_private");

var _EVP_PKEY_asn1_set_param = Module["_EVP_PKEY_asn1_set_param"] = createExportWrapper("EVP_PKEY_asn1_set_param");

var _EVP_PKEY_asn1_set_free = Module["_EVP_PKEY_asn1_set_free"] = createExportWrapper("EVP_PKEY_asn1_set_free");

var _EVP_PKEY_asn1_set_ctrl = Module["_EVP_PKEY_asn1_set_ctrl"] = createExportWrapper("EVP_PKEY_asn1_set_ctrl");

var _EVP_PKEY_asn1_set_security_bits = Module["_EVP_PKEY_asn1_set_security_bits"] = createExportWrapper("EVP_PKEY_asn1_set_security_bits");

var _EVP_PKEY_asn1_set_item = Module["_EVP_PKEY_asn1_set_item"] = createExportWrapper("EVP_PKEY_asn1_set_item");

var _EVP_PKEY_asn1_set_siginf = Module["_EVP_PKEY_asn1_set_siginf"] = createExportWrapper("EVP_PKEY_asn1_set_siginf");

var _EVP_PKEY_asn1_set_check = Module["_EVP_PKEY_asn1_set_check"] = createExportWrapper("EVP_PKEY_asn1_set_check");

var _EVP_PKEY_asn1_set_public_check = Module["_EVP_PKEY_asn1_set_public_check"] = createExportWrapper("EVP_PKEY_asn1_set_public_check");

var _EVP_PKEY_asn1_set_param_check = Module["_EVP_PKEY_asn1_set_param_check"] = createExportWrapper("EVP_PKEY_asn1_set_param_check");

var _EVP_PKEY_asn1_set_set_priv_key = Module["_EVP_PKEY_asn1_set_set_priv_key"] = createExportWrapper("EVP_PKEY_asn1_set_set_priv_key");

var _EVP_PKEY_asn1_set_set_pub_key = Module["_EVP_PKEY_asn1_set_set_pub_key"] = createExportWrapper("EVP_PKEY_asn1_set_set_pub_key");

var _EVP_PKEY_asn1_set_get_priv_key = Module["_EVP_PKEY_asn1_set_get_priv_key"] = createExportWrapper("EVP_PKEY_asn1_set_get_priv_key");

var _EVP_PKEY_asn1_set_get_pub_key = Module["_EVP_PKEY_asn1_set_get_pub_key"] = createExportWrapper("EVP_PKEY_asn1_set_get_pub_key");

var _ASN1_generate_nconf = Module["_ASN1_generate_nconf"] = createExportWrapper("ASN1_generate_nconf");

var _ASN1_generate_v3 = Module["_ASN1_generate_v3"] = createExportWrapper("ASN1_generate_v3");

var _ASN1_str2mask = Module["_ASN1_str2mask"] = createExportWrapper("ASN1_str2mask");

var _ASN1_check_infinite_end = Module["_ASN1_check_infinite_end"] = createExportWrapper("ASN1_check_infinite_end");

var _ASN1_const_check_infinite_end = Module["_ASN1_const_check_infinite_end"] = createExportWrapper("ASN1_const_check_infinite_end");

var _ASN1_put_eoc = Module["_ASN1_put_eoc"] = createExportWrapper("ASN1_put_eoc");

var _ASN1_STRING_copy = Module["_ASN1_STRING_copy"] = createExportWrapper("ASN1_STRING_copy");

var _ASN1_STRING_new = Module["_ASN1_STRING_new"] = createExportWrapper("ASN1_STRING_new");

var _ASN1_STRING_set0 = Module["_ASN1_STRING_set0"] = createExportWrapper("ASN1_STRING_set0");

var _asn1_string_embed_free = Module["_asn1_string_embed_free"] = createExportWrapper("asn1_string_embed_free");

var _ASN1_STRING_clear_free = Module["_ASN1_STRING_clear_free"] = createExportWrapper("ASN1_STRING_clear_free");

var _ASN1_STRING_length_set = Module["_ASN1_STRING_length_set"] = createExportWrapper("ASN1_STRING_length_set");

var _ASN1_STRING_data = Module["_ASN1_STRING_data"] = createExportWrapper("ASN1_STRING_data");

var _ASN1_parse = Module["_ASN1_parse"] = createExportWrapper("ASN1_parse");

var _ASN1_parse_dump = Module["_ASN1_parse_dump"] = createExportWrapper("ASN1_parse_dump");

var _d2i_ASN1_OCTET_STRING = Module["_d2i_ASN1_OCTET_STRING"] = createExportWrapper("d2i_ASN1_OCTET_STRING");

var _d2i_ASN1_INTEGER = Module["_d2i_ASN1_INTEGER"] = createExportWrapper("d2i_ASN1_INTEGER");

var _d2i_ASN1_ENUMERATED = Module["_d2i_ASN1_ENUMERATED"] = createExportWrapper("d2i_ASN1_ENUMERATED");

var _ASN1_ENUMERATED_free = Module["_ASN1_ENUMERATED_free"] = createExportWrapper("ASN1_ENUMERATED_free");

var _BIO_dump_indent = Module["_BIO_dump_indent"] = createExportWrapper("BIO_dump_indent");

var _BIO_indent = Module["_BIO_indent"] = createExportWrapper("BIO_indent");

var _i2d_ASN1_bio_stream = Module["_i2d_ASN1_bio_stream"] = createExportWrapper("i2d_ASN1_bio_stream");

var _SMIME_crlf_copy = Module["_SMIME_crlf_copy"] = createExportWrapper("SMIME_crlf_copy");

var _PEM_write_bio_ASN1_stream = Module["_PEM_write_bio_ASN1_stream"] = createExportWrapper("PEM_write_bio_ASN1_stream");

var _SMIME_write_ASN1 = Module["_SMIME_write_ASN1"] = createExportWrapper("SMIME_write_ASN1");

var _SMIME_read_ASN1 = Module["_SMIME_read_ASN1"] = createExportWrapper("SMIME_read_ASN1");

var _SMIME_text = Module["_SMIME_text"] = createExportWrapper("SMIME_text");

var _ASN1_add_oid_module = Module["_ASN1_add_oid_module"] = createExportWrapper("ASN1_add_oid_module");

var _ASN1_add_stable_module = Module["_ASN1_add_stable_module"] = createExportWrapper("ASN1_add_stable_module");

var _BIO_f_asn1 = Module["_BIO_f_asn1"] = createExportWrapper("BIO_f_asn1");

var _BIO_asn1_set_prefix = Module["_BIO_asn1_set_prefix"] = createExportWrapper("BIO_asn1_set_prefix");

var _BIO_asn1_get_prefix = Module["_BIO_asn1_get_prefix"] = createExportWrapper("BIO_asn1_get_prefix");

var _BIO_asn1_set_suffix = Module["_BIO_asn1_set_suffix"] = createExportWrapper("BIO_asn1_set_suffix");

var _BIO_asn1_get_suffix = Module["_BIO_asn1_get_suffix"] = createExportWrapper("BIO_asn1_get_suffix");

var _BIO_new_NDEF = Module["_BIO_new_NDEF"] = createExportWrapper("BIO_new_NDEF");

var _d2i_PKCS8_PRIV_KEY_INFO = Module["_d2i_PKCS8_PRIV_KEY_INFO"] = createExportWrapper("d2i_PKCS8_PRIV_KEY_INFO");

var _EVP_PKCS82PKEY = Module["_EVP_PKCS82PKEY"] = createExportWrapper("EVP_PKCS82PKEY");

var _PKCS8_PRIV_KEY_INFO_free = Module["_PKCS8_PRIV_KEY_INFO_free"] = createExportWrapper("PKCS8_PRIV_KEY_INFO_free");

var _EVP_PKEY_type = Module["_EVP_PKEY_type"] = createExportWrapper("EVP_PKEY_type");

var _d2i_AutoPrivateKey = Module["_d2i_AutoPrivateKey"] = createExportWrapper("d2i_AutoPrivateKey");

var _ERR_clear_last_mark = Module["_ERR_clear_last_mark"] = createExportWrapper("ERR_clear_last_mark");

var _d2i_ASN1_SEQUENCE_ANY = Module["_d2i_ASN1_SEQUENCE_ANY"] = createExportWrapper("d2i_ASN1_SEQUENCE_ANY");

var _ASN1_TYPE_free = Module["_ASN1_TYPE_free"] = createExportWrapper("ASN1_TYPE_free");

var _ASN1_TYPE_set_octetstring = Module["_ASN1_TYPE_set_octetstring"] = createExportWrapper("ASN1_TYPE_set_octetstring");

var _ASN1_TYPE_get_octetstring = Module["_ASN1_TYPE_get_octetstring"] = createExportWrapper("ASN1_TYPE_get_octetstring");

var _ASN1_TYPE_set_int_octetstring = Module["_ASN1_TYPE_set_int_octetstring"] = createExportWrapper("ASN1_TYPE_set_int_octetstring");

var _ASN1_TYPE_get_int_octetstring = Module["_ASN1_TYPE_get_int_octetstring"] = createExportWrapper("ASN1_TYPE_get_int_octetstring");

var _i2a_ASN1_INTEGER = Module["_i2a_ASN1_INTEGER"] = createExportWrapper("i2a_ASN1_INTEGER");

var _a2i_ASN1_INTEGER = Module["_a2i_ASN1_INTEGER"] = createExportWrapper("a2i_ASN1_INTEGER");

var _i2a_ASN1_ENUMERATED = Module["_i2a_ASN1_ENUMERATED"] = createExportWrapper("i2a_ASN1_ENUMERATED");

var _a2i_ASN1_ENUMERATED = Module["_a2i_ASN1_ENUMERATED"] = createExportWrapper("a2i_ASN1_ENUMERATED");

var _i2d_PrivateKey = Module["_i2d_PrivateKey"] = createExportWrapper("i2d_PrivateKey");

var _d2i_NETSCAPE_CERT_SEQUENCE = Module["_d2i_NETSCAPE_CERT_SEQUENCE"] = createExportWrapper("d2i_NETSCAPE_CERT_SEQUENCE");

var _i2d_NETSCAPE_CERT_SEQUENCE = Module["_i2d_NETSCAPE_CERT_SEQUENCE"] = createExportWrapper("i2d_NETSCAPE_CERT_SEQUENCE");

var _NETSCAPE_CERT_SEQUENCE_new = Module["_NETSCAPE_CERT_SEQUENCE_new"] = createExportWrapper("NETSCAPE_CERT_SEQUENCE_new");

var _NETSCAPE_CERT_SEQUENCE_free = Module["_NETSCAPE_CERT_SEQUENCE_free"] = createExportWrapper("NETSCAPE_CERT_SEQUENCE_free");

var _d2i_PBEPARAM = Module["_d2i_PBEPARAM"] = createExportWrapper("d2i_PBEPARAM");

var _i2d_PBEPARAM = Module["_i2d_PBEPARAM"] = createExportWrapper("i2d_PBEPARAM");

var _PBEPARAM_new = Module["_PBEPARAM_new"] = createExportWrapper("PBEPARAM_new");

var _PBEPARAM_free = Module["_PBEPARAM_free"] = createExportWrapper("PBEPARAM_free");

var _PKCS5_pbe_set0_algor = Module["_PKCS5_pbe_set0_algor"] = createExportWrapper("PKCS5_pbe_set0_algor");

var _PKCS5_pbe_set = Module["_PKCS5_pbe_set"] = createExportWrapper("PKCS5_pbe_set");

var _d2i_PBE2PARAM = Module["_d2i_PBE2PARAM"] = createExportWrapper("d2i_PBE2PARAM");

var _i2d_PBE2PARAM = Module["_i2d_PBE2PARAM"] = createExportWrapper("i2d_PBE2PARAM");

var _PBE2PARAM_new = Module["_PBE2PARAM_new"] = createExportWrapper("PBE2PARAM_new");

var _PBE2PARAM_free = Module["_PBE2PARAM_free"] = createExportWrapper("PBE2PARAM_free");

var _d2i_PBKDF2PARAM = Module["_d2i_PBKDF2PARAM"] = createExportWrapper("d2i_PBKDF2PARAM");

var _i2d_PBKDF2PARAM = Module["_i2d_PBKDF2PARAM"] = createExportWrapper("i2d_PBKDF2PARAM");

var _PBKDF2PARAM_new = Module["_PBKDF2PARAM_new"] = createExportWrapper("PBKDF2PARAM_new");

var _PBKDF2PARAM_free = Module["_PBKDF2PARAM_free"] = createExportWrapper("PBKDF2PARAM_free");

var _PKCS5_pbe2_set_iv = Module["_PKCS5_pbe2_set_iv"] = createExportWrapper("PKCS5_pbe2_set_iv");

var _PKCS5_pbkdf2_set = Module["_PKCS5_pbkdf2_set"] = createExportWrapper("PKCS5_pbkdf2_set");

var _PKCS5_pbe2_set = Module["_PKCS5_pbe2_set"] = createExportWrapper("PKCS5_pbe2_set");

var _d2i_SCRYPT_PARAMS = Module["_d2i_SCRYPT_PARAMS"] = createExportWrapper("d2i_SCRYPT_PARAMS");

var _i2d_SCRYPT_PARAMS = Module["_i2d_SCRYPT_PARAMS"] = createExportWrapper("i2d_SCRYPT_PARAMS");

var _SCRYPT_PARAMS_new = Module["_SCRYPT_PARAMS_new"] = createExportWrapper("SCRYPT_PARAMS_new");

var _SCRYPT_PARAMS_free = Module["_SCRYPT_PARAMS_free"] = createExportWrapper("SCRYPT_PARAMS_free");

var _PKCS5_pbe2_set_scrypt = Module["_PKCS5_pbe2_set_scrypt"] = createExportWrapper("PKCS5_pbe2_set_scrypt");

var _PKCS5_v2_scrypt_keyivgen = Module["_PKCS5_v2_scrypt_keyivgen"] = createExportWrapper("PKCS5_v2_scrypt_keyivgen");

var _i2d_PKCS8_PRIV_KEY_INFO = Module["_i2d_PKCS8_PRIV_KEY_INFO"] = createExportWrapper("i2d_PKCS8_PRIV_KEY_INFO");

var _PKCS8_PRIV_KEY_INFO_new = Module["_PKCS8_PRIV_KEY_INFO_new"] = createExportWrapper("PKCS8_PRIV_KEY_INFO_new");

var _PKCS8_pkey_set0 = Module["_PKCS8_pkey_set0"] = createExportWrapper("PKCS8_pkey_set0");

var _X509_ALGOR_set0 = Module["_X509_ALGOR_set0"] = createExportWrapper("X509_ALGOR_set0");

var _PKCS8_pkey_get0 = Module["_PKCS8_pkey_get0"] = createExportWrapper("PKCS8_pkey_get0");

var _PKCS8_pkey_get0_attrs = Module["_PKCS8_pkey_get0_attrs"] = createExportWrapper("PKCS8_pkey_get0_attrs");

var _PKCS8_pkey_add1_attr_by_NID = Module["_PKCS8_pkey_add1_attr_by_NID"] = createExportWrapper("PKCS8_pkey_add1_attr_by_NID");

var _X509at_add1_attr_by_NID = Module["_X509at_add1_attr_by_NID"] = createExportWrapper("X509at_add1_attr_by_NID");

var _ASN1_buf_print = Module["_ASN1_buf_print"] = createExportWrapper("ASN1_buf_print");

var _ASN1_bn_print = Module["_ASN1_bn_print"] = createExportWrapper("ASN1_bn_print");

var _ASN1_tag2bit = Module["_ASN1_tag2bit"] = createExportWrapper("ASN1_tag2bit");

var _ASN1_item_ex_free = Module["_ASN1_item_ex_free"] = createExportWrapper("ASN1_item_ex_free");

var _ASN1_item_ex_d2i = Module["_ASN1_item_ex_d2i"] = createExportWrapper("ASN1_item_ex_d2i");

var _asn1_get_choice_selector = Module["_asn1_get_choice_selector"] = createExportWrapper("asn1_get_choice_selector");

var _asn1_get_field_ptr = Module["_asn1_get_field_ptr"] = createExportWrapper("asn1_get_field_ptr");

var _asn1_template_free = Module["_asn1_template_free"] = createExportWrapper("asn1_template_free");

var _asn1_set_choice_selector = Module["_asn1_set_choice_selector"] = createExportWrapper("asn1_set_choice_selector");

var _ASN1_item_ex_new = Module["_ASN1_item_ex_new"] = createExportWrapper("ASN1_item_ex_new");

var _asn1_do_adb = Module["_asn1_do_adb"] = createExportWrapper("asn1_do_adb");

var _asn1_enc_save = Module["_asn1_enc_save"] = createExportWrapper("asn1_enc_save");

var _ASN1_BIT_STRING_new = Module["_ASN1_BIT_STRING_new"] = createExportWrapper("ASN1_BIT_STRING_new");

var _ASN1_BIT_STRING_free = Module["_ASN1_BIT_STRING_free"] = createExportWrapper("ASN1_BIT_STRING_free");

var _CRYPTO_clear_realloc = Module["_CRYPTO_clear_realloc"] = createExportWrapper("CRYPTO_clear_realloc");

var _ASN1_item_ndef_i2d = Module["_ASN1_item_ndef_i2d"] = createExportWrapper("ASN1_item_ndef_i2d");

var _ASN1_item_ex_i2d = Module["_ASN1_item_ex_i2d"] = createExportWrapper("ASN1_item_ex_i2d");

var _asn1_enc_restore = Module["_asn1_enc_restore"] = createExportWrapper("asn1_enc_restore");

var _OPENSSL_sk_set = Module["_OPENSSL_sk_set"] = createExportWrapper("OPENSSL_sk_set");

var _asn1_item_embed_free = Module["_asn1_item_embed_free"] = createExportWrapper("asn1_item_embed_free");

var _asn1_do_lock = Module["_asn1_do_lock"] = createExportWrapper("asn1_do_lock");

var _asn1_enc_free = Module["_asn1_enc_free"] = createExportWrapper("asn1_enc_free");

var _asn1_enc_init = Module["_asn1_enc_init"] = createExportWrapper("asn1_enc_init");

var _ASN1_PCTX_new = Module["_ASN1_PCTX_new"] = createExportWrapper("ASN1_PCTX_new");

var _ASN1_PCTX_free = Module["_ASN1_PCTX_free"] = createExportWrapper("ASN1_PCTX_free");

var _ASN1_PCTX_get_flags = Module["_ASN1_PCTX_get_flags"] = createExportWrapper("ASN1_PCTX_get_flags");

var _ASN1_PCTX_set_flags = Module["_ASN1_PCTX_set_flags"] = createExportWrapper("ASN1_PCTX_set_flags");

var _ASN1_PCTX_get_nm_flags = Module["_ASN1_PCTX_get_nm_flags"] = createExportWrapper("ASN1_PCTX_get_nm_flags");

var _ASN1_PCTX_set_nm_flags = Module["_ASN1_PCTX_set_nm_flags"] = createExportWrapper("ASN1_PCTX_set_nm_flags");

var _ASN1_PCTX_get_cert_flags = Module["_ASN1_PCTX_get_cert_flags"] = createExportWrapper("ASN1_PCTX_get_cert_flags");

var _ASN1_PCTX_set_cert_flags = Module["_ASN1_PCTX_set_cert_flags"] = createExportWrapper("ASN1_PCTX_set_cert_flags");

var _ASN1_PCTX_get_oid_flags = Module["_ASN1_PCTX_get_oid_flags"] = createExportWrapper("ASN1_PCTX_get_oid_flags");

var _ASN1_PCTX_set_oid_flags = Module["_ASN1_PCTX_set_oid_flags"] = createExportWrapper("ASN1_PCTX_set_oid_flags");

var _ASN1_PCTX_get_str_flags = Module["_ASN1_PCTX_get_str_flags"] = createExportWrapper("ASN1_PCTX_get_str_flags");

var _ASN1_PCTX_set_str_flags = Module["_ASN1_PCTX_set_str_flags"] = createExportWrapper("ASN1_PCTX_set_str_flags");

var _ASN1_item_print = Module["_ASN1_item_print"] = createExportWrapper("ASN1_item_print");

var _i2d_ASN1_OCTET_STRING = Module["_i2d_ASN1_OCTET_STRING"] = createExportWrapper("i2d_ASN1_OCTET_STRING");

var _ASN1_OCTET_STRING_new = Module["_ASN1_OCTET_STRING_new"] = createExportWrapper("ASN1_OCTET_STRING_new");

var _i2d_ASN1_INTEGER = Module["_i2d_ASN1_INTEGER"] = createExportWrapper("i2d_ASN1_INTEGER");

var _i2d_ASN1_ENUMERATED = Module["_i2d_ASN1_ENUMERATED"] = createExportWrapper("i2d_ASN1_ENUMERATED");

var _ASN1_ENUMERATED_new = Module["_ASN1_ENUMERATED_new"] = createExportWrapper("ASN1_ENUMERATED_new");

var _d2i_ASN1_BIT_STRING = Module["_d2i_ASN1_BIT_STRING"] = createExportWrapper("d2i_ASN1_BIT_STRING");

var _i2d_ASN1_BIT_STRING = Module["_i2d_ASN1_BIT_STRING"] = createExportWrapper("i2d_ASN1_BIT_STRING");

var _d2i_ASN1_UTF8STRING = Module["_d2i_ASN1_UTF8STRING"] = createExportWrapper("d2i_ASN1_UTF8STRING");

var _i2d_ASN1_UTF8STRING = Module["_i2d_ASN1_UTF8STRING"] = createExportWrapper("i2d_ASN1_UTF8STRING");

var _ASN1_UTF8STRING_new = Module["_ASN1_UTF8STRING_new"] = createExportWrapper("ASN1_UTF8STRING_new");

var _ASN1_UTF8STRING_free = Module["_ASN1_UTF8STRING_free"] = createExportWrapper("ASN1_UTF8STRING_free");

var _d2i_ASN1_PRINTABLESTRING = Module["_d2i_ASN1_PRINTABLESTRING"] = createExportWrapper("d2i_ASN1_PRINTABLESTRING");

var _i2d_ASN1_PRINTABLESTRING = Module["_i2d_ASN1_PRINTABLESTRING"] = createExportWrapper("i2d_ASN1_PRINTABLESTRING");

var _ASN1_PRINTABLESTRING_new = Module["_ASN1_PRINTABLESTRING_new"] = createExportWrapper("ASN1_PRINTABLESTRING_new");

var _ASN1_PRINTABLESTRING_free = Module["_ASN1_PRINTABLESTRING_free"] = createExportWrapper("ASN1_PRINTABLESTRING_free");

var _d2i_ASN1_T61STRING = Module["_d2i_ASN1_T61STRING"] = createExportWrapper("d2i_ASN1_T61STRING");

var _i2d_ASN1_T61STRING = Module["_i2d_ASN1_T61STRING"] = createExportWrapper("i2d_ASN1_T61STRING");

var _ASN1_T61STRING_new = Module["_ASN1_T61STRING_new"] = createExportWrapper("ASN1_T61STRING_new");

var _ASN1_T61STRING_free = Module["_ASN1_T61STRING_free"] = createExportWrapper("ASN1_T61STRING_free");

var _d2i_ASN1_IA5STRING = Module["_d2i_ASN1_IA5STRING"] = createExportWrapper("d2i_ASN1_IA5STRING");

var _i2d_ASN1_IA5STRING = Module["_i2d_ASN1_IA5STRING"] = createExportWrapper("i2d_ASN1_IA5STRING");

var _ASN1_IA5STRING_new = Module["_ASN1_IA5STRING_new"] = createExportWrapper("ASN1_IA5STRING_new");

var _ASN1_IA5STRING_free = Module["_ASN1_IA5STRING_free"] = createExportWrapper("ASN1_IA5STRING_free");

var _d2i_ASN1_GENERALSTRING = Module["_d2i_ASN1_GENERALSTRING"] = createExportWrapper("d2i_ASN1_GENERALSTRING");

var _i2d_ASN1_GENERALSTRING = Module["_i2d_ASN1_GENERALSTRING"] = createExportWrapper("i2d_ASN1_GENERALSTRING");

var _ASN1_GENERALSTRING_new = Module["_ASN1_GENERALSTRING_new"] = createExportWrapper("ASN1_GENERALSTRING_new");

var _ASN1_GENERALSTRING_free = Module["_ASN1_GENERALSTRING_free"] = createExportWrapper("ASN1_GENERALSTRING_free");

var _d2i_ASN1_UTCTIME = Module["_d2i_ASN1_UTCTIME"] = createExportWrapper("d2i_ASN1_UTCTIME");

var _i2d_ASN1_UTCTIME = Module["_i2d_ASN1_UTCTIME"] = createExportWrapper("i2d_ASN1_UTCTIME");

var _ASN1_UTCTIME_new = Module["_ASN1_UTCTIME_new"] = createExportWrapper("ASN1_UTCTIME_new");

var _ASN1_UTCTIME_free = Module["_ASN1_UTCTIME_free"] = createExportWrapper("ASN1_UTCTIME_free");

var _d2i_ASN1_GENERALIZEDTIME = Module["_d2i_ASN1_GENERALIZEDTIME"] = createExportWrapper("d2i_ASN1_GENERALIZEDTIME");

var _i2d_ASN1_GENERALIZEDTIME = Module["_i2d_ASN1_GENERALIZEDTIME"] = createExportWrapper("i2d_ASN1_GENERALIZEDTIME");

var _ASN1_GENERALIZEDTIME_new = Module["_ASN1_GENERALIZEDTIME_new"] = createExportWrapper("ASN1_GENERALIZEDTIME_new");

var _ASN1_GENERALIZEDTIME_free = Module["_ASN1_GENERALIZEDTIME_free"] = createExportWrapper("ASN1_GENERALIZEDTIME_free");

var _d2i_ASN1_VISIBLESTRING = Module["_d2i_ASN1_VISIBLESTRING"] = createExportWrapper("d2i_ASN1_VISIBLESTRING");

var _i2d_ASN1_VISIBLESTRING = Module["_i2d_ASN1_VISIBLESTRING"] = createExportWrapper("i2d_ASN1_VISIBLESTRING");

var _ASN1_VISIBLESTRING_new = Module["_ASN1_VISIBLESTRING_new"] = createExportWrapper("ASN1_VISIBLESTRING_new");

var _ASN1_VISIBLESTRING_free = Module["_ASN1_VISIBLESTRING_free"] = createExportWrapper("ASN1_VISIBLESTRING_free");

var _d2i_ASN1_UNIVERSALSTRING = Module["_d2i_ASN1_UNIVERSALSTRING"] = createExportWrapper("d2i_ASN1_UNIVERSALSTRING");

var _i2d_ASN1_UNIVERSALSTRING = Module["_i2d_ASN1_UNIVERSALSTRING"] = createExportWrapper("i2d_ASN1_UNIVERSALSTRING");

var _ASN1_UNIVERSALSTRING_new = Module["_ASN1_UNIVERSALSTRING_new"] = createExportWrapper("ASN1_UNIVERSALSTRING_new");

var _ASN1_UNIVERSALSTRING_free = Module["_ASN1_UNIVERSALSTRING_free"] = createExportWrapper("ASN1_UNIVERSALSTRING_free");

var _d2i_ASN1_BMPSTRING = Module["_d2i_ASN1_BMPSTRING"] = createExportWrapper("d2i_ASN1_BMPSTRING");

var _i2d_ASN1_BMPSTRING = Module["_i2d_ASN1_BMPSTRING"] = createExportWrapper("i2d_ASN1_BMPSTRING");

var _ASN1_BMPSTRING_new = Module["_ASN1_BMPSTRING_new"] = createExportWrapper("ASN1_BMPSTRING_new");

var _ASN1_BMPSTRING_free = Module["_ASN1_BMPSTRING_free"] = createExportWrapper("ASN1_BMPSTRING_free");

var _d2i_ASN1_NULL = Module["_d2i_ASN1_NULL"] = createExportWrapper("d2i_ASN1_NULL");

var _i2d_ASN1_NULL = Module["_i2d_ASN1_NULL"] = createExportWrapper("i2d_ASN1_NULL");

var _ASN1_NULL_new = Module["_ASN1_NULL_new"] = createExportWrapper("ASN1_NULL_new");

var _ASN1_NULL_free = Module["_ASN1_NULL_free"] = createExportWrapper("ASN1_NULL_free");

var _d2i_ASN1_TYPE = Module["_d2i_ASN1_TYPE"] = createExportWrapper("d2i_ASN1_TYPE");

var _d2i_ASN1_PRINTABLE = Module["_d2i_ASN1_PRINTABLE"] = createExportWrapper("d2i_ASN1_PRINTABLE");

var _i2d_ASN1_PRINTABLE = Module["_i2d_ASN1_PRINTABLE"] = createExportWrapper("i2d_ASN1_PRINTABLE");

var _ASN1_PRINTABLE_new = Module["_ASN1_PRINTABLE_new"] = createExportWrapper("ASN1_PRINTABLE_new");

var _ASN1_PRINTABLE_free = Module["_ASN1_PRINTABLE_free"] = createExportWrapper("ASN1_PRINTABLE_free");

var _d2i_DISPLAYTEXT = Module["_d2i_DISPLAYTEXT"] = createExportWrapper("d2i_DISPLAYTEXT");

var _i2d_DISPLAYTEXT = Module["_i2d_DISPLAYTEXT"] = createExportWrapper("i2d_DISPLAYTEXT");

var _DISPLAYTEXT_new = Module["_DISPLAYTEXT_new"] = createExportWrapper("DISPLAYTEXT_new");

var _DISPLAYTEXT_free = Module["_DISPLAYTEXT_free"] = createExportWrapper("DISPLAYTEXT_free");

var _d2i_DIRECTORYSTRING = Module["_d2i_DIRECTORYSTRING"] = createExportWrapper("d2i_DIRECTORYSTRING");

var _i2d_DIRECTORYSTRING = Module["_i2d_DIRECTORYSTRING"] = createExportWrapper("i2d_DIRECTORYSTRING");

var _DIRECTORYSTRING_new = Module["_DIRECTORYSTRING_new"] = createExportWrapper("DIRECTORYSTRING_new");

var _DIRECTORYSTRING_free = Module["_DIRECTORYSTRING_free"] = createExportWrapper("DIRECTORYSTRING_free");

var _i2d_ASN1_SEQUENCE_ANY = Module["_i2d_ASN1_SEQUENCE_ANY"] = createExportWrapper("i2d_ASN1_SEQUENCE_ANY");

var _d2i_ASN1_SET_ANY = Module["_d2i_ASN1_SET_ANY"] = createExportWrapper("d2i_ASN1_SET_ANY");

var _i2d_ASN1_SET_ANY = Module["_i2d_ASN1_SET_ANY"] = createExportWrapper("i2d_ASN1_SET_ANY");

var _d2i_X509_ALGOR = Module["_d2i_X509_ALGOR"] = createExportWrapper("d2i_X509_ALGOR");

var _i2d_X509_ALGOR = Module["_i2d_X509_ALGOR"] = createExportWrapper("i2d_X509_ALGOR");

var _X509_ALGOR_new = Module["_X509_ALGOR_new"] = createExportWrapper("X509_ALGOR_new");

var _X509_ALGOR_free = Module["_X509_ALGOR_free"] = createExportWrapper("X509_ALGOR_free");

var _d2i_X509_ALGORS = Module["_d2i_X509_ALGORS"] = createExportWrapper("d2i_X509_ALGORS");

var _i2d_X509_ALGORS = Module["_i2d_X509_ALGORS"] = createExportWrapper("i2d_X509_ALGORS");

var _X509_ALGOR_dup = Module["_X509_ALGOR_dup"] = createExportWrapper("X509_ALGOR_dup");

var _X509_ALGOR_get0 = Module["_X509_ALGOR_get0"] = createExportWrapper("X509_ALGOR_get0");

var _X509_ALGOR_set_md = Module["_X509_ALGOR_set_md"] = createExportWrapper("X509_ALGOR_set_md");

var _X509_ALGOR_cmp = Module["_X509_ALGOR_cmp"] = createExportWrapper("X509_ALGOR_cmp");

var _X509_ALGOR_copy = Module["_X509_ALGOR_copy"] = createExportWrapper("X509_ALGOR_copy");

var _X509_INFO_new = Module["_X509_INFO_new"] = createExportWrapper("X509_INFO_new");

var _X509_PKEY_free = Module["_X509_PKEY_free"] = createExportWrapper("X509_PKEY_free");

var _X509_PKEY_new = Module["_X509_PKEY_new"] = createExportWrapper("X509_PKEY_new");

var _d2i_X509_SIG = Module["_d2i_X509_SIG"] = createExportWrapper("d2i_X509_SIG");

var _i2d_X509_SIG = Module["_i2d_X509_SIG"] = createExportWrapper("i2d_X509_SIG");

var _X509_SIG_new = Module["_X509_SIG_new"] = createExportWrapper("X509_SIG_new");

var _X509_SIG_free = Module["_X509_SIG_free"] = createExportWrapper("X509_SIG_free");

var _X509_SIG_get0 = Module["_X509_SIG_get0"] = createExportWrapper("X509_SIG_get0");

var _X509_SIG_getm = Module["_X509_SIG_getm"] = createExportWrapper("X509_SIG_getm");

var _d2i_NETSCAPE_SPKAC = Module["_d2i_NETSCAPE_SPKAC"] = createExportWrapper("d2i_NETSCAPE_SPKAC");

var _i2d_NETSCAPE_SPKAC = Module["_i2d_NETSCAPE_SPKAC"] = createExportWrapper("i2d_NETSCAPE_SPKAC");

var _NETSCAPE_SPKAC_new = Module["_NETSCAPE_SPKAC_new"] = createExportWrapper("NETSCAPE_SPKAC_new");

var _NETSCAPE_SPKAC_free = Module["_NETSCAPE_SPKAC_free"] = createExportWrapper("NETSCAPE_SPKAC_free");

var _d2i_NETSCAPE_SPKI = Module["_d2i_NETSCAPE_SPKI"] = createExportWrapper("d2i_NETSCAPE_SPKI");

var _i2d_NETSCAPE_SPKI = Module["_i2d_NETSCAPE_SPKI"] = createExportWrapper("i2d_NETSCAPE_SPKI");

var _d2i_X509_VAL = Module["_d2i_X509_VAL"] = createExportWrapper("d2i_X509_VAL");

var _i2d_X509_VAL = Module["_i2d_X509_VAL"] = createExportWrapper("i2d_X509_VAL");

var _X509_VAL_new = Module["_X509_VAL_new"] = createExportWrapper("X509_VAL_new");

var _X509_VAL_free = Module["_X509_VAL_free"] = createExportWrapper("X509_VAL_free");

var _ASYNC_is_capable = Module["_ASYNC_is_capable"] = createExportWrapper("ASYNC_is_capable");

var _async_local_cleanup = Module["_async_local_cleanup"] = createExportWrapper("async_local_cleanup");

var _async_get_ctx = Module["_async_get_ctx"] = createExportWrapper("async_get_ctx");

var _async_start_func = Module["_async_start_func"] = createExportWrapper("async_start_func");

var _CRYPTO_THREAD_get_local = Module["_CRYPTO_THREAD_get_local"] = createExportWrapper("CRYPTO_THREAD_get_local");

var _ossl_init_thread_start = Module["_ossl_init_thread_start"] = createExportWrapper("ossl_init_thread_start");

var _CRYPTO_THREAD_set_local = Module["_CRYPTO_THREAD_set_local"] = createExportWrapper("CRYPTO_THREAD_set_local");

var _ASYNC_init_thread = Module["_ASYNC_init_thread"] = createExportWrapper("ASYNC_init_thread");

var _ASYNC_pause_job = Module["_ASYNC_pause_job"] = createExportWrapper("ASYNC_pause_job");

var _async_init = Module["_async_init"] = createExportWrapper("async_init");

var _CRYPTO_THREAD_init_local = Module["_CRYPTO_THREAD_init_local"] = createExportWrapper("CRYPTO_THREAD_init_local");

var _CRYPTO_THREAD_cleanup_local = Module["_CRYPTO_THREAD_cleanup_local"] = createExportWrapper("CRYPTO_THREAD_cleanup_local");

var _async_deinit = Module["_async_deinit"] = createExportWrapper("async_deinit");

var _async_delete_thread_state = Module["_async_delete_thread_state"] = createExportWrapper("async_delete_thread_state");

var _ASYNC_cleanup_thread = Module["_ASYNC_cleanup_thread"] = createExportWrapper("ASYNC_cleanup_thread");

var _ASYNC_get_wait_ctx = Module["_ASYNC_get_wait_ctx"] = createExportWrapper("ASYNC_get_wait_ctx");

var _ASYNC_block_pause = Module["_ASYNC_block_pause"] = createExportWrapper("ASYNC_block_pause");

var _ASYNC_unblock_pause = Module["_ASYNC_unblock_pause"] = createExportWrapper("ASYNC_unblock_pause");

var _ASYNC_WAIT_CTX_set_wait_fd = Module["_ASYNC_WAIT_CTX_set_wait_fd"] = createExportWrapper("ASYNC_WAIT_CTX_set_wait_fd");

var _ASYNC_WAIT_CTX_get_fd = Module["_ASYNC_WAIT_CTX_get_fd"] = createExportWrapper("ASYNC_WAIT_CTX_get_fd");

var _ASYNC_WAIT_CTX_clear_fd = Module["_ASYNC_WAIT_CTX_clear_fd"] = createExportWrapper("ASYNC_WAIT_CTX_clear_fd");

var _async_wait_ctx_reset_counts = Module["_async_wait_ctx_reset_counts"] = createExportWrapper("async_wait_ctx_reset_counts");

var _BF_cfb64_encrypt = Module["_BF_cfb64_encrypt"] = createExportWrapper("BF_cfb64_encrypt");

var _BF_options = Module["_BF_options"] = createExportWrapper("BF_options");

var _BF_ecb_encrypt = Module["_BF_ecb_encrypt"] = createExportWrapper("BF_ecb_encrypt");

var _BF_encrypt = Module["_BF_encrypt"] = createExportWrapper("BF_encrypt");

var _BF_decrypt = Module["_BF_decrypt"] = createExportWrapper("BF_decrypt");

var _BF_cbc_encrypt = Module["_BF_cbc_encrypt"] = createExportWrapper("BF_cbc_encrypt");

var _BF_ofb64_encrypt = Module["_BF_ofb64_encrypt"] = createExportWrapper("BF_ofb64_encrypt");

var _BF_set_key = Module["_BF_set_key"] = createExportWrapper("BF_set_key");

var _BIO_ADDR_make = Module["_BIO_ADDR_make"] = createExportWrapper("BIO_ADDR_make");

var _BIO_ADDR_rawmake = Module["_BIO_ADDR_rawmake"] = createExportWrapper("BIO_ADDR_rawmake");

var _BIO_ADDR_family = Module["_BIO_ADDR_family"] = createExportWrapper("BIO_ADDR_family");

var _BIO_ADDR_rawaddress = Module["_BIO_ADDR_rawaddress"] = createExportWrapper("BIO_ADDR_rawaddress");

var _BIO_ADDR_rawport = Module["_BIO_ADDR_rawport"] = createExportWrapper("BIO_ADDR_rawport");

var _BIO_ADDR_hostname_string = Module["_BIO_ADDR_hostname_string"] = createExportWrapper("BIO_ADDR_hostname_string");

var _BIO_sock_init = Module["_BIO_sock_init"] = createExportWrapper("BIO_sock_init");

var _BIO_ADDR_service_string = Module["_BIO_ADDR_service_string"] = createExportWrapper("BIO_ADDR_service_string");

var _BIO_ADDR_path_string = Module["_BIO_ADDR_path_string"] = createExportWrapper("BIO_ADDR_path_string");

var _BIO_ADDR_sockaddr = Module["_BIO_ADDR_sockaddr"] = createExportWrapper("BIO_ADDR_sockaddr");

var _BIO_ADDR_sockaddr_noconst = Module["_BIO_ADDR_sockaddr_noconst"] = createExportWrapper("BIO_ADDR_sockaddr_noconst");

var _BIO_ADDR_sockaddr_size = Module["_BIO_ADDR_sockaddr_size"] = createExportWrapper("BIO_ADDR_sockaddr_size");

var _BIO_ADDRINFO_next = Module["_BIO_ADDRINFO_next"] = createExportWrapper("BIO_ADDRINFO_next");

var _BIO_ADDRINFO_family = Module["_BIO_ADDRINFO_family"] = createExportWrapper("BIO_ADDRINFO_family");

var _BIO_ADDRINFO_socktype = Module["_BIO_ADDRINFO_socktype"] = createExportWrapper("BIO_ADDRINFO_socktype");

var _BIO_ADDRINFO_protocol = Module["_BIO_ADDRINFO_protocol"] = createExportWrapper("BIO_ADDRINFO_protocol");

var _BIO_ADDRINFO_sockaddr_size = Module["_BIO_ADDRINFO_sockaddr_size"] = createExportWrapper("BIO_ADDRINFO_sockaddr_size");

var _BIO_ADDRINFO_sockaddr = Module["_BIO_ADDRINFO_sockaddr"] = createExportWrapper("BIO_ADDRINFO_sockaddr");

var _BIO_ADDRINFO_address = Module["_BIO_ADDRINFO_address"] = createExportWrapper("BIO_ADDRINFO_address");

var _BIO_ADDRINFO_free = Module["_BIO_ADDRINFO_free"] = createExportWrapper("BIO_ADDRINFO_free");

var _BIO_parse_hostserv = Module["_BIO_parse_hostserv"] = createExportWrapper("BIO_parse_hostserv");

var _BIO_lookup = Module["_BIO_lookup"] = createExportWrapper("BIO_lookup");

var _BIO_lookup_ex = Module["_BIO_lookup_ex"] = createExportWrapper("BIO_lookup_ex");

var _BIO_dump_cb = Module["_BIO_dump_cb"] = createExportWrapper("BIO_dump_cb");

var _BIO_dump_indent_cb = Module["_BIO_dump_indent_cb"] = createExportWrapper("BIO_dump_indent_cb");

var _BIO_hex_string = Module["_BIO_hex_string"] = createExportWrapper("BIO_hex_string");

var _BIO_vprintf = Module["_BIO_vprintf"] = createExportWrapper("BIO_vprintf");

var _OPENSSL_strnlen = Module["_OPENSSL_strnlen"] = createExportWrapper("OPENSSL_strnlen");

var _BIO_vsnprintf = Module["_BIO_vsnprintf"] = createExportWrapper("BIO_vsnprintf");

var _BIO_get_host_ip = Module["_BIO_get_host_ip"] = createExportWrapper("BIO_get_host_ip");

var _BIO_get_port = Module["_BIO_get_port"] = createExportWrapper("BIO_get_port");

var _BIO_sock_error = Module["_BIO_sock_error"] = createExportWrapper("BIO_sock_error");

var _BIO_gethostbyname = Module["_BIO_gethostbyname"] = createExportWrapper("BIO_gethostbyname");

var _bio_sock_cleanup_int = Module["_bio_sock_cleanup_int"] = createExportWrapper("bio_sock_cleanup_int");

var _BIO_socket_ioctl = Module["_BIO_socket_ioctl"] = createExportWrapper("BIO_socket_ioctl");

var _ioctl = Module["_ioctl"] = createExportWrapper("ioctl");

var _BIO_get_accept_socket = Module["_BIO_get_accept_socket"] = createExportWrapper("BIO_get_accept_socket");

var _BIO_socket = Module["_BIO_socket"] = createExportWrapper("BIO_socket");

var _BIO_listen = Module["_BIO_listen"] = createExportWrapper("BIO_listen");

var _BIO_closesocket = Module["_BIO_closesocket"] = createExportWrapper("BIO_closesocket");

var _BIO_accept = Module["_BIO_accept"] = createExportWrapper("BIO_accept");

var _BIO_accept_ex = Module["_BIO_accept_ex"] = createExportWrapper("BIO_accept_ex");

var _BIO_sock_should_retry = Module["_BIO_sock_should_retry"] = createExportWrapper("BIO_sock_should_retry");

var _BIO_set_tcp_ndelay = Module["_BIO_set_tcp_ndelay"] = createExportWrapper("BIO_set_tcp_ndelay");

var _BIO_socket_nbio = Module["_BIO_socket_nbio"] = createExportWrapper("BIO_socket_nbio");

var _BIO_sock_info = Module["_BIO_sock_info"] = createExportWrapper("BIO_sock_info");

var _BIO_connect = Module["_BIO_connect"] = createExportWrapper("BIO_connect");

var _BIO_bind = Module["_BIO_bind"] = createExportWrapper("BIO_bind");

var _BIO_copy_next_retry = Module["_BIO_copy_next_retry"] = createExportWrapper("BIO_copy_next_retry");

var _BIO_callback_ctrl = Module["_BIO_callback_ctrl"] = createExportWrapper("BIO_callback_ctrl");

var _bwrite_conv = Module["_bwrite_conv"] = createExportWrapper("bwrite_conv");

var _bread_conv = Module["_bread_conv"] = createExportWrapper("bread_conv");

var _BIO_set_data = Module["_BIO_set_data"] = createExportWrapper("BIO_set_data");

var _BIO_get_data = Module["_BIO_get_data"] = createExportWrapper("BIO_get_data");

var _BIO_set_init = Module["_BIO_set_init"] = createExportWrapper("BIO_set_init");

var _BIO_get_init = Module["_BIO_get_init"] = createExportWrapper("BIO_get_init");

var _BIO_set_shutdown = Module["_BIO_set_shutdown"] = createExportWrapper("BIO_set_shutdown");

var _BIO_get_shutdown = Module["_BIO_get_shutdown"] = createExportWrapper("BIO_get_shutdown");

var _BIO_vfree = Module["_BIO_vfree"] = createExportWrapper("BIO_vfree");

var _BIO_get_callback = Module["_BIO_get_callback"] = createExportWrapper("BIO_get_callback");

var _BIO_set_callback = Module["_BIO_set_callback"] = createExportWrapper("BIO_set_callback");

var _BIO_get_callback_ex = Module["_BIO_get_callback_ex"] = createExportWrapper("BIO_get_callback_ex");

var _BIO_set_callback_ex = Module["_BIO_set_callback_ex"] = createExportWrapper("BIO_set_callback_ex");

var _BIO_set_callback_arg = Module["_BIO_set_callback_arg"] = createExportWrapper("BIO_set_callback_arg");

var _BIO_get_callback_arg = Module["_BIO_get_callback_arg"] = createExportWrapper("BIO_get_callback_arg");

var _BIO_method_name = Module["_BIO_method_name"] = createExportWrapper("BIO_method_name");

var _BIO_read_ex = Module["_BIO_read_ex"] = createExportWrapper("BIO_read_ex");

var _BIO_write_ex = Module["_BIO_write_ex"] = createExportWrapper("BIO_write_ex");

var _BIO_gets = Module["_BIO_gets"] = createExportWrapper("BIO_gets");

var _BIO_ptr_ctrl = Module["_BIO_ptr_ctrl"] = createExportWrapper("BIO_ptr_ctrl");

var _BIO_ctrl_pending = Module["_BIO_ctrl_pending"] = createExportWrapper("BIO_ctrl_pending");

var _BIO_ctrl_wpending = Module["_BIO_ctrl_wpending"] = createExportWrapper("BIO_ctrl_wpending");

var _BIO_get_retry_BIO = Module["_BIO_get_retry_BIO"] = createExportWrapper("BIO_get_retry_BIO");

var _BIO_set_retry_reason = Module["_BIO_set_retry_reason"] = createExportWrapper("BIO_set_retry_reason");

var _BIO_set_next = Module["_BIO_set_next"] = createExportWrapper("BIO_set_next");

var _BIO_dup_chain = Module["_BIO_dup_chain"] = createExportWrapper("BIO_dup_chain");

var _BIO_set_ex_data = Module["_BIO_set_ex_data"] = createExportWrapper("BIO_set_ex_data");

var _BIO_get_ex_data = Module["_BIO_get_ex_data"] = createExportWrapper("BIO_get_ex_data");

var _BIO_number_read = Module["_BIO_number_read"] = createExportWrapper("BIO_number_read");

var _BIO_number_written = Module["_BIO_number_written"] = createExportWrapper("BIO_number_written");

var _bio_free_ex_data = Module["_bio_free_ex_data"] = createExportWrapper("bio_free_ex_data");

var _bio_cleanup = Module["_bio_cleanup"] = createExportWrapper("bio_cleanup");

var _BIO_get_new_index = Module["_BIO_get_new_index"] = createExportWrapper("BIO_get_new_index");

var _BIO_meth_new = Module["_BIO_meth_new"] = createExportWrapper("BIO_meth_new");

var _BIO_meth_free = Module["_BIO_meth_free"] = createExportWrapper("BIO_meth_free");

var _BIO_meth_get_write = Module["_BIO_meth_get_write"] = createExportWrapper("BIO_meth_get_write");

var _BIO_meth_get_write_ex = Module["_BIO_meth_get_write_ex"] = createExportWrapper("BIO_meth_get_write_ex");

var _BIO_meth_set_write = Module["_BIO_meth_set_write"] = createExportWrapper("BIO_meth_set_write");

var _BIO_meth_set_write_ex = Module["_BIO_meth_set_write_ex"] = createExportWrapper("BIO_meth_set_write_ex");

var _BIO_meth_get_read = Module["_BIO_meth_get_read"] = createExportWrapper("BIO_meth_get_read");

var _BIO_meth_get_read_ex = Module["_BIO_meth_get_read_ex"] = createExportWrapper("BIO_meth_get_read_ex");

var _BIO_meth_set_read = Module["_BIO_meth_set_read"] = createExportWrapper("BIO_meth_set_read");

var _BIO_meth_set_read_ex = Module["_BIO_meth_set_read_ex"] = createExportWrapper("BIO_meth_set_read_ex");

var _BIO_meth_get_puts = Module["_BIO_meth_get_puts"] = createExportWrapper("BIO_meth_get_puts");

var _BIO_meth_set_puts = Module["_BIO_meth_set_puts"] = createExportWrapper("BIO_meth_set_puts");

var _BIO_meth_get_gets = Module["_BIO_meth_get_gets"] = createExportWrapper("BIO_meth_get_gets");

var _BIO_meth_set_gets = Module["_BIO_meth_set_gets"] = createExportWrapper("BIO_meth_set_gets");

var _BIO_meth_get_ctrl = Module["_BIO_meth_get_ctrl"] = createExportWrapper("BIO_meth_get_ctrl");

var _BIO_meth_set_ctrl = Module["_BIO_meth_set_ctrl"] = createExportWrapper("BIO_meth_set_ctrl");

var _BIO_meth_get_create = Module["_BIO_meth_get_create"] = createExportWrapper("BIO_meth_get_create");

var _BIO_meth_set_create = Module["_BIO_meth_set_create"] = createExportWrapper("BIO_meth_set_create");

var _BIO_meth_get_destroy = Module["_BIO_meth_get_destroy"] = createExportWrapper("BIO_meth_get_destroy");

var _BIO_meth_set_destroy = Module["_BIO_meth_set_destroy"] = createExportWrapper("BIO_meth_set_destroy");

var _BIO_meth_get_callback_ctrl = Module["_BIO_meth_get_callback_ctrl"] = createExportWrapper("BIO_meth_get_callback_ctrl");

var _BIO_meth_set_callback_ctrl = Module["_BIO_meth_set_callback_ctrl"] = createExportWrapper("BIO_meth_set_callback_ctrl");

var _BIO_s_secmem = Module["_BIO_s_secmem"] = createExportWrapper("BIO_s_secmem");

var _BUF_MEM_new_ex = Module["_BUF_MEM_new_ex"] = createExportWrapper("BUF_MEM_new_ex");

var _BIO_s_null = Module["_BIO_s_null"] = createExportWrapper("BIO_s_null");

var _BIO_new_socket = Module["_BIO_new_socket"] = createExportWrapper("BIO_new_socket");

var _BIO_sock_non_fatal_error = Module["_BIO_sock_non_fatal_error"] = createExportWrapper("BIO_sock_non_fatal_error");

var _BLAKE2b_Init = Module["_BLAKE2b_Init"] = createExportWrapper("BLAKE2b_Init");

var _BLAKE2b_Update = Module["_BLAKE2b_Update"] = createExportWrapper("BLAKE2b_Update");

var _BLAKE2b_Final = Module["_BLAKE2b_Final"] = createExportWrapper("BLAKE2b_Final");

var _BLAKE2s_Init = Module["_BLAKE2s_Init"] = createExportWrapper("BLAKE2s_Init");

var _BLAKE2s_Update = Module["_BLAKE2s_Update"] = createExportWrapper("BLAKE2s_Update");

var _BLAKE2s_Final = Module["_BLAKE2s_Final"] = createExportWrapper("BLAKE2s_Final");

var _EVP_blake2b512 = Module["_EVP_blake2b512"] = createExportWrapper("EVP_blake2b512");

var _EVP_blake2s256 = Module["_EVP_blake2s256"] = createExportWrapper("EVP_blake2s256");

var _BN_add = Module["_BN_add"] = createExportWrapper("BN_add");

var _BN_usub = Module["_BN_usub"] = createExportWrapper("BN_usub");

var _BN_uadd = Module["_BN_uadd"] = createExportWrapper("BN_uadd");

var _BN_sub = Module["_BN_sub"] = createExportWrapper("BN_sub");

var _bn_mul_add_words = Module["_bn_mul_add_words"] = createExportWrapper("bn_mul_add_words");

var _bn_mul_words = Module["_bn_mul_words"] = createExportWrapper("bn_mul_words");

var _bn_sqr_words = Module["_bn_sqr_words"] = createExportWrapper("bn_sqr_words");

var _bn_div_words = Module["_bn_div_words"] = createExportWrapper("bn_div_words");

var _bn_add_words = Module["_bn_add_words"] = createExportWrapper("bn_add_words");

var _bn_sub_words = Module["_bn_sub_words"] = createExportWrapper("bn_sub_words");

var _bn_mul_comba8 = Module["_bn_mul_comba8"] = createExportWrapper("bn_mul_comba8");

var _bn_mul_comba4 = Module["_bn_mul_comba4"] = createExportWrapper("bn_mul_comba4");

var _bn_sqr_comba8 = Module["_bn_sqr_comba8"] = createExportWrapper("bn_sqr_comba8");

var _bn_sqr_comba4 = Module["_bn_sqr_comba4"] = createExportWrapper("bn_sqr_comba4");

var _bn_mul_mont = Module["_bn_mul_mont"] = createExportWrapper("bn_mul_mont");

var _BN_BLINDING_new = Module["_BN_BLINDING_new"] = createExportWrapper("BN_BLINDING_new");

var _BN_BLINDING_set_current_thread = Module["_BN_BLINDING_set_current_thread"] = createExportWrapper("BN_BLINDING_set_current_thread");

var _BN_BLINDING_free = Module["_BN_BLINDING_free"] = createExportWrapper("BN_BLINDING_free");

var _BN_BLINDING_update = Module["_BN_BLINDING_update"] = createExportWrapper("BN_BLINDING_update");

var _BN_BLINDING_create_param = Module["_BN_BLINDING_create_param"] = createExportWrapper("BN_BLINDING_create_param");

var _BN_BLINDING_convert = Module["_BN_BLINDING_convert"] = createExportWrapper("BN_BLINDING_convert");

var _BN_BLINDING_convert_ex = Module["_BN_BLINDING_convert_ex"] = createExportWrapper("BN_BLINDING_convert_ex");

var _BN_BLINDING_invert = Module["_BN_BLINDING_invert"] = createExportWrapper("BN_BLINDING_invert");

var _BN_BLINDING_invert_ex = Module["_BN_BLINDING_invert_ex"] = createExportWrapper("BN_BLINDING_invert_ex");

var _BN_BLINDING_is_current_thread = Module["_BN_BLINDING_is_current_thread"] = createExportWrapper("BN_BLINDING_is_current_thread");

var _BN_BLINDING_lock = Module["_BN_BLINDING_lock"] = createExportWrapper("BN_BLINDING_lock");

var _BN_BLINDING_unlock = Module["_BN_BLINDING_unlock"] = createExportWrapper("BN_BLINDING_unlock");

var _BN_BLINDING_get_flags = Module["_BN_BLINDING_get_flags"] = createExportWrapper("BN_BLINDING_get_flags");

var _BN_BLINDING_set_flags = Module["_BN_BLINDING_set_flags"] = createExportWrapper("BN_BLINDING_set_flags");

var _BN_get_rfc2409_prime_768 = Module["_BN_get_rfc2409_prime_768"] = createExportWrapper("BN_get_rfc2409_prime_768");

var _BN_get_rfc3526_prime_1536 = Module["_BN_get_rfc3526_prime_1536"] = createExportWrapper("BN_get_rfc3526_prime_1536");

var _BN_get_rfc3526_prime_6144 = Module["_BN_get_rfc3526_prime_6144"] = createExportWrapper("BN_get_rfc3526_prime_6144");

var _BN_CTX_secure_new = Module["_BN_CTX_secure_new"] = createExportWrapper("BN_CTX_secure_new");

var _BN_CTX_start = Module["_BN_CTX_start"] = createExportWrapper("BN_CTX_start");

var _BN_CTX_end = Module["_BN_CTX_end"] = createExportWrapper("BN_CTX_end");

var _BN_CTX_get = Module["_BN_CTX_get"] = createExportWrapper("BN_CTX_get");

var _bn_init = Module["_bn_init"] = createExportWrapper("bn_init");

var _BN_set_flags = Module["_BN_set_flags"] = createExportWrapper("BN_set_flags");

var _BN_div = Module["_BN_div"] = createExportWrapper("BN_div");

var _bn_div_fixed_top = Module["_bn_div_fixed_top"] = createExportWrapper("bn_div_fixed_top");

var _BN_exp = Module["_BN_exp"] = createExportWrapper("BN_exp");

var _BN_mod_exp = Module["_BN_mod_exp"] = createExportWrapper("BN_mod_exp");

var _BN_mod_exp_mont_word = Module["_BN_mod_exp_mont_word"] = createExportWrapper("BN_mod_exp_mont_word");

var _BN_get_flags = Module["_BN_get_flags"] = createExportWrapper("BN_get_flags");

var _BN_is_odd = Module["_BN_is_odd"] = createExportWrapper("BN_is_odd");

var _BN_sqr = Module["_BN_sqr"] = createExportWrapper("BN_sqr");

var _BN_is_bit_set = Module["_BN_is_bit_set"] = createExportWrapper("BN_is_bit_set");

var _BN_mul = Module["_BN_mul"] = createExportWrapper("BN_mul");

var _BN_mod_exp_recp = Module["_BN_mod_exp_recp"] = createExportWrapper("BN_mod_exp_recp");

var _BN_abs_is_word = Module["_BN_abs_is_word"] = createExportWrapper("BN_abs_is_word");

var _BN_MONT_CTX_new = Module["_BN_MONT_CTX_new"] = createExportWrapper("BN_MONT_CTX_new");

var _BN_MONT_CTX_set = Module["_BN_MONT_CTX_set"] = createExportWrapper("BN_MONT_CTX_set");

var _BN_to_montgomery = Module["_BN_to_montgomery"] = createExportWrapper("BN_to_montgomery");

var _bn_correct_top = Module["_bn_correct_top"] = createExportWrapper("bn_correct_top");

var _BN_num_bits_word = Module["_BN_num_bits_word"] = createExportWrapper("BN_num_bits_word");

var _bn_lshift_fixed_top = Module["_bn_lshift_fixed_top"] = createExportWrapper("bn_lshift_fixed_top");

var _bn_wexpand = Module["_bn_wexpand"] = createExportWrapper("bn_wexpand");

var _bn_rshift_fixed_top = Module["_bn_rshift_fixed_top"] = createExportWrapper("bn_rshift_fixed_top");

var _BN_mod_mul_montgomery = Module["_BN_mod_mul_montgomery"] = createExportWrapper("BN_mod_mul_montgomery");

var _BN_from_montgomery = Module["_BN_from_montgomery"] = createExportWrapper("BN_from_montgomery");

var _BN_MONT_CTX_free = Module["_BN_MONT_CTX_free"] = createExportWrapper("BN_MONT_CTX_free");

var _BN_mod_exp_mont_consttime = Module["_BN_mod_exp_mont_consttime"] = createExportWrapper("BN_mod_exp_mont_consttime");

var _BN_nnmod = Module["_BN_nnmod"] = createExportWrapper("BN_nnmod");

var _bn_to_mont_fixed_top = Module["_bn_to_mont_fixed_top"] = createExportWrapper("bn_to_mont_fixed_top");

var _bn_mul_mont_fixed_top = Module["_bn_mul_mont_fixed_top"] = createExportWrapper("bn_mul_mont_fixed_top");

var _BN_value_one = Module["_BN_value_one"] = createExportWrapper("BN_value_one");

var _BN_RECP_CTX_init = Module["_BN_RECP_CTX_init"] = createExportWrapper("BN_RECP_CTX_init");

var _BN_RECP_CTX_set = Module["_BN_RECP_CTX_set"] = createExportWrapper("BN_RECP_CTX_set");

var _BN_mod_mul_reciprocal = Module["_BN_mod_mul_reciprocal"] = createExportWrapper("BN_mod_mul_reciprocal");

var _BN_RECP_CTX_free = Module["_BN_RECP_CTX_free"] = createExportWrapper("BN_RECP_CTX_free");

var _BN_mod_exp_simple = Module["_BN_mod_exp_simple"] = createExportWrapper("BN_mod_exp_simple");

var _BN_mod_mul = Module["_BN_mod_mul"] = createExportWrapper("BN_mod_mul");

var _BN_mod_exp2_mont = Module["_BN_mod_exp2_mont"] = createExportWrapper("BN_mod_exp2_mont");

var _int_bn_mod_inverse = Module["_int_bn_mod_inverse"] = createExportWrapper("int_bn_mod_inverse");

var _BN_mod_inverse = Module["_BN_mod_inverse"] = createExportWrapper("BN_mod_inverse");

var _BN_gcd = Module["_BN_gcd"] = createExportWrapper("BN_gcd");

var _BN_GF2m_add = Module["_BN_GF2m_add"] = createExportWrapper("BN_GF2m_add");

var _BN_GF2m_mod_arr = Module["_BN_GF2m_mod_arr"] = createExportWrapper("BN_GF2m_mod_arr");

var _BN_GF2m_mod = Module["_BN_GF2m_mod"] = createExportWrapper("BN_GF2m_mod");

var _BN_GF2m_poly2arr = Module["_BN_GF2m_poly2arr"] = createExportWrapper("BN_GF2m_poly2arr");

var _BN_GF2m_mod_mul_arr = Module["_BN_GF2m_mod_mul_arr"] = createExportWrapper("BN_GF2m_mod_mul_arr");

var _BN_GF2m_mod_sqr_arr = Module["_BN_GF2m_mod_sqr_arr"] = createExportWrapper("BN_GF2m_mod_sqr_arr");

var _BN_GF2m_mod_mul = Module["_BN_GF2m_mod_mul"] = createExportWrapper("BN_GF2m_mod_mul");

var _BN_GF2m_mod_sqr = Module["_BN_GF2m_mod_sqr"] = createExportWrapper("BN_GF2m_mod_sqr");

var _BN_GF2m_mod_inv = Module["_BN_GF2m_mod_inv"] = createExportWrapper("BN_GF2m_mod_inv");

var _BN_GF2m_mod_inv_arr = Module["_BN_GF2m_mod_inv_arr"] = createExportWrapper("BN_GF2m_mod_inv_arr");

var _BN_GF2m_arr2poly = Module["_BN_GF2m_arr2poly"] = createExportWrapper("BN_GF2m_arr2poly");

var _BN_GF2m_mod_div = Module["_BN_GF2m_mod_div"] = createExportWrapper("BN_GF2m_mod_div");

var _BN_GF2m_mod_div_arr = Module["_BN_GF2m_mod_div_arr"] = createExportWrapper("BN_GF2m_mod_div_arr");

var _BN_GF2m_mod_exp_arr = Module["_BN_GF2m_mod_exp_arr"] = createExportWrapper("BN_GF2m_mod_exp_arr");

var _BN_GF2m_mod_exp = Module["_BN_GF2m_mod_exp"] = createExportWrapper("BN_GF2m_mod_exp");

var _BN_GF2m_mod_sqrt_arr = Module["_BN_GF2m_mod_sqrt_arr"] = createExportWrapper("BN_GF2m_mod_sqrt_arr");

var _BN_GF2m_mod_sqrt = Module["_BN_GF2m_mod_sqrt"] = createExportWrapper("BN_GF2m_mod_sqrt");

var _BN_GF2m_mod_solve_quad_arr = Module["_BN_GF2m_mod_solve_quad_arr"] = createExportWrapper("BN_GF2m_mod_solve_quad_arr");

var _BN_GF2m_mod_solve_quad = Module["_BN_GF2m_mod_solve_quad"] = createExportWrapper("BN_GF2m_mod_solve_quad");

var _bn_compute_wNAF = Module["_bn_compute_wNAF"] = createExportWrapper("bn_compute_wNAF");

var _bn_get_top = Module["_bn_get_top"] = createExportWrapper("bn_get_top");

var _bn_get_dmax = Module["_bn_get_dmax"] = createExportWrapper("bn_get_dmax");

var _bn_set_all_zero = Module["_bn_set_all_zero"] = createExportWrapper("bn_set_all_zero");

var _bn_copy_words = Module["_bn_copy_words"] = createExportWrapper("bn_copy_words");

var _bn_get_words = Module["_bn_get_words"] = createExportWrapper("bn_get_words");

var _bn_set_static_words = Module["_bn_set_static_words"] = createExportWrapper("bn_set_static_words");

var _bn_set_words = Module["_bn_set_words"] = createExportWrapper("bn_set_words");

var _BN_kronecker = Module["_BN_kronecker"] = createExportWrapper("BN_kronecker");

var _BN_set_params = Module["_BN_set_params"] = createExportWrapper("BN_set_params");

var _BN_get_params = Module["_BN_get_params"] = createExportWrapper("BN_get_params");

var _CRYPTO_secure_clear_free = Module["_CRYPTO_secure_clear_free"] = createExportWrapper("CRYPTO_secure_clear_free");

var _BN_secure_new = Module["_BN_secure_new"] = createExportWrapper("BN_secure_new");

var _bn_expand2 = Module["_bn_expand2"] = createExportWrapper("bn_expand2");

var _BN_swap = Module["_BN_swap"] = createExportWrapper("BN_swap");

var _BN_clear = Module["_BN_clear"] = createExportWrapper("BN_clear");

var _BN_get_word = Module["_BN_get_word"] = createExportWrapper("BN_get_word");

var _BN_bn2binpad = Module["_BN_bn2binpad"] = createExportWrapper("BN_bn2binpad");

var _BN_lebin2bn = Module["_BN_lebin2bn"] = createExportWrapper("BN_lebin2bn");

var _BN_bn2lebinpad = Module["_BN_bn2lebinpad"] = createExportWrapper("BN_bn2lebinpad");

var _BN_cmp = Module["_BN_cmp"] = createExportWrapper("BN_cmp");

var _BN_set_bit = Module["_BN_set_bit"] = createExportWrapper("BN_set_bit");

var _BN_clear_bit = Module["_BN_clear_bit"] = createExportWrapper("BN_clear_bit");

var _BN_mask_bits = Module["_BN_mask_bits"] = createExportWrapper("BN_mask_bits");

var _bn_cmp_words = Module["_bn_cmp_words"] = createExportWrapper("bn_cmp_words");

var _bn_cmp_part_words = Module["_bn_cmp_part_words"] = createExportWrapper("bn_cmp_part_words");

var _BN_consttime_swap = Module["_BN_consttime_swap"] = createExportWrapper("BN_consttime_swap");

var _BN_security_bits = Module["_BN_security_bits"] = createExportWrapper("BN_security_bits");

var _BN_zero_ex = Module["_BN_zero_ex"] = createExportWrapper("BN_zero_ex");

var _BN_is_one = Module["_BN_is_one"] = createExportWrapper("BN_is_one");

var _BN_is_word = Module["_BN_is_word"] = createExportWrapper("BN_is_word");

var _BN_GENCB_new = Module["_BN_GENCB_new"] = createExportWrapper("BN_GENCB_new");

var _BN_GENCB_free = Module["_BN_GENCB_free"] = createExportWrapper("BN_GENCB_free");

var _BN_GENCB_set_old = Module["_BN_GENCB_set_old"] = createExportWrapper("BN_GENCB_set_old");

var _BN_GENCB_set = Module["_BN_GENCB_set"] = createExportWrapper("BN_GENCB_set");

var _BN_GENCB_get_arg = Module["_BN_GENCB_get_arg"] = createExportWrapper("BN_GENCB_get_arg");

var _bn_correct_top_consttime = Module["_bn_correct_top_consttime"] = createExportWrapper("bn_correct_top_consttime");

var _BN_mod_add = Module["_BN_mod_add"] = createExportWrapper("BN_mod_add");

var _bn_mod_add_fixed_top = Module["_bn_mod_add_fixed_top"] = createExportWrapper("bn_mod_add_fixed_top");

var _BN_mod_add_quick = Module["_BN_mod_add_quick"] = createExportWrapper("BN_mod_add_quick");

var _BN_mod_sub = Module["_BN_mod_sub"] = createExportWrapper("BN_mod_sub");

var _bn_mod_sub_fixed_top = Module["_bn_mod_sub_fixed_top"] = createExportWrapper("bn_mod_sub_fixed_top");

var _BN_mod_sub_quick = Module["_BN_mod_sub_quick"] = createExportWrapper("BN_mod_sub_quick");

var _BN_mod_sqr = Module["_BN_mod_sqr"] = createExportWrapper("BN_mod_sqr");

var _BN_mod_lshift1 = Module["_BN_mod_lshift1"] = createExportWrapper("BN_mod_lshift1");

var _BN_lshift1 = Module["_BN_lshift1"] = createExportWrapper("BN_lshift1");

var _BN_mod_lshift1_quick = Module["_BN_mod_lshift1_quick"] = createExportWrapper("BN_mod_lshift1_quick");

var _BN_mod_lshift = Module["_BN_mod_lshift"] = createExportWrapper("BN_mod_lshift");

var _BN_mod_lshift_quick = Module["_BN_mod_lshift_quick"] = createExportWrapper("BN_mod_lshift_quick");

var _BN_lshift = Module["_BN_lshift"] = createExportWrapper("BN_lshift");

var _bn_sqr_fixed_top = Module["_bn_sqr_fixed_top"] = createExportWrapper("bn_sqr_fixed_top");

var _bn_mul_fixed_top = Module["_bn_mul_fixed_top"] = createExportWrapper("bn_mul_fixed_top");

var _bn_from_mont_fixed_top = Module["_bn_from_mont_fixed_top"] = createExportWrapper("bn_from_mont_fixed_top");

var _BN_MONT_CTX_init = Module["_BN_MONT_CTX_init"] = createExportWrapper("BN_MONT_CTX_init");

var _BN_rshift1 = Module["_BN_rshift1"] = createExportWrapper("BN_rshift1");

var _BN_rshift = Module["_BN_rshift"] = createExportWrapper("BN_rshift");

var _BN_sub_word = Module["_BN_sub_word"] = createExportWrapper("BN_sub_word");

var _BN_MONT_CTX_copy = Module["_BN_MONT_CTX_copy"] = createExportWrapper("BN_MONT_CTX_copy");

var _BN_MONT_CTX_set_locked = Module["_BN_MONT_CTX_set_locked"] = createExportWrapper("BN_MONT_CTX_set_locked");

var _bn_sub_part_words = Module["_bn_sub_part_words"] = createExportWrapper("bn_sub_part_words");

var _bn_mul_recursive = Module["_bn_mul_recursive"] = createExportWrapper("bn_mul_recursive");

var _bn_mul_normal = Module["_bn_mul_normal"] = createExportWrapper("bn_mul_normal");

var _bn_mul_part_recursive = Module["_bn_mul_part_recursive"] = createExportWrapper("bn_mul_part_recursive");

var _bn_mul_low_recursive = Module["_bn_mul_low_recursive"] = createExportWrapper("bn_mul_low_recursive");

var _bn_mul_low_normal = Module["_bn_mul_low_normal"] = createExportWrapper("bn_mul_low_normal");

var _BN_get0_nist_prime_192 = Module["_BN_get0_nist_prime_192"] = createExportWrapper("BN_get0_nist_prime_192");

var _BN_get0_nist_prime_224 = Module["_BN_get0_nist_prime_224"] = createExportWrapper("BN_get0_nist_prime_224");

var _BN_get0_nist_prime_256 = Module["_BN_get0_nist_prime_256"] = createExportWrapper("BN_get0_nist_prime_256");

var _BN_get0_nist_prime_384 = Module["_BN_get0_nist_prime_384"] = createExportWrapper("BN_get0_nist_prime_384");

var _BN_get0_nist_prime_521 = Module["_BN_get0_nist_prime_521"] = createExportWrapper("BN_get0_nist_prime_521");

var _BN_nist_mod_192 = Module["_BN_nist_mod_192"] = createExportWrapper("BN_nist_mod_192");

var _BN_nist_mod_224 = Module["_BN_nist_mod_224"] = createExportWrapper("BN_nist_mod_224");

var _BN_nist_mod_256 = Module["_BN_nist_mod_256"] = createExportWrapper("BN_nist_mod_256");

var _BN_nist_mod_384 = Module["_BN_nist_mod_384"] = createExportWrapper("BN_nist_mod_384");

var _BN_nist_mod_521 = Module["_BN_nist_mod_521"] = createExportWrapper("BN_nist_mod_521");

var _BN_nist_mod_func = Module["_BN_nist_mod_func"] = createExportWrapper("BN_nist_mod_func");

var _BN_GENCB_call = Module["_BN_GENCB_call"] = createExportWrapper("BN_GENCB_call");

var _BN_generate_prime_ex = Module["_BN_generate_prime_ex"] = createExportWrapper("BN_generate_prime_ex");

var _BN_is_prime_fasttest_ex = Module["_BN_is_prime_fasttest_ex"] = createExportWrapper("BN_is_prime_fasttest_ex");

var _BN_is_prime_ex = Module["_BN_is_prime_ex"] = createExportWrapper("BN_is_prime_ex");

var _BN_bn2dec = Module["_BN_bn2dec"] = createExportWrapper("BN_bn2dec");

var _BN_hex2bn = Module["_BN_hex2bn"] = createExportWrapper("BN_hex2bn");

var _OPENSSL_hexchar2int = Module["_OPENSSL_hexchar2int"] = createExportWrapper("OPENSSL_hexchar2int");

var _BN_dec2bn = Module["_BN_dec2bn"] = createExportWrapper("BN_dec2bn");

var _BN_asc2bn = Module["_BN_asc2bn"] = createExportWrapper("BN_asc2bn");

var _BN_print = Module["_BN_print"] = createExportWrapper("BN_print");

var _BN_options = Module["_BN_options"] = createExportWrapper("BN_options");

var _BN_rand = Module["_BN_rand"] = createExportWrapper("BN_rand");

var _BN_bntest_rand = Module["_BN_bntest_rand"] = createExportWrapper("BN_bntest_rand");

var _BN_priv_rand = Module["_BN_priv_rand"] = createExportWrapper("BN_priv_rand");

var _BN_rand_range = Module["_BN_rand_range"] = createExportWrapper("BN_rand_range");

var _BN_priv_rand_range = Module["_BN_priv_rand_range"] = createExportWrapper("BN_priv_rand_range");

var _BN_pseudo_rand = Module["_BN_pseudo_rand"] = createExportWrapper("BN_pseudo_rand");

var _BN_pseudo_rand_range = Module["_BN_pseudo_rand_range"] = createExportWrapper("BN_pseudo_rand_range");

var _BN_generate_dsa_nonce = Module["_BN_generate_dsa_nonce"] = createExportWrapper("BN_generate_dsa_nonce");

var _BN_RECP_CTX_new = Module["_BN_RECP_CTX_new"] = createExportWrapper("BN_RECP_CTX_new");

var _BN_div_recp = Module["_BN_div_recp"] = createExportWrapper("BN_div_recp");

var _BN_reciprocal = Module["_BN_reciprocal"] = createExportWrapper("BN_reciprocal");

var _bn_sqr_normal = Module["_bn_sqr_normal"] = createExportWrapper("bn_sqr_normal");

var _bn_sqr_recursive = Module["_bn_sqr_recursive"] = createExportWrapper("bn_sqr_recursive");

var _BN_mod_sqrt = Module["_BN_mod_sqrt"] = createExportWrapper("BN_mod_sqrt");

var _BN_mod_word = Module["_BN_mod_word"] = createExportWrapper("BN_mod_word");

var _CRYPTO_secure_malloc = Module["_CRYPTO_secure_malloc"] = createExportWrapper("CRYPTO_secure_malloc");

var _Camellia_Ekeygen = Module["_Camellia_Ekeygen"] = createExportWrapper("Camellia_Ekeygen");

var _Camellia_EncryptBlock_Rounds = Module["_Camellia_EncryptBlock_Rounds"] = createExportWrapper("Camellia_EncryptBlock_Rounds");

var _Camellia_EncryptBlock = Module["_Camellia_EncryptBlock"] = createExportWrapper("Camellia_EncryptBlock");

var _Camellia_DecryptBlock_Rounds = Module["_Camellia_DecryptBlock_Rounds"] = createExportWrapper("Camellia_DecryptBlock_Rounds");

var _Camellia_DecryptBlock = Module["_Camellia_DecryptBlock"] = createExportWrapper("Camellia_DecryptBlock");

var _Camellia_cbc_encrypt = Module["_Camellia_cbc_encrypt"] = createExportWrapper("Camellia_cbc_encrypt");

var _Camellia_set_key = Module["_Camellia_set_key"] = createExportWrapper("Camellia_set_key");

var _Camellia_encrypt = Module["_Camellia_encrypt"] = createExportWrapper("Camellia_encrypt");

var _Camellia_decrypt = Module["_Camellia_decrypt"] = createExportWrapper("Camellia_decrypt");

var _CAST_cfb64_encrypt = Module["_CAST_cfb64_encrypt"] = createExportWrapper("CAST_cfb64_encrypt");

var _CAST_ecb_encrypt = Module["_CAST_ecb_encrypt"] = createExportWrapper("CAST_ecb_encrypt");

var _CAST_encrypt = Module["_CAST_encrypt"] = createExportWrapper("CAST_encrypt");

var _CAST_decrypt = Module["_CAST_decrypt"] = createExportWrapper("CAST_decrypt");

var _CAST_cbc_encrypt = Module["_CAST_cbc_encrypt"] = createExportWrapper("CAST_cbc_encrypt");

var _CAST_ofb64_encrypt = Module["_CAST_ofb64_encrypt"] = createExportWrapper("CAST_ofb64_encrypt");

var _CAST_set_key = Module["_CAST_set_key"] = createExportWrapper("CAST_set_key");

var _ChaCha20_ctr32 = Module["_ChaCha20_ctr32"] = createExportWrapper("ChaCha20_ctr32");

var _CMAC_CTX_free = Module["_CMAC_CTX_free"] = createExportWrapper("CMAC_CTX_free");

var _CMAC_CTX_new = Module["_CMAC_CTX_new"] = createExportWrapper("CMAC_CTX_new");

var _CMAC_CTX_cleanup = Module["_CMAC_CTX_cleanup"] = createExportWrapper("CMAC_CTX_cleanup");

var _CMAC_CTX_get0_cipher_ctx = Module["_CMAC_CTX_get0_cipher_ctx"] = createExportWrapper("CMAC_CTX_get0_cipher_ctx");

var _CMAC_CTX_copy = Module["_CMAC_CTX_copy"] = createExportWrapper("CMAC_CTX_copy");

var _EVP_CIPHER_CTX_copy = Module["_EVP_CIPHER_CTX_copy"] = createExportWrapper("EVP_CIPHER_CTX_copy");

var _CMAC_Init = Module["_CMAC_Init"] = createExportWrapper("CMAC_Init");

var _CMAC_Update = Module["_CMAC_Update"] = createExportWrapper("CMAC_Update");

var _CMAC_Final = Module["_CMAC_Final"] = createExportWrapper("CMAC_Final");

var _CMAC_resume = Module["_CMAC_resume"] = createExportWrapper("CMAC_resume");

var _CMS_SharedInfo_encode = Module["_CMS_SharedInfo_encode"] = createExportWrapper("CMS_SharedInfo_encode");

var _CMS_signed_get_attr_count = Module["_CMS_signed_get_attr_count"] = createExportWrapper("CMS_signed_get_attr_count");

var _CMS_signed_get_attr_by_NID = Module["_CMS_signed_get_attr_by_NID"] = createExportWrapper("CMS_signed_get_attr_by_NID");

var _CMS_signed_get_attr_by_OBJ = Module["_CMS_signed_get_attr_by_OBJ"] = createExportWrapper("CMS_signed_get_attr_by_OBJ");

var _CMS_signed_get_attr = Module["_CMS_signed_get_attr"] = createExportWrapper("CMS_signed_get_attr");

var _CMS_signed_delete_attr = Module["_CMS_signed_delete_attr"] = createExportWrapper("CMS_signed_delete_attr");

var _CMS_signed_add1_attr = Module["_CMS_signed_add1_attr"] = createExportWrapper("CMS_signed_add1_attr");

var _CMS_signed_add1_attr_by_OBJ = Module["_CMS_signed_add1_attr_by_OBJ"] = createExportWrapper("CMS_signed_add1_attr_by_OBJ");

var _CMS_signed_add1_attr_by_NID = Module["_CMS_signed_add1_attr_by_NID"] = createExportWrapper("CMS_signed_add1_attr_by_NID");

var _CMS_signed_add1_attr_by_txt = Module["_CMS_signed_add1_attr_by_txt"] = createExportWrapper("CMS_signed_add1_attr_by_txt");

var _CMS_signed_get0_data_by_OBJ = Module["_CMS_signed_get0_data_by_OBJ"] = createExportWrapper("CMS_signed_get0_data_by_OBJ");

var _CMS_unsigned_get_attr_count = Module["_CMS_unsigned_get_attr_count"] = createExportWrapper("CMS_unsigned_get_attr_count");

var _CMS_unsigned_get_attr_by_NID = Module["_CMS_unsigned_get_attr_by_NID"] = createExportWrapper("CMS_unsigned_get_attr_by_NID");

var _CMS_unsigned_get_attr_by_OBJ = Module["_CMS_unsigned_get_attr_by_OBJ"] = createExportWrapper("CMS_unsigned_get_attr_by_OBJ");

var _CMS_unsigned_get_attr = Module["_CMS_unsigned_get_attr"] = createExportWrapper("CMS_unsigned_get_attr");

var _CMS_unsigned_delete_attr = Module["_CMS_unsigned_delete_attr"] = createExportWrapper("CMS_unsigned_delete_attr");

var _CMS_unsigned_add1_attr = Module["_CMS_unsigned_add1_attr"] = createExportWrapper("CMS_unsigned_add1_attr");

var _CMS_unsigned_add1_attr_by_OBJ = Module["_CMS_unsigned_add1_attr_by_OBJ"] = createExportWrapper("CMS_unsigned_add1_attr_by_OBJ");

var _CMS_unsigned_add1_attr_by_NID = Module["_CMS_unsigned_add1_attr_by_NID"] = createExportWrapper("CMS_unsigned_add1_attr_by_NID");

var _CMS_unsigned_add1_attr_by_txt = Module["_CMS_unsigned_add1_attr_by_txt"] = createExportWrapper("CMS_unsigned_add1_attr_by_txt");

var _CMS_unsigned_get0_data_by_OBJ = Module["_CMS_unsigned_get0_data_by_OBJ"] = createExportWrapper("CMS_unsigned_get0_data_by_OBJ");

var _CMS_si_check_attributes = Module["_CMS_si_check_attributes"] = createExportWrapper("CMS_si_check_attributes");

var _cms_DigestedData_create = Module["_cms_DigestedData_create"] = createExportWrapper("cms_DigestedData_create");

var _cms_DigestedData_init_bio = Module["_cms_DigestedData_init_bio"] = createExportWrapper("cms_DigestedData_init_bio");

var _cms_DigestedData_do_final = Module["_cms_DigestedData_do_final"] = createExportWrapper("cms_DigestedData_do_final");

var _cms_EncryptedContent_init_bio = Module["_cms_EncryptedContent_init_bio"] = createExportWrapper("cms_EncryptedContent_init_bio");

var _cms_EncryptedContent_init = Module["_cms_EncryptedContent_init"] = createExportWrapper("cms_EncryptedContent_init");

var _CMS_EncryptedData_set1_key = Module["_CMS_EncryptedData_set1_key"] = createExportWrapper("CMS_EncryptedData_set1_key");

var _cms_EncryptedData_init_bio = Module["_cms_EncryptedData_init_bio"] = createExportWrapper("cms_EncryptedData_init_bio");

var _cms_get0_enveloped = Module["_cms_get0_enveloped"] = createExportWrapper("cms_get0_enveloped");

var _cms_env_asn1_ctrl = Module["_cms_env_asn1_ctrl"] = createExportWrapper("cms_env_asn1_ctrl");

var _CMS_get0_RecipientInfos = Module["_CMS_get0_RecipientInfos"] = createExportWrapper("CMS_get0_RecipientInfos");

var _CMS_RecipientInfo_type = Module["_CMS_RecipientInfo_type"] = createExportWrapper("CMS_RecipientInfo_type");

var _CMS_RecipientInfo_get0_pkey_ctx = Module["_CMS_RecipientInfo_get0_pkey_ctx"] = createExportWrapper("CMS_RecipientInfo_get0_pkey_ctx");

var _CMS_EnvelopedData_create = Module["_CMS_EnvelopedData_create"] = createExportWrapper("CMS_EnvelopedData_create");

var _CMS_add1_recipient_cert = Module["_CMS_add1_recipient_cert"] = createExportWrapper("CMS_add1_recipient_cert");

var _cms_pkey_get_ri_type = Module["_cms_pkey_get_ri_type"] = createExportWrapper("cms_pkey_get_ri_type");

var _CMS_RecipientInfo_ktri_get0_algs = Module["_CMS_RecipientInfo_ktri_get0_algs"] = createExportWrapper("CMS_RecipientInfo_ktri_get0_algs");

var _CMS_RecipientInfo_ktri_get0_signer_id = Module["_CMS_RecipientInfo_ktri_get0_signer_id"] = createExportWrapper("CMS_RecipientInfo_ktri_get0_signer_id");

var _CMS_RecipientInfo_ktri_cert_cmp = Module["_CMS_RecipientInfo_ktri_cert_cmp"] = createExportWrapper("CMS_RecipientInfo_ktri_cert_cmp");

var _CMS_RecipientInfo_set0_pkey = Module["_CMS_RecipientInfo_set0_pkey"] = createExportWrapper("CMS_RecipientInfo_set0_pkey");

var _CMS_RecipientInfo_kekri_id_cmp = Module["_CMS_RecipientInfo_kekri_id_cmp"] = createExportWrapper("CMS_RecipientInfo_kekri_id_cmp");

var _CMS_add0_recipient_key = Module["_CMS_add0_recipient_key"] = createExportWrapper("CMS_add0_recipient_key");

var _CMS_RecipientInfo_kekri_get0_id = Module["_CMS_RecipientInfo_kekri_get0_id"] = createExportWrapper("CMS_RecipientInfo_kekri_get0_id");

var _CMS_RecipientInfo_set0_key = Module["_CMS_RecipientInfo_set0_key"] = createExportWrapper("CMS_RecipientInfo_set0_key");

var _CMS_RecipientInfo_decrypt = Module["_CMS_RecipientInfo_decrypt"] = createExportWrapper("CMS_RecipientInfo_decrypt");

var _CMS_RecipientInfo_encrypt = Module["_CMS_RecipientInfo_encrypt"] = createExportWrapper("CMS_RecipientInfo_encrypt");

var _cms_EnvelopedData_init_bio = Module["_cms_EnvelopedData_init_bio"] = createExportWrapper("cms_EnvelopedData_init_bio");

var _d2i_CMS_ReceiptRequest = Module["_d2i_CMS_ReceiptRequest"] = createExportWrapper("d2i_CMS_ReceiptRequest");

var _i2d_CMS_ReceiptRequest = Module["_i2d_CMS_ReceiptRequest"] = createExportWrapper("i2d_CMS_ReceiptRequest");

var _CMS_ReceiptRequest_new = Module["_CMS_ReceiptRequest_new"] = createExportWrapper("CMS_ReceiptRequest_new");

var _CMS_ReceiptRequest_free = Module["_CMS_ReceiptRequest_free"] = createExportWrapper("CMS_ReceiptRequest_free");

var _CMS_get1_ReceiptRequest = Module["_CMS_get1_ReceiptRequest"] = createExportWrapper("CMS_get1_ReceiptRequest");

var _CMS_ReceiptRequest_create0 = Module["_CMS_ReceiptRequest_create0"] = createExportWrapper("CMS_ReceiptRequest_create0");

var _CMS_add1_ReceiptRequest = Module["_CMS_add1_ReceiptRequest"] = createExportWrapper("CMS_add1_ReceiptRequest");

var _CMS_ReceiptRequest_get0_values = Module["_CMS_ReceiptRequest_get0_values"] = createExportWrapper("CMS_ReceiptRequest_get0_values");

var _cms_msgSigDigest_add1 = Module["_cms_msgSigDigest_add1"] = createExportWrapper("cms_msgSigDigest_add1");

var _cms_Receipt_verify = Module["_cms_Receipt_verify"] = createExportWrapper("cms_Receipt_verify");

var _cms_encode_Receipt = Module["_cms_encode_Receipt"] = createExportWrapper("cms_encode_Receipt");

var _CMS_stream = Module["_CMS_stream"] = createExportWrapper("CMS_stream");

var _CMS_get0_content = Module["_CMS_get0_content"] = createExportWrapper("CMS_get0_content");

var _EVP_CIPHER_CTX_set_flags = Module["_EVP_CIPHER_CTX_set_flags"] = createExportWrapper("EVP_CIPHER_CTX_set_flags");

var _CMS_dataInit = Module["_CMS_dataInit"] = createExportWrapper("CMS_dataInit");

var _CMS_dataFinal = Module["_CMS_dataFinal"] = createExportWrapper("CMS_dataFinal");

var _d2i_CMS_ContentInfo = Module["_d2i_CMS_ContentInfo"] = createExportWrapper("d2i_CMS_ContentInfo");

var _i2d_CMS_ContentInfo = Module["_i2d_CMS_ContentInfo"] = createExportWrapper("i2d_CMS_ContentInfo");

var _BIO_new_CMS = Module["_BIO_new_CMS"] = createExportWrapper("BIO_new_CMS");

var _i2d_CMS_bio_stream = Module["_i2d_CMS_bio_stream"] = createExportWrapper("i2d_CMS_bio_stream");

var _BIO_f_base64 = Module["_BIO_f_base64"] = createExportWrapper("BIO_f_base64");

var _ossl_tolower = Module["_ossl_tolower"] = createExportWrapper("ossl_tolower");

var _CMS_get0_eContentType = Module["_CMS_get0_eContentType"] = createExportWrapper("CMS_get0_eContentType");

var _CMS_RecipientInfo_kari_get0_alg = Module["_CMS_RecipientInfo_kari_get0_alg"] = createExportWrapper("CMS_RecipientInfo_kari_get0_alg");

var _CMS_RecipientInfo_kari_get0_reks = Module["_CMS_RecipientInfo_kari_get0_reks"] = createExportWrapper("CMS_RecipientInfo_kari_get0_reks");

var _CMS_RecipientInfo_kari_get0_orig_id = Module["_CMS_RecipientInfo_kari_get0_orig_id"] = createExportWrapper("CMS_RecipientInfo_kari_get0_orig_id");

var _CMS_RecipientInfo_kari_orig_id_cmp = Module["_CMS_RecipientInfo_kari_orig_id_cmp"] = createExportWrapper("CMS_RecipientInfo_kari_orig_id_cmp");

var _CMS_RecipientEncryptedKey_get0_id = Module["_CMS_RecipientEncryptedKey_get0_id"] = createExportWrapper("CMS_RecipientEncryptedKey_get0_id");

var _CMS_RecipientEncryptedKey_cert_cmp = Module["_CMS_RecipientEncryptedKey_cert_cmp"] = createExportWrapper("CMS_RecipientEncryptedKey_cert_cmp");

var _CMS_RecipientInfo_kari_set0_pkey = Module["_CMS_RecipientInfo_kari_set0_pkey"] = createExportWrapper("CMS_RecipientInfo_kari_set0_pkey");

var _CMS_RecipientInfo_kari_get0_ctx = Module["_CMS_RecipientInfo_kari_get0_ctx"] = createExportWrapper("CMS_RecipientInfo_kari_get0_ctx");

var _CMS_RecipientInfo_kari_decrypt = Module["_CMS_RecipientInfo_kari_decrypt"] = createExportWrapper("CMS_RecipientInfo_kari_decrypt");

var _cms_RecipientInfo_kari_init = Module["_cms_RecipientInfo_kari_init"] = createExportWrapper("cms_RecipientInfo_kari_init");

var _cms_RecipientInfo_kari_encrypt = Module["_cms_RecipientInfo_kari_encrypt"] = createExportWrapper("cms_RecipientInfo_kari_encrypt");

var _CMS_ContentInfo_new = Module["_CMS_ContentInfo_new"] = createExportWrapper("CMS_ContentInfo_new");

var _CMS_ContentInfo_print_ctx = Module["_CMS_ContentInfo_print_ctx"] = createExportWrapper("CMS_ContentInfo_print_ctx");

var _ascii_isdigit = Module["_ascii_isdigit"] = createExportWrapper("ascii_isdigit");

var _OPENSSL_gmtime_adj = Module["_OPENSSL_gmtime_adj"] = createExportWrapper("OPENSSL_gmtime_adj");

var _OPENSSL_gmtime = Module["_OPENSSL_gmtime"] = createExportWrapper("OPENSSL_gmtime");

var _OPENSSL_gmtime_diff = Module["_OPENSSL_gmtime_diff"] = createExportWrapper("OPENSSL_gmtime_diff");

var _cms_Data_create = Module["_cms_Data_create"] = createExportWrapper("cms_Data_create");

var _CMS_set_detached = Module["_CMS_set_detached"] = createExportWrapper("CMS_set_detached");

var _cms_content_bio = Module["_cms_content_bio"] = createExportWrapper("cms_content_bio");

var _cms_DigestAlgorithm_init_bio = Module["_cms_DigestAlgorithm_init_bio"] = createExportWrapper("cms_DigestAlgorithm_init_bio");

var _cms_DigestAlgorithm_find_ctx = Module["_cms_DigestAlgorithm_find_ctx"] = createExportWrapper("cms_DigestAlgorithm_find_ctx");

var _BIO_f_cipher = Module["_BIO_f_cipher"] = createExportWrapper("BIO_f_cipher");

var _EVP_CIPHER_type = Module["_EVP_CIPHER_type"] = createExportWrapper("EVP_CIPHER_type");

var _EVP_CIPHER_asn1_to_param = Module["_EVP_CIPHER_asn1_to_param"] = createExportWrapper("EVP_CIPHER_asn1_to_param");

var _EVP_CIPHER_CTX_key_length = Module["_EVP_CIPHER_CTX_key_length"] = createExportWrapper("EVP_CIPHER_CTX_key_length");

var _EVP_CIPHER_CTX_rand_key = Module["_EVP_CIPHER_CTX_rand_key"] = createExportWrapper("EVP_CIPHER_CTX_rand_key");

var _EVP_CIPHER_param_to_asn1 = Module["_EVP_CIPHER_param_to_asn1"] = createExportWrapper("EVP_CIPHER_param_to_asn1");

var _EVP_PKEY_CTX_get0_pkey = Module["_EVP_PKEY_CTX_get0_pkey"] = createExportWrapper("EVP_PKEY_CTX_get0_pkey");

var _cms_set1_SignerIdentifier = Module["_cms_set1_SignerIdentifier"] = createExportWrapper("cms_set1_SignerIdentifier");

var _cms_ias_cert_cmp = Module["_cms_ias_cert_cmp"] = createExportWrapper("cms_ias_cert_cmp");

var _cms_keyid_cert_cmp = Module["_cms_keyid_cert_cmp"] = createExportWrapper("cms_keyid_cert_cmp");

var _cms_set1_keyid = Module["_cms_set1_keyid"] = createExportWrapper("cms_set1_keyid");

var _cms_set1_ias = Module["_cms_set1_ias"] = createExportWrapper("cms_set1_ias");

var _EVP_des_ede3_wrap = Module["_EVP_des_ede3_wrap"] = createExportWrapper("EVP_des_ede3_wrap");

var _EVP_aes_128_wrap = Module["_EVP_aes_128_wrap"] = createExportWrapper("EVP_aes_128_wrap");

var _EVP_aes_192_wrap = Module["_EVP_aes_192_wrap"] = createExportWrapper("EVP_aes_192_wrap");

var _EVP_aes_256_wrap = Module["_EVP_aes_256_wrap"] = createExportWrapper("EVP_aes_256_wrap");

var _cms_SignerIdentifier_get0_signer_id = Module["_cms_SignerIdentifier_get0_signer_id"] = createExportWrapper("cms_SignerIdentifier_get0_signer_id");

var _cms_SignerIdentifier_cert_cmp = Module["_cms_SignerIdentifier_cert_cmp"] = createExportWrapper("cms_SignerIdentifier_cert_cmp");

var _CRYPTO_128_wrap = Module["_CRYPTO_128_wrap"] = createExportWrapper("CRYPTO_128_wrap");

var _CRYPTO_128_unwrap = Module["_CRYPTO_128_unwrap"] = createExportWrapper("CRYPTO_128_unwrap");

var _cms_RecipientInfo_pwri_crypt = Module["_cms_RecipientInfo_pwri_crypt"] = createExportWrapper("cms_RecipientInfo_pwri_crypt");

var _cms_SignedData_init_bio = Module["_cms_SignedData_init_bio"] = createExportWrapper("cms_SignedData_init_bio");

var _cms_SignedData_final = Module["_cms_SignedData_final"] = createExportWrapper("cms_SignedData_final");

var _CMS_set1_eContentType = Module["_CMS_set1_eContentType"] = createExportWrapper("CMS_set1_eContentType");

var _CMS_is_detached = Module["_CMS_is_detached"] = createExportWrapper("CMS_is_detached");

var _BIO_f_md = Module["_BIO_f_md"] = createExportWrapper("BIO_f_md");

var _EVP_MD_pkey_type = Module["_EVP_MD_pkey_type"] = createExportWrapper("EVP_MD_pkey_type");

var _CMS_add0_CertificateChoices = Module["_CMS_add0_CertificateChoices"] = createExportWrapper("CMS_add0_CertificateChoices");

var _CMS_add0_cert = Module["_CMS_add0_cert"] = createExportWrapper("CMS_add0_cert");

var _CMS_add1_cert = Module["_CMS_add1_cert"] = createExportWrapper("CMS_add1_cert");

var _CMS_add0_RevocationInfoChoice = Module["_CMS_add0_RevocationInfoChoice"] = createExportWrapper("CMS_add0_RevocationInfoChoice");

var _CMS_add0_crl = Module["_CMS_add0_crl"] = createExportWrapper("CMS_add0_crl");

var _CMS_add1_crl = Module["_CMS_add1_crl"] = createExportWrapper("CMS_add1_crl");

var _X509_CRL_up_ref = Module["_X509_CRL_up_ref"] = createExportWrapper("X509_CRL_up_ref");

var _X509_get0_subject_key_id = Module["_X509_get0_subject_key_id"] = createExportWrapper("X509_get0_subject_key_id");

var _X509_NAME_set = Module["_X509_NAME_set"] = createExportWrapper("X509_NAME_set");

var _CMS_RecipientInfo_set0_password = Module["_CMS_RecipientInfo_set0_password"] = createExportWrapper("CMS_RecipientInfo_set0_password");

var _CMS_add0_recipient_password = Module["_CMS_add0_recipient_password"] = createExportWrapper("CMS_add0_recipient_password");

var _EVP_PBE_CipherInit = Module["_EVP_PBE_CipherInit"] = createExportWrapper("EVP_PBE_CipherInit");

var _CMS_SignedData_init = Module["_CMS_SignedData_init"] = createExportWrapper("CMS_SignedData_init");

var _CMS_add1_signer = Module["_CMS_add1_signer"] = createExportWrapper("CMS_add1_signer");

var _CMS_add_standard_smimecap = Module["_CMS_add_standard_smimecap"] = createExportWrapper("CMS_add_standard_smimecap");

var _CMS_add_smimecap = Module["_CMS_add_smimecap"] = createExportWrapper("CMS_add_smimecap");

var _X509at_get_attr_count = Module["_X509at_get_attr_count"] = createExportWrapper("X509at_get_attr_count");

var _X509at_get_attr_by_NID = Module["_X509at_get_attr_by_NID"] = createExportWrapper("X509at_get_attr_by_NID");

var _X509at_get_attr_by_OBJ = Module["_X509at_get_attr_by_OBJ"] = createExportWrapper("X509at_get_attr_by_OBJ");

var _X509at_get_attr = Module["_X509at_get_attr"] = createExportWrapper("X509at_get_attr");

var _X509at_delete_attr = Module["_X509at_delete_attr"] = createExportWrapper("X509at_delete_attr");

var _X509at_add1_attr = Module["_X509at_add1_attr"] = createExportWrapper("X509at_add1_attr");

var _X509at_add1_attr_by_OBJ = Module["_X509at_add1_attr_by_OBJ"] = createExportWrapper("X509at_add1_attr_by_OBJ");

var _X509at_add1_attr_by_txt = Module["_X509at_add1_attr_by_txt"] = createExportWrapper("X509at_add1_attr_by_txt");

var _X509at_get0_data_by_OBJ = Module["_X509at_get0_data_by_OBJ"] = createExportWrapper("X509at_get0_data_by_OBJ");

var _X509_ATTRIBUTE_count = Module["_X509_ATTRIBUTE_count"] = createExportWrapper("X509_ATTRIBUTE_count");

var _CMS_SignerInfo_sign = Module["_CMS_SignerInfo_sign"] = createExportWrapper("CMS_SignerInfo_sign");

var _CMS_add_simple_smimecap = Module["_CMS_add_simple_smimecap"] = createExportWrapper("CMS_add_simple_smimecap");

var _EVP_MD_CTX_reset = Module["_EVP_MD_CTX_reset"] = createExportWrapper("EVP_MD_CTX_reset");

var _CMS_SignerInfo_get0_pkey_ctx = Module["_CMS_SignerInfo_get0_pkey_ctx"] = createExportWrapper("CMS_SignerInfo_get0_pkey_ctx");

var _CMS_SignerInfo_get0_md_ctx = Module["_CMS_SignerInfo_get0_md_ctx"] = createExportWrapper("CMS_SignerInfo_get0_md_ctx");

var _CMS_get0_SignerInfos = Module["_CMS_get0_SignerInfos"] = createExportWrapper("CMS_get0_SignerInfos");

var _CMS_SignerInfo_set1_signer_cert = Module["_CMS_SignerInfo_set1_signer_cert"] = createExportWrapper("CMS_SignerInfo_set1_signer_cert");

var _CMS_SignerInfo_get0_signer_id = Module["_CMS_SignerInfo_get0_signer_id"] = createExportWrapper("CMS_SignerInfo_get0_signer_id");

var _CMS_SignerInfo_cert_cmp = Module["_CMS_SignerInfo_cert_cmp"] = createExportWrapper("CMS_SignerInfo_cert_cmp");

var _CMS_set1_signers_certs = Module["_CMS_set1_signers_certs"] = createExportWrapper("CMS_set1_signers_certs");

var _CMS_SignerInfo_get0_algs = Module["_CMS_SignerInfo_get0_algs"] = createExportWrapper("CMS_SignerInfo_get0_algs");

var _CMS_SignerInfo_get0_signature = Module["_CMS_SignerInfo_get0_signature"] = createExportWrapper("CMS_SignerInfo_get0_signature");

var _CMS_SignerInfo_verify = Module["_CMS_SignerInfo_verify"] = createExportWrapper("CMS_SignerInfo_verify");

var _CMS_SignerInfo_verify_content = Module["_CMS_SignerInfo_verify_content"] = createExportWrapper("CMS_SignerInfo_verify_content");

var _EVP_PKEY_verify_init = Module["_EVP_PKEY_verify_init"] = createExportWrapper("EVP_PKEY_verify_init");

var _EVP_PKEY_verify = Module["_EVP_PKEY_verify"] = createExportWrapper("EVP_PKEY_verify");

var _CMS_data = Module["_CMS_data"] = createExportWrapper("CMS_data");

var _CMS_data_create = Module["_CMS_data_create"] = createExportWrapper("CMS_data_create");

var _CMS_digest_verify = Module["_CMS_digest_verify"] = createExportWrapper("CMS_digest_verify");

var _CMS_digest_create = Module["_CMS_digest_create"] = createExportWrapper("CMS_digest_create");

var _CMS_EncryptedData_decrypt = Module["_CMS_EncryptedData_decrypt"] = createExportWrapper("CMS_EncryptedData_decrypt");

var _CMS_EncryptedData_encrypt = Module["_CMS_EncryptedData_encrypt"] = createExportWrapper("CMS_EncryptedData_encrypt");

var _X509_STORE_CTX_set0_crls = Module["_X509_STORE_CTX_set0_crls"] = createExportWrapper("X509_STORE_CTX_set0_crls");

var _CMS_verify_receipt = Module["_CMS_verify_receipt"] = createExportWrapper("CMS_verify_receipt");

var _GENERAL_NAMES_free = Module["_GENERAL_NAMES_free"] = createExportWrapper("GENERAL_NAMES_free");

var _CMS_sign_receipt = Module["_CMS_sign_receipt"] = createExportWrapper("CMS_sign_receipt");

var _CMS_decrypt_set1_pkey = Module["_CMS_decrypt_set1_pkey"] = createExportWrapper("CMS_decrypt_set1_pkey");

var _CMS_decrypt_set1_key = Module["_CMS_decrypt_set1_key"] = createExportWrapper("CMS_decrypt_set1_key");

var _CMS_decrypt_set1_password = Module["_CMS_decrypt_set1_password"] = createExportWrapper("CMS_decrypt_set1_password");

var _CMS_uncompress = Module["_CMS_uncompress"] = createExportWrapper("CMS_uncompress");

var _CMS_compress = Module["_CMS_compress"] = createExportWrapper("CMS_compress");

var _comp_zlib_cleanup_int = Module["_comp_zlib_cleanup_int"] = createExportWrapper("comp_zlib_cleanup_int");

var _COMP_CTX_get_type = Module["_COMP_CTX_get_type"] = createExportWrapper("COMP_CTX_get_type");

var __CONF_get_section = Module["__CONF_get_section"] = createExportWrapper("_CONF_get_section");

var __CONF_get_section_values = Module["__CONF_get_section_values"] = createExportWrapper("_CONF_get_section_values");

var __CONF_add_string = Module["__CONF_add_string"] = createExportWrapper("_CONF_add_string");

var __CONF_get_string = Module["__CONF_get_string"] = createExportWrapper("_CONF_get_string");

var __CONF_new_data = Module["__CONF_new_data"] = createExportWrapper("_CONF_new_data");

var __CONF_free_data = Module["__CONF_free_data"] = createExportWrapper("_CONF_free_data");

var __CONF_new_section = Module["__CONF_new_section"] = createExportWrapper("_CONF_new_section");

var _NCONF_default = Module["_NCONF_default"] = createExportWrapper("NCONF_default");

var _NCONF_WIN32 = Module["_NCONF_WIN32"] = createExportWrapper("NCONF_WIN32");

var _CONF_set_nconf = Module["_CONF_set_nconf"] = createExportWrapper("CONF_set_nconf");

var _CONF_set_default_method = Module["_CONF_set_default_method"] = createExportWrapper("CONF_set_default_method");

var _CONF_load = Module["_CONF_load"] = createExportWrapper("CONF_load");

var _CONF_load_bio = Module["_CONF_load_bio"] = createExportWrapper("CONF_load_bio");

var _NCONF_load_bio = Module["_NCONF_load_bio"] = createExportWrapper("NCONF_load_bio");

var _CONF_get_section = Module["_CONF_get_section"] = createExportWrapper("CONF_get_section");

var _OPENSSL_sk_delete_ptr = Module["_OPENSSL_sk_delete_ptr"] = createExportWrapper("OPENSSL_sk_delete_ptr");

var _ossl_safe_getenv = Module["_ossl_safe_getenv"] = createExportWrapper("ossl_safe_getenv");

var _OPENSSL_LH_strhash = Module["_OPENSSL_LH_strhash"] = createExportWrapper("OPENSSL_LH_strhash");

var _OPENSSL_LH_doall = Module["_OPENSSL_LH_doall"] = createExportWrapper("OPENSSL_LH_doall");

var _OPENSSL_LH_error = Module["_OPENSSL_LH_error"] = createExportWrapper("OPENSSL_LH_error");

var _CONF_free = Module["_CONF_free"] = createExportWrapper("CONF_free");

var _OPENSSL_strlcpy = Module["_OPENSSL_strlcpy"] = createExportWrapper("OPENSSL_strlcpy");

var _OPENSSL_strlcat = Module["_OPENSSL_strlcat"] = createExportWrapper("OPENSSL_strlcat");

var _CONF_get_string = Module["_CONF_get_string"] = createExportWrapper("CONF_get_string");

var _CONF_get_number = Module["_CONF_get_number"] = createExportWrapper("CONF_get_number");

var _NCONF_free_data = Module["_NCONF_free_data"] = createExportWrapper("NCONF_free_data");

var _CONF_dump_bio = Module["_CONF_dump_bio"] = createExportWrapper("CONF_dump_bio");

var _NCONF_dump_bio = Module["_NCONF_dump_bio"] = createExportWrapper("NCONF_dump_bio");

var _OPENSSL_INIT_new = Module["_OPENSSL_INIT_new"] = createExportWrapper("OPENSSL_INIT_new");

var _OPENSSL_INIT_free = Module["_OPENSSL_INIT_free"] = createExportWrapper("OPENSSL_INIT_free");

var _OPENSSL_load_builtin_modules = Module["_OPENSSL_load_builtin_modules"] = createExportWrapper("OPENSSL_load_builtin_modules");

var _CONF_modules_load = Module["_CONF_modules_load"] = createExportWrapper("CONF_modules_load");

var _CONF_modules_load_file = Module["_CONF_modules_load_file"] = createExportWrapper("CONF_modules_load_file");

var _CONF_get1_default_config_file = Module["_CONF_get1_default_config_file"] = createExportWrapper("CONF_get1_default_config_file");

var _CONF_modules_unload = Module["_CONF_modules_unload"] = createExportWrapper("CONF_modules_unload");

var _CONF_modules_finish = Module["_CONF_modules_finish"] = createExportWrapper("CONF_modules_finish");

var _CONF_module_add = Module["_CONF_module_add"] = createExportWrapper("CONF_module_add");

var _conf_modules_free_int = Module["_conf_modules_free_int"] = createExportWrapper("conf_modules_free_int");

var _CONF_imodule_get_name = Module["_CONF_imodule_get_name"] = createExportWrapper("CONF_imodule_get_name");

var _CONF_imodule_get_value = Module["_CONF_imodule_get_value"] = createExportWrapper("CONF_imodule_get_value");

var _CONF_imodule_get_usr_data = Module["_CONF_imodule_get_usr_data"] = createExportWrapper("CONF_imodule_get_usr_data");

var _CONF_imodule_set_usr_data = Module["_CONF_imodule_set_usr_data"] = createExportWrapper("CONF_imodule_set_usr_data");

var _CONF_imodule_get_module = Module["_CONF_imodule_get_module"] = createExportWrapper("CONF_imodule_get_module");

var _CONF_imodule_get_flags = Module["_CONF_imodule_get_flags"] = createExportWrapper("CONF_imodule_get_flags");

var _CONF_imodule_set_flags = Module["_CONF_imodule_set_flags"] = createExportWrapper("CONF_imodule_set_flags");

var _CONF_module_get_usr_data = Module["_CONF_module_get_usr_data"] = createExportWrapper("CONF_module_get_usr_data");

var _CONF_module_set_usr_data = Module["_CONF_module_set_usr_data"] = createExportWrapper("CONF_module_set_usr_data");

var _DSO_load = Module["_DSO_load"] = createExportWrapper("DSO_load");

var _DSO_bind_func = Module["_DSO_bind_func"] = createExportWrapper("DSO_bind_func");

var _DSO_free = Module["_DSO_free"] = createExportWrapper("DSO_free");

var _OPENSSL_config = Module["_OPENSSL_config"] = createExportWrapper("OPENSSL_config");

var _openssl_config_int = Module["_openssl_config_int"] = createExportWrapper("openssl_config_int");

var _openssl_no_config_int = Module["_openssl_no_config_int"] = createExportWrapper("openssl_no_config_int");

var _conf_add_ssl_module = Module["_conf_add_ssl_module"] = createExportWrapper("conf_add_ssl_module");

var _OPENSSL_cpuid_setup = Module["_OPENSSL_cpuid_setup"] = createExportWrapper("OPENSSL_cpuid_setup");

var _OPENSSL_showfatal = Module["_OPENSSL_showfatal"] = createExportWrapper("OPENSSL_showfatal");

var _OPENSSL_isservice = Module["_OPENSSL_isservice"] = createExportWrapper("OPENSSL_isservice");

var _OPENSSL_die = Module["_OPENSSL_die"] = createExportWrapper("OPENSSL_die");

var _OPENSSL_rdtsc = Module["_OPENSSL_rdtsc"] = createExportWrapper("OPENSSL_rdtsc");

var _OPENSSL_instrument_bus = Module["_OPENSSL_instrument_bus"] = createExportWrapper("OPENSSL_instrument_bus");

var _OPENSSL_instrument_bus2 = Module["_OPENSSL_instrument_bus2"] = createExportWrapper("OPENSSL_instrument_bus2");

var _SCT_new_from_base64 = Module["_SCT_new_from_base64"] = createExportWrapper("SCT_new_from_base64");

var _CTLOG_new_from_base64 = Module["_CTLOG_new_from_base64"] = createExportWrapper("CTLOG_new_from_base64");

var _CTLOG_free = Module["_CTLOG_free"] = createExportWrapper("CTLOG_free");

var _SCT_new = Module["_SCT_new"] = createExportWrapper("SCT_new");

var _SCT_set_version = Module["_SCT_set_version"] = createExportWrapper("SCT_set_version");

var _SCT_set0_log_id = Module["_SCT_set0_log_id"] = createExportWrapper("SCT_set0_log_id");

var _SCT_set0_extensions = Module["_SCT_set0_extensions"] = createExportWrapper("SCT_set0_extensions");

var _o2i_SCT_signature = Module["_o2i_SCT_signature"] = createExportWrapper("o2i_SCT_signature");

var _SCT_set_timestamp = Module["_SCT_set_timestamp"] = createExportWrapper("SCT_set_timestamp");

var _SCT_set_log_entry_type = Module["_SCT_set_log_entry_type"] = createExportWrapper("SCT_set_log_entry_type");

var _SCT_free = Module["_SCT_free"] = createExportWrapper("SCT_free");

var _EVP_DecodeBlock = Module["_EVP_DecodeBlock"] = createExportWrapper("EVP_DecodeBlock");

var _CTLOG_new = Module["_CTLOG_new"] = createExportWrapper("CTLOG_new");

var _i2d_PUBKEY = Module["_i2d_PUBKEY"] = createExportWrapper("i2d_PUBKEY");

var _SHA256 = Module["_SHA256"] = createExportWrapper("SHA256");

var _CTLOG_get0_name = Module["_CTLOG_get0_name"] = createExportWrapper("CTLOG_get0_name");

var _CTLOG_get0_log_id = Module["_CTLOG_get0_log_id"] = createExportWrapper("CTLOG_get0_log_id");

var _CTLOG_get0_public_key = Module["_CTLOG_get0_public_key"] = createExportWrapper("CTLOG_get0_public_key");

var _CTLOG_STORE_get0_log_by_id = Module["_CTLOG_STORE_get0_log_by_id"] = createExportWrapper("CTLOG_STORE_get0_log_by_id");

var _SCT_get_signature_nid = Module["_SCT_get_signature_nid"] = createExportWrapper("SCT_get_signature_nid");

var _SCT_set1_signature = Module["_SCT_set1_signature"] = createExportWrapper("SCT_set1_signature");

var _o2i_SCT = Module["_o2i_SCT"] = createExportWrapper("o2i_SCT");

var _i2o_SCT_signature = Module["_i2o_SCT_signature"] = createExportWrapper("i2o_SCT_signature");

var _SCT_signature_is_complete = Module["_SCT_signature_is_complete"] = createExportWrapper("SCT_signature_is_complete");

var _i2o_SCT = Module["_i2o_SCT"] = createExportWrapper("i2o_SCT");

var _SCT_is_complete = Module["_SCT_is_complete"] = createExportWrapper("SCT_is_complete");

var _i2o_SCT_LIST = Module["_i2o_SCT_LIST"] = createExportWrapper("i2o_SCT_LIST");

var _d2i_SCT_LIST = Module["_d2i_SCT_LIST"] = createExportWrapper("d2i_SCT_LIST");

var _i2d_SCT_LIST = Module["_i2d_SCT_LIST"] = createExportWrapper("i2d_SCT_LIST");

var _CT_POLICY_EVAL_CTX_get0_cert = Module["_CT_POLICY_EVAL_CTX_get0_cert"] = createExportWrapper("CT_POLICY_EVAL_CTX_get0_cert");

var _CT_POLICY_EVAL_CTX_get0_issuer = Module["_CT_POLICY_EVAL_CTX_get0_issuer"] = createExportWrapper("CT_POLICY_EVAL_CTX_get0_issuer");

var _CT_POLICY_EVAL_CTX_get0_log_store = Module["_CT_POLICY_EVAL_CTX_get0_log_store"] = createExportWrapper("CT_POLICY_EVAL_CTX_get0_log_store");

var _CT_POLICY_EVAL_CTX_get_time = Module["_CT_POLICY_EVAL_CTX_get_time"] = createExportWrapper("CT_POLICY_EVAL_CTX_get_time");

var _SCT_validation_status_string = Module["_SCT_validation_status_string"] = createExportWrapper("SCT_validation_status_string");

var _SCT_print = Module["_SCT_print"] = createExportWrapper("SCT_print");

var _SCT_LIST_print = Module["_SCT_LIST_print"] = createExportWrapper("SCT_LIST_print");

var _SCT_set1_log_id = Module["_SCT_set1_log_id"] = createExportWrapper("SCT_set1_log_id");

var _SCT_set_signature_nid = Module["_SCT_set_signature_nid"] = createExportWrapper("SCT_set_signature_nid");

var _SCT_set1_extensions = Module["_SCT_set1_extensions"] = createExportWrapper("SCT_set1_extensions");

var _SCT_set0_signature = Module["_SCT_set0_signature"] = createExportWrapper("SCT_set0_signature");

var _SCT_get_version = Module["_SCT_get_version"] = createExportWrapper("SCT_get_version");

var _SCT_get_log_entry_type = Module["_SCT_get_log_entry_type"] = createExportWrapper("SCT_get_log_entry_type");

var _SCT_get0_log_id = Module["_SCT_get0_log_id"] = createExportWrapper("SCT_get0_log_id");

var _SCT_get_timestamp = Module["_SCT_get_timestamp"] = createExportWrapper("SCT_get_timestamp");

var _SCT_get0_extensions = Module["_SCT_get0_extensions"] = createExportWrapper("SCT_get0_extensions");

var _SCT_get0_signature = Module["_SCT_get0_signature"] = createExportWrapper("SCT_get0_signature");

var _SCT_get_source = Module["_SCT_get_source"] = createExportWrapper("SCT_get_source");

var _SCT_validate = Module["_SCT_validate"] = createExportWrapper("SCT_validate");

var _SCT_CTX_new = Module["_SCT_CTX_new"] = createExportWrapper("SCT_CTX_new");

var _X509_PUBKEY_set = Module["_X509_PUBKEY_set"] = createExportWrapper("X509_PUBKEY_set");

var _SCT_CTX_set1_pubkey = Module["_SCT_CTX_set1_pubkey"] = createExportWrapper("SCT_CTX_set1_pubkey");

var _SCT_CTX_set1_issuer_pubkey = Module["_SCT_CTX_set1_issuer_pubkey"] = createExportWrapper("SCT_CTX_set1_issuer_pubkey");

var _SCT_CTX_set_time = Module["_SCT_CTX_set_time"] = createExportWrapper("SCT_CTX_set_time");

var _SCT_CTX_set1_cert = Module["_SCT_CTX_set1_cert"] = createExportWrapper("SCT_CTX_set1_cert");

var _SCT_CTX_verify = Module["_SCT_CTX_verify"] = createExportWrapper("SCT_CTX_verify");

var _X509_PUBKEY_free = Module["_X509_PUBKEY_free"] = createExportWrapper("X509_PUBKEY_free");

var _SCT_CTX_free = Module["_SCT_CTX_free"] = createExportWrapper("SCT_CTX_free");

var _X509_get_ext_by_NID = Module["_X509_get_ext_by_NID"] = createExportWrapper("X509_get_ext_by_NID");

var _X509_delete_ext = Module["_X509_delete_ext"] = createExportWrapper("X509_delete_ext");

var _i2d_re_X509_tbs = Module["_i2d_re_X509_tbs"] = createExportWrapper("i2d_re_X509_tbs");

var _X509_EXTENSION_set_data = Module["_X509_EXTENSION_set_data"] = createExportWrapper("X509_EXTENSION_set_data");

var _SCT_CTX_set1_issuer = Module["_SCT_CTX_set1_issuer"] = createExportWrapper("SCT_CTX_set1_issuer");

var _X509_get_X509_PUBKEY = Module["_X509_get_X509_PUBKEY"] = createExportWrapper("X509_get_X509_PUBKEY");

var _i2d_X509_PUBKEY = Module["_i2d_X509_PUBKEY"] = createExportWrapper("i2d_X509_PUBKEY");

var _ossl_toupper = Module["_ossl_toupper"] = createExportWrapper("ossl_toupper");

var _OpenSSL_version_num = Module["_OpenSSL_version_num"] = createExportWrapper("OpenSSL_version_num");

var _DES_ede3_cfb64_encrypt = Module["_DES_ede3_cfb64_encrypt"] = createExportWrapper("DES_ede3_cfb64_encrypt");

var _DES_ede3_cfb_encrypt = Module["_DES_ede3_cfb_encrypt"] = createExportWrapper("DES_ede3_cfb_encrypt");

var _DES_cfb64_encrypt = Module["_DES_cfb64_encrypt"] = createExportWrapper("DES_cfb64_encrypt");

var _DES_cfb_encrypt = Module["_DES_cfb_encrypt"] = createExportWrapper("DES_cfb_encrypt");

var _DES_encrypt1 = Module["_DES_encrypt1"] = createExportWrapper("DES_encrypt1");

var _DES_encrypt2 = Module["_DES_encrypt2"] = createExportWrapper("DES_encrypt2");

var _DES_encrypt3 = Module["_DES_encrypt3"] = createExportWrapper("DES_encrypt3");

var _DES_decrypt3 = Module["_DES_decrypt3"] = createExportWrapper("DES_decrypt3");

var _DES_ncbc_encrypt = Module["_DES_ncbc_encrypt"] = createExportWrapper("DES_ncbc_encrypt");

var _DES_ede3_cbc_encrypt = Module["_DES_ede3_cbc_encrypt"] = createExportWrapper("DES_ede3_cbc_encrypt");

var _DES_ecb3_encrypt = Module["_DES_ecb3_encrypt"] = createExportWrapper("DES_ecb3_encrypt");

var _DES_options = Module["_DES_options"] = createExportWrapper("DES_options");

var _DES_ecb_encrypt = Module["_DES_ecb_encrypt"] = createExportWrapper("DES_ecb_encrypt");

var _DES_ede3_ofb64_encrypt = Module["_DES_ede3_ofb64_encrypt"] = createExportWrapper("DES_ede3_ofb64_encrypt");

var _DES_ofb64_encrypt = Module["_DES_ofb64_encrypt"] = createExportWrapper("DES_ofb64_encrypt");

var _DES_set_odd_parity = Module["_DES_set_odd_parity"] = createExportWrapper("DES_set_odd_parity");

var _DES_check_key_parity = Module["_DES_check_key_parity"] = createExportWrapper("DES_check_key_parity");

var _DES_is_weak_key = Module["_DES_is_weak_key"] = createExportWrapper("DES_is_weak_key");

var _DES_set_key = Module["_DES_set_key"] = createExportWrapper("DES_set_key");

var _DES_set_key_unchecked = Module["_DES_set_key_unchecked"] = createExportWrapper("DES_set_key_unchecked");

var _DES_set_key_checked = Module["_DES_set_key_checked"] = createExportWrapper("DES_set_key_checked");

var _DES_key_sched = Module["_DES_key_sched"] = createExportWrapper("DES_key_sched");

var _DES_xcbc_encrypt = Module["_DES_xcbc_encrypt"] = createExportWrapper("DES_xcbc_encrypt");

var _DHparams_dup = Module["_DHparams_dup"] = createExportWrapper("DHparams_dup");

var _DHparams_print = Module["_DHparams_print"] = createExportWrapper("DHparams_print");

var _X509_PUBKEY_get0_param = Module["_X509_PUBKEY_get0_param"] = createExportWrapper("X509_PUBKEY_get0_param");

var _d2i_DHxparams = Module["_d2i_DHxparams"] = createExportWrapper("d2i_DHxparams");

var _d2i_DHparams = Module["_d2i_DHparams"] = createExportWrapper("d2i_DHparams");

var _i2d_DHxparams = Module["_i2d_DHxparams"] = createExportWrapper("i2d_DHxparams");

var _i2d_DHparams = Module["_i2d_DHparams"] = createExportWrapper("i2d_DHparams");

var _X509_PUBKEY_set0_param = Module["_X509_PUBKEY_set0_param"] = createExportWrapper("X509_PUBKEY_set0_param");

var _DH_security_bits = Module["_DH_security_bits"] = createExportWrapper("DH_security_bits");

var _DH_check_pub_key_ex = Module["_DH_check_pub_key_ex"] = createExportWrapper("DH_check_pub_key_ex");

var _DH_check_ex = Module["_DH_check_ex"] = createExportWrapper("DH_check_ex");

var _EVP_PKEY_CTX_get0_peerkey = Module["_EVP_PKEY_CTX_get0_peerkey"] = createExportWrapper("EVP_PKEY_CTX_get0_peerkey");

var _d2i_int_dhx = Module["_d2i_int_dhx"] = createExportWrapper("d2i_int_dhx");

var _i2d_int_dhx = Module["_i2d_int_dhx"] = createExportWrapper("i2d_int_dhx");

var _DH_check_params_ex = Module["_DH_check_params_ex"] = createExportWrapper("DH_check_params_ex");

var _DH_check = Module["_DH_check"] = createExportWrapper("DH_check");

var _SHA512_Update = Module["_SHA512_Update"] = createExportWrapper("SHA512_Update");

var _SHA512_Final = Module["_SHA512_Final"] = createExportWrapper("SHA512_Final");

var _DH_check_pub_key = Module["_DH_check_pub_key"] = createExportWrapper("DH_check_pub_key");

var _DH_generate_parameters_ex = Module["_DH_generate_parameters_ex"] = createExportWrapper("DH_generate_parameters_ex");

var _DH_KDF_X9_42 = Module["_DH_KDF_X9_42"] = createExportWrapper("DH_KDF_X9_42");

var _DH_compute_key_padded = Module["_DH_compute_key_padded"] = createExportWrapper("DH_compute_key_padded");

var _DH_OpenSSL = Module["_DH_OpenSSL"] = createExportWrapper("DH_OpenSSL");

var _DH_set_default_method = Module["_DH_set_default_method"] = createExportWrapper("DH_set_default_method");

var _DH_get_default_method = Module["_DH_get_default_method"] = createExportWrapper("DH_get_default_method");

var _DH_set_method = Module["_DH_set_method"] = createExportWrapper("DH_set_method");

var _DH_new_method = Module["_DH_new_method"] = createExportWrapper("DH_new_method");

var _DH_up_ref = Module["_DH_up_ref"] = createExportWrapper("DH_up_ref");

var _DH_set_ex_data = Module["_DH_set_ex_data"] = createExportWrapper("DH_set_ex_data");

var _DH_get_ex_data = Module["_DH_get_ex_data"] = createExportWrapper("DH_get_ex_data");

var _DH_bits = Module["_DH_bits"] = createExportWrapper("DH_bits");

var _DH_get_length = Module["_DH_get_length"] = createExportWrapper("DH_get_length");

var _DH_set_length = Module["_DH_set_length"] = createExportWrapper("DH_set_length");

var _DH_get0_p = Module["_DH_get0_p"] = createExportWrapper("DH_get0_p");

var _DH_get0_q = Module["_DH_get0_q"] = createExportWrapper("DH_get0_q");

var _DH_get0_g = Module["_DH_get0_g"] = createExportWrapper("DH_get0_g");

var _DH_get0_priv_key = Module["_DH_get0_priv_key"] = createExportWrapper("DH_get0_priv_key");

var _DH_get0_pub_key = Module["_DH_get0_pub_key"] = createExportWrapper("DH_get0_pub_key");

var _DH_clear_flags = Module["_DH_clear_flags"] = createExportWrapper("DH_clear_flags");

var _DH_test_flags = Module["_DH_test_flags"] = createExportWrapper("DH_test_flags");

var _DH_set_flags = Module["_DH_set_flags"] = createExportWrapper("DH_set_flags");

var _DH_get0_engine = Module["_DH_get0_engine"] = createExportWrapper("DH_get0_engine");

var _DH_get_1024_160 = Module["_DH_get_1024_160"] = createExportWrapper("DH_get_1024_160");

var _DH_get_2048_224 = Module["_DH_get_2048_224"] = createExportWrapper("DH_get_2048_224");

var _DH_get_2048_256 = Module["_DH_get_2048_256"] = createExportWrapper("DH_get_2048_256");

var _DH_new_by_nid = Module["_DH_new_by_nid"] = createExportWrapper("DH_new_by_nid");

var _DH_get_nid = Module["_DH_get_nid"] = createExportWrapper("DH_get_nid");

var _d2i_DSAparams = Module["_d2i_DSAparams"] = createExportWrapper("d2i_DSAparams");

var _i2d_DSAparams = Module["_i2d_DSAparams"] = createExportWrapper("i2d_DSAparams");

var _DSA_size = Module["_DSA_size"] = createExportWrapper("DSA_size");

var _DSA_bits = Module["_DSA_bits"] = createExportWrapper("DSA_bits");

var _DSA_security_bits = Module["_DSA_security_bits"] = createExportWrapper("DSA_security_bits");

var _d2i_DSA_SIG = Module["_d2i_DSA_SIG"] = createExportWrapper("d2i_DSA_SIG");

var _DSA_SIG_get0 = Module["_DSA_SIG_get0"] = createExportWrapper("DSA_SIG_get0");

var _DSA_SIG_free = Module["_DSA_SIG_free"] = createExportWrapper("DSA_SIG_free");

var _X509_signature_dump = Module["_X509_signature_dump"] = createExportWrapper("X509_signature_dump");

var _PKCS7_SIGNER_INFO_get0_algs = Module["_PKCS7_SIGNER_INFO_get0_algs"] = createExportWrapper("PKCS7_SIGNER_INFO_get0_algs");

var _OBJ_find_sigid_by_algs = Module["_OBJ_find_sigid_by_algs"] = createExportWrapper("OBJ_find_sigid_by_algs");

var _d2i_DSAPrivateKey = Module["_d2i_DSAPrivateKey"] = createExportWrapper("d2i_DSAPrivateKey");

var _i2d_DSAPrivateKey = Module["_i2d_DSAPrivateKey"] = createExportWrapper("i2d_DSAPrivateKey");

var _i2d_DSA_SIG = Module["_i2d_DSA_SIG"] = createExportWrapper("i2d_DSA_SIG");

var _DSA_SIG_new = Module["_DSA_SIG_new"] = createExportWrapper("DSA_SIG_new");

var _DSA_SIG_set0 = Module["_DSA_SIG_set0"] = createExportWrapper("DSA_SIG_set0");

var _d2i_DSAPublicKey = Module["_d2i_DSAPublicKey"] = createExportWrapper("d2i_DSAPublicKey");

var _i2d_DSAPublicKey = Module["_i2d_DSAPublicKey"] = createExportWrapper("i2d_DSAPublicKey");

var _DSAparams_dup = Module["_DSAparams_dup"] = createExportWrapper("DSAparams_dup");

var _DSA_sign = Module["_DSA_sign"] = createExportWrapper("DSA_sign");

var _DSA_do_sign = Module["_DSA_do_sign"] = createExportWrapper("DSA_do_sign");

var _DSA_verify = Module["_DSA_verify"] = createExportWrapper("DSA_verify");

var _DSA_do_verify = Module["_DSA_do_verify"] = createExportWrapper("DSA_do_verify");

var _DSA_generate_parameters_ex = Module["_DSA_generate_parameters_ex"] = createExportWrapper("DSA_generate_parameters_ex");

var _dsa_builtin_paramgen = Module["_dsa_builtin_paramgen"] = createExportWrapper("dsa_builtin_paramgen");

var _dsa_builtin_paramgen2 = Module["_dsa_builtin_paramgen2"] = createExportWrapper("dsa_builtin_paramgen2");

var _DSA_new_method = Module["_DSA_new_method"] = createExportWrapper("DSA_new_method");

var _DSA_get_default_method = Module["_DSA_get_default_method"] = createExportWrapper("DSA_get_default_method");

var _DSA_set_method = Module["_DSA_set_method"] = createExportWrapper("DSA_set_method");

var _DSA_get_method = Module["_DSA_get_method"] = createExportWrapper("DSA_get_method");

var _DSA_up_ref = Module["_DSA_up_ref"] = createExportWrapper("DSA_up_ref");

var _DSA_set_ex_data = Module["_DSA_set_ex_data"] = createExportWrapper("DSA_set_ex_data");

var _DSA_get_ex_data = Module["_DSA_get_ex_data"] = createExportWrapper("DSA_get_ex_data");

var _DSA_dup_DH = Module["_DSA_dup_DH"] = createExportWrapper("DSA_dup_DH");

var _DSA_get0_p = Module["_DSA_get0_p"] = createExportWrapper("DSA_get0_p");

var _DSA_get0_q = Module["_DSA_get0_q"] = createExportWrapper("DSA_get0_q");

var _DSA_get0_g = Module["_DSA_get0_g"] = createExportWrapper("DSA_get0_g");

var _DSA_get0_pub_key = Module["_DSA_get0_pub_key"] = createExportWrapper("DSA_get0_pub_key");

var _DSA_get0_priv_key = Module["_DSA_get0_priv_key"] = createExportWrapper("DSA_get0_priv_key");

var _DSA_clear_flags = Module["_DSA_clear_flags"] = createExportWrapper("DSA_clear_flags");

var _DSA_test_flags = Module["_DSA_test_flags"] = createExportWrapper("DSA_test_flags");

var _DSA_set_flags = Module["_DSA_set_flags"] = createExportWrapper("DSA_set_flags");

var _DSA_get0_engine = Module["_DSA_get0_engine"] = createExportWrapper("DSA_get0_engine");

var _DSA_set_default_method = Module["_DSA_set_default_method"] = createExportWrapper("DSA_set_default_method");

var _DSA_OpenSSL = Module["_DSA_OpenSSL"] = createExportWrapper("DSA_OpenSSL");

var _DSA_sign_setup = Module["_DSA_sign_setup"] = createExportWrapper("DSA_sign_setup");

var _DSO_new = Module["_DSO_new"] = createExportWrapper("DSO_new");

var _DSO_METHOD_openssl = Module["_DSO_METHOD_openssl"] = createExportWrapper("DSO_METHOD_openssl");

var _DSO_flags = Module["_DSO_flags"] = createExportWrapper("DSO_flags");

var _DSO_up_ref = Module["_DSO_up_ref"] = createExportWrapper("DSO_up_ref");

var _DSO_ctrl = Module["_DSO_ctrl"] = createExportWrapper("DSO_ctrl");

var _DSO_set_filename = Module["_DSO_set_filename"] = createExportWrapper("DSO_set_filename");

var _DSO_get_filename = Module["_DSO_get_filename"] = createExportWrapper("DSO_get_filename");

var _DSO_merge = Module["_DSO_merge"] = createExportWrapper("DSO_merge");

var _DSO_convert_filename = Module["_DSO_convert_filename"] = createExportWrapper("DSO_convert_filename");

var _DSO_pathbyaddr = Module["_DSO_pathbyaddr"] = createExportWrapper("DSO_pathbyaddr");

var _DSO_dsobyaddr = Module["_DSO_dsobyaddr"] = createExportWrapper("DSO_dsobyaddr");

var _DSO_global_lookup = Module["_DSO_global_lookup"] = createExportWrapper("DSO_global_lookup");

var _ED25519_sign = Module["_ED25519_sign"] = createExportWrapper("ED25519_sign");

var _ED25519_verify = Module["_ED25519_verify"] = createExportWrapper("ED25519_verify");

var _ED25519_public_from_private = Module["_ED25519_public_from_private"] = createExportWrapper("ED25519_public_from_private");

var _X25519 = Module["_X25519"] = createExportWrapper("X25519");

var _X25519_public_from_private = Module["_X25519_public_from_private"] = createExportWrapper("X25519_public_from_private");

var _gf_mul = Module["_gf_mul"] = createExportWrapper("gf_mul");

var _gf_mulw_unsigned = Module["_gf_mulw_unsigned"] = createExportWrapper("gf_mulw_unsigned");

var _gf_sqr = Module["_gf_sqr"] = createExportWrapper("gf_sqr");

var _curve448_point_double = Module["_curve448_point_double"] = createExportWrapper("curve448_point_double");

var _curve448_point_eq = Module["_curve448_point_eq"] = createExportWrapper("curve448_point_eq");

var _curve448_point_valid = Module["_curve448_point_valid"] = createExportWrapper("curve448_point_valid");

var _curve448_precomputed_scalarmul = Module["_curve448_precomputed_scalarmul"] = createExportWrapper("curve448_precomputed_scalarmul");

var _curve448_point_mul_by_ratio_and_encode_like_eddsa = Module["_curve448_point_mul_by_ratio_and_encode_like_eddsa"] = createExportWrapper("curve448_point_mul_by_ratio_and_encode_like_eddsa");

var _curve448_point_destroy = Module["_curve448_point_destroy"] = createExportWrapper("curve448_point_destroy");

var _curve448_point_decode_like_eddsa_and_mul_by_ratio = Module["_curve448_point_decode_like_eddsa_and_mul_by_ratio"] = createExportWrapper("curve448_point_decode_like_eddsa_and_mul_by_ratio");

var _x448_int = Module["_x448_int"] = createExportWrapper("x448_int");

var _curve448_point_mul_by_ratio_and_encode_like_x448 = Module["_curve448_point_mul_by_ratio_and_encode_like_x448"] = createExportWrapper("curve448_point_mul_by_ratio_and_encode_like_x448");

var _x448_derive_public_key = Module["_x448_derive_public_key"] = createExportWrapper("x448_derive_public_key");

var _curve448_base_double_scalarmul_non_secret = Module["_curve448_base_double_scalarmul_non_secret"] = createExportWrapper("curve448_base_double_scalarmul_non_secret");

var _X448 = Module["_X448"] = createExportWrapper("X448");

var _X448_public_from_private = Module["_X448_public_from_private"] = createExportWrapper("X448_public_from_private");

var _c448_ed448_convert_private_key_to_x448 = Module["_c448_ed448_convert_private_key_to_x448"] = createExportWrapper("c448_ed448_convert_private_key_to_x448");

var _c448_ed448_derive_public_key = Module["_c448_ed448_derive_public_key"] = createExportWrapper("c448_ed448_derive_public_key");

var _c448_ed448_sign = Module["_c448_ed448_sign"] = createExportWrapper("c448_ed448_sign");

var _c448_ed448_sign_prehash = Module["_c448_ed448_sign_prehash"] = createExportWrapper("c448_ed448_sign_prehash");

var _c448_ed448_verify = Module["_c448_ed448_verify"] = createExportWrapper("c448_ed448_verify");

var _c448_ed448_verify_prehash = Module["_c448_ed448_verify_prehash"] = createExportWrapper("c448_ed448_verify_prehash");

var _ED448_sign = Module["_ED448_sign"] = createExportWrapper("ED448_sign");

var _ED448_verify = Module["_ED448_verify"] = createExportWrapper("ED448_verify");

var _ED448ph_sign = Module["_ED448ph_sign"] = createExportWrapper("ED448ph_sign");

var _ED448ph_verify = Module["_ED448ph_verify"] = createExportWrapper("ED448ph_verify");

var _ED448_public_from_private = Module["_ED448_public_from_private"] = createExportWrapper("ED448_public_from_private");

var _gf_serialize = Module["_gf_serialize"] = createExportWrapper("gf_serialize");

var _gf_strong_reduce = Module["_gf_strong_reduce"] = createExportWrapper("gf_strong_reduce");

var _gf_hibit = Module["_gf_hibit"] = createExportWrapper("gf_hibit");

var _gf_add = Module["_gf_add"] = createExportWrapper("gf_add");

var _gf_lobit = Module["_gf_lobit"] = createExportWrapper("gf_lobit");

var _gf_deserialize = Module["_gf_deserialize"] = createExportWrapper("gf_deserialize");

var _gf_sub = Module["_gf_sub"] = createExportWrapper("gf_sub");

var _gf_eq = Module["_gf_eq"] = createExportWrapper("gf_eq");

var _gf_isr = Module["_gf_isr"] = createExportWrapper("gf_isr");

var _curve448_scalar_mul = Module["_curve448_scalar_mul"] = createExportWrapper("curve448_scalar_mul");

var _curve448_scalar_sub = Module["_curve448_scalar_sub"] = createExportWrapper("curve448_scalar_sub");

var _curve448_scalar_add = Module["_curve448_scalar_add"] = createExportWrapper("curve448_scalar_add");

var _curve448_scalar_decode = Module["_curve448_scalar_decode"] = createExportWrapper("curve448_scalar_decode");

var _curve448_scalar_destroy = Module["_curve448_scalar_destroy"] = createExportWrapper("curve448_scalar_destroy");

var _curve448_scalar_decode_long = Module["_curve448_scalar_decode_long"] = createExportWrapper("curve448_scalar_decode_long");

var _curve448_scalar_encode = Module["_curve448_scalar_encode"] = createExportWrapper("curve448_scalar_encode");

var _curve448_scalar_halve = Module["_curve448_scalar_halve"] = createExportWrapper("curve448_scalar_halve");

var _ec_GF2m_simple_set_compressed_coordinates = Module["_ec_GF2m_simple_set_compressed_coordinates"] = createExportWrapper("ec_GF2m_simple_set_compressed_coordinates");

var _ec_GF2m_simple_point2oct = Module["_ec_GF2m_simple_point2oct"] = createExportWrapper("ec_GF2m_simple_point2oct");

var _ec_GF2m_simple_oct2point = Module["_ec_GF2m_simple_oct2point"] = createExportWrapper("ec_GF2m_simple_oct2point");

var _ec_GF2m_simple_group_init = Module["_ec_GF2m_simple_group_init"] = createExportWrapper("ec_GF2m_simple_group_init");

var _ec_GF2m_simple_group_finish = Module["_ec_GF2m_simple_group_finish"] = createExportWrapper("ec_GF2m_simple_group_finish");

var _ec_GF2m_simple_group_clear_finish = Module["_ec_GF2m_simple_group_clear_finish"] = createExportWrapper("ec_GF2m_simple_group_clear_finish");

var _ec_GF2m_simple_group_copy = Module["_ec_GF2m_simple_group_copy"] = createExportWrapper("ec_GF2m_simple_group_copy");

var _ec_GF2m_simple_group_set_curve = Module["_ec_GF2m_simple_group_set_curve"] = createExportWrapper("ec_GF2m_simple_group_set_curve");

var _ec_GF2m_simple_group_get_curve = Module["_ec_GF2m_simple_group_get_curve"] = createExportWrapper("ec_GF2m_simple_group_get_curve");

var _ec_GF2m_simple_group_get_degree = Module["_ec_GF2m_simple_group_get_degree"] = createExportWrapper("ec_GF2m_simple_group_get_degree");

var _ec_GF2m_simple_group_check_discriminant = Module["_ec_GF2m_simple_group_check_discriminant"] = createExportWrapper("ec_GF2m_simple_group_check_discriminant");

var _ec_GF2m_simple_point_init = Module["_ec_GF2m_simple_point_init"] = createExportWrapper("ec_GF2m_simple_point_init");

var _ec_GF2m_simple_point_finish = Module["_ec_GF2m_simple_point_finish"] = createExportWrapper("ec_GF2m_simple_point_finish");

var _ec_GF2m_simple_point_clear_finish = Module["_ec_GF2m_simple_point_clear_finish"] = createExportWrapper("ec_GF2m_simple_point_clear_finish");

var _ec_GF2m_simple_point_copy = Module["_ec_GF2m_simple_point_copy"] = createExportWrapper("ec_GF2m_simple_point_copy");

var _ec_GF2m_simple_point_set_to_infinity = Module["_ec_GF2m_simple_point_set_to_infinity"] = createExportWrapper("ec_GF2m_simple_point_set_to_infinity");

var _ec_GF2m_simple_point_set_affine_coordinates = Module["_ec_GF2m_simple_point_set_affine_coordinates"] = createExportWrapper("ec_GF2m_simple_point_set_affine_coordinates");

var _ec_GF2m_simple_point_get_affine_coordinates = Module["_ec_GF2m_simple_point_get_affine_coordinates"] = createExportWrapper("ec_GF2m_simple_point_get_affine_coordinates");

var _ec_GF2m_simple_add = Module["_ec_GF2m_simple_add"] = createExportWrapper("ec_GF2m_simple_add");

var _ec_GF2m_simple_dbl = Module["_ec_GF2m_simple_dbl"] = createExportWrapper("ec_GF2m_simple_dbl");

var _ec_GF2m_simple_invert = Module["_ec_GF2m_simple_invert"] = createExportWrapper("ec_GF2m_simple_invert");

var _ec_GF2m_simple_is_at_infinity = Module["_ec_GF2m_simple_is_at_infinity"] = createExportWrapper("ec_GF2m_simple_is_at_infinity");

var _ec_GF2m_simple_is_on_curve = Module["_ec_GF2m_simple_is_on_curve"] = createExportWrapper("ec_GF2m_simple_is_on_curve");

var _ec_GF2m_simple_cmp = Module["_ec_GF2m_simple_cmp"] = createExportWrapper("ec_GF2m_simple_cmp");

var _ec_GF2m_simple_make_affine = Module["_ec_GF2m_simple_make_affine"] = createExportWrapper("ec_GF2m_simple_make_affine");

var _ec_GF2m_simple_points_make_affine = Module["_ec_GF2m_simple_points_make_affine"] = createExportWrapper("ec_GF2m_simple_points_make_affine");

var _ec_GF2m_simple_field_mul = Module["_ec_GF2m_simple_field_mul"] = createExportWrapper("ec_GF2m_simple_field_mul");

var _ec_GF2m_simple_field_sqr = Module["_ec_GF2m_simple_field_sqr"] = createExportWrapper("ec_GF2m_simple_field_sqr");

var _ec_GF2m_simple_field_div = Module["_ec_GF2m_simple_field_div"] = createExportWrapper("ec_GF2m_simple_field_div");

var _EC_GF2m_simple_method = Module["_EC_GF2m_simple_method"] = createExportWrapper("EC_GF2m_simple_method");

var _EC_KEY_print = Module["_EC_KEY_print"] = createExportWrapper("EC_KEY_print");

var _ECParameters_print = Module["_ECParameters_print"] = createExportWrapper("ECParameters_print");

var _o2i_ECPublicKey = Module["_o2i_ECPublicKey"] = createExportWrapper("o2i_ECPublicKey");

var _i2o_ECPublicKey = Module["_i2o_ECPublicKey"] = createExportWrapper("i2o_ECPublicKey");

var _EC_POINT_cmp = Module["_EC_POINT_cmp"] = createExportWrapper("EC_POINT_cmp");

var _d2i_ECPrivateKey = Module["_d2i_ECPrivateKey"] = createExportWrapper("d2i_ECPrivateKey");

var _EC_KEY_get_enc_flags = Module["_EC_KEY_get_enc_flags"] = createExportWrapper("EC_KEY_get_enc_flags");

var _EC_KEY_set_enc_flags = Module["_EC_KEY_set_enc_flags"] = createExportWrapper("EC_KEY_set_enc_flags");

var _i2d_ECPrivateKey = Module["_i2d_ECPrivateKey"] = createExportWrapper("i2d_ECPrivateKey");

var _ECDSA_size = Module["_ECDSA_size"] = createExportWrapper("ECDSA_size");

var _EC_GROUP_order_bits = Module["_EC_GROUP_order_bits"] = createExportWrapper("EC_GROUP_order_bits");

var _d2i_ECParameters = Module["_d2i_ECParameters"] = createExportWrapper("d2i_ECParameters");

var _i2d_ECParameters = Module["_i2d_ECParameters"] = createExportWrapper("i2d_ECParameters");

var _EC_GROUP_dup = Module["_EC_GROUP_dup"] = createExportWrapper("EC_GROUP_dup");

var _EC_GROUP_cmp = Module["_EC_GROUP_cmp"] = createExportWrapper("EC_GROUP_cmp");

var _EVP_PKEY_set1_EC_KEY = Module["_EVP_PKEY_set1_EC_KEY"] = createExportWrapper("EVP_PKEY_set1_EC_KEY");

var _OBJ_find_sigid_algs = Module["_OBJ_find_sigid_algs"] = createExportWrapper("OBJ_find_sigid_algs");

var _EC_KEY_oct2key = Module["_EC_KEY_oct2key"] = createExportWrapper("EC_KEY_oct2key");

var _EC_KEY_key2buf = Module["_EC_KEY_key2buf"] = createExportWrapper("EC_KEY_key2buf");

var _EC_GROUP_check = Module["_EC_GROUP_check"] = createExportWrapper("EC_GROUP_check");

var _EC_KEY_priv2buf = Module["_EC_KEY_priv2buf"] = createExportWrapper("EC_KEY_priv2buf");

var _ECPKParameters_print = Module["_ECPKParameters_print"] = createExportWrapper("ECPKParameters_print");

var _EC_GROUP_get_asn1_flag = Module["_EC_GROUP_get_asn1_flag"] = createExportWrapper("EC_GROUP_get_asn1_flag");

var _OBJ_length = Module["_OBJ_length"] = createExportWrapper("OBJ_length");

var _EC_GROUP_get_basis_type = Module["_EC_GROUP_get_basis_type"] = createExportWrapper("EC_GROUP_get_basis_type");

var _EC_GROUP_get_trinomial_basis = Module["_EC_GROUP_get_trinomial_basis"] = createExportWrapper("EC_GROUP_get_trinomial_basis");

var _EC_GROUP_get_pentanomial_basis = Module["_EC_GROUP_get_pentanomial_basis"] = createExportWrapper("EC_GROUP_get_pentanomial_basis");

var _X9_62_PENTANOMIAL_new = Module["_X9_62_PENTANOMIAL_new"] = createExportWrapper("X9_62_PENTANOMIAL_new");

var _X9_62_PENTANOMIAL_free = Module["_X9_62_PENTANOMIAL_free"] = createExportWrapper("X9_62_PENTANOMIAL_free");

var _X9_62_CHARACTERISTIC_TWO_new = Module["_X9_62_CHARACTERISTIC_TWO_new"] = createExportWrapper("X9_62_CHARACTERISTIC_TWO_new");

var _X9_62_CHARACTERISTIC_TWO_free = Module["_X9_62_CHARACTERISTIC_TWO_free"] = createExportWrapper("X9_62_CHARACTERISTIC_TWO_free");

var _ECPARAMETERS_new = Module["_ECPARAMETERS_new"] = createExportWrapper("ECPARAMETERS_new");

var _ECPARAMETERS_free = Module["_ECPARAMETERS_free"] = createExportWrapper("ECPARAMETERS_free");

var _d2i_ECPKPARAMETERS = Module["_d2i_ECPKPARAMETERS"] = createExportWrapper("d2i_ECPKPARAMETERS");

var _i2d_ECPKPARAMETERS = Module["_i2d_ECPKPARAMETERS"] = createExportWrapper("i2d_ECPKPARAMETERS");

var _ECPKPARAMETERS_new = Module["_ECPKPARAMETERS_new"] = createExportWrapper("ECPKPARAMETERS_new");

var _ECPKPARAMETERS_free = Module["_ECPKPARAMETERS_free"] = createExportWrapper("ECPKPARAMETERS_free");

var _d2i_EC_PRIVATEKEY = Module["_d2i_EC_PRIVATEKEY"] = createExportWrapper("d2i_EC_PRIVATEKEY");

var _i2d_EC_PRIVATEKEY = Module["_i2d_EC_PRIVATEKEY"] = createExportWrapper("i2d_EC_PRIVATEKEY");

var _EC_PRIVATEKEY_new = Module["_EC_PRIVATEKEY_new"] = createExportWrapper("EC_PRIVATEKEY_new");

var _EC_PRIVATEKEY_free = Module["_EC_PRIVATEKEY_free"] = createExportWrapper("EC_PRIVATEKEY_free");

var _EC_GROUP_get_ecparameters = Module["_EC_GROUP_get_ecparameters"] = createExportWrapper("EC_GROUP_get_ecparameters");

var _EC_GROUP_get_ecpkparameters = Module["_EC_GROUP_get_ecpkparameters"] = createExportWrapper("EC_GROUP_get_ecpkparameters");

var _EC_GROUP_new_from_ecparameters = Module["_EC_GROUP_new_from_ecparameters"] = createExportWrapper("EC_GROUP_new_from_ecparameters");

var _EC_GROUP_new_from_ecpkparameters = Module["_EC_GROUP_new_from_ecpkparameters"] = createExportWrapper("EC_GROUP_new_from_ecpkparameters");

var _d2i_ECPKParameters = Module["_d2i_ECPKParameters"] = createExportWrapper("d2i_ECPKParameters");

var _i2d_ECPKParameters = Module["_i2d_ECPKParameters"] = createExportWrapper("i2d_ECPKParameters");

var _EC_GROUP_get_curve = Module["_EC_GROUP_get_curve"] = createExportWrapper("EC_GROUP_get_curve");

var _EC_GROUP_get_degree = Module["_EC_GROUP_get_degree"] = createExportWrapper("EC_GROUP_get_degree");

var _EC_GROUP_get0_generator = Module["_EC_GROUP_get0_generator"] = createExportWrapper("EC_GROUP_get0_generator");

var _EC_GROUP_get_point_conversion_form = Module["_EC_GROUP_get_point_conversion_form"] = createExportWrapper("EC_GROUP_get_point_conversion_form");

var _EC_POINT_point2buf = Module["_EC_POINT_point2buf"] = createExportWrapper("EC_POINT_point2buf");

var _EC_GROUP_get0_order = Module["_EC_GROUP_get0_order"] = createExportWrapper("EC_GROUP_get0_order");

var _EC_GROUP_get0_cofactor = Module["_EC_GROUP_get0_cofactor"] = createExportWrapper("EC_GROUP_get0_cofactor");

var _EC_GROUP_new_curve_GF2m = Module["_EC_GROUP_new_curve_GF2m"] = createExportWrapper("EC_GROUP_new_curve_GF2m");

var _EC_GROUP_new_curve_GFp = Module["_EC_GROUP_new_curve_GFp"] = createExportWrapper("EC_GROUP_new_curve_GFp");

var _EC_POINT_oct2point = Module["_EC_POINT_oct2point"] = createExportWrapper("EC_POINT_oct2point");

var _EC_GROUP_set_generator = Module["_EC_GROUP_set_generator"] = createExportWrapper("EC_GROUP_set_generator");

var _EC_GROUP_set_seed = Module["_EC_GROUP_set_seed"] = createExportWrapper("EC_GROUP_set_seed");

var _ec_curve_nid_from_params = Module["_ec_curve_nid_from_params"] = createExportWrapper("ec_curve_nid_from_params");

var _EC_KEY_oct2priv = Module["_EC_KEY_oct2priv"] = createExportWrapper("EC_KEY_oct2priv");

var _EC_POINT_clear_free = Module["_EC_POINT_clear_free"] = createExportWrapper("EC_POINT_clear_free");

var _EC_POINT_point2oct = Module["_EC_POINT_point2oct"] = createExportWrapper("EC_POINT_point2oct");

var _d2i_ECDSA_SIG = Module["_d2i_ECDSA_SIG"] = createExportWrapper("d2i_ECDSA_SIG");

var _i2d_ECDSA_SIG = Module["_i2d_ECDSA_SIG"] = createExportWrapper("i2d_ECDSA_SIG");

var _ECDSA_SIG_new = Module["_ECDSA_SIG_new"] = createExportWrapper("ECDSA_SIG_new");

var _ECDSA_SIG_free = Module["_ECDSA_SIG_free"] = createExportWrapper("ECDSA_SIG_free");

var _ECDSA_SIG_get0 = Module["_ECDSA_SIG_get0"] = createExportWrapper("ECDSA_SIG_get0");

var _ECDSA_SIG_get0_r = Module["_ECDSA_SIG_get0_r"] = createExportWrapper("ECDSA_SIG_get0_r");

var _ECDSA_SIG_get0_s = Module["_ECDSA_SIG_get0_s"] = createExportWrapper("ECDSA_SIG_get0_s");

var _ECDSA_SIG_set0 = Module["_ECDSA_SIG_set0"] = createExportWrapper("ECDSA_SIG_set0");

var _EC_GROUP_check_discriminant = Module["_EC_GROUP_check_discriminant"] = createExportWrapper("EC_GROUP_check_discriminant");

var _EC_POINT_is_on_curve = Module["_EC_POINT_is_on_curve"] = createExportWrapper("EC_POINT_is_on_curve");

var _EC_POINT_is_at_infinity = Module["_EC_POINT_is_at_infinity"] = createExportWrapper("EC_POINT_is_at_infinity");

var _EC_GROUP_set_curve_name = Module["_EC_GROUP_set_curve_name"] = createExportWrapper("EC_GROUP_set_curve_name");

var _EC_POINT_set_affine_coordinates = Module["_EC_POINT_set_affine_coordinates"] = createExportWrapper("EC_POINT_set_affine_coordinates");

var _EC_curve_nid2nist = Module["_EC_curve_nid2nist"] = createExportWrapper("EC_curve_nid2nist");

var _EC_GROUP_get_seed_len = Module["_EC_GROUP_get_seed_len"] = createExportWrapper("EC_GROUP_get_seed_len");

var _EC_GROUP_get0_seed = Module["_EC_GROUP_get0_seed"] = createExportWrapper("EC_GROUP_get0_seed");

var _EC_POINT_get_affine_coordinates = Module["_EC_POINT_get_affine_coordinates"] = createExportWrapper("EC_POINT_get_affine_coordinates");

var _EC_GROUP_get_order = Module["_EC_GROUP_get_order"] = createExportWrapper("EC_GROUP_get_order");

var _EC_GFp_nist_method = Module["_EC_GFp_nist_method"] = createExportWrapper("EC_GFp_nist_method");

var _EC_GFp_mont_method = Module["_EC_GFp_mont_method"] = createExportWrapper("EC_GFp_mont_method");

var _EC_GROUP_new = Module["_EC_GROUP_new"] = createExportWrapper("EC_GROUP_new");

var _EC_GROUP_set_curve = Module["_EC_GROUP_set_curve"] = createExportWrapper("EC_GROUP_set_curve");

var _EC_GROUP_clear_free = Module["_EC_GROUP_clear_free"] = createExportWrapper("EC_GROUP_clear_free");

var _EC_POINT_copy = Module["_EC_POINT_copy"] = createExportWrapper("EC_POINT_copy");

var _EC_POINT_set_to_infinity = Module["_EC_POINT_set_to_infinity"] = createExportWrapper("EC_POINT_set_to_infinity");

var _EC_POINT_make_affine = Module["_EC_POINT_make_affine"] = createExportWrapper("EC_POINT_make_affine");

var _ec_wNAF_mul = Module["_ec_wNAF_mul"] = createExportWrapper("ec_wNAF_mul");

var _ec_scalar_mul_ladder = Module["_ec_scalar_mul_ladder"] = createExportWrapper("ec_scalar_mul_ladder");

var _EC_POINT_add = Module["_EC_POINT_add"] = createExportWrapper("EC_POINT_add");

var _EC_POINT_invert = Module["_EC_POINT_invert"] = createExportWrapper("EC_POINT_invert");

var _ec_group_simple_order_bits = Module["_ec_group_simple_order_bits"] = createExportWrapper("ec_group_simple_order_bits");

var _ec_key_simple_priv2oct = Module["_ec_key_simple_priv2oct"] = createExportWrapper("ec_key_simple_priv2oct");

var _ec_key_simple_oct2priv = Module["_ec_key_simple_oct2priv"] = createExportWrapper("ec_key_simple_oct2priv");

var _ec_key_simple_generate_key = Module["_ec_key_simple_generate_key"] = createExportWrapper("ec_key_simple_generate_key");

var _ec_key_simple_check_key = Module["_ec_key_simple_check_key"] = createExportWrapper("ec_key_simple_check_key");

var _ec_key_simple_generate_public_key = Module["_ec_key_simple_generate_public_key"] = createExportWrapper("ec_key_simple_generate_public_key");

var _ecdh_simple_compute_key = Module["_ecdh_simple_compute_key"] = createExportWrapper("ecdh_simple_compute_key");

var _EC_KEY_new_method = Module["_EC_KEY_new_method"] = createExportWrapper("EC_KEY_new_method");

var _EC_KEY_copy = Module["_EC_KEY_copy"] = createExportWrapper("EC_KEY_copy");

var _EC_GROUP_copy = Module["_EC_GROUP_copy"] = createExportWrapper("EC_GROUP_copy");

var _EC_KEY_dup = Module["_EC_KEY_dup"] = createExportWrapper("EC_KEY_dup");

var _EC_KEY_up_ref = Module["_EC_KEY_up_ref"] = createExportWrapper("EC_KEY_up_ref");

var _EC_KEY_get0_engine = Module["_EC_KEY_get0_engine"] = createExportWrapper("EC_KEY_get0_engine");

var _ossl_ec_key_gen = Module["_ossl_ec_key_gen"] = createExportWrapper("ossl_ec_key_gen");

var _EC_KEY_set_public_key_affine_coordinates = Module["_EC_KEY_set_public_key_affine_coordinates"] = createExportWrapper("EC_KEY_set_public_key_affine_coordinates");

var _EC_POINT_dup = Module["_EC_POINT_dup"] = createExportWrapper("EC_POINT_dup");

var _EC_KEY_set_conv_form = Module["_EC_KEY_set_conv_form"] = createExportWrapper("EC_KEY_set_conv_form");

var _EC_KEY_set_asn1_flag = Module["_EC_KEY_set_asn1_flag"] = createExportWrapper("EC_KEY_set_asn1_flag");

var _EC_KEY_precompute_mult = Module["_EC_KEY_precompute_mult"] = createExportWrapper("EC_KEY_precompute_mult");

var _EC_GROUP_precompute_mult = Module["_EC_GROUP_precompute_mult"] = createExportWrapper("EC_GROUP_precompute_mult");

var _EC_KEY_get_flags = Module["_EC_KEY_get_flags"] = createExportWrapper("EC_KEY_get_flags");

var _EC_KEY_set_flags = Module["_EC_KEY_set_flags"] = createExportWrapper("EC_KEY_set_flags");

var _EC_KEY_clear_flags = Module["_EC_KEY_clear_flags"] = createExportWrapper("EC_KEY_clear_flags");

var _EC_KEY_decoded_from_explicit_params = Module["_EC_KEY_decoded_from_explicit_params"] = createExportWrapper("EC_KEY_decoded_from_explicit_params");

var _EC_KEY_priv2oct = Module["_EC_KEY_priv2oct"] = createExportWrapper("EC_KEY_priv2oct");

var _EC_KEY_OpenSSL = Module["_EC_KEY_OpenSSL"] = createExportWrapper("EC_KEY_OpenSSL");

var _EC_KEY_get_default_method = Module["_EC_KEY_get_default_method"] = createExportWrapper("EC_KEY_get_default_method");

var _EC_KEY_set_default_method = Module["_EC_KEY_set_default_method"] = createExportWrapper("EC_KEY_set_default_method");

var _EC_KEY_get_method = Module["_EC_KEY_get_method"] = createExportWrapper("EC_KEY_get_method");

var _EC_KEY_set_method = Module["_EC_KEY_set_method"] = createExportWrapper("EC_KEY_set_method");

var _ECDH_compute_key = Module["_ECDH_compute_key"] = createExportWrapper("ECDH_compute_key");

var _EC_KEY_METHOD_new = Module["_EC_KEY_METHOD_new"] = createExportWrapper("EC_KEY_METHOD_new");

var _EC_KEY_METHOD_free = Module["_EC_KEY_METHOD_free"] = createExportWrapper("EC_KEY_METHOD_free");

var _EC_KEY_METHOD_set_init = Module["_EC_KEY_METHOD_set_init"] = createExportWrapper("EC_KEY_METHOD_set_init");

var _EC_KEY_METHOD_set_keygen = Module["_EC_KEY_METHOD_set_keygen"] = createExportWrapper("EC_KEY_METHOD_set_keygen");

var _EC_KEY_METHOD_set_compute_key = Module["_EC_KEY_METHOD_set_compute_key"] = createExportWrapper("EC_KEY_METHOD_set_compute_key");

var _EC_KEY_METHOD_set_sign = Module["_EC_KEY_METHOD_set_sign"] = createExportWrapper("EC_KEY_METHOD_set_sign");

var _EC_KEY_METHOD_set_verify = Module["_EC_KEY_METHOD_set_verify"] = createExportWrapper("EC_KEY_METHOD_set_verify");

var _EC_KEY_METHOD_get_init = Module["_EC_KEY_METHOD_get_init"] = createExportWrapper("EC_KEY_METHOD_get_init");

var _EC_KEY_METHOD_get_keygen = Module["_EC_KEY_METHOD_get_keygen"] = createExportWrapper("EC_KEY_METHOD_get_keygen");

var _EC_KEY_METHOD_get_compute_key = Module["_EC_KEY_METHOD_get_compute_key"] = createExportWrapper("EC_KEY_METHOD_get_compute_key");

var _EC_KEY_METHOD_get_sign = Module["_EC_KEY_METHOD_get_sign"] = createExportWrapper("EC_KEY_METHOD_get_sign");

var _EC_KEY_METHOD_get_verify = Module["_EC_KEY_METHOD_get_verify"] = createExportWrapper("EC_KEY_METHOD_get_verify");

var _ossl_ecdh_compute_key = Module["_ossl_ecdh_compute_key"] = createExportWrapper("ossl_ecdh_compute_key");

var _ossl_ecdsa_sign = Module["_ossl_ecdsa_sign"] = createExportWrapper("ossl_ecdsa_sign");

var _ossl_ecdsa_sign_setup = Module["_ossl_ecdsa_sign_setup"] = createExportWrapper("ossl_ecdsa_sign_setup");

var _ossl_ecdsa_sign_sig = Module["_ossl_ecdsa_sign_sig"] = createExportWrapper("ossl_ecdsa_sign_sig");

var _ossl_ecdsa_verify = Module["_ossl_ecdsa_verify"] = createExportWrapper("ossl_ecdsa_verify");

var _ossl_ecdsa_verify_sig = Module["_ossl_ecdsa_verify_sig"] = createExportWrapper("ossl_ecdsa_verify_sig");

var _EC_pre_comp_free = Module["_EC_pre_comp_free"] = createExportWrapper("EC_pre_comp_free");

var _EC_ec_pre_comp_free = Module["_EC_ec_pre_comp_free"] = createExportWrapper("EC_ec_pre_comp_free");

var _EC_ec_pre_comp_dup = Module["_EC_ec_pre_comp_dup"] = createExportWrapper("EC_ec_pre_comp_dup");

var _EC_GROUP_get_mont_data = Module["_EC_GROUP_get_mont_data"] = createExportWrapper("EC_GROUP_get_mont_data");

var _EC_GROUP_get_cofactor = Module["_EC_GROUP_get_cofactor"] = createExportWrapper("EC_GROUP_get_cofactor");

var _EC_GROUP_set_curve_GFp = Module["_EC_GROUP_set_curve_GFp"] = createExportWrapper("EC_GROUP_set_curve_GFp");

var _EC_GROUP_get_curve_GFp = Module["_EC_GROUP_get_curve_GFp"] = createExportWrapper("EC_GROUP_get_curve_GFp");

var _EC_GROUP_set_curve_GF2m = Module["_EC_GROUP_set_curve_GF2m"] = createExportWrapper("EC_GROUP_set_curve_GF2m");

var _EC_GROUP_get_curve_GF2m = Module["_EC_GROUP_get_curve_GF2m"] = createExportWrapper("EC_GROUP_get_curve_GF2m");

var _EC_POINT_method_of = Module["_EC_POINT_method_of"] = createExportWrapper("EC_POINT_method_of");

var _EC_POINT_set_Jprojective_coordinates_GFp = Module["_EC_POINT_set_Jprojective_coordinates_GFp"] = createExportWrapper("EC_POINT_set_Jprojective_coordinates_GFp");

var _EC_POINT_get_Jprojective_coordinates_GFp = Module["_EC_POINT_get_Jprojective_coordinates_GFp"] = createExportWrapper("EC_POINT_get_Jprojective_coordinates_GFp");

var _EC_POINT_set_affine_coordinates_GF2m = Module["_EC_POINT_set_affine_coordinates_GF2m"] = createExportWrapper("EC_POINT_set_affine_coordinates_GF2m");

var _EC_POINT_get_affine_coordinates_GF2m = Module["_EC_POINT_get_affine_coordinates_GF2m"] = createExportWrapper("EC_POINT_get_affine_coordinates_GF2m");

var _EC_POINT_dbl = Module["_EC_POINT_dbl"] = createExportWrapper("EC_POINT_dbl");

var _EC_POINTs_make_affine = Module["_EC_POINTs_make_affine"] = createExportWrapper("EC_POINTs_make_affine");

var _EC_POINTs_mul = Module["_EC_POINTs_mul"] = createExportWrapper("EC_POINTs_mul");

var _ec_wNAF_precompute_mult = Module["_ec_wNAF_precompute_mult"] = createExportWrapper("ec_wNAF_precompute_mult");

var _EC_GROUP_have_precompute_mult = Module["_EC_GROUP_have_precompute_mult"] = createExportWrapper("EC_GROUP_have_precompute_mult");

var _ec_wNAF_have_precompute_mult = Module["_ec_wNAF_have_precompute_mult"] = createExportWrapper("ec_wNAF_have_precompute_mult");

var _EC_KEY_set_ex_data = Module["_EC_KEY_set_ex_data"] = createExportWrapper("EC_KEY_set_ex_data");

var _EC_KEY_get_ex_data = Module["_EC_KEY_get_ex_data"] = createExportWrapper("EC_KEY_get_ex_data");

var _ec_group_do_inverse_ord = Module["_ec_group_do_inverse_ord"] = createExportWrapper("ec_group_do_inverse_ord");

var _ec_point_blind_coordinates = Module["_ec_point_blind_coordinates"] = createExportWrapper("ec_point_blind_coordinates");

var _EC_POINT_set_compressed_coordinates = Module["_EC_POINT_set_compressed_coordinates"] = createExportWrapper("EC_POINT_set_compressed_coordinates");

var _EC_POINT_set_compressed_coordinates_GFp = Module["_EC_POINT_set_compressed_coordinates_GFp"] = createExportWrapper("EC_POINT_set_compressed_coordinates_GFp");

var _EC_POINT_set_compressed_coordinates_GF2m = Module["_EC_POINT_set_compressed_coordinates_GF2m"] = createExportWrapper("EC_POINT_set_compressed_coordinates_GF2m");

var _ec_GFp_simple_set_compressed_coordinates = Module["_ec_GFp_simple_set_compressed_coordinates"] = createExportWrapper("ec_GFp_simple_set_compressed_coordinates");

var _ec_GFp_simple_point2oct = Module["_ec_GFp_simple_point2oct"] = createExportWrapper("ec_GFp_simple_point2oct");

var _ec_GFp_simple_oct2point = Module["_ec_GFp_simple_oct2point"] = createExportWrapper("ec_GFp_simple_oct2point");

var _EC_POINT_point2bn = Module["_EC_POINT_point2bn"] = createExportWrapper("EC_POINT_point2bn");

var _EC_POINT_bn2point = Module["_EC_POINT_bn2point"] = createExportWrapper("EC_POINT_bn2point");

var _EC_POINT_point2hex = Module["_EC_POINT_point2hex"] = createExportWrapper("EC_POINT_point2hex");

var _EC_POINT_hex2point = Module["_EC_POINT_hex2point"] = createExportWrapper("EC_POINT_hex2point");

var _ecdh_KDF_X9_63 = Module["_ecdh_KDF_X9_63"] = createExportWrapper("ecdh_KDF_X9_63");

var _ECDH_KDF_X9_62 = Module["_ECDH_KDF_X9_62"] = createExportWrapper("ECDH_KDF_X9_62");

var _ECDSA_do_sign_ex = Module["_ECDSA_do_sign_ex"] = createExportWrapper("ECDSA_do_sign_ex");

var _ECDSA_do_verify = Module["_ECDSA_do_verify"] = createExportWrapper("ECDSA_do_verify");

var _ECDSA_do_sign = Module["_ECDSA_do_sign"] = createExportWrapper("ECDSA_do_sign");

var _ECDSA_sign = Module["_ECDSA_sign"] = createExportWrapper("ECDSA_sign");

var _ECDSA_sign_ex = Module["_ECDSA_sign_ex"] = createExportWrapper("ECDSA_sign_ex");

var _ECDSA_sign_setup = Module["_ECDSA_sign_setup"] = createExportWrapper("ECDSA_sign_setup");

var _ECDSA_verify = Module["_ECDSA_verify"] = createExportWrapper("ECDSA_verify");

var _ec_GFp_mont_group_init = Module["_ec_GFp_mont_group_init"] = createExportWrapper("ec_GFp_mont_group_init");

var _ec_GFp_simple_group_init = Module["_ec_GFp_simple_group_init"] = createExportWrapper("ec_GFp_simple_group_init");

var _ec_GFp_mont_group_finish = Module["_ec_GFp_mont_group_finish"] = createExportWrapper("ec_GFp_mont_group_finish");

var _ec_GFp_simple_group_finish = Module["_ec_GFp_simple_group_finish"] = createExportWrapper("ec_GFp_simple_group_finish");

var _ec_GFp_mont_group_clear_finish = Module["_ec_GFp_mont_group_clear_finish"] = createExportWrapper("ec_GFp_mont_group_clear_finish");

var _ec_GFp_simple_group_clear_finish = Module["_ec_GFp_simple_group_clear_finish"] = createExportWrapper("ec_GFp_simple_group_clear_finish");

var _ec_GFp_mont_group_copy = Module["_ec_GFp_mont_group_copy"] = createExportWrapper("ec_GFp_mont_group_copy");

var _ec_GFp_simple_group_copy = Module["_ec_GFp_simple_group_copy"] = createExportWrapper("ec_GFp_simple_group_copy");

var _ec_GFp_mont_group_set_curve = Module["_ec_GFp_mont_group_set_curve"] = createExportWrapper("ec_GFp_mont_group_set_curve");

var _ec_GFp_simple_group_set_curve = Module["_ec_GFp_simple_group_set_curve"] = createExportWrapper("ec_GFp_simple_group_set_curve");

var _ec_GFp_mont_field_mul = Module["_ec_GFp_mont_field_mul"] = createExportWrapper("ec_GFp_mont_field_mul");

var _ec_GFp_mont_field_sqr = Module["_ec_GFp_mont_field_sqr"] = createExportWrapper("ec_GFp_mont_field_sqr");

var _ec_GFp_mont_field_inv = Module["_ec_GFp_mont_field_inv"] = createExportWrapper("ec_GFp_mont_field_inv");

var _ec_GFp_mont_field_encode = Module["_ec_GFp_mont_field_encode"] = createExportWrapper("ec_GFp_mont_field_encode");

var _ec_GFp_mont_field_decode = Module["_ec_GFp_mont_field_decode"] = createExportWrapper("ec_GFp_mont_field_decode");

var _ec_GFp_mont_field_set_to_one = Module["_ec_GFp_mont_field_set_to_one"] = createExportWrapper("ec_GFp_mont_field_set_to_one");

var _ec_GFp_simple_group_get_curve = Module["_ec_GFp_simple_group_get_curve"] = createExportWrapper("ec_GFp_simple_group_get_curve");

var _ec_GFp_simple_group_get_degree = Module["_ec_GFp_simple_group_get_degree"] = createExportWrapper("ec_GFp_simple_group_get_degree");

var _ec_GFp_simple_group_check_discriminant = Module["_ec_GFp_simple_group_check_discriminant"] = createExportWrapper("ec_GFp_simple_group_check_discriminant");

var _ec_GFp_simple_point_init = Module["_ec_GFp_simple_point_init"] = createExportWrapper("ec_GFp_simple_point_init");

var _ec_GFp_simple_point_finish = Module["_ec_GFp_simple_point_finish"] = createExportWrapper("ec_GFp_simple_point_finish");

var _ec_GFp_simple_point_clear_finish = Module["_ec_GFp_simple_point_clear_finish"] = createExportWrapper("ec_GFp_simple_point_clear_finish");

var _ec_GFp_simple_point_copy = Module["_ec_GFp_simple_point_copy"] = createExportWrapper("ec_GFp_simple_point_copy");

var _ec_GFp_simple_point_set_to_infinity = Module["_ec_GFp_simple_point_set_to_infinity"] = createExportWrapper("ec_GFp_simple_point_set_to_infinity");

var _ec_GFp_simple_set_Jprojective_coordinates_GFp = Module["_ec_GFp_simple_set_Jprojective_coordinates_GFp"] = createExportWrapper("ec_GFp_simple_set_Jprojective_coordinates_GFp");

var _ec_GFp_simple_get_Jprojective_coordinates_GFp = Module["_ec_GFp_simple_get_Jprojective_coordinates_GFp"] = createExportWrapper("ec_GFp_simple_get_Jprojective_coordinates_GFp");

var _ec_GFp_simple_point_set_affine_coordinates = Module["_ec_GFp_simple_point_set_affine_coordinates"] = createExportWrapper("ec_GFp_simple_point_set_affine_coordinates");

var _ec_GFp_simple_point_get_affine_coordinates = Module["_ec_GFp_simple_point_get_affine_coordinates"] = createExportWrapper("ec_GFp_simple_point_get_affine_coordinates");

var _ec_GFp_simple_add = Module["_ec_GFp_simple_add"] = createExportWrapper("ec_GFp_simple_add");

var _ec_GFp_simple_dbl = Module["_ec_GFp_simple_dbl"] = createExportWrapper("ec_GFp_simple_dbl");

var _ec_GFp_simple_invert = Module["_ec_GFp_simple_invert"] = createExportWrapper("ec_GFp_simple_invert");

var _ec_GFp_simple_is_at_infinity = Module["_ec_GFp_simple_is_at_infinity"] = createExportWrapper("ec_GFp_simple_is_at_infinity");

var _ec_GFp_simple_is_on_curve = Module["_ec_GFp_simple_is_on_curve"] = createExportWrapper("ec_GFp_simple_is_on_curve");

var _ec_GFp_simple_cmp = Module["_ec_GFp_simple_cmp"] = createExportWrapper("ec_GFp_simple_cmp");

var _ec_GFp_simple_make_affine = Module["_ec_GFp_simple_make_affine"] = createExportWrapper("ec_GFp_simple_make_affine");

var _ec_GFp_simple_points_make_affine = Module["_ec_GFp_simple_points_make_affine"] = createExportWrapper("ec_GFp_simple_points_make_affine");

var _ec_GFp_simple_blind_coordinates = Module["_ec_GFp_simple_blind_coordinates"] = createExportWrapper("ec_GFp_simple_blind_coordinates");

var _ec_GFp_simple_ladder_pre = Module["_ec_GFp_simple_ladder_pre"] = createExportWrapper("ec_GFp_simple_ladder_pre");

var _ec_GFp_simple_ladder_step = Module["_ec_GFp_simple_ladder_step"] = createExportWrapper("ec_GFp_simple_ladder_step");

var _ec_GFp_simple_ladder_post = Module["_ec_GFp_simple_ladder_post"] = createExportWrapper("ec_GFp_simple_ladder_post");

var _ec_GFp_nist_group_copy = Module["_ec_GFp_nist_group_copy"] = createExportWrapper("ec_GFp_nist_group_copy");

var _ec_GFp_nist_group_set_curve = Module["_ec_GFp_nist_group_set_curve"] = createExportWrapper("ec_GFp_nist_group_set_curve");

var _ec_GFp_nist_field_mul = Module["_ec_GFp_nist_field_mul"] = createExportWrapper("ec_GFp_nist_field_mul");

var _ec_GFp_nist_field_sqr = Module["_ec_GFp_nist_field_sqr"] = createExportWrapper("ec_GFp_nist_field_sqr");

var _ec_GFp_simple_field_inv = Module["_ec_GFp_simple_field_inv"] = createExportWrapper("ec_GFp_simple_field_inv");

var _EC_GFp_simple_method = Module["_EC_GFp_simple_method"] = createExportWrapper("EC_GFp_simple_method");

var _ec_GFp_simple_field_mul = Module["_ec_GFp_simple_field_mul"] = createExportWrapper("ec_GFp_simple_field_mul");

var _ec_GFp_simple_field_sqr = Module["_ec_GFp_simple_field_sqr"] = createExportWrapper("ec_GFp_simple_field_sqr");

var _X509_SIG_INFO_set = Module["_X509_SIG_INFO_set"] = createExportWrapper("X509_SIG_INFO_set");

var _SHA512 = Module["_SHA512"] = createExportWrapper("SHA512");

var _EVP_md_null = Module["_EVP_md_null"] = createExportWrapper("EVP_md_null");

var _EVP_MD_CTX_pkey_ctx = Module["_EVP_MD_CTX_pkey_ctx"] = createExportWrapper("EVP_MD_CTX_pkey_ctx");

var _EVP_shake256 = Module["_EVP_shake256"] = createExportWrapper("EVP_shake256");

var _EVP_DigestFinalXOF = Module["_EVP_DigestFinalXOF"] = createExportWrapper("EVP_DigestFinalXOF");

var _err_cleanup = Module["_err_cleanup"] = createExportWrapper("err_cleanup");

var _ERR_load_ERR_strings = Module["_ERR_load_ERR_strings"] = createExportWrapper("ERR_load_ERR_strings");

var _ERR_load_strings = Module["_ERR_load_strings"] = createExportWrapper("ERR_load_strings");

var _ERR_load_strings_const = Module["_ERR_load_strings_const"] = createExportWrapper("ERR_load_strings_const");

var _ERR_unload_strings = Module["_ERR_unload_strings"] = createExportWrapper("ERR_unload_strings");

var _err_free_strings_int = Module["_err_free_strings_int"] = createExportWrapper("err_free_strings_int");

var _ERR_get_state = Module["_ERR_get_state"] = createExportWrapper("ERR_get_state");

var _ERR_get_error_line = Module["_ERR_get_error_line"] = createExportWrapper("ERR_get_error_line");

var _ERR_get_error_line_data = Module["_ERR_get_error_line_data"] = createExportWrapper("ERR_get_error_line_data");

var _ERR_peek_error_line = Module["_ERR_peek_error_line"] = createExportWrapper("ERR_peek_error_line");

var _ERR_peek_error_line_data = Module["_ERR_peek_error_line_data"] = createExportWrapper("ERR_peek_error_line_data");

var _ERR_peek_last_error_line = Module["_ERR_peek_last_error_line"] = createExportWrapper("ERR_peek_last_error_line");

var _ERR_peek_last_error_line_data = Module["_ERR_peek_last_error_line_data"] = createExportWrapper("ERR_peek_last_error_line_data");

var _ERR_lib_error_string = Module["_ERR_lib_error_string"] = createExportWrapper("ERR_lib_error_string");

var _ERR_func_error_string = Module["_ERR_func_error_string"] = createExportWrapper("ERR_func_error_string");

var _ERR_reason_error_string = Module["_ERR_reason_error_string"] = createExportWrapper("ERR_reason_error_string");

var _ERR_error_string = Module["_ERR_error_string"] = createExportWrapper("ERR_error_string");

var _err_delete_thread_state = Module["_err_delete_thread_state"] = createExportWrapper("err_delete_thread_state");

var _ERR_remove_thread_state = Module["_ERR_remove_thread_state"] = createExportWrapper("ERR_remove_thread_state");

var _ERR_remove_state = Module["_ERR_remove_state"] = createExportWrapper("ERR_remove_state");

var _err_shelve_state = Module["_err_shelve_state"] = createExportWrapper("err_shelve_state");

var _err_unshelve_state = Module["_err_unshelve_state"] = createExportWrapper("err_unshelve_state");

var _ERR_get_next_error_library = Module["_ERR_get_next_error_library"] = createExportWrapper("ERR_get_next_error_library");

var _ERR_set_error_data = Module["_ERR_set_error_data"] = createExportWrapper("ERR_set_error_data");

var _ERR_add_error_vdata = Module["_ERR_add_error_vdata"] = createExportWrapper("ERR_add_error_vdata");

var _err_clear_last_constant_time = Module["_err_clear_last_constant_time"] = createExportWrapper("err_clear_last_constant_time");

var _ERR_print_errors_cb = Module["_ERR_print_errors_cb"] = createExportWrapper("ERR_print_errors_cb");

var _ERR_print_errors = Module["_ERR_print_errors"] = createExportWrapper("ERR_print_errors");

var _EVP_EncodeInit = Module["_EVP_EncodeInit"] = createExportWrapper("EVP_EncodeInit");

var _EVP_EncodeBlock = Module["_EVP_EncodeBlock"] = createExportWrapper("EVP_EncodeBlock");

var _EVP_EncodeUpdate = Module["_EVP_EncodeUpdate"] = createExportWrapper("EVP_EncodeUpdate");

var _EVP_DecodeInit = Module["_EVP_DecodeInit"] = createExportWrapper("EVP_DecodeInit");

var _EVP_DecodeUpdate = Module["_EVP_DecodeUpdate"] = createExportWrapper("EVP_DecodeUpdate");

var _EVP_ENCODE_CTX_num = Module["_EVP_ENCODE_CTX_num"] = createExportWrapper("EVP_ENCODE_CTX_num");

var _EVP_EncodeFinal = Module["_EVP_EncodeFinal"] = createExportWrapper("EVP_EncodeFinal");

var _EVP_ENCODE_CTX_new = Module["_EVP_ENCODE_CTX_new"] = createExportWrapper("EVP_ENCODE_CTX_new");

var _EVP_ENCODE_CTX_free = Module["_EVP_ENCODE_CTX_free"] = createExportWrapper("EVP_ENCODE_CTX_free");

var _BIO_set_cipher = Module["_BIO_set_cipher"] = createExportWrapper("BIO_set_cipher");

var _EVP_CIPHER_CTX_encrypting = Module["_EVP_CIPHER_CTX_encrypting"] = createExportWrapper("EVP_CIPHER_CTX_encrypting");

var _openssl_add_all_ciphers_int = Module["_openssl_add_all_ciphers_int"] = createExportWrapper("openssl_add_all_ciphers_int");

var _openssl_add_all_digests_int = Module["_openssl_add_all_digests_int"] = createExportWrapper("openssl_add_all_digests_int");

var _EVP_MD_CTX_test_flags = Module["_EVP_MD_CTX_test_flags"] = createExportWrapper("EVP_MD_CTX_test_flags");

var _EVP_MD_CTX_clear_flags = Module["_EVP_MD_CTX_clear_flags"] = createExportWrapper("EVP_MD_CTX_clear_flags");

var _EVP_PKEY_CTX_dup = Module["_EVP_PKEY_CTX_dup"] = createExportWrapper("EVP_PKEY_CTX_dup");

var _EVP_aes_128_ecb = Module["_EVP_aes_128_ecb"] = createExportWrapper("EVP_aes_128_ecb");

var _EVP_aes_128_ofb = Module["_EVP_aes_128_ofb"] = createExportWrapper("EVP_aes_128_ofb");

var _EVP_aes_128_cfb128 = Module["_EVP_aes_128_cfb128"] = createExportWrapper("EVP_aes_128_cfb128");

var _EVP_aes_128_cfb1 = Module["_EVP_aes_128_cfb1"] = createExportWrapper("EVP_aes_128_cfb1");

var _EVP_aes_128_cfb8 = Module["_EVP_aes_128_cfb8"] = createExportWrapper("EVP_aes_128_cfb8");

var _EVP_aes_128_ctr = Module["_EVP_aes_128_ctr"] = createExportWrapper("EVP_aes_128_ctr");

var _EVP_aes_192_ecb = Module["_EVP_aes_192_ecb"] = createExportWrapper("EVP_aes_192_ecb");

var _EVP_aes_192_ofb = Module["_EVP_aes_192_ofb"] = createExportWrapper("EVP_aes_192_ofb");

var _EVP_aes_192_cfb128 = Module["_EVP_aes_192_cfb128"] = createExportWrapper("EVP_aes_192_cfb128");

var _EVP_aes_192_cfb1 = Module["_EVP_aes_192_cfb1"] = createExportWrapper("EVP_aes_192_cfb1");

var _EVP_aes_192_cfb8 = Module["_EVP_aes_192_cfb8"] = createExportWrapper("EVP_aes_192_cfb8");

var _EVP_aes_192_ctr = Module["_EVP_aes_192_ctr"] = createExportWrapper("EVP_aes_192_ctr");

var _EVP_aes_256_ecb = Module["_EVP_aes_256_ecb"] = createExportWrapper("EVP_aes_256_ecb");

var _EVP_aes_256_ofb = Module["_EVP_aes_256_ofb"] = createExportWrapper("EVP_aes_256_ofb");

var _EVP_aes_256_cfb128 = Module["_EVP_aes_256_cfb128"] = createExportWrapper("EVP_aes_256_cfb128");

var _EVP_aes_256_cfb1 = Module["_EVP_aes_256_cfb1"] = createExportWrapper("EVP_aes_256_cfb1");

var _EVP_aes_256_cfb8 = Module["_EVP_aes_256_cfb8"] = createExportWrapper("EVP_aes_256_cfb8");

var _EVP_aes_256_ctr = Module["_EVP_aes_256_ctr"] = createExportWrapper("EVP_aes_256_ctr");

var _EVP_aes_192_gcm = Module["_EVP_aes_192_gcm"] = createExportWrapper("EVP_aes_192_gcm");

var _EVP_aes_128_xts = Module["_EVP_aes_128_xts"] = createExportWrapper("EVP_aes_128_xts");

var _EVP_aes_256_xts = Module["_EVP_aes_256_xts"] = createExportWrapper("EVP_aes_256_xts");

var _EVP_aes_192_ccm = Module["_EVP_aes_192_ccm"] = createExportWrapper("EVP_aes_192_ccm");

var _EVP_aes_128_wrap_pad = Module["_EVP_aes_128_wrap_pad"] = createExportWrapper("EVP_aes_128_wrap_pad");

var _EVP_aes_192_wrap_pad = Module["_EVP_aes_192_wrap_pad"] = createExportWrapper("EVP_aes_192_wrap_pad");

var _EVP_aes_256_wrap_pad = Module["_EVP_aes_256_wrap_pad"] = createExportWrapper("EVP_aes_256_wrap_pad");

var _EVP_aes_128_ocb = Module["_EVP_aes_128_ocb"] = createExportWrapper("EVP_aes_128_ocb");

var _EVP_aes_192_ocb = Module["_EVP_aes_192_ocb"] = createExportWrapper("EVP_aes_192_ocb");

var _EVP_aes_256_ocb = Module["_EVP_aes_256_ocb"] = createExportWrapper("EVP_aes_256_ocb");

var _EVP_CIPHER_CTX_get_cipher_data = Module["_EVP_CIPHER_CTX_get_cipher_data"] = createExportWrapper("EVP_CIPHER_CTX_get_cipher_data");

var _CRYPTO_cbc128_encrypt = Module["_CRYPTO_cbc128_encrypt"] = createExportWrapper("CRYPTO_cbc128_encrypt");

var _CRYPTO_cbc128_decrypt = Module["_CRYPTO_cbc128_decrypt"] = createExportWrapper("CRYPTO_cbc128_decrypt");

var _EVP_CIPHER_CTX_iv_noconst = Module["_EVP_CIPHER_CTX_iv_noconst"] = createExportWrapper("EVP_CIPHER_CTX_iv_noconst");

var _EVP_CIPHER_CTX_num = Module["_EVP_CIPHER_CTX_num"] = createExportWrapper("EVP_CIPHER_CTX_num");

var _CRYPTO_ofb128_encrypt = Module["_CRYPTO_ofb128_encrypt"] = createExportWrapper("CRYPTO_ofb128_encrypt");

var _EVP_CIPHER_CTX_set_num = Module["_EVP_CIPHER_CTX_set_num"] = createExportWrapper("EVP_CIPHER_CTX_set_num");

var _CRYPTO_cfb128_encrypt = Module["_CRYPTO_cfb128_encrypt"] = createExportWrapper("CRYPTO_cfb128_encrypt");

var _EVP_CIPHER_CTX_test_flags = Module["_EVP_CIPHER_CTX_test_flags"] = createExportWrapper("EVP_CIPHER_CTX_test_flags");

var _CRYPTO_cfb128_1_encrypt = Module["_CRYPTO_cfb128_1_encrypt"] = createExportWrapper("CRYPTO_cfb128_1_encrypt");

var _CRYPTO_cfb128_8_encrypt = Module["_CRYPTO_cfb128_8_encrypt"] = createExportWrapper("CRYPTO_cfb128_8_encrypt");

var _EVP_CIPHER_CTX_buf_noconst = Module["_EVP_CIPHER_CTX_buf_noconst"] = createExportWrapper("EVP_CIPHER_CTX_buf_noconst");

var _CRYPTO_ctr128_encrypt_ctr32 = Module["_CRYPTO_ctr128_encrypt_ctr32"] = createExportWrapper("CRYPTO_ctr128_encrypt_ctr32");

var _CRYPTO_ctr128_encrypt = Module["_CRYPTO_ctr128_encrypt"] = createExportWrapper("CRYPTO_ctr128_encrypt");

var _CRYPTO_gcm128_init = Module["_CRYPTO_gcm128_init"] = createExportWrapper("CRYPTO_gcm128_init");

var _CRYPTO_gcm128_setiv = Module["_CRYPTO_gcm128_setiv"] = createExportWrapper("CRYPTO_gcm128_setiv");

var _CRYPTO_gcm128_aad = Module["_CRYPTO_gcm128_aad"] = createExportWrapper("CRYPTO_gcm128_aad");

var _CRYPTO_gcm128_encrypt_ctr32 = Module["_CRYPTO_gcm128_encrypt_ctr32"] = createExportWrapper("CRYPTO_gcm128_encrypt_ctr32");

var _CRYPTO_gcm128_encrypt = Module["_CRYPTO_gcm128_encrypt"] = createExportWrapper("CRYPTO_gcm128_encrypt");

var _CRYPTO_gcm128_tag = Module["_CRYPTO_gcm128_tag"] = createExportWrapper("CRYPTO_gcm128_tag");

var _CRYPTO_gcm128_decrypt_ctr32 = Module["_CRYPTO_gcm128_decrypt_ctr32"] = createExportWrapper("CRYPTO_gcm128_decrypt_ctr32");

var _CRYPTO_gcm128_decrypt = Module["_CRYPTO_gcm128_decrypt"] = createExportWrapper("CRYPTO_gcm128_decrypt");

var _CRYPTO_gcm128_finish = Module["_CRYPTO_gcm128_finish"] = createExportWrapper("CRYPTO_gcm128_finish");

var _CRYPTO_xts128_encrypt = Module["_CRYPTO_xts128_encrypt"] = createExportWrapper("CRYPTO_xts128_encrypt");

var _CRYPTO_ccm128_init = Module["_CRYPTO_ccm128_init"] = createExportWrapper("CRYPTO_ccm128_init");

var _CRYPTO_ccm128_setiv = Module["_CRYPTO_ccm128_setiv"] = createExportWrapper("CRYPTO_ccm128_setiv");

var _CRYPTO_ccm128_aad = Module["_CRYPTO_ccm128_aad"] = createExportWrapper("CRYPTO_ccm128_aad");

var _CRYPTO_ccm128_encrypt_ccm64 = Module["_CRYPTO_ccm128_encrypt_ccm64"] = createExportWrapper("CRYPTO_ccm128_encrypt_ccm64");

var _CRYPTO_ccm128_encrypt = Module["_CRYPTO_ccm128_encrypt"] = createExportWrapper("CRYPTO_ccm128_encrypt");

var _CRYPTO_ccm128_tag = Module["_CRYPTO_ccm128_tag"] = createExportWrapper("CRYPTO_ccm128_tag");

var _CRYPTO_ccm128_decrypt_ccm64 = Module["_CRYPTO_ccm128_decrypt_ccm64"] = createExportWrapper("CRYPTO_ccm128_decrypt_ccm64");

var _CRYPTO_ccm128_decrypt = Module["_CRYPTO_ccm128_decrypt"] = createExportWrapper("CRYPTO_ccm128_decrypt");

var _is_partially_overlapping = Module["_is_partially_overlapping"] = createExportWrapper("is_partially_overlapping");

var _CRYPTO_128_wrap_pad = Module["_CRYPTO_128_wrap_pad"] = createExportWrapper("CRYPTO_128_wrap_pad");

var _CRYPTO_128_unwrap_pad = Module["_CRYPTO_128_unwrap_pad"] = createExportWrapper("CRYPTO_128_unwrap_pad");

var _CRYPTO_ocb128_init = Module["_CRYPTO_ocb128_init"] = createExportWrapper("CRYPTO_ocb128_init");

var _CRYPTO_ocb128_setiv = Module["_CRYPTO_ocb128_setiv"] = createExportWrapper("CRYPTO_ocb128_setiv");

var _CRYPTO_ocb128_aad = Module["_CRYPTO_ocb128_aad"] = createExportWrapper("CRYPTO_ocb128_aad");

var _CRYPTO_ocb128_encrypt = Module["_CRYPTO_ocb128_encrypt"] = createExportWrapper("CRYPTO_ocb128_encrypt");

var _CRYPTO_ocb128_decrypt = Module["_CRYPTO_ocb128_decrypt"] = createExportWrapper("CRYPTO_ocb128_decrypt");

var _CRYPTO_ocb128_finish = Module["_CRYPTO_ocb128_finish"] = createExportWrapper("CRYPTO_ocb128_finish");

var _CRYPTO_ocb128_tag = Module["_CRYPTO_ocb128_tag"] = createExportWrapper("CRYPTO_ocb128_tag");

var _CRYPTO_ocb128_cleanup = Module["_CRYPTO_ocb128_cleanup"] = createExportWrapper("CRYPTO_ocb128_cleanup");

var _CRYPTO_ocb128_copy_ctx = Module["_CRYPTO_ocb128_copy_ctx"] = createExportWrapper("CRYPTO_ocb128_copy_ctx");

var _EVP_aria_128_cbc = Module["_EVP_aria_128_cbc"] = createExportWrapper("EVP_aria_128_cbc");

var _EVP_aria_128_cfb128 = Module["_EVP_aria_128_cfb128"] = createExportWrapper("EVP_aria_128_cfb128");

var _EVP_aria_128_ofb = Module["_EVP_aria_128_ofb"] = createExportWrapper("EVP_aria_128_ofb");

var _EVP_aria_128_ecb = Module["_EVP_aria_128_ecb"] = createExportWrapper("EVP_aria_128_ecb");

var _EVP_aria_192_cbc = Module["_EVP_aria_192_cbc"] = createExportWrapper("EVP_aria_192_cbc");

var _EVP_aria_192_cfb128 = Module["_EVP_aria_192_cfb128"] = createExportWrapper("EVP_aria_192_cfb128");

var _EVP_aria_192_ofb = Module["_EVP_aria_192_ofb"] = createExportWrapper("EVP_aria_192_ofb");

var _EVP_aria_192_ecb = Module["_EVP_aria_192_ecb"] = createExportWrapper("EVP_aria_192_ecb");

var _EVP_aria_256_cbc = Module["_EVP_aria_256_cbc"] = createExportWrapper("EVP_aria_256_cbc");

var _EVP_aria_256_cfb128 = Module["_EVP_aria_256_cfb128"] = createExportWrapper("EVP_aria_256_cfb128");

var _EVP_aria_256_ofb = Module["_EVP_aria_256_ofb"] = createExportWrapper("EVP_aria_256_ofb");

var _EVP_aria_256_ecb = Module["_EVP_aria_256_ecb"] = createExportWrapper("EVP_aria_256_ecb");

var _EVP_aria_128_cfb1 = Module["_EVP_aria_128_cfb1"] = createExportWrapper("EVP_aria_128_cfb1");

var _EVP_aria_192_cfb1 = Module["_EVP_aria_192_cfb1"] = createExportWrapper("EVP_aria_192_cfb1");

var _EVP_aria_256_cfb1 = Module["_EVP_aria_256_cfb1"] = createExportWrapper("EVP_aria_256_cfb1");

var _EVP_aria_128_cfb8 = Module["_EVP_aria_128_cfb8"] = createExportWrapper("EVP_aria_128_cfb8");

var _EVP_aria_192_cfb8 = Module["_EVP_aria_192_cfb8"] = createExportWrapper("EVP_aria_192_cfb8");

var _EVP_aria_256_cfb8 = Module["_EVP_aria_256_cfb8"] = createExportWrapper("EVP_aria_256_cfb8");

var _EVP_aria_128_ctr = Module["_EVP_aria_128_ctr"] = createExportWrapper("EVP_aria_128_ctr");

var _EVP_aria_192_ctr = Module["_EVP_aria_192_ctr"] = createExportWrapper("EVP_aria_192_ctr");

var _EVP_aria_256_ctr = Module["_EVP_aria_256_ctr"] = createExportWrapper("EVP_aria_256_ctr");

var _EVP_aria_192_gcm = Module["_EVP_aria_192_gcm"] = createExportWrapper("EVP_aria_192_gcm");

var _EVP_aria_128_ccm = Module["_EVP_aria_128_ccm"] = createExportWrapper("EVP_aria_128_ccm");

var _EVP_aria_192_ccm = Module["_EVP_aria_192_ccm"] = createExportWrapper("EVP_aria_192_ccm");

var _EVP_aria_256_ccm = Module["_EVP_aria_256_ccm"] = createExportWrapper("EVP_aria_256_ccm");

var _EVP_CIPHER_set_asn1_iv = Module["_EVP_CIPHER_set_asn1_iv"] = createExportWrapper("EVP_CIPHER_set_asn1_iv");

var _EVP_CIPHER_get_asn1_iv = Module["_EVP_CIPHER_get_asn1_iv"] = createExportWrapper("EVP_CIPHER_get_asn1_iv");

var _EVP_bf_cbc = Module["_EVP_bf_cbc"] = createExportWrapper("EVP_bf_cbc");

var _EVP_bf_cfb64 = Module["_EVP_bf_cfb64"] = createExportWrapper("EVP_bf_cfb64");

var _EVP_bf_ofb = Module["_EVP_bf_ofb"] = createExportWrapper("EVP_bf_ofb");

var _EVP_bf_ecb = Module["_EVP_bf_ecb"] = createExportWrapper("EVP_bf_ecb");

var _EVP_camellia_128_ecb = Module["_EVP_camellia_128_ecb"] = createExportWrapper("EVP_camellia_128_ecb");

var _EVP_camellia_128_ofb = Module["_EVP_camellia_128_ofb"] = createExportWrapper("EVP_camellia_128_ofb");

var _EVP_camellia_128_cfb128 = Module["_EVP_camellia_128_cfb128"] = createExportWrapper("EVP_camellia_128_cfb128");

var _EVP_camellia_128_cfb1 = Module["_EVP_camellia_128_cfb1"] = createExportWrapper("EVP_camellia_128_cfb1");

var _EVP_camellia_128_cfb8 = Module["_EVP_camellia_128_cfb8"] = createExportWrapper("EVP_camellia_128_cfb8");

var _EVP_camellia_128_ctr = Module["_EVP_camellia_128_ctr"] = createExportWrapper("EVP_camellia_128_ctr");

var _EVP_camellia_192_cbc = Module["_EVP_camellia_192_cbc"] = createExportWrapper("EVP_camellia_192_cbc");

var _EVP_camellia_192_ecb = Module["_EVP_camellia_192_ecb"] = createExportWrapper("EVP_camellia_192_ecb");

var _EVP_camellia_192_ofb = Module["_EVP_camellia_192_ofb"] = createExportWrapper("EVP_camellia_192_ofb");

var _EVP_camellia_192_cfb128 = Module["_EVP_camellia_192_cfb128"] = createExportWrapper("EVP_camellia_192_cfb128");

var _EVP_camellia_192_cfb1 = Module["_EVP_camellia_192_cfb1"] = createExportWrapper("EVP_camellia_192_cfb1");

var _EVP_camellia_192_cfb8 = Module["_EVP_camellia_192_cfb8"] = createExportWrapper("EVP_camellia_192_cfb8");

var _EVP_camellia_192_ctr = Module["_EVP_camellia_192_ctr"] = createExportWrapper("EVP_camellia_192_ctr");

var _EVP_camellia_256_ecb = Module["_EVP_camellia_256_ecb"] = createExportWrapper("EVP_camellia_256_ecb");

var _EVP_camellia_256_ofb = Module["_EVP_camellia_256_ofb"] = createExportWrapper("EVP_camellia_256_ofb");

var _EVP_camellia_256_cfb128 = Module["_EVP_camellia_256_cfb128"] = createExportWrapper("EVP_camellia_256_cfb128");

var _EVP_camellia_256_cfb1 = Module["_EVP_camellia_256_cfb1"] = createExportWrapper("EVP_camellia_256_cfb1");

var _EVP_camellia_256_cfb8 = Module["_EVP_camellia_256_cfb8"] = createExportWrapper("EVP_camellia_256_cfb8");

var _EVP_camellia_256_ctr = Module["_EVP_camellia_256_ctr"] = createExportWrapper("EVP_camellia_256_ctr");

var _EVP_cast5_cbc = Module["_EVP_cast5_cbc"] = createExportWrapper("EVP_cast5_cbc");

var _EVP_cast5_cfb64 = Module["_EVP_cast5_cfb64"] = createExportWrapper("EVP_cast5_cfb64");

var _EVP_cast5_ofb = Module["_EVP_cast5_ofb"] = createExportWrapper("EVP_cast5_ofb");

var _EVP_cast5_ecb = Module["_EVP_cast5_ecb"] = createExportWrapper("EVP_cast5_ecb");

var _EVP_chacha20 = Module["_EVP_chacha20"] = createExportWrapper("EVP_chacha20");

var _Poly1305_Init = Module["_Poly1305_Init"] = createExportWrapper("Poly1305_Init");

var _Poly1305_Update = Module["_Poly1305_Update"] = createExportWrapper("Poly1305_Update");

var _Poly1305_Final = Module["_Poly1305_Final"] = createExportWrapper("Poly1305_Final");

var _Poly1305_ctx_size = Module["_Poly1305_ctx_size"] = createExportWrapper("Poly1305_ctx_size");

var _EVP_des_cfb64 = Module["_EVP_des_cfb64"] = createExportWrapper("EVP_des_cfb64");

var _EVP_des_ofb = Module["_EVP_des_ofb"] = createExportWrapper("EVP_des_ofb");

var _EVP_des_ecb = Module["_EVP_des_ecb"] = createExportWrapper("EVP_des_ecb");

var _EVP_des_cfb1 = Module["_EVP_des_cfb1"] = createExportWrapper("EVP_des_cfb1");

var _EVP_des_cfb8 = Module["_EVP_des_cfb8"] = createExportWrapper("EVP_des_cfb8");

var _EVP_des_ede_cbc = Module["_EVP_des_ede_cbc"] = createExportWrapper("EVP_des_ede_cbc");

var _EVP_des_ede_cfb64 = Module["_EVP_des_ede_cfb64"] = createExportWrapper("EVP_des_ede_cfb64");

var _EVP_des_ede_ofb = Module["_EVP_des_ede_ofb"] = createExportWrapper("EVP_des_ede_ofb");

var _EVP_des_ede_ecb = Module["_EVP_des_ede_ecb"] = createExportWrapper("EVP_des_ede_ecb");

var _EVP_des_ede3_cfb64 = Module["_EVP_des_ede3_cfb64"] = createExportWrapper("EVP_des_ede3_cfb64");

var _EVP_des_ede3_ofb = Module["_EVP_des_ede3_ofb"] = createExportWrapper("EVP_des_ede3_ofb");

var _EVP_des_ede3_ecb = Module["_EVP_des_ede3_ecb"] = createExportWrapper("EVP_des_ede3_ecb");

var _EVP_des_ede3_cfb1 = Module["_EVP_des_ede3_cfb1"] = createExportWrapper("EVP_des_ede3_cfb1");

var _EVP_des_ede3_cfb8 = Module["_EVP_des_ede3_cfb8"] = createExportWrapper("EVP_des_ede3_cfb8");

var _EVP_des_ede = Module["_EVP_des_ede"] = createExportWrapper("EVP_des_ede");

var _EVP_des_ede3 = Module["_EVP_des_ede3"] = createExportWrapper("EVP_des_ede3");

var _SHA1 = Module["_SHA1"] = createExportWrapper("SHA1");

var _EVP_idea_cfb64 = Module["_EVP_idea_cfb64"] = createExportWrapper("EVP_idea_cfb64");

var _EVP_idea_ofb = Module["_EVP_idea_ofb"] = createExportWrapper("EVP_idea_ofb");

var _EVP_idea_ecb = Module["_EVP_idea_ecb"] = createExportWrapper("EVP_idea_ecb");

var _IDEA_set_encrypt_key = Module["_IDEA_set_encrypt_key"] = createExportWrapper("IDEA_set_encrypt_key");

var _IDEA_set_decrypt_key = Module["_IDEA_set_decrypt_key"] = createExportWrapper("IDEA_set_decrypt_key");

var _IDEA_cbc_encrypt = Module["_IDEA_cbc_encrypt"] = createExportWrapper("IDEA_cbc_encrypt");

var _IDEA_cfb64_encrypt = Module["_IDEA_cfb64_encrypt"] = createExportWrapper("IDEA_cfb64_encrypt");

var _IDEA_ofb64_encrypt = Module["_IDEA_ofb64_encrypt"] = createExportWrapper("IDEA_ofb64_encrypt");

var _IDEA_ecb_encrypt = Module["_IDEA_ecb_encrypt"] = createExportWrapper("IDEA_ecb_encrypt");

var _EVP_rc2_cfb64 = Module["_EVP_rc2_cfb64"] = createExportWrapper("EVP_rc2_cfb64");

var _EVP_rc2_ofb = Module["_EVP_rc2_ofb"] = createExportWrapper("EVP_rc2_ofb");

var _EVP_rc2_ecb = Module["_EVP_rc2_ecb"] = createExportWrapper("EVP_rc2_ecb");

var _RC2_set_key = Module["_RC2_set_key"] = createExportWrapper("RC2_set_key");

var _RC2_cbc_encrypt = Module["_RC2_cbc_encrypt"] = createExportWrapper("RC2_cbc_encrypt");

var _EVP_CIPHER_CTX_original_iv = Module["_EVP_CIPHER_CTX_original_iv"] = createExportWrapper("EVP_CIPHER_CTX_original_iv");

var _RC2_cfb64_encrypt = Module["_RC2_cfb64_encrypt"] = createExportWrapper("RC2_cfb64_encrypt");

var _RC2_ofb64_encrypt = Module["_RC2_ofb64_encrypt"] = createExportWrapper("RC2_ofb64_encrypt");

var _RC2_ecb_encrypt = Module["_RC2_ecb_encrypt"] = createExportWrapper("RC2_ecb_encrypt");

var _EVP_rc4_40 = Module["_EVP_rc4_40"] = createExportWrapper("EVP_rc4_40");

var _RC4_set_key = Module["_RC4_set_key"] = createExportWrapper("RC4_set_key");

var _RC4 = Module["_RC4"] = createExportWrapper("RC4");

var _MD5_Update = Module["_MD5_Update"] = createExportWrapper("MD5_Update");

var _MD5_Final = Module["_MD5_Final"] = createExportWrapper("MD5_Final");

var _EVP_seed_cfb128 = Module["_EVP_seed_cfb128"] = createExportWrapper("EVP_seed_cfb128");

var _EVP_seed_ofb = Module["_EVP_seed_ofb"] = createExportWrapper("EVP_seed_ofb");

var _EVP_seed_ecb = Module["_EVP_seed_ecb"] = createExportWrapper("EVP_seed_ecb");

var _SEED_set_key = Module["_SEED_set_key"] = createExportWrapper("SEED_set_key");

var _SEED_cbc_encrypt = Module["_SEED_cbc_encrypt"] = createExportWrapper("SEED_cbc_encrypt");

var _SEED_cfb128_encrypt = Module["_SEED_cfb128_encrypt"] = createExportWrapper("SEED_cfb128_encrypt");

var _SEED_ofb128_encrypt = Module["_SEED_ofb128_encrypt"] = createExportWrapper("SEED_ofb128_encrypt");

var _SEED_ecb_encrypt = Module["_SEED_ecb_encrypt"] = createExportWrapper("SEED_ecb_encrypt");

var _EVP_sm4_cbc = Module["_EVP_sm4_cbc"] = createExportWrapper("EVP_sm4_cbc");

var _EVP_sm4_cfb128 = Module["_EVP_sm4_cfb128"] = createExportWrapper("EVP_sm4_cfb128");

var _EVP_sm4_ofb = Module["_EVP_sm4_ofb"] = createExportWrapper("EVP_sm4_ofb");

var _EVP_sm4_ecb = Module["_EVP_sm4_ecb"] = createExportWrapper("EVP_sm4_ecb");

var _EVP_sm4_ctr = Module["_EVP_sm4_ctr"] = createExportWrapper("EVP_sm4_ctr");

var _EVP_desx_cbc = Module["_EVP_desx_cbc"] = createExportWrapper("EVP_desx_cbc");

var _EVP_ENCODE_CTX_copy = Module["_EVP_ENCODE_CTX_copy"] = createExportWrapper("EVP_ENCODE_CTX_copy");

var _evp_encode_ctx_set_flags = Module["_evp_encode_ctx_set_flags"] = createExportWrapper("evp_encode_ctx_set_flags");

var _EVP_DecodeFinal = Module["_EVP_DecodeFinal"] = createExportWrapper("EVP_DecodeFinal");

var _EVP_add_alg_module = Module["_EVP_add_alg_module"] = createExportWrapper("EVP_add_alg_module");

var _EVP_CipherInit = Module["_EVP_CipherInit"] = createExportWrapper("EVP_CipherInit");

var _EVP_EncryptFinal_ex = Module["_EVP_EncryptFinal_ex"] = createExportWrapper("EVP_EncryptFinal_ex");

var _EVP_DecryptFinal_ex = Module["_EVP_DecryptFinal_ex"] = createExportWrapper("EVP_DecryptFinal_ex");

var _EVP_CipherFinal = Module["_EVP_CipherFinal"] = createExportWrapper("EVP_CipherFinal");

var _EVP_DecryptInit = Module["_EVP_DecryptInit"] = createExportWrapper("EVP_DecryptInit");

var _EVP_set_pw_prompt = Module["_EVP_set_pw_prompt"] = createExportWrapper("EVP_set_pw_prompt");

var _EVP_get_pw_prompt = Module["_EVP_get_pw_prompt"] = createExportWrapper("EVP_get_pw_prompt");

var _EVP_read_pw_string = Module["_EVP_read_pw_string"] = createExportWrapper("EVP_read_pw_string");

var _EVP_read_pw_string_min = Module["_EVP_read_pw_string_min"] = createExportWrapper("EVP_read_pw_string_min");

var _EVP_BytesToKey = Module["_EVP_BytesToKey"] = createExportWrapper("EVP_BytesToKey");

var _EVP_CIPHER_CTX_nid = Module["_EVP_CIPHER_CTX_nid"] = createExportWrapper("EVP_CIPHER_CTX_nid");

var _OBJ_get0_data = Module["_OBJ_get0_data"] = createExportWrapper("OBJ_get0_data");

var _EVP_CIPHER_impl_ctx_size = Module["_EVP_CIPHER_impl_ctx_size"] = createExportWrapper("EVP_CIPHER_impl_ctx_size");

var _EVP_CIPHER_CTX_get_app_data = Module["_EVP_CIPHER_CTX_get_app_data"] = createExportWrapper("EVP_CIPHER_CTX_get_app_data");

var _EVP_CIPHER_CTX_set_app_data = Module["_EVP_CIPHER_CTX_set_app_data"] = createExportWrapper("EVP_CIPHER_CTX_set_app_data");

var _EVP_CIPHER_CTX_set_cipher_data = Module["_EVP_CIPHER_CTX_set_cipher_data"] = createExportWrapper("EVP_CIPHER_CTX_set_cipher_data");

var _EVP_CIPHER_CTX_iv = Module["_EVP_CIPHER_CTX_iv"] = createExportWrapper("EVP_CIPHER_CTX_iv");

var _EVP_MD_block_size = Module["_EVP_MD_block_size"] = createExportWrapper("EVP_MD_block_size");

var _EVP_MD_flags = Module["_EVP_MD_flags"] = createExportWrapper("EVP_MD_flags");

var _EVP_MD_meth_new = Module["_EVP_MD_meth_new"] = createExportWrapper("EVP_MD_meth_new");

var _EVP_MD_meth_dup = Module["_EVP_MD_meth_dup"] = createExportWrapper("EVP_MD_meth_dup");

var _EVP_MD_meth_free = Module["_EVP_MD_meth_free"] = createExportWrapper("EVP_MD_meth_free");

var _EVP_MD_meth_set_input_blocksize = Module["_EVP_MD_meth_set_input_blocksize"] = createExportWrapper("EVP_MD_meth_set_input_blocksize");

var _EVP_MD_meth_set_result_size = Module["_EVP_MD_meth_set_result_size"] = createExportWrapper("EVP_MD_meth_set_result_size");

var _EVP_MD_meth_set_app_datasize = Module["_EVP_MD_meth_set_app_datasize"] = createExportWrapper("EVP_MD_meth_set_app_datasize");

var _EVP_MD_meth_set_flags = Module["_EVP_MD_meth_set_flags"] = createExportWrapper("EVP_MD_meth_set_flags");

var _EVP_MD_meth_set_init = Module["_EVP_MD_meth_set_init"] = createExportWrapper("EVP_MD_meth_set_init");

var _EVP_MD_meth_set_update = Module["_EVP_MD_meth_set_update"] = createExportWrapper("EVP_MD_meth_set_update");

var _EVP_MD_meth_set_final = Module["_EVP_MD_meth_set_final"] = createExportWrapper("EVP_MD_meth_set_final");

var _EVP_MD_meth_set_copy = Module["_EVP_MD_meth_set_copy"] = createExportWrapper("EVP_MD_meth_set_copy");

var _EVP_MD_meth_set_cleanup = Module["_EVP_MD_meth_set_cleanup"] = createExportWrapper("EVP_MD_meth_set_cleanup");

var _EVP_MD_meth_set_ctrl = Module["_EVP_MD_meth_set_ctrl"] = createExportWrapper("EVP_MD_meth_set_ctrl");

var _EVP_MD_meth_get_input_blocksize = Module["_EVP_MD_meth_get_input_blocksize"] = createExportWrapper("EVP_MD_meth_get_input_blocksize");

var _EVP_MD_meth_get_result_size = Module["_EVP_MD_meth_get_result_size"] = createExportWrapper("EVP_MD_meth_get_result_size");

var _EVP_MD_meth_get_app_datasize = Module["_EVP_MD_meth_get_app_datasize"] = createExportWrapper("EVP_MD_meth_get_app_datasize");

var _EVP_MD_meth_get_flags = Module["_EVP_MD_meth_get_flags"] = createExportWrapper("EVP_MD_meth_get_flags");

var _EVP_MD_meth_get_init = Module["_EVP_MD_meth_get_init"] = createExportWrapper("EVP_MD_meth_get_init");

var _EVP_MD_meth_get_update = Module["_EVP_MD_meth_get_update"] = createExportWrapper("EVP_MD_meth_get_update");

var _EVP_MD_meth_get_final = Module["_EVP_MD_meth_get_final"] = createExportWrapper("EVP_MD_meth_get_final");

var _EVP_MD_meth_get_copy = Module["_EVP_MD_meth_get_copy"] = createExportWrapper("EVP_MD_meth_get_copy");

var _EVP_MD_meth_get_cleanup = Module["_EVP_MD_meth_get_cleanup"] = createExportWrapper("EVP_MD_meth_get_cleanup");

var _EVP_MD_meth_get_ctrl = Module["_EVP_MD_meth_get_ctrl"] = createExportWrapper("EVP_MD_meth_get_ctrl");

var _EVP_MD_CTX_set_pkey_ctx = Module["_EVP_MD_CTX_set_pkey_ctx"] = createExportWrapper("EVP_MD_CTX_set_pkey_ctx");

var _EVP_MD_CTX_md_data = Module["_EVP_MD_CTX_md_data"] = createExportWrapper("EVP_MD_CTX_md_data");

var _EVP_MD_CTX_update_fn = Module["_EVP_MD_CTX_update_fn"] = createExportWrapper("EVP_MD_CTX_update_fn");

var _EVP_MD_CTX_set_update_fn = Module["_EVP_MD_CTX_set_update_fn"] = createExportWrapper("EVP_MD_CTX_set_update_fn");

var _EVP_CIPHER_CTX_clear_flags = Module["_EVP_CIPHER_CTX_clear_flags"] = createExportWrapper("EVP_CIPHER_CTX_clear_flags");

var _EVP_PBE_find = Module["_EVP_PBE_find"] = createExportWrapper("EVP_PBE_find");

var _EVP_PBE_alg_add_type = Module["_EVP_PBE_alg_add_type"] = createExportWrapper("EVP_PBE_alg_add_type");

var _EVP_PBE_alg_add = Module["_EVP_PBE_alg_add"] = createExportWrapper("EVP_PBE_alg_add");

var _EVP_PBE_cleanup = Module["_EVP_PBE_cleanup"] = createExportWrapper("EVP_PBE_cleanup");

var _EVP_PBE_get = Module["_EVP_PBE_get"] = createExportWrapper("EVP_PBE_get");

var _PKCS5_PBE_keyivgen = Module["_PKCS5_PBE_keyivgen"] = createExportWrapper("PKCS5_PBE_keyivgen");

var _PKCS5_v2_PBKDF2_keyivgen = Module["_PKCS5_v2_PBKDF2_keyivgen"] = createExportWrapper("PKCS5_v2_PBKDF2_keyivgen");

var _PKCS12_PBE_keyivgen = Module["_PKCS12_PBE_keyivgen"] = createExportWrapper("PKCS12_PBE_keyivgen");

var _PKCS5_v2_PBE_keyivgen = Module["_PKCS5_v2_PBE_keyivgen"] = createExportWrapper("PKCS5_v2_PBE_keyivgen");

var _EVP_PBE_scrypt = Module["_EVP_PBE_scrypt"] = createExportWrapper("EVP_PBE_scrypt");

var _EVP_PKEY2PKCS8 = Module["_EVP_PKEY2PKCS8"] = createExportWrapper("EVP_PKEY2PKCS8");

var _EVP_PKEY_get_attr_count = Module["_EVP_PKEY_get_attr_count"] = createExportWrapper("EVP_PKEY_get_attr_count");

var _EVP_PKEY_get_attr_by_NID = Module["_EVP_PKEY_get_attr_by_NID"] = createExportWrapper("EVP_PKEY_get_attr_by_NID");

var _EVP_PKEY_get_attr_by_OBJ = Module["_EVP_PKEY_get_attr_by_OBJ"] = createExportWrapper("EVP_PKEY_get_attr_by_OBJ");

var _EVP_PKEY_get_attr = Module["_EVP_PKEY_get_attr"] = createExportWrapper("EVP_PKEY_get_attr");

var _EVP_PKEY_delete_attr = Module["_EVP_PKEY_delete_attr"] = createExportWrapper("EVP_PKEY_delete_attr");

var _EVP_PKEY_add1_attr = Module["_EVP_PKEY_add1_attr"] = createExportWrapper("EVP_PKEY_add1_attr");

var _EVP_PKEY_add1_attr_by_OBJ = Module["_EVP_PKEY_add1_attr_by_OBJ"] = createExportWrapper("EVP_PKEY_add1_attr_by_OBJ");

var _EVP_PKEY_add1_attr_by_NID = Module["_EVP_PKEY_add1_attr_by_NID"] = createExportWrapper("EVP_PKEY_add1_attr_by_NID");

var _EVP_PKEY_add1_attr_by_txt = Module["_EVP_PKEY_add1_attr_by_txt"] = createExportWrapper("EVP_PKEY_add1_attr_by_txt");

var _MD4_Init = Module["_MD4_Init"] = createExportWrapper("MD4_Init");

var _MD4_Update = Module["_MD4_Update"] = createExportWrapper("MD4_Update");

var _MD4_Final = Module["_MD4_Final"] = createExportWrapper("MD4_Final");

var _SHA1_Update = Module["_SHA1_Update"] = createExportWrapper("SHA1_Update");

var _SHA1_Final = Module["_SHA1_Final"] = createExportWrapper("SHA1_Final");

var _EVP_mdc2 = Module["_EVP_mdc2"] = createExportWrapper("EVP_mdc2");

var _RIPEMD160_Init = Module["_RIPEMD160_Init"] = createExportWrapper("RIPEMD160_Init");

var _RIPEMD160_Update = Module["_RIPEMD160_Update"] = createExportWrapper("RIPEMD160_Update");

var _RIPEMD160_Final = Module["_RIPEMD160_Final"] = createExportWrapper("RIPEMD160_Final");

var _EVP_sha512_224 = Module["_EVP_sha512_224"] = createExportWrapper("EVP_sha512_224");

var _EVP_sha512_256 = Module["_EVP_sha512_256"] = createExportWrapper("EVP_sha512_256");

var _SHA224_Update = Module["_SHA224_Update"] = createExportWrapper("SHA224_Update");

var _SHA224_Final = Module["_SHA224_Final"] = createExportWrapper("SHA224_Final");

var _SHA256_Update = Module["_SHA256_Update"] = createExportWrapper("SHA256_Update");

var _SHA256_Final = Module["_SHA256_Final"] = createExportWrapper("SHA256_Final");

var _sha512_224_init = Module["_sha512_224_init"] = createExportWrapper("sha512_224_init");

var _sha512_256_init = Module["_sha512_256_init"] = createExportWrapper("sha512_256_init");

var _SHA384_Update = Module["_SHA384_Update"] = createExportWrapper("SHA384_Update");

var _SHA384_Final = Module["_SHA384_Final"] = createExportWrapper("SHA384_Final");

var _EVP_sha3_224 = Module["_EVP_sha3_224"] = createExportWrapper("EVP_sha3_224");

var _EVP_sha3_256 = Module["_EVP_sha3_256"] = createExportWrapper("EVP_sha3_256");

var _EVP_sha3_384 = Module["_EVP_sha3_384"] = createExportWrapper("EVP_sha3_384");

var _EVP_sha3_512 = Module["_EVP_sha3_512"] = createExportWrapper("EVP_sha3_512");

var _EVP_shake128 = Module["_EVP_shake128"] = createExportWrapper("EVP_shake128");

var _SHA3_absorb = Module["_SHA3_absorb"] = createExportWrapper("SHA3_absorb");

var _SHA3_squeeze = Module["_SHA3_squeeze"] = createExportWrapper("SHA3_squeeze");

var _EVP_whirlpool = Module["_EVP_whirlpool"] = createExportWrapper("EVP_whirlpool");

var _OBJ_NAME_get = Module["_OBJ_NAME_get"] = createExportWrapper("OBJ_NAME_get");

var _evp_cleanup_int = Module["_evp_cleanup_int"] = createExportWrapper("evp_cleanup_int");

var _OBJ_NAME_cleanup = Module["_OBJ_NAME_cleanup"] = createExportWrapper("OBJ_NAME_cleanup");

var _OBJ_sigid_free = Module["_OBJ_sigid_free"] = createExportWrapper("OBJ_sigid_free");

var _evp_app_cleanup_int = Module["_evp_app_cleanup_int"] = createExportWrapper("evp_app_cleanup_int");

var _EVP_CIPHER_do_all = Module["_EVP_CIPHER_do_all"] = createExportWrapper("EVP_CIPHER_do_all");

var _OBJ_NAME_do_all = Module["_OBJ_NAME_do_all"] = createExportWrapper("OBJ_NAME_do_all");

var _EVP_CIPHER_do_all_sorted = Module["_EVP_CIPHER_do_all_sorted"] = createExportWrapper("EVP_CIPHER_do_all_sorted");

var _EVP_MD_do_all = Module["_EVP_MD_do_all"] = createExportWrapper("EVP_MD_do_all");

var _EVP_MD_do_all_sorted = Module["_EVP_MD_do_all_sorted"] = createExportWrapper("EVP_MD_do_all_sorted");

var _PKCS5_PBE_add = Module["_PKCS5_PBE_add"] = createExportWrapper("PKCS5_PBE_add");

var _HMAC_CTX_copy = Module["_HMAC_CTX_copy"] = createExportWrapper("HMAC_CTX_copy");

var _PKCS5_PBKDF2_HMAC_SHA1 = Module["_PKCS5_PBKDF2_HMAC_SHA1"] = createExportWrapper("PKCS5_PBKDF2_HMAC_SHA1");

var _EVP_PKEY_decrypt_old = Module["_EVP_PKEY_decrypt_old"] = createExportWrapper("EVP_PKEY_decrypt_old");

var _EVP_PKEY_encrypt_old = Module["_EVP_PKEY_encrypt_old"] = createExportWrapper("EVP_PKEY_encrypt_old");

var _EVP_PKEY_save_parameters = Module["_EVP_PKEY_save_parameters"] = createExportWrapper("EVP_PKEY_save_parameters");

var _EVP_PKEY_cmp_parameters = Module["_EVP_PKEY_cmp_parameters"] = createExportWrapper("EVP_PKEY_cmp_parameters");

var _X509_ATTRIBUTE_free = Module["_X509_ATTRIBUTE_free"] = createExportWrapper("X509_ATTRIBUTE_free");

var _EVP_PKEY_new_raw_public_key = Module["_EVP_PKEY_new_raw_public_key"] = createExportWrapper("EVP_PKEY_new_raw_public_key");

var _EVP_PKEY_get_raw_private_key = Module["_EVP_PKEY_get_raw_private_key"] = createExportWrapper("EVP_PKEY_get_raw_private_key");

var _EVP_PKEY_get_raw_public_key = Module["_EVP_PKEY_get_raw_public_key"] = createExportWrapper("EVP_PKEY_get_raw_public_key");

var _EVP_PKEY_new_CMAC_key = Module["_EVP_PKEY_new_CMAC_key"] = createExportWrapper("EVP_PKEY_new_CMAC_key");

var _EVP_PKEY_set_type_str = Module["_EVP_PKEY_set_type_str"] = createExportWrapper("EVP_PKEY_set_type_str");

var _EVP_PKEY_set_alias_type = Module["_EVP_PKEY_set_alias_type"] = createExportWrapper("EVP_PKEY_set_alias_type");

var _EVP_PKEY_get0_hmac = Module["_EVP_PKEY_get0_hmac"] = createExportWrapper("EVP_PKEY_get0_hmac");

var _EVP_PKEY_get0_poly1305 = Module["_EVP_PKEY_get0_poly1305"] = createExportWrapper("EVP_PKEY_get0_poly1305");

var _EVP_PKEY_get0_siphash = Module["_EVP_PKEY_get0_siphash"] = createExportWrapper("EVP_PKEY_get0_siphash");

var _EVP_PKEY_set1_RSA = Module["_EVP_PKEY_set1_RSA"] = createExportWrapper("EVP_PKEY_set1_RSA");

var _EVP_PKEY_get1_RSA = Module["_EVP_PKEY_get1_RSA"] = createExportWrapper("EVP_PKEY_get1_RSA");

var _EVP_PKEY_set1_DSA = Module["_EVP_PKEY_set1_DSA"] = createExportWrapper("EVP_PKEY_set1_DSA");

var _EVP_PKEY_get1_DSA = Module["_EVP_PKEY_get1_DSA"] = createExportWrapper("EVP_PKEY_get1_DSA");

var _EVP_PKEY_get1_EC_KEY = Module["_EVP_PKEY_get1_EC_KEY"] = createExportWrapper("EVP_PKEY_get1_EC_KEY");

var _EVP_PKEY_get1_DH = Module["_EVP_PKEY_get1_DH"] = createExportWrapper("EVP_PKEY_get1_DH");

var _EVP_PKEY_print_public = Module["_EVP_PKEY_print_public"] = createExportWrapper("EVP_PKEY_print_public");

var _EVP_PKEY_print_private = Module["_EVP_PKEY_print_private"] = createExportWrapper("EVP_PKEY_print_private");

var _EVP_PKEY_print_params = Module["_EVP_PKEY_print_params"] = createExportWrapper("EVP_PKEY_print_params");

var _RSA_public_encrypt = Module["_RSA_public_encrypt"] = createExportWrapper("RSA_public_encrypt");

var _EVP_PKEY_CTX_set_cb = Module["_EVP_PKEY_CTX_set_cb"] = createExportWrapper("EVP_PKEY_CTX_set_cb");

var _EVP_PKEY_CTX_get_cb = Module["_EVP_PKEY_CTX_get_cb"] = createExportWrapper("EVP_PKEY_CTX_get_cb");

var _evp_pkey_set_cb_translate = Module["_evp_pkey_set_cb_translate"] = createExportWrapper("evp_pkey_set_cb_translate");

var _EVP_PKEY_CTX_get_keygen_info = Module["_EVP_PKEY_CTX_get_keygen_info"] = createExportWrapper("EVP_PKEY_CTX_get_keygen_info");

var _EVP_PKEY_check = Module["_EVP_PKEY_check"] = createExportWrapper("EVP_PKEY_check");

var _EVP_PKEY_public_check = Module["_EVP_PKEY_public_check"] = createExportWrapper("EVP_PKEY_public_check");

var _EVP_PKEY_param_check = Module["_EVP_PKEY_param_check"] = createExportWrapper("EVP_PKEY_param_check");

var _EVP_PKEY_meth_find = Module["_EVP_PKEY_meth_find"] = createExportWrapper("EVP_PKEY_meth_find");

var _EVP_PKEY_meth_new = Module["_EVP_PKEY_meth_new"] = createExportWrapper("EVP_PKEY_meth_new");

var _EVP_PKEY_meth_get0_info = Module["_EVP_PKEY_meth_get0_info"] = createExportWrapper("EVP_PKEY_meth_get0_info");

var _EVP_PKEY_meth_copy = Module["_EVP_PKEY_meth_copy"] = createExportWrapper("EVP_PKEY_meth_copy");

var _EVP_PKEY_meth_free = Module["_EVP_PKEY_meth_free"] = createExportWrapper("EVP_PKEY_meth_free");

var _EVP_PKEY_meth_add0 = Module["_EVP_PKEY_meth_add0"] = createExportWrapper("EVP_PKEY_meth_add0");

var _EVP_PKEY_meth_remove = Module["_EVP_PKEY_meth_remove"] = createExportWrapper("EVP_PKEY_meth_remove");

var _EVP_PKEY_meth_get_count = Module["_EVP_PKEY_meth_get_count"] = createExportWrapper("EVP_PKEY_meth_get_count");

var _EVP_PKEY_meth_get0 = Module["_EVP_PKEY_meth_get0"] = createExportWrapper("EVP_PKEY_meth_get0");

var _EVP_PKEY_CTX_ctrl_uint64 = Module["_EVP_PKEY_CTX_ctrl_uint64"] = createExportWrapper("EVP_PKEY_CTX_ctrl_uint64");

var _EVP_PKEY_CTX_ctrl_str = Module["_EVP_PKEY_CTX_ctrl_str"] = createExportWrapper("EVP_PKEY_CTX_ctrl_str");

var _EVP_PKEY_CTX_md = Module["_EVP_PKEY_CTX_md"] = createExportWrapper("EVP_PKEY_CTX_md");

var _EVP_PKEY_CTX_str2ctrl = Module["_EVP_PKEY_CTX_str2ctrl"] = createExportWrapper("EVP_PKEY_CTX_str2ctrl");

var _EVP_PKEY_CTX_hex2ctrl = Module["_EVP_PKEY_CTX_hex2ctrl"] = createExportWrapper("EVP_PKEY_CTX_hex2ctrl");

var _OPENSSL_hexstr2buf = Module["_OPENSSL_hexstr2buf"] = createExportWrapper("OPENSSL_hexstr2buf");

var _EVP_PKEY_CTX_get_operation = Module["_EVP_PKEY_CTX_get_operation"] = createExportWrapper("EVP_PKEY_CTX_get_operation");

var _EVP_PKEY_CTX_set0_keygen_info = Module["_EVP_PKEY_CTX_set0_keygen_info"] = createExportWrapper("EVP_PKEY_CTX_set0_keygen_info");

var _EVP_PKEY_CTX_set_data = Module["_EVP_PKEY_CTX_set_data"] = createExportWrapper("EVP_PKEY_CTX_set_data");

var _EVP_PKEY_CTX_get_data = Module["_EVP_PKEY_CTX_get_data"] = createExportWrapper("EVP_PKEY_CTX_get_data");

var _EVP_PKEY_CTX_set_app_data = Module["_EVP_PKEY_CTX_set_app_data"] = createExportWrapper("EVP_PKEY_CTX_set_app_data");

var _EVP_PKEY_CTX_get_app_data = Module["_EVP_PKEY_CTX_get_app_data"] = createExportWrapper("EVP_PKEY_CTX_get_app_data");

var _EVP_PKEY_meth_set_init = Module["_EVP_PKEY_meth_set_init"] = createExportWrapper("EVP_PKEY_meth_set_init");

var _EVP_PKEY_meth_set_copy = Module["_EVP_PKEY_meth_set_copy"] = createExportWrapper("EVP_PKEY_meth_set_copy");

var _EVP_PKEY_meth_set_cleanup = Module["_EVP_PKEY_meth_set_cleanup"] = createExportWrapper("EVP_PKEY_meth_set_cleanup");

var _EVP_PKEY_meth_set_paramgen = Module["_EVP_PKEY_meth_set_paramgen"] = createExportWrapper("EVP_PKEY_meth_set_paramgen");

var _EVP_PKEY_meth_set_keygen = Module["_EVP_PKEY_meth_set_keygen"] = createExportWrapper("EVP_PKEY_meth_set_keygen");

var _EVP_PKEY_meth_set_sign = Module["_EVP_PKEY_meth_set_sign"] = createExportWrapper("EVP_PKEY_meth_set_sign");

var _EVP_PKEY_meth_set_verify = Module["_EVP_PKEY_meth_set_verify"] = createExportWrapper("EVP_PKEY_meth_set_verify");

var _EVP_PKEY_meth_set_verify_recover = Module["_EVP_PKEY_meth_set_verify_recover"] = createExportWrapper("EVP_PKEY_meth_set_verify_recover");

var _EVP_PKEY_meth_set_signctx = Module["_EVP_PKEY_meth_set_signctx"] = createExportWrapper("EVP_PKEY_meth_set_signctx");

var _EVP_PKEY_meth_set_verifyctx = Module["_EVP_PKEY_meth_set_verifyctx"] = createExportWrapper("EVP_PKEY_meth_set_verifyctx");

var _EVP_PKEY_meth_set_encrypt = Module["_EVP_PKEY_meth_set_encrypt"] = createExportWrapper("EVP_PKEY_meth_set_encrypt");

var _EVP_PKEY_meth_set_decrypt = Module["_EVP_PKEY_meth_set_decrypt"] = createExportWrapper("EVP_PKEY_meth_set_decrypt");

var _EVP_PKEY_meth_set_derive = Module["_EVP_PKEY_meth_set_derive"] = createExportWrapper("EVP_PKEY_meth_set_derive");

var _EVP_PKEY_meth_set_ctrl = Module["_EVP_PKEY_meth_set_ctrl"] = createExportWrapper("EVP_PKEY_meth_set_ctrl");

var _EVP_PKEY_meth_set_digestsign = Module["_EVP_PKEY_meth_set_digestsign"] = createExportWrapper("EVP_PKEY_meth_set_digestsign");

var _EVP_PKEY_meth_set_digestverify = Module["_EVP_PKEY_meth_set_digestverify"] = createExportWrapper("EVP_PKEY_meth_set_digestverify");

var _EVP_PKEY_meth_set_check = Module["_EVP_PKEY_meth_set_check"] = createExportWrapper("EVP_PKEY_meth_set_check");

var _EVP_PKEY_meth_set_public_check = Module["_EVP_PKEY_meth_set_public_check"] = createExportWrapper("EVP_PKEY_meth_set_public_check");

var _EVP_PKEY_meth_set_param_check = Module["_EVP_PKEY_meth_set_param_check"] = createExportWrapper("EVP_PKEY_meth_set_param_check");

var _EVP_PKEY_meth_set_digest_custom = Module["_EVP_PKEY_meth_set_digest_custom"] = createExportWrapper("EVP_PKEY_meth_set_digest_custom");

var _EVP_PKEY_meth_get_init = Module["_EVP_PKEY_meth_get_init"] = createExportWrapper("EVP_PKEY_meth_get_init");

var _EVP_PKEY_meth_get_copy = Module["_EVP_PKEY_meth_get_copy"] = createExportWrapper("EVP_PKEY_meth_get_copy");

var _EVP_PKEY_meth_get_cleanup = Module["_EVP_PKEY_meth_get_cleanup"] = createExportWrapper("EVP_PKEY_meth_get_cleanup");

var _EVP_PKEY_meth_get_paramgen = Module["_EVP_PKEY_meth_get_paramgen"] = createExportWrapper("EVP_PKEY_meth_get_paramgen");

var _EVP_PKEY_meth_get_keygen = Module["_EVP_PKEY_meth_get_keygen"] = createExportWrapper("EVP_PKEY_meth_get_keygen");

var _EVP_PKEY_meth_get_sign = Module["_EVP_PKEY_meth_get_sign"] = createExportWrapper("EVP_PKEY_meth_get_sign");

var _EVP_PKEY_meth_get_verify = Module["_EVP_PKEY_meth_get_verify"] = createExportWrapper("EVP_PKEY_meth_get_verify");

var _EVP_PKEY_meth_get_verify_recover = Module["_EVP_PKEY_meth_get_verify_recover"] = createExportWrapper("EVP_PKEY_meth_get_verify_recover");

var _EVP_PKEY_meth_get_signctx = Module["_EVP_PKEY_meth_get_signctx"] = createExportWrapper("EVP_PKEY_meth_get_signctx");

var _EVP_PKEY_meth_get_verifyctx = Module["_EVP_PKEY_meth_get_verifyctx"] = createExportWrapper("EVP_PKEY_meth_get_verifyctx");

var _EVP_PKEY_meth_get_encrypt = Module["_EVP_PKEY_meth_get_encrypt"] = createExportWrapper("EVP_PKEY_meth_get_encrypt");

var _EVP_PKEY_meth_get_decrypt = Module["_EVP_PKEY_meth_get_decrypt"] = createExportWrapper("EVP_PKEY_meth_get_decrypt");

var _EVP_PKEY_meth_get_derive = Module["_EVP_PKEY_meth_get_derive"] = createExportWrapper("EVP_PKEY_meth_get_derive");

var _EVP_PKEY_meth_get_ctrl = Module["_EVP_PKEY_meth_get_ctrl"] = createExportWrapper("EVP_PKEY_meth_get_ctrl");

var _EVP_PKEY_meth_get_digestsign = Module["_EVP_PKEY_meth_get_digestsign"] = createExportWrapper("EVP_PKEY_meth_get_digestsign");

var _EVP_PKEY_meth_get_digestverify = Module["_EVP_PKEY_meth_get_digestverify"] = createExportWrapper("EVP_PKEY_meth_get_digestverify");

var _EVP_PKEY_meth_get_check = Module["_EVP_PKEY_meth_get_check"] = createExportWrapper("EVP_PKEY_meth_get_check");

var _EVP_PKEY_meth_get_public_check = Module["_EVP_PKEY_meth_get_public_check"] = createExportWrapper("EVP_PKEY_meth_get_public_check");

var _EVP_PKEY_meth_get_param_check = Module["_EVP_PKEY_meth_get_param_check"] = createExportWrapper("EVP_PKEY_meth_get_param_check");

var _EVP_PKEY_meth_get_digest_custom = Module["_EVP_PKEY_meth_get_digest_custom"] = createExportWrapper("EVP_PKEY_meth_get_digest_custom");

var _crypto_cleanup_all_ex_data_int = Module["_crypto_cleanup_all_ex_data_int"] = createExportWrapper("crypto_cleanup_all_ex_data_int");

var _CRYPTO_free_ex_index = Module["_CRYPTO_free_ex_index"] = createExportWrapper("CRYPTO_free_ex_index");

var _OPENSSL_issetugid = Module["_OPENSSL_issetugid"] = createExportWrapper("OPENSSL_issetugid");

var _HMAC_CTX_set_flags = Module["_HMAC_CTX_set_flags"] = createExportWrapper("HMAC_CTX_set_flags");

var _HMAC_Init = Module["_HMAC_Init"] = createExportWrapper("HMAC_Init");

var _HMAC_CTX_reset = Module["_HMAC_CTX_reset"] = createExportWrapper("HMAC_CTX_reset");

var _HMAC = Module["_HMAC"] = createExportWrapper("HMAC");

var _HMAC_CTX_get_md = Module["_HMAC_CTX_get_md"] = createExportWrapper("HMAC_CTX_get_md");

var _IDEA_encrypt = Module["_IDEA_encrypt"] = createExportWrapper("IDEA_encrypt");

var _IDEA_options = Module["_IDEA_options"] = createExportWrapper("IDEA_options");

var _OPENSSL_thread_stop = Module["_OPENSSL_thread_stop"] = createExportWrapper("OPENSSL_thread_stop");

var _drbg_delete_thread_state = Module["_drbg_delete_thread_state"] = createExportWrapper("drbg_delete_thread_state");

var _openssl_init_fork_handlers = Module["_openssl_init_fork_handlers"] = createExportWrapper("openssl_init_fork_handlers");

var _OPENSSL_cleanup = Module["_OPENSSL_cleanup"] = createExportWrapper("OPENSSL_cleanup");

var _rand_cleanup_int = Module["_rand_cleanup_int"] = createExportWrapper("rand_cleanup_int");

var _rand_drbg_cleanup_int = Module["_rand_drbg_cleanup_int"] = createExportWrapper("rand_drbg_cleanup_int");

var _ossl_store_cleanup_int = Module["_ossl_store_cleanup_int"] = createExportWrapper("ossl_store_cleanup_int");

var _obj_cleanup_int = Module["_obj_cleanup_int"] = createExportWrapper("obj_cleanup_int");

var _CRYPTO_secure_malloc_done = Module["_CRYPTO_secure_malloc_done"] = createExportWrapper("CRYPTO_secure_malloc_done");

var _atexit = Module["_atexit"] = createExportWrapper("atexit");

var _SM4_set_key = Module["_SM4_set_key"] = createExportWrapper("SM4_set_key");

var _SM4_encrypt = Module["_SM4_encrypt"] = createExportWrapper("SM4_encrypt");

var _SM4_decrypt = Module["_SM4_decrypt"] = createExportWrapper("SM4_decrypt");

var _MDC2_Init = Module["_MDC2_Init"] = createExportWrapper("MDC2_Init");

var _MDC2_Update = Module["_MDC2_Update"] = createExportWrapper("MDC2_Update");

var _MDC2_Final = Module["_MDC2_Final"] = createExportWrapper("MDC2_Final");

var _WHIRLPOOL_Init = Module["_WHIRLPOOL_Init"] = createExportWrapper("WHIRLPOOL_Init");

var _WHIRLPOOL_Update = Module["_WHIRLPOOL_Update"] = createExportWrapper("WHIRLPOOL_Update");

var _WHIRLPOOL_Final = Module["_WHIRLPOOL_Final"] = createExportWrapper("WHIRLPOOL_Final");

var _EVP_sm3 = Module["_EVP_sm3"] = createExportWrapper("EVP_sm3");

var _X509V3_parse_list = Module["_X509V3_parse_list"] = createExportWrapper("X509V3_parse_list");

var _X509V3_get_section = Module["_X509V3_get_section"] = createExportWrapper("X509V3_get_section");

var _X509V3_get_value_bool = Module["_X509V3_get_value_bool"] = createExportWrapper("X509V3_get_value_bool");

var _s2i_ASN1_INTEGER = Module["_s2i_ASN1_INTEGER"] = createExportWrapper("s2i_ASN1_INTEGER");

var _OBJ_txt2obj = Module["_OBJ_txt2obj"] = createExportWrapper("OBJ_txt2obj");

var _X509V3_section_free = Module["_X509V3_section_free"] = createExportWrapper("X509V3_section_free");

var _X509V3_conf_free = Module["_X509V3_conf_free"] = createExportWrapper("X509V3_conf_free");

var _OPENSSL_fork_prepare = Module["_OPENSSL_fork_prepare"] = createExportWrapper("OPENSSL_fork_prepare");

var _OPENSSL_fork_parent = Module["_OPENSSL_fork_parent"] = createExportWrapper("OPENSSL_fork_parent");

var _OPENSSL_fork_child = Module["_OPENSSL_fork_child"] = createExportWrapper("OPENSSL_fork_child");

var _openssl_lh_strcasehash = Module["_openssl_lh_strcasehash"] = createExportWrapper("openssl_lh_strcasehash");

var _md4_block_data_order = Module["_md4_block_data_order"] = createExportWrapper("md4_block_data_order");

var _MD4_Transform = Module["_MD4_Transform"] = createExportWrapper("MD4_Transform");

var _md5_block_data_order = Module["_md5_block_data_order"] = createExportWrapper("md5_block_data_order");

var _CRYPTO_set_mem_functions = Module["_CRYPTO_set_mem_functions"] = createExportWrapper("CRYPTO_set_mem_functions");

var _CRYPTO_set_mem_debug = Module["_CRYPTO_set_mem_debug"] = createExportWrapper("CRYPTO_set_mem_debug");

var _CRYPTO_get_mem_functions = Module["_CRYPTO_get_mem_functions"] = createExportWrapper("CRYPTO_get_mem_functions");

var _CRYPTO_secure_malloc_init = Module["_CRYPTO_secure_malloc_init"] = createExportWrapper("CRYPTO_secure_malloc_init");

var _mlock = Module["_mlock"] = createExportWrapper("mlock");

var _CRYPTO_secure_malloc_initialized = Module["_CRYPTO_secure_malloc_initialized"] = createExportWrapper("CRYPTO_secure_malloc_initialized");

var _CRYPTO_secure_allocated = Module["_CRYPTO_secure_allocated"] = createExportWrapper("CRYPTO_secure_allocated");

var _CRYPTO_secure_used = Module["_CRYPTO_secure_used"] = createExportWrapper("CRYPTO_secure_used");

var _CRYPTO_secure_actual_size = Module["_CRYPTO_secure_actual_size"] = createExportWrapper("CRYPTO_secure_actual_size");

var _CRYPTO_gcm128_new = Module["_CRYPTO_gcm128_new"] = createExportWrapper("CRYPTO_gcm128_new");

var _CRYPTO_gcm128_release = Module["_CRYPTO_gcm128_release"] = createExportWrapper("CRYPTO_gcm128_release");

var _CRYPTO_ocb128_new = Module["_CRYPTO_ocb128_new"] = createExportWrapper("CRYPTO_ocb128_new");

var _openssl_fopen = Module["_openssl_fopen"] = createExportWrapper("openssl_fopen");

var _OPENSSL_memcmp = Module["_OPENSSL_memcmp"] = createExportWrapper("OPENSSL_memcmp");

var _OPENSSL_buf2hexstr = Module["_OPENSSL_buf2hexstr"] = createExportWrapper("OPENSSL_buf2hexstr");

var _openssl_strerror_r = Module["_openssl_strerror_r"] = createExportWrapper("openssl_strerror_r");

var _gmtime = Module["_gmtime"] = createExportWrapper("gmtime");

var _OBJ_NAME_init = Module["_OBJ_NAME_init"] = createExportWrapper("OBJ_NAME_init");

var _OBJ_NAME_new_index = Module["_OBJ_NAME_new_index"] = createExportWrapper("OBJ_NAME_new_index");

var _OBJ_NAME_remove = Module["_OBJ_NAME_remove"] = createExportWrapper("OBJ_NAME_remove");

var _OBJ_new_nid = Module["_OBJ_new_nid"] = createExportWrapper("OBJ_new_nid");

var _OBJ_add_object = Module["_OBJ_add_object"] = createExportWrapper("OBJ_add_object");

var _OBJ_bsearch_ex_ = Module["_OBJ_bsearch_ex_"] = createExportWrapper("OBJ_bsearch_ex_");

var _OBJ_add_sigid = Module["_OBJ_add_sigid"] = createExportWrapper("OBJ_add_sigid");

var _d2i_X509_REQ = Module["_d2i_X509_REQ"] = createExportWrapper("d2i_X509_REQ");

var _i2d_X509_REQ = Module["_i2d_X509_REQ"] = createExportWrapper("i2d_X509_REQ");

var _PEM_write_bio_X509_REQ_NEW = Module["_PEM_write_bio_X509_REQ_NEW"] = createExportWrapper("PEM_write_bio_X509_REQ_NEW");

var _PEM_read_bio_X509_CRL = Module["_PEM_read_bio_X509_CRL"] = createExportWrapper("PEM_read_bio_X509_CRL");

var _d2i_X509_CRL = Module["_d2i_X509_CRL"] = createExportWrapper("d2i_X509_CRL");

var _i2d_X509_CRL = Module["_i2d_X509_CRL"] = createExportWrapper("i2d_X509_CRL");

var _d2i_PKCS7 = Module["_d2i_PKCS7"] = createExportWrapper("d2i_PKCS7");

var _i2d_PKCS7 = Module["_i2d_PKCS7"] = createExportWrapper("i2d_PKCS7");

var _PEM_read_bio_NETSCAPE_CERT_SEQUENCE = Module["_PEM_read_bio_NETSCAPE_CERT_SEQUENCE"] = createExportWrapper("PEM_read_bio_NETSCAPE_CERT_SEQUENCE");

var _PEM_write_bio_NETSCAPE_CERT_SEQUENCE = Module["_PEM_write_bio_NETSCAPE_CERT_SEQUENCE"] = createExportWrapper("PEM_write_bio_NETSCAPE_CERT_SEQUENCE");

var _PEM_write_bio_RSAPrivateKey = Module["_PEM_write_bio_RSAPrivateKey"] = createExportWrapper("PEM_write_bio_RSAPrivateKey");

var _i2d_RSAPrivateKey = Module["_i2d_RSAPrivateKey"] = createExportWrapper("i2d_RSAPrivateKey");

var _PEM_read_bio_RSAPublicKey = Module["_PEM_read_bio_RSAPublicKey"] = createExportWrapper("PEM_read_bio_RSAPublicKey");

var _d2i_RSAPublicKey = Module["_d2i_RSAPublicKey"] = createExportWrapper("d2i_RSAPublicKey");

var _PEM_write_bio_RSAPublicKey = Module["_PEM_write_bio_RSAPublicKey"] = createExportWrapper("PEM_write_bio_RSAPublicKey");

var _i2d_RSAPublicKey = Module["_i2d_RSAPublicKey"] = createExportWrapper("i2d_RSAPublicKey");

var _PEM_read_bio_RSA_PUBKEY = Module["_PEM_read_bio_RSA_PUBKEY"] = createExportWrapper("PEM_read_bio_RSA_PUBKEY");

var _d2i_RSA_PUBKEY = Module["_d2i_RSA_PUBKEY"] = createExportWrapper("d2i_RSA_PUBKEY");

var _PEM_write_bio_RSA_PUBKEY = Module["_PEM_write_bio_RSA_PUBKEY"] = createExportWrapper("PEM_write_bio_RSA_PUBKEY");

var _i2d_RSA_PUBKEY = Module["_i2d_RSA_PUBKEY"] = createExportWrapper("i2d_RSA_PUBKEY");

var _PEM_read_bio_DSAPrivateKey = Module["_PEM_read_bio_DSAPrivateKey"] = createExportWrapper("PEM_read_bio_DSAPrivateKey");

var _PEM_write_bio_DSAPrivateKey = Module["_PEM_write_bio_DSAPrivateKey"] = createExportWrapper("PEM_write_bio_DSAPrivateKey");

var _PEM_read_bio_DSA_PUBKEY = Module["_PEM_read_bio_DSA_PUBKEY"] = createExportWrapper("PEM_read_bio_DSA_PUBKEY");

var _d2i_DSA_PUBKEY = Module["_d2i_DSA_PUBKEY"] = createExportWrapper("d2i_DSA_PUBKEY");

var _PEM_write_bio_DSA_PUBKEY = Module["_PEM_write_bio_DSA_PUBKEY"] = createExportWrapper("PEM_write_bio_DSA_PUBKEY");

var _i2d_DSA_PUBKEY = Module["_i2d_DSA_PUBKEY"] = createExportWrapper("i2d_DSA_PUBKEY");

var _PEM_read_bio_DSAparams = Module["_PEM_read_bio_DSAparams"] = createExportWrapper("PEM_read_bio_DSAparams");

var _PEM_write_bio_DSAparams = Module["_PEM_write_bio_DSAparams"] = createExportWrapper("PEM_write_bio_DSAparams");

var _PEM_read_bio_ECPrivateKey = Module["_PEM_read_bio_ECPrivateKey"] = createExportWrapper("PEM_read_bio_ECPrivateKey");

var _PEM_read_bio_ECPKParameters = Module["_PEM_read_bio_ECPKParameters"] = createExportWrapper("PEM_read_bio_ECPKParameters");

var _PEM_write_bio_ECPKParameters = Module["_PEM_write_bio_ECPKParameters"] = createExportWrapper("PEM_write_bio_ECPKParameters");

var _PEM_write_bio_ECPrivateKey = Module["_PEM_write_bio_ECPrivateKey"] = createExportWrapper("PEM_write_bio_ECPrivateKey");

var _PEM_read_bio_EC_PUBKEY = Module["_PEM_read_bio_EC_PUBKEY"] = createExportWrapper("PEM_read_bio_EC_PUBKEY");

var _d2i_EC_PUBKEY = Module["_d2i_EC_PUBKEY"] = createExportWrapper("d2i_EC_PUBKEY");

var _PEM_write_bio_EC_PUBKEY = Module["_PEM_write_bio_EC_PUBKEY"] = createExportWrapper("PEM_write_bio_EC_PUBKEY");

var _i2d_EC_PUBKEY = Module["_i2d_EC_PUBKEY"] = createExportWrapper("i2d_EC_PUBKEY");

var _PEM_write_bio_DHparams = Module["_PEM_write_bio_DHparams"] = createExportWrapper("PEM_write_bio_DHparams");

var _PEM_write_bio_DHxparams = Module["_PEM_write_bio_DHxparams"] = createExportWrapper("PEM_write_bio_DHxparams");

var _d2i_X509_AUX = Module["_d2i_X509_AUX"] = createExportWrapper("d2i_X509_AUX");

var _PEM_get_EVP_CIPHER_INFO = Module["_PEM_get_EVP_CIPHER_INFO"] = createExportWrapper("PEM_get_EVP_CIPHER_INFO");

var _PEM_do_header = Module["_PEM_do_header"] = createExportWrapper("PEM_do_header");

var _PEM_X509_INFO_write_bio = Module["_PEM_X509_INFO_write_bio"] = createExportWrapper("PEM_X509_INFO_write_bio");

var _PEM_proc_type = Module["_PEM_proc_type"] = createExportWrapper("PEM_proc_type");

var _PEM_dek_info = Module["_PEM_dek_info"] = createExportWrapper("PEM_dek_info");

var _PEM_write_bio = Module["_PEM_write_bio"] = createExportWrapper("PEM_write_bio");

var _PEM_def_callback = Module["_PEM_def_callback"] = createExportWrapper("PEM_def_callback");

var _UI_new = Module["_UI_new"] = createExportWrapper("UI_new");

var _UI_add_input_string = Module["_UI_add_input_string"] = createExportWrapper("UI_add_input_string");

var _UI_add_verify_string = Module["_UI_add_verify_string"] = createExportWrapper("UI_add_verify_string");

var _UI_process = Module["_UI_process"] = createExportWrapper("UI_process");

var _UI_free = Module["_UI_free"] = createExportWrapper("UI_free");

var _PEM_bytes_read_bio = Module["_PEM_bytes_read_bio"] = createExportWrapper("PEM_bytes_read_bio");

var _PEM_read_bio_ex = Module["_PEM_read_bio_ex"] = createExportWrapper("PEM_read_bio_ex");

var _PEM_bytes_read_bio_secmem = Module["_PEM_bytes_read_bio_secmem"] = createExportWrapper("PEM_bytes_read_bio_secmem");

var _strspn = Module["_strspn"] = createExportWrapper("strspn");

var _pem_check_suffix = Module["_pem_check_suffix"] = createExportWrapper("pem_check_suffix");

var _PEM_write_bio_PKCS8PrivateKey_nid = Module["_PEM_write_bio_PKCS8PrivateKey_nid"] = createExportWrapper("PEM_write_bio_PKCS8PrivateKey_nid");

var _PEM_write_bio_PKCS8PrivateKey = Module["_PEM_write_bio_PKCS8PrivateKey"] = createExportWrapper("PEM_write_bio_PKCS8PrivateKey");

var _i2d_PKCS8PrivateKey_bio = Module["_i2d_PKCS8PrivateKey_bio"] = createExportWrapper("i2d_PKCS8PrivateKey_bio");

var _i2d_PKCS8PrivateKey_nid_bio = Module["_i2d_PKCS8PrivateKey_nid_bio"] = createExportWrapper("i2d_PKCS8PrivateKey_nid_bio");

var _d2i_PKCS8PrivateKey_bio = Module["_d2i_PKCS8PrivateKey_bio"] = createExportWrapper("d2i_PKCS8PrivateKey_bio");

var _PEM_read_bio_PKCS8 = Module["_PEM_read_bio_PKCS8"] = createExportWrapper("PEM_read_bio_PKCS8");

var _PEM_write_bio_PKCS8 = Module["_PEM_write_bio_PKCS8"] = createExportWrapper("PEM_write_bio_PKCS8");

var _PEM_read_bio_PKCS8_PRIV_KEY_INFO = Module["_PEM_read_bio_PKCS8_PRIV_KEY_INFO"] = createExportWrapper("PEM_read_bio_PKCS8_PRIV_KEY_INFO");

var _PEM_write_bio_PKCS8_PRIV_KEY_INFO = Module["_PEM_write_bio_PKCS8_PRIV_KEY_INFO"] = createExportWrapper("PEM_write_bio_PKCS8_PRIV_KEY_INFO");

var _PKCS8_decrypt = Module["_PKCS8_decrypt"] = createExportWrapper("PKCS8_decrypt");

var _PKCS8_encrypt = Module["_PKCS8_encrypt"] = createExportWrapper("PKCS8_encrypt");

var _i2d_PKCS8_bio = Module["_i2d_PKCS8_bio"] = createExportWrapper("i2d_PKCS8_bio");

var _i2d_PKCS8_PRIV_KEY_INFO_bio = Module["_i2d_PKCS8_PRIV_KEY_INFO_bio"] = createExportWrapper("i2d_PKCS8_PRIV_KEY_INFO_bio");

var _d2i_PKCS8_bio = Module["_d2i_PKCS8_bio"] = createExportWrapper("d2i_PKCS8_bio");

var _PEM_write_bio_PrivateKey_traditional = Module["_PEM_write_bio_PrivateKey_traditional"] = createExportWrapper("PEM_write_bio_PrivateKey_traditional");

var _PEM_read_bio_Parameters = Module["_PEM_read_bio_Parameters"] = createExportWrapper("PEM_read_bio_Parameters");

var _PEM_write_bio_Parameters = Module["_PEM_write_bio_Parameters"] = createExportWrapper("PEM_write_bio_Parameters");

var _PEM_write_bio_X509_AUX = Module["_PEM_write_bio_X509_AUX"] = createExportWrapper("PEM_write_bio_X509_AUX");

var _i2d_X509_AUX = Module["_i2d_X509_AUX"] = createExportWrapper("i2d_X509_AUX");

var _PKCS12_item_pack_safebag = Module["_PKCS12_item_pack_safebag"] = createExportWrapper("PKCS12_item_pack_safebag");

var _PKCS12_pack_p7data = Module["_PKCS12_pack_p7data"] = createExportWrapper("PKCS12_pack_p7data");

var _PKCS12_unpack_p7data = Module["_PKCS12_unpack_p7data"] = createExportWrapper("PKCS12_unpack_p7data");

var _PKCS12_pack_p7encdata = Module["_PKCS12_pack_p7encdata"] = createExportWrapper("PKCS12_pack_p7encdata");

var _PKCS12_unpack_p7encdata = Module["_PKCS12_unpack_p7encdata"] = createExportWrapper("PKCS12_unpack_p7encdata");

var _PKCS12_decrypt_skey = Module["_PKCS12_decrypt_skey"] = createExportWrapper("PKCS12_decrypt_skey");

var _PKCS12_pack_authsafes = Module["_PKCS12_pack_authsafes"] = createExportWrapper("PKCS12_pack_authsafes");

var _PKCS12_unpack_authsafes = Module["_PKCS12_unpack_authsafes"] = createExportWrapper("PKCS12_unpack_authsafes");

var _d2i_PKCS12 = Module["_d2i_PKCS12"] = createExportWrapper("d2i_PKCS12");

var _i2d_PKCS12 = Module["_i2d_PKCS12"] = createExportWrapper("i2d_PKCS12");

var _PKCS12_new = Module["_PKCS12_new"] = createExportWrapper("PKCS12_new");

var _d2i_PKCS12_MAC_DATA = Module["_d2i_PKCS12_MAC_DATA"] = createExportWrapper("d2i_PKCS12_MAC_DATA");

var _i2d_PKCS12_MAC_DATA = Module["_i2d_PKCS12_MAC_DATA"] = createExportWrapper("i2d_PKCS12_MAC_DATA");

var _PKCS12_MAC_DATA_new = Module["_PKCS12_MAC_DATA_new"] = createExportWrapper("PKCS12_MAC_DATA_new");

var _PKCS12_MAC_DATA_free = Module["_PKCS12_MAC_DATA_free"] = createExportWrapper("PKCS12_MAC_DATA_free");

var _d2i_PKCS12_BAGS = Module["_d2i_PKCS12_BAGS"] = createExportWrapper("d2i_PKCS12_BAGS");

var _i2d_PKCS12_BAGS = Module["_i2d_PKCS12_BAGS"] = createExportWrapper("i2d_PKCS12_BAGS");

var _PKCS12_BAGS_new = Module["_PKCS12_BAGS_new"] = createExportWrapper("PKCS12_BAGS_new");

var _PKCS12_BAGS_free = Module["_PKCS12_BAGS_free"] = createExportWrapper("PKCS12_BAGS_free");

var _d2i_PKCS12_SAFEBAG = Module["_d2i_PKCS12_SAFEBAG"] = createExportWrapper("d2i_PKCS12_SAFEBAG");

var _i2d_PKCS12_SAFEBAG = Module["_i2d_PKCS12_SAFEBAG"] = createExportWrapper("i2d_PKCS12_SAFEBAG");

var _PKCS12_SAFEBAG_new = Module["_PKCS12_SAFEBAG_new"] = createExportWrapper("PKCS12_SAFEBAG_new");

var _PKCS12_SAFEBAG_free = Module["_PKCS12_SAFEBAG_free"] = createExportWrapper("PKCS12_SAFEBAG_free");

var _PKCS12_add_localkeyid = Module["_PKCS12_add_localkeyid"] = createExportWrapper("PKCS12_add_localkeyid");

var _PKCS8_add_keyusage = Module["_PKCS8_add_keyusage"] = createExportWrapper("PKCS8_add_keyusage");

var _PKCS12_add_friendlyname_asc = Module["_PKCS12_add_friendlyname_asc"] = createExportWrapper("PKCS12_add_friendlyname_asc");

var _PKCS12_add_friendlyname_utf8 = Module["_PKCS12_add_friendlyname_utf8"] = createExportWrapper("PKCS12_add_friendlyname_utf8");

var _PKCS12_add_friendlyname_uni = Module["_PKCS12_add_friendlyname_uni"] = createExportWrapper("PKCS12_add_friendlyname_uni");

var _PKCS12_add_CSPName_asc = Module["_PKCS12_add_CSPName_asc"] = createExportWrapper("PKCS12_add_CSPName_asc");

var _PKCS12_get_attr_gen = Module["_PKCS12_get_attr_gen"] = createExportWrapper("PKCS12_get_attr_gen");

var _PKCS12_get_friendlyname = Module["_PKCS12_get_friendlyname"] = createExportWrapper("PKCS12_get_friendlyname");

var _PKCS12_SAFEBAG_get0_attrs = Module["_PKCS12_SAFEBAG_get0_attrs"] = createExportWrapper("PKCS12_SAFEBAG_get0_attrs");

var _PKCS12_PBE_add = Module["_PKCS12_PBE_add"] = createExportWrapper("PKCS12_PBE_add");

var _PKCS12_key_gen_utf8 = Module["_PKCS12_key_gen_utf8"] = createExportWrapper("PKCS12_key_gen_utf8");

var _PKCS12_add_cert = Module["_PKCS12_add_cert"] = createExportWrapper("PKCS12_add_cert");

var _X509_ATTRIBUTE_get0_type = Module["_X509_ATTRIBUTE_get0_type"] = createExportWrapper("X509_ATTRIBUTE_get0_type");

var _PKCS12_SAFEBAG_get0_attr = Module["_PKCS12_SAFEBAG_get0_attr"] = createExportWrapper("PKCS12_SAFEBAG_get0_attr");

var _OPENSSL_uni2utf8 = Module["_OPENSSL_uni2utf8"] = createExportWrapper("OPENSSL_uni2utf8");

var _PKCS12_add_safe = Module["_PKCS12_add_safe"] = createExportWrapper("PKCS12_add_safe");

var _PKCS12_add_key = Module["_PKCS12_add_key"] = createExportWrapper("PKCS12_add_key");

var _PKCS7_new = Module["_PKCS7_new"] = createExportWrapper("PKCS7_new");

var _PKCS7_set_type = Module["_PKCS7_set_type"] = createExportWrapper("PKCS7_set_type");

var _PKCS12_item_i2d_encrypt = Module["_PKCS12_item_i2d_encrypt"] = createExportWrapper("PKCS12_item_i2d_encrypt");

var _PKCS12_item_decrypt_d2i = Module["_PKCS12_item_decrypt_d2i"] = createExportWrapper("PKCS12_item_decrypt_d2i");

var _PKCS12_init = Module["_PKCS12_init"] = createExportWrapper("PKCS12_init");

var _PKCS12_set_mac = Module["_PKCS12_set_mac"] = createExportWrapper("PKCS12_set_mac");

var _PKCS12_SAFEBAG_create_cert = Module["_PKCS12_SAFEBAG_create_cert"] = createExportWrapper("PKCS12_SAFEBAG_create_cert");

var _X509_keyid_get0 = Module["_X509_keyid_get0"] = createExportWrapper("X509_keyid_get0");

var _PKCS12_SAFEBAG_create_pkcs8_encrypt = Module["_PKCS12_SAFEBAG_create_pkcs8_encrypt"] = createExportWrapper("PKCS12_SAFEBAG_create_pkcs8_encrypt");

var _PKCS12_SAFEBAG_create0_p8inf = Module["_PKCS12_SAFEBAG_create0_p8inf"] = createExportWrapper("PKCS12_SAFEBAG_create0_p8inf");

var _PKCS12_add_safes = Module["_PKCS12_add_safes"] = createExportWrapper("PKCS12_add_safes");

var _PKCS12_pbe_crypt = Module["_PKCS12_pbe_crypt"] = createExportWrapper("PKCS12_pbe_crypt");

var _PKCS12_key_gen_asc = Module["_PKCS12_key_gen_asc"] = createExportWrapper("PKCS12_key_gen_asc");

var _PKCS12_key_gen_uni = Module["_PKCS12_key_gen_uni"] = createExportWrapper("PKCS12_key_gen_uni");

var _OPENSSL_asc2uni = Module["_OPENSSL_asc2uni"] = createExportWrapper("OPENSSL_asc2uni");

var _OPENSSL_utf82uni = Module["_OPENSSL_utf82uni"] = createExportWrapper("OPENSSL_utf82uni");

var _PKCS12_verify_mac = Module["_PKCS12_verify_mac"] = createExportWrapper("PKCS12_verify_mac");

var _PKCS12_SAFEBAG_get_nid = Module["_PKCS12_SAFEBAG_get_nid"] = createExportWrapper("PKCS12_SAFEBAG_get_nid");

var _PKCS12_SAFEBAG_get0_p8inf = Module["_PKCS12_SAFEBAG_get0_p8inf"] = createExportWrapper("PKCS12_SAFEBAG_get0_p8inf");

var _PKCS12_SAFEBAG_get_bag_nid = Module["_PKCS12_SAFEBAG_get_bag_nid"] = createExportWrapper("PKCS12_SAFEBAG_get_bag_nid");

var _PKCS12_SAFEBAG_get1_cert = Module["_PKCS12_SAFEBAG_get1_cert"] = createExportWrapper("PKCS12_SAFEBAG_get1_cert");

var _X509_keyid_set1 = Module["_X509_keyid_set1"] = createExportWrapper("X509_keyid_set1");

var _X509_alias_set1 = Module["_X509_alias_set1"] = createExportWrapper("X509_alias_set1");

var _PKCS12_SAFEBAG_get0_safes = Module["_PKCS12_SAFEBAG_get0_safes"] = createExportWrapper("PKCS12_SAFEBAG_get0_safes");

var _PKCS12_mac_present = Module["_PKCS12_mac_present"] = createExportWrapper("PKCS12_mac_present");

var _PKCS12_get0_mac = Module["_PKCS12_get0_mac"] = createExportWrapper("PKCS12_get0_mac");

var _PKCS12_gen_mac = Module["_PKCS12_gen_mac"] = createExportWrapper("PKCS12_gen_mac");

var _PKCS12_setup_mac = Module["_PKCS12_setup_mac"] = createExportWrapper("PKCS12_setup_mac");

var _PKCS8_set0_pbe = Module["_PKCS8_set0_pbe"] = createExportWrapper("PKCS8_set0_pbe");

var _PKCS12_get_attr = Module["_PKCS12_get_attr"] = createExportWrapper("PKCS12_get_attr");

var _PKCS8_get_attr = Module["_PKCS8_get_attr"] = createExportWrapper("PKCS8_get_attr");

var _PKCS12_SAFEBAG_get0_pkcs8 = Module["_PKCS12_SAFEBAG_get0_pkcs8"] = createExportWrapper("PKCS12_SAFEBAG_get0_pkcs8");

var _PKCS12_SAFEBAG_get0_type = Module["_PKCS12_SAFEBAG_get0_type"] = createExportWrapper("PKCS12_SAFEBAG_get0_type");

var _PKCS12_SAFEBAG_get1_crl = Module["_PKCS12_SAFEBAG_get1_crl"] = createExportWrapper("PKCS12_SAFEBAG_get1_crl");

var _PKCS12_SAFEBAG_create_crl = Module["_PKCS12_SAFEBAG_create_crl"] = createExportWrapper("PKCS12_SAFEBAG_create_crl");

var _PKCS12_SAFEBAG_create0_pkcs8 = Module["_PKCS12_SAFEBAG_create0_pkcs8"] = createExportWrapper("PKCS12_SAFEBAG_create0_pkcs8");

var _OPENSSL_uni2asc = Module["_OPENSSL_uni2asc"] = createExportWrapper("OPENSSL_uni2asc");

var _i2d_PKCS7_NDEF = Module["_i2d_PKCS7_NDEF"] = createExportWrapper("i2d_PKCS7_NDEF");

var _PKCS7_dup = Module["_PKCS7_dup"] = createExportWrapper("PKCS7_dup");

var _d2i_PKCS7_SIGNED = Module["_d2i_PKCS7_SIGNED"] = createExportWrapper("d2i_PKCS7_SIGNED");

var _i2d_PKCS7_SIGNED = Module["_i2d_PKCS7_SIGNED"] = createExportWrapper("i2d_PKCS7_SIGNED");

var _PKCS7_SIGNED_new = Module["_PKCS7_SIGNED_new"] = createExportWrapper("PKCS7_SIGNED_new");

var _PKCS7_SIGNED_free = Module["_PKCS7_SIGNED_free"] = createExportWrapper("PKCS7_SIGNED_free");

var _d2i_PKCS7_SIGNER_INFO = Module["_d2i_PKCS7_SIGNER_INFO"] = createExportWrapper("d2i_PKCS7_SIGNER_INFO");

var _i2d_PKCS7_SIGNER_INFO = Module["_i2d_PKCS7_SIGNER_INFO"] = createExportWrapper("i2d_PKCS7_SIGNER_INFO");

var _PKCS7_SIGNER_INFO_new = Module["_PKCS7_SIGNER_INFO_new"] = createExportWrapper("PKCS7_SIGNER_INFO_new");

var _PKCS7_SIGNER_INFO_free = Module["_PKCS7_SIGNER_INFO_free"] = createExportWrapper("PKCS7_SIGNER_INFO_free");

var _d2i_PKCS7_ISSUER_AND_SERIAL = Module["_d2i_PKCS7_ISSUER_AND_SERIAL"] = createExportWrapper("d2i_PKCS7_ISSUER_AND_SERIAL");

var _i2d_PKCS7_ISSUER_AND_SERIAL = Module["_i2d_PKCS7_ISSUER_AND_SERIAL"] = createExportWrapper("i2d_PKCS7_ISSUER_AND_SERIAL");

var _PKCS7_ISSUER_AND_SERIAL_new = Module["_PKCS7_ISSUER_AND_SERIAL_new"] = createExportWrapper("PKCS7_ISSUER_AND_SERIAL_new");

var _PKCS7_ISSUER_AND_SERIAL_free = Module["_PKCS7_ISSUER_AND_SERIAL_free"] = createExportWrapper("PKCS7_ISSUER_AND_SERIAL_free");

var _d2i_PKCS7_ENVELOPE = Module["_d2i_PKCS7_ENVELOPE"] = createExportWrapper("d2i_PKCS7_ENVELOPE");

var _i2d_PKCS7_ENVELOPE = Module["_i2d_PKCS7_ENVELOPE"] = createExportWrapper("i2d_PKCS7_ENVELOPE");

var _PKCS7_ENVELOPE_new = Module["_PKCS7_ENVELOPE_new"] = createExportWrapper("PKCS7_ENVELOPE_new");

var _PKCS7_ENVELOPE_free = Module["_PKCS7_ENVELOPE_free"] = createExportWrapper("PKCS7_ENVELOPE_free");

var _d2i_PKCS7_RECIP_INFO = Module["_d2i_PKCS7_RECIP_INFO"] = createExportWrapper("d2i_PKCS7_RECIP_INFO");

var _i2d_PKCS7_RECIP_INFO = Module["_i2d_PKCS7_RECIP_INFO"] = createExportWrapper("i2d_PKCS7_RECIP_INFO");

var _PKCS7_RECIP_INFO_new = Module["_PKCS7_RECIP_INFO_new"] = createExportWrapper("PKCS7_RECIP_INFO_new");

var _PKCS7_RECIP_INFO_free = Module["_PKCS7_RECIP_INFO_free"] = createExportWrapper("PKCS7_RECIP_INFO_free");

var _d2i_PKCS7_ENC_CONTENT = Module["_d2i_PKCS7_ENC_CONTENT"] = createExportWrapper("d2i_PKCS7_ENC_CONTENT");

var _i2d_PKCS7_ENC_CONTENT = Module["_i2d_PKCS7_ENC_CONTENT"] = createExportWrapper("i2d_PKCS7_ENC_CONTENT");

var _PKCS7_ENC_CONTENT_new = Module["_PKCS7_ENC_CONTENT_new"] = createExportWrapper("PKCS7_ENC_CONTENT_new");

var _PKCS7_ENC_CONTENT_free = Module["_PKCS7_ENC_CONTENT_free"] = createExportWrapper("PKCS7_ENC_CONTENT_free");

var _d2i_PKCS7_SIGN_ENVELOPE = Module["_d2i_PKCS7_SIGN_ENVELOPE"] = createExportWrapper("d2i_PKCS7_SIGN_ENVELOPE");

var _i2d_PKCS7_SIGN_ENVELOPE = Module["_i2d_PKCS7_SIGN_ENVELOPE"] = createExportWrapper("i2d_PKCS7_SIGN_ENVELOPE");

var _PKCS7_SIGN_ENVELOPE_new = Module["_PKCS7_SIGN_ENVELOPE_new"] = createExportWrapper("PKCS7_SIGN_ENVELOPE_new");

var _PKCS7_SIGN_ENVELOPE_free = Module["_PKCS7_SIGN_ENVELOPE_free"] = createExportWrapper("PKCS7_SIGN_ENVELOPE_free");

var _d2i_PKCS7_ENCRYPT = Module["_d2i_PKCS7_ENCRYPT"] = createExportWrapper("d2i_PKCS7_ENCRYPT");

var _i2d_PKCS7_ENCRYPT = Module["_i2d_PKCS7_ENCRYPT"] = createExportWrapper("i2d_PKCS7_ENCRYPT");

var _PKCS7_ENCRYPT_new = Module["_PKCS7_ENCRYPT_new"] = createExportWrapper("PKCS7_ENCRYPT_new");

var _PKCS7_ENCRYPT_free = Module["_PKCS7_ENCRYPT_free"] = createExportWrapper("PKCS7_ENCRYPT_free");

var _d2i_PKCS7_DIGEST = Module["_d2i_PKCS7_DIGEST"] = createExportWrapper("d2i_PKCS7_DIGEST");

var _i2d_PKCS7_DIGEST = Module["_i2d_PKCS7_DIGEST"] = createExportWrapper("i2d_PKCS7_DIGEST");

var _PKCS7_DIGEST_new = Module["_PKCS7_DIGEST_new"] = createExportWrapper("PKCS7_DIGEST_new");

var _PKCS7_DIGEST_free = Module["_PKCS7_DIGEST_free"] = createExportWrapper("PKCS7_DIGEST_free");

var _PKCS7_print_ctx = Module["_PKCS7_print_ctx"] = createExportWrapper("PKCS7_print_ctx");

var _PKCS7_stream = Module["_PKCS7_stream"] = createExportWrapper("PKCS7_stream");

var _PKCS7_dataInit = Module["_PKCS7_dataInit"] = createExportWrapper("PKCS7_dataInit");

var _PKCS7_dataFinal = Module["_PKCS7_dataFinal"] = createExportWrapper("PKCS7_dataFinal");

var _PKCS7_add_attrib_smimecap = Module["_PKCS7_add_attrib_smimecap"] = createExportWrapper("PKCS7_add_attrib_smimecap");

var _PKCS7_get_smimecap = Module["_PKCS7_get_smimecap"] = createExportWrapper("PKCS7_get_smimecap");

var _PKCS7_simple_smimecap = Module["_PKCS7_simple_smimecap"] = createExportWrapper("PKCS7_simple_smimecap");

var _PKCS7_add_attrib_content_type = Module["_PKCS7_add_attrib_content_type"] = createExportWrapper("PKCS7_add_attrib_content_type");

var _PKCS7_add0_attrib_signing_time = Module["_PKCS7_add0_attrib_signing_time"] = createExportWrapper("PKCS7_add0_attrib_signing_time");

var _PKCS7_add1_attrib_digest = Module["_PKCS7_add1_attrib_digest"] = createExportWrapper("PKCS7_add1_attrib_digest");

var _PKCS7_ctrl = Module["_PKCS7_ctrl"] = createExportWrapper("PKCS7_ctrl");

var _PKCS7_dataDecode = Module["_PKCS7_dataDecode"] = createExportWrapper("PKCS7_dataDecode");

var _PKCS7_add_signed_attribute = Module["_PKCS7_add_signed_attribute"] = createExportWrapper("PKCS7_add_signed_attribute");

var _PKCS7_get_signed_attribute = Module["_PKCS7_get_signed_attribute"] = createExportWrapper("PKCS7_get_signed_attribute");

var _PKCS7_SIGNER_INFO_sign = Module["_PKCS7_SIGNER_INFO_sign"] = createExportWrapper("PKCS7_SIGNER_INFO_sign");

var _PKCS7_dataVerify = Module["_PKCS7_dataVerify"] = createExportWrapper("PKCS7_dataVerify");

var _X509_find_by_issuer_and_serial = Module["_X509_find_by_issuer_and_serial"] = createExportWrapper("X509_find_by_issuer_and_serial");

var _X509_STORE_CTX_cleanup = Module["_X509_STORE_CTX_cleanup"] = createExportWrapper("X509_STORE_CTX_cleanup");

var _PKCS7_signatureVerify = Module["_PKCS7_signatureVerify"] = createExportWrapper("PKCS7_signatureVerify");

var _PKCS7_digest_from_attributes = Module["_PKCS7_digest_from_attributes"] = createExportWrapper("PKCS7_digest_from_attributes");

var _PKCS7_get_issuer_and_serial = Module["_PKCS7_get_issuer_and_serial"] = createExportWrapper("PKCS7_get_issuer_and_serial");

var _PKCS7_get_attribute = Module["_PKCS7_get_attribute"] = createExportWrapper("PKCS7_get_attribute");

var _PKCS7_set_signed_attributes = Module["_PKCS7_set_signed_attributes"] = createExportWrapper("PKCS7_set_signed_attributes");

var _X509_ATTRIBUTE_dup = Module["_X509_ATTRIBUTE_dup"] = createExportWrapper("X509_ATTRIBUTE_dup");

var _PKCS7_set_attributes = Module["_PKCS7_set_attributes"] = createExportWrapper("PKCS7_set_attributes");

var _X509_ATTRIBUTE_get0_object = Module["_X509_ATTRIBUTE_get0_object"] = createExportWrapper("X509_ATTRIBUTE_get0_object");

var _X509_ATTRIBUTE_create = Module["_X509_ATTRIBUTE_create"] = createExportWrapper("X509_ATTRIBUTE_create");

var _PKCS7_add_attribute = Module["_PKCS7_add_attribute"] = createExportWrapper("PKCS7_add_attribute");

var _PKCS7_content_new = Module["_PKCS7_content_new"] = createExportWrapper("PKCS7_content_new");

var _PKCS7_set_content = Module["_PKCS7_set_content"] = createExportWrapper("PKCS7_set_content");

var _PKCS7_set0_type_other = Module["_PKCS7_set0_type_other"] = createExportWrapper("PKCS7_set0_type_other");

var _PKCS7_add_signer = Module["_PKCS7_add_signer"] = createExportWrapper("PKCS7_add_signer");

var _PKCS7_add_certificate = Module["_PKCS7_add_certificate"] = createExportWrapper("PKCS7_add_certificate");

var _PKCS7_add_crl = Module["_PKCS7_add_crl"] = createExportWrapper("PKCS7_add_crl");

var _PKCS7_SIGNER_INFO_set = Module["_PKCS7_SIGNER_INFO_set"] = createExportWrapper("PKCS7_SIGNER_INFO_set");

var _PKCS7_add_signature = Module["_PKCS7_add_signature"] = createExportWrapper("PKCS7_add_signature");

var _PKCS7_set_digest = Module["_PKCS7_set_digest"] = createExportWrapper("PKCS7_set_digest");

var _PKCS7_get_signer_info = Module["_PKCS7_get_signer_info"] = createExportWrapper("PKCS7_get_signer_info");

var _PKCS7_RECIP_INFO_get0_alg = Module["_PKCS7_RECIP_INFO_get0_alg"] = createExportWrapper("PKCS7_RECIP_INFO_get0_alg");

var _PKCS7_add_recipient = Module["_PKCS7_add_recipient"] = createExportWrapper("PKCS7_add_recipient");

var _PKCS7_RECIP_INFO_set = Module["_PKCS7_RECIP_INFO_set"] = createExportWrapper("PKCS7_RECIP_INFO_set");

var _PKCS7_add_recipient_info = Module["_PKCS7_add_recipient_info"] = createExportWrapper("PKCS7_add_recipient_info");

var _PKCS7_cert_from_signer_info = Module["_PKCS7_cert_from_signer_info"] = createExportWrapper("PKCS7_cert_from_signer_info");

var _PKCS7_set_cipher = Module["_PKCS7_set_cipher"] = createExportWrapper("PKCS7_set_cipher");

var _i2d_PKCS7_bio_stream = Module["_i2d_PKCS7_bio_stream"] = createExportWrapper("i2d_PKCS7_bio_stream");

var _PEM_write_bio_PKCS7_stream = Module["_PEM_write_bio_PKCS7_stream"] = createExportWrapper("PEM_write_bio_PKCS7_stream");

var _PKCS7_sign_add_signer = Module["_PKCS7_sign_add_signer"] = createExportWrapper("PKCS7_sign_add_signer");

var _PKCS7_final = Module["_PKCS7_final"] = createExportWrapper("PKCS7_final");

var _drbg_ctr_init = Module["_drbg_ctr_init"] = createExportWrapper("drbg_ctr_init");

var _RAND_DRBG_set = Module["_RAND_DRBG_set"] = createExportWrapper("RAND_DRBG_set");

var _RAND_DRBG_set_defaults = Module["_RAND_DRBG_set_defaults"] = createExportWrapper("RAND_DRBG_set_defaults");

var _RAND_DRBG_new = Module["_RAND_DRBG_new"] = createExportWrapper("RAND_DRBG_new");

var _RAND_DRBG_secure_new = Module["_RAND_DRBG_secure_new"] = createExportWrapper("RAND_DRBG_secure_new");

var _RAND_DRBG_free = Module["_RAND_DRBG_free"] = createExportWrapper("RAND_DRBG_free");

var _RAND_DRBG_instantiate = Module["_RAND_DRBG_instantiate"] = createExportWrapper("RAND_DRBG_instantiate");

var _RAND_DRBG_uninstantiate = Module["_RAND_DRBG_uninstantiate"] = createExportWrapper("RAND_DRBG_uninstantiate");

var _RAND_DRBG_reseed = Module["_RAND_DRBG_reseed"] = createExportWrapper("RAND_DRBG_reseed");

var _rand_drbg_restart = Module["_rand_drbg_restart"] = createExportWrapper("rand_drbg_restart");

var _RAND_DRBG_generate = Module["_RAND_DRBG_generate"] = createExportWrapper("RAND_DRBG_generate");

var _RAND_DRBG_bytes = Module["_RAND_DRBG_bytes"] = createExportWrapper("RAND_DRBG_bytes");

var _RAND_DRBG_set_callbacks = Module["_RAND_DRBG_set_callbacks"] = createExportWrapper("RAND_DRBG_set_callbacks");

var _RAND_DRBG_set_reseed_interval = Module["_RAND_DRBG_set_reseed_interval"] = createExportWrapper("RAND_DRBG_set_reseed_interval");

var _RAND_DRBG_set_reseed_time_interval = Module["_RAND_DRBG_set_reseed_time_interval"] = createExportWrapper("RAND_DRBG_set_reseed_time_interval");

var _RAND_DRBG_set_reseed_defaults = Module["_RAND_DRBG_set_reseed_defaults"] = createExportWrapper("RAND_DRBG_set_reseed_defaults");

var _rand_drbg_lock = Module["_rand_drbg_lock"] = createExportWrapper("rand_drbg_lock");

var _rand_drbg_unlock = Module["_rand_drbg_unlock"] = createExportWrapper("rand_drbg_unlock");

var _rand_drbg_enable_locking = Module["_rand_drbg_enable_locking"] = createExportWrapper("rand_drbg_enable_locking");

var _RAND_DRBG_set_ex_data = Module["_RAND_DRBG_set_ex_data"] = createExportWrapper("RAND_DRBG_set_ex_data");

var _RAND_DRBG_get_ex_data = Module["_RAND_DRBG_get_ex_data"] = createExportWrapper("RAND_DRBG_get_ex_data");

var _rand_pool_free = Module["_rand_pool_free"] = createExportWrapper("rand_pool_free");

var _rand_drbg_cleanup_entropy = Module["_rand_drbg_cleanup_entropy"] = createExportWrapper("rand_drbg_cleanup_entropy");

var _openssl_get_fork_id = Module["_openssl_get_fork_id"] = createExportWrapper("openssl_get_fork_id");

var _rand_drbg_get_entropy = Module["_rand_drbg_get_entropy"] = createExportWrapper("rand_drbg_get_entropy");

var _rand_drbg_cleanup_nonce = Module["_rand_drbg_cleanup_nonce"] = createExportWrapper("rand_drbg_cleanup_nonce");

var _rand_drbg_get_nonce = Module["_rand_drbg_get_nonce"] = createExportWrapper("rand_drbg_get_nonce");

var _rand_pool_attach = Module["_rand_pool_attach"] = createExportWrapper("rand_pool_attach");

var _rand_pool_new = Module["_rand_pool_new"] = createExportWrapper("rand_pool_new");

var _rand_drbg_get_additional_data = Module["_rand_drbg_get_additional_data"] = createExportWrapper("rand_drbg_get_additional_data");

var _rand_drbg_cleanup_additional_data = Module["_rand_drbg_cleanup_additional_data"] = createExportWrapper("rand_drbg_cleanup_additional_data");

var _rand_drbg_seedlen = Module["_rand_drbg_seedlen"] = createExportWrapper("rand_drbg_seedlen");

var _RAND_DRBG_get0_master = Module["_RAND_DRBG_get0_master"] = createExportWrapper("RAND_DRBG_get0_master");

var _RAND_DRBG_get0_public = Module["_RAND_DRBG_get0_public"] = createExportWrapper("RAND_DRBG_get0_public");

var _RAND_DRBG_get0_private = Module["_RAND_DRBG_get0_private"] = createExportWrapper("RAND_DRBG_get0_private");

var _RAND_OpenSSL = Module["_RAND_OpenSSL"] = createExportWrapper("RAND_OpenSSL");

var _rand_pool_acquire_entropy = Module["_rand_pool_acquire_entropy"] = createExportWrapper("rand_pool_acquire_entropy");

var _rand_pool_bytes_needed = Module["_rand_pool_bytes_needed"] = createExportWrapper("rand_pool_bytes_needed");

var _rand_pool_add_begin = Module["_rand_pool_add_begin"] = createExportWrapper("rand_pool_add_begin");

var _rand_pool_add_end = Module["_rand_pool_add_end"] = createExportWrapper("rand_pool_add_end");

var _rand_pool_entropy_available = Module["_rand_pool_entropy_available"] = createExportWrapper("rand_pool_entropy_available");

var _rand_pool_length = Module["_rand_pool_length"] = createExportWrapper("rand_pool_length");

var _rand_pool_detach = Module["_rand_pool_detach"] = createExportWrapper("rand_pool_detach");

var _rand_pool_add_nonce_data = Module["_rand_pool_add_nonce_data"] = createExportWrapper("rand_pool_add_nonce_data");

var _CRYPTO_atomic_add = Module["_CRYPTO_atomic_add"] = createExportWrapper("CRYPTO_atomic_add");

var _rand_pool_add = Module["_rand_pool_add"] = createExportWrapper("rand_pool_add");

var _rand_pool_add_additional_data = Module["_rand_pool_add_additional_data"] = createExportWrapper("rand_pool_add_additional_data");

var _rand_pool_reattach = Module["_rand_pool_reattach"] = createExportWrapper("rand_pool_reattach");

var _rand_pool_cleanup = Module["_rand_pool_cleanup"] = createExportWrapper("rand_pool_cleanup");

var _RAND_set_rand_method = Module["_RAND_set_rand_method"] = createExportWrapper("RAND_set_rand_method");

var _RAND_keep_random_devices_open = Module["_RAND_keep_random_devices_open"] = createExportWrapper("RAND_keep_random_devices_open");

var _rand_pool_keep_random_devices_open = Module["_rand_pool_keep_random_devices_open"] = createExportWrapper("rand_pool_keep_random_devices_open");

var _rand_pool_init = Module["_rand_pool_init"] = createExportWrapper("rand_pool_init");

var _RAND_poll = Module["_RAND_poll"] = createExportWrapper("RAND_poll");

var _RAND_get_rand_method = Module["_RAND_get_rand_method"] = createExportWrapper("RAND_get_rand_method");

var _rand_pool_buffer = Module["_rand_pool_buffer"] = createExportWrapper("rand_pool_buffer");

var _rand_pool_entropy = Module["_rand_pool_entropy"] = createExportWrapper("rand_pool_entropy");

var _rand_pool_entropy_needed = Module["_rand_pool_entropy_needed"] = createExportWrapper("rand_pool_entropy_needed");

var _rand_pool_bytes_remaining = Module["_rand_pool_bytes_remaining"] = createExportWrapper("rand_pool_bytes_remaining");

var _RAND_seed = Module["_RAND_seed"] = createExportWrapper("RAND_seed");

var _RAND_add = Module["_RAND_add"] = createExportWrapper("RAND_add");

var _RAND_pseudo_bytes = Module["_RAND_pseudo_bytes"] = createExportWrapper("RAND_pseudo_bytes");

var _CRYPTO_THREAD_get_current_id = Module["_CRYPTO_THREAD_get_current_id"] = createExportWrapper("CRYPTO_THREAD_get_current_id");

var _setbuf = Module["_setbuf"] = createExportWrapper("setbuf");

var _RC2_encrypt = Module["_RC2_encrypt"] = createExportWrapper("RC2_encrypt");

var _RC2_decrypt = Module["_RC2_decrypt"] = createExportWrapper("RC2_decrypt");

var _RC4_options = Module["_RC4_options"] = createExportWrapper("RC4_options");

var _ripemd160_block_data_order = Module["_ripemd160_block_data_order"] = createExportWrapper("ripemd160_block_data_order");

var _RIPEMD160_Transform = Module["_RIPEMD160_Transform"] = createExportWrapper("RIPEMD160_Transform");

var _rsa_pss_params_create = Module["_rsa_pss_params_create"] = createExportWrapper("rsa_pss_params_create");

var _rsa_pss_get_param = Module["_rsa_pss_get_param"] = createExportWrapper("rsa_pss_get_param");

var _RSA_PSS_PARAMS_new = Module["_RSA_PSS_PARAMS_new"] = createExportWrapper("RSA_PSS_PARAMS_new");

var _RSA_PSS_PARAMS_free = Module["_RSA_PSS_PARAMS_free"] = createExportWrapper("RSA_PSS_PARAMS_free");

var _RSA_flags = Module["_RSA_flags"] = createExportWrapper("RSA_flags");

var _RSA_security_bits = Module["_RSA_security_bits"] = createExportWrapper("RSA_security_bits");

var _RSA_OAEP_PARAMS_new = Module["_RSA_OAEP_PARAMS_new"] = createExportWrapper("RSA_OAEP_PARAMS_new");

var _RSA_OAEP_PARAMS_free = Module["_RSA_OAEP_PARAMS_free"] = createExportWrapper("RSA_OAEP_PARAMS_free");

var _RSA_check_key_ex = Module["_RSA_check_key_ex"] = createExportWrapper("RSA_check_key_ex");

var _d2i_RSA_PSS_PARAMS = Module["_d2i_RSA_PSS_PARAMS"] = createExportWrapper("d2i_RSA_PSS_PARAMS");

var _i2d_RSA_PSS_PARAMS = Module["_i2d_RSA_PSS_PARAMS"] = createExportWrapper("i2d_RSA_PSS_PARAMS");

var _d2i_RSA_OAEP_PARAMS = Module["_d2i_RSA_OAEP_PARAMS"] = createExportWrapper("d2i_RSA_OAEP_PARAMS");

var _i2d_RSA_OAEP_PARAMS = Module["_i2d_RSA_OAEP_PARAMS"] = createExportWrapper("i2d_RSA_OAEP_PARAMS");

var _RSAPublicKey_dup = Module["_RSAPublicKey_dup"] = createExportWrapper("RSAPublicKey_dup");

var _RSAPrivateKey_dup = Module["_RSAPrivateKey_dup"] = createExportWrapper("RSAPrivateKey_dup");

var _rsa_multip_calc_product = Module["_rsa_multip_calc_product"] = createExportWrapper("rsa_multip_calc_product");

var _RSA_check_key = Module["_RSA_check_key"] = createExportWrapper("RSA_check_key");

var _rsa_multip_cap = Module["_rsa_multip_cap"] = createExportWrapper("rsa_multip_cap");

var _RSA_bits = Module["_RSA_bits"] = createExportWrapper("RSA_bits");

var _RSA_private_encrypt = Module["_RSA_private_encrypt"] = createExportWrapper("RSA_private_encrypt");

var _RSA_public_decrypt = Module["_RSA_public_decrypt"] = createExportWrapper("RSA_public_decrypt");

var _RSA_blinding_off = Module["_RSA_blinding_off"] = createExportWrapper("RSA_blinding_off");

var _CRYPTO_THREAD_compare_id = Module["_CRYPTO_THREAD_compare_id"] = createExportWrapper("CRYPTO_THREAD_compare_id");

var _RSA_blinding_on = Module["_RSA_blinding_on"] = createExportWrapper("RSA_blinding_on");

var _RSA_setup_blinding = Module["_RSA_setup_blinding"] = createExportWrapper("RSA_setup_blinding");

var _RSA_generate_key_ex = Module["_RSA_generate_key_ex"] = createExportWrapper("RSA_generate_key_ex");

var _RSA_generate_multi_prime_key = Module["_RSA_generate_multi_prime_key"] = createExportWrapper("RSA_generate_multi_prime_key");

var _RSA_new_method = Module["_RSA_new_method"] = createExportWrapper("RSA_new_method");

var _RSA_get_default_method = Module["_RSA_get_default_method"] = createExportWrapper("RSA_get_default_method");

var _RSA_get_method = Module["_RSA_get_method"] = createExportWrapper("RSA_get_method");

var _RSA_set_method = Module["_RSA_set_method"] = createExportWrapper("RSA_set_method");

var _rsa_multip_info_free = Module["_rsa_multip_info_free"] = createExportWrapper("rsa_multip_info_free");

var _RSA_set_ex_data = Module["_RSA_set_ex_data"] = createExportWrapper("RSA_set_ex_data");

var _RSA_get_ex_data = Module["_RSA_get_ex_data"] = createExportWrapper("RSA_get_ex_data");

var _RSA_set0_multi_prime_params = Module["_RSA_set0_multi_prime_params"] = createExportWrapper("RSA_set0_multi_prime_params");

var _rsa_multip_info_new = Module["_rsa_multip_info_new"] = createExportWrapper("rsa_multip_info_new");

var _rsa_multip_info_free_ex = Module["_rsa_multip_info_free_ex"] = createExportWrapper("rsa_multip_info_free_ex");

var _RSA_get_multi_prime_extra_count = Module["_RSA_get_multi_prime_extra_count"] = createExportWrapper("RSA_get_multi_prime_extra_count");

var _RSA_get0_multi_prime_factors = Module["_RSA_get0_multi_prime_factors"] = createExportWrapper("RSA_get0_multi_prime_factors");

var _RSA_get0_multi_prime_crt_params = Module["_RSA_get0_multi_prime_crt_params"] = createExportWrapper("RSA_get0_multi_prime_crt_params");

var _RSA_get0_n = Module["_RSA_get0_n"] = createExportWrapper("RSA_get0_n");

var _RSA_get0_e = Module["_RSA_get0_e"] = createExportWrapper("RSA_get0_e");

var _RSA_get0_d = Module["_RSA_get0_d"] = createExportWrapper("RSA_get0_d");

var _RSA_get0_p = Module["_RSA_get0_p"] = createExportWrapper("RSA_get0_p");

var _RSA_get0_q = Module["_RSA_get0_q"] = createExportWrapper("RSA_get0_q");

var _RSA_get0_dmp1 = Module["_RSA_get0_dmp1"] = createExportWrapper("RSA_get0_dmp1");

var _RSA_get0_dmq1 = Module["_RSA_get0_dmq1"] = createExportWrapper("RSA_get0_dmq1");

var _RSA_get0_iqmp = Module["_RSA_get0_iqmp"] = createExportWrapper("RSA_get0_iqmp");

var _RSA_get0_pss_params = Module["_RSA_get0_pss_params"] = createExportWrapper("RSA_get0_pss_params");

var _RSA_clear_flags = Module["_RSA_clear_flags"] = createExportWrapper("RSA_clear_flags");

var _RSA_test_flags = Module["_RSA_test_flags"] = createExportWrapper("RSA_test_flags");

var _RSA_set_flags = Module["_RSA_set_flags"] = createExportWrapper("RSA_set_flags");

var _RSA_get_version = Module["_RSA_get_version"] = createExportWrapper("RSA_get_version");

var _RSA_get0_engine = Module["_RSA_get0_engine"] = createExportWrapper("RSA_get0_engine");

var _RSA_padding_add_none = Module["_RSA_padding_add_none"] = createExportWrapper("RSA_padding_add_none");

var _RSA_padding_check_none = Module["_RSA_padding_check_none"] = createExportWrapper("RSA_padding_check_none");

var _RSA_padding_add_PKCS1_OAEP = Module["_RSA_padding_add_PKCS1_OAEP"] = createExportWrapper("RSA_padding_add_PKCS1_OAEP");

var _RSA_padding_add_PKCS1_OAEP_mgf1 = Module["_RSA_padding_add_PKCS1_OAEP_mgf1"] = createExportWrapper("RSA_padding_add_PKCS1_OAEP_mgf1");

var _PKCS1_MGF1 = Module["_PKCS1_MGF1"] = createExportWrapper("PKCS1_MGF1");

var _RSA_padding_check_PKCS1_OAEP = Module["_RSA_padding_check_PKCS1_OAEP"] = createExportWrapper("RSA_padding_check_PKCS1_OAEP");

var _RSA_padding_check_PKCS1_OAEP_mgf1 = Module["_RSA_padding_check_PKCS1_OAEP_mgf1"] = createExportWrapper("RSA_padding_check_PKCS1_OAEP_mgf1");

var _RSA_set_default_method = Module["_RSA_set_default_method"] = createExportWrapper("RSA_set_default_method");

var _RSA_PKCS1_OpenSSL = Module["_RSA_PKCS1_OpenSSL"] = createExportWrapper("RSA_PKCS1_OpenSSL");

var _RSA_null_method = Module["_RSA_null_method"] = createExportWrapper("RSA_null_method");

var _RSA_padding_add_SSLv23 = Module["_RSA_padding_add_SSLv23"] = createExportWrapper("RSA_padding_add_SSLv23");

var _RSA_padding_add_PKCS1_type_2 = Module["_RSA_padding_add_PKCS1_type_2"] = createExportWrapper("RSA_padding_add_PKCS1_type_2");

var _RSA_padding_check_X931 = Module["_RSA_padding_check_X931"] = createExportWrapper("RSA_padding_check_X931");

var _RSA_padding_check_PKCS1_type_1 = Module["_RSA_padding_check_PKCS1_type_1"] = createExportWrapper("RSA_padding_check_PKCS1_type_1");

var _RSA_padding_add_X931 = Module["_RSA_padding_add_X931"] = createExportWrapper("RSA_padding_add_X931");

var _RSA_padding_add_PKCS1_type_1 = Module["_RSA_padding_add_PKCS1_type_1"] = createExportWrapper("RSA_padding_add_PKCS1_type_1");

var _RSA_padding_check_SSLv23 = Module["_RSA_padding_check_SSLv23"] = createExportWrapper("RSA_padding_check_SSLv23");

var _RSA_padding_check_PKCS1_type_2 = Module["_RSA_padding_check_PKCS1_type_2"] = createExportWrapper("RSA_padding_check_PKCS1_type_2");

var _RSA_sign_ASN1_OCTET_STRING = Module["_RSA_sign_ASN1_OCTET_STRING"] = createExportWrapper("RSA_sign_ASN1_OCTET_STRING");

var _RSA_X931_hash_id = Module["_RSA_X931_hash_id"] = createExportWrapper("RSA_X931_hash_id");

var _RSA_sign = Module["_RSA_sign"] = createExportWrapper("RSA_sign");

var _RSA_padding_add_PKCS1_PSS_mgf1 = Module["_RSA_padding_add_PKCS1_PSS_mgf1"] = createExportWrapper("RSA_padding_add_PKCS1_PSS_mgf1");

var _RSA_verify = Module["_RSA_verify"] = createExportWrapper("RSA_verify");

var _RSA_verify_PKCS1_PSS_mgf1 = Module["_RSA_verify_PKCS1_PSS_mgf1"] = createExportWrapper("RSA_verify_PKCS1_PSS_mgf1");

var _int_rsa_verify = Module["_int_rsa_verify"] = createExportWrapper("int_rsa_verify");

var _RSA_verify_PKCS1_PSS = Module["_RSA_verify_PKCS1_PSS"] = createExportWrapper("RSA_verify_PKCS1_PSS");

var _RSA_padding_add_PKCS1_PSS = Module["_RSA_padding_add_PKCS1_PSS"] = createExportWrapper("RSA_padding_add_PKCS1_PSS");

var _RSA_verify_ASN1_OCTET_STRING = Module["_RSA_verify_ASN1_OCTET_STRING"] = createExportWrapper("RSA_verify_ASN1_OCTET_STRING");

var _SEED_encrypt = Module["_SEED_encrypt"] = createExportWrapper("SEED_encrypt");

var _SEED_decrypt = Module["_SEED_decrypt"] = createExportWrapper("SEED_decrypt");

var _SHA224 = Module["_SHA224"] = createExportWrapper("SHA224");

var _SHA384 = Module["_SHA384"] = createExportWrapper("SHA384");

var _SipHash_ctx_size = Module["_SipHash_ctx_size"] = createExportWrapper("SipHash_ctx_size");

var _SipHash_hash_size = Module["_SipHash_hash_size"] = createExportWrapper("SipHash_hash_size");

var _SipHash_set_hash_size = Module["_SipHash_set_hash_size"] = createExportWrapper("SipHash_set_hash_size");

var _SipHash_Init = Module["_SipHash_Init"] = createExportWrapper("SipHash_Init");

var _SipHash_Update = Module["_SipHash_Update"] = createExportWrapper("SipHash_Update");

var _SipHash_Final = Module["_SipHash_Final"] = createExportWrapper("SipHash_Final");

var _d2i_SM2_Ciphertext = Module["_d2i_SM2_Ciphertext"] = createExportWrapper("d2i_SM2_Ciphertext");

var _i2d_SM2_Ciphertext = Module["_i2d_SM2_Ciphertext"] = createExportWrapper("i2d_SM2_Ciphertext");

var _SM2_Ciphertext_new = Module["_SM2_Ciphertext_new"] = createExportWrapper("SM2_Ciphertext_new");

var _SM2_Ciphertext_free = Module["_SM2_Ciphertext_free"] = createExportWrapper("SM2_Ciphertext_free");

var _sm2_plaintext_size = Module["_sm2_plaintext_size"] = createExportWrapper("sm2_plaintext_size");

var _sm2_ciphertext_size = Module["_sm2_ciphertext_size"] = createExportWrapper("sm2_ciphertext_size");

var _sm2_encrypt = Module["_sm2_encrypt"] = createExportWrapper("sm2_encrypt");

var _sm2_decrypt = Module["_sm2_decrypt"] = createExportWrapper("sm2_decrypt");

var _sm2_sign = Module["_sm2_sign"] = createExportWrapper("sm2_sign");

var _sm2_verify = Module["_sm2_verify"] = createExportWrapper("sm2_verify");

var _sm2_compute_z_digest = Module["_sm2_compute_z_digest"] = createExportWrapper("sm2_compute_z_digest");

var _sm2_do_sign = Module["_sm2_do_sign"] = createExportWrapper("sm2_do_sign");

var _sm2_do_verify = Module["_sm2_do_verify"] = createExportWrapper("sm2_do_verify");

var _sm3_init = Module["_sm3_init"] = createExportWrapper("sm3_init");

var _sm3_update = Module["_sm3_update"] = createExportWrapper("sm3_update");

var _sm3_final = Module["_sm3_final"] = createExportWrapper("sm3_final");

var _sm3_block_data_order = Module["_sm3_block_data_order"] = createExportWrapper("sm3_block_data_order");

var _sm3_transform = Module["_sm3_transform"] = createExportWrapper("sm3_transform");

var _SRP_user_pwd_free = Module["_SRP_user_pwd_free"] = createExportWrapper("SRP_user_pwd_free");

var _SRP_VBASE_new = Module["_SRP_VBASE_new"] = createExportWrapper("SRP_VBASE_new");

var _SRP_VBASE_free = Module["_SRP_VBASE_free"] = createExportWrapper("SRP_VBASE_free");

var _SRP_VBASE_init = Module["_SRP_VBASE_init"] = createExportWrapper("SRP_VBASE_init");

var _SRP_VBASE_get_by_user = Module["_SRP_VBASE_get_by_user"] = createExportWrapper("SRP_VBASE_get_by_user");

var _SRP_VBASE_get1_by_user = Module["_SRP_VBASE_get1_by_user"] = createExportWrapper("SRP_VBASE_get1_by_user");

var _SRP_create_verifier = Module["_SRP_create_verifier"] = createExportWrapper("SRP_create_verifier");

var _TXT_DB_read = Module["_TXT_DB_read"] = createExportWrapper("TXT_DB_read");

var _TXT_DB_free = Module["_TXT_DB_free"] = createExportWrapper("TXT_DB_free");

var _OPENSSL_sk_deep_copy = Module["_OPENSSL_sk_deep_copy"] = createExportWrapper("OPENSSL_sk_deep_copy");

var _OPENSSL_sk_reserve = Module["_OPENSSL_sk_reserve"] = createExportWrapper("OPENSSL_sk_reserve");

var _OPENSSL_sk_find_ex = Module["_OPENSSL_sk_find_ex"] = createExportWrapper("OPENSSL_sk_find_ex");

var _OPENSSL_sk_unshift = Module["_OPENSSL_sk_unshift"] = createExportWrapper("OPENSSL_sk_unshift");

var _OPENSSL_sk_zero = Module["_OPENSSL_sk_zero"] = createExportWrapper("OPENSSL_sk_zero");

var _OPENSSL_sk_is_sorted = Module["_OPENSSL_sk_is_sorted"] = createExportWrapper("OPENSSL_sk_is_sorted");

var _ossl_store_file_attach_pem_bio_int = Module["_ossl_store_file_attach_pem_bio_int"] = createExportWrapper("ossl_store_file_attach_pem_bio_int");

var _ossl_store_file_detach_pem_bio_int = Module["_ossl_store_file_detach_pem_bio_int"] = createExportWrapper("ossl_store_file_detach_pem_bio_int");

var _ossl_store_file_loader_init = Module["_ossl_store_file_loader_init"] = createExportWrapper("ossl_store_file_loader_init");

var _ossl_store_init_once = Module["_ossl_store_init_once"] = createExportWrapper("ossl_store_init_once");

var _ossl_store_register_loader_int = Module["_ossl_store_register_loader_int"] = createExportWrapper("ossl_store_register_loader_int");

var _ossl_store_unregister_loader_int = Module["_ossl_store_unregister_loader_int"] = createExportWrapper("ossl_store_unregister_loader_int");

var _OSSL_STORE_SEARCH_get_type = Module["_OSSL_STORE_SEARCH_get_type"] = createExportWrapper("OSSL_STORE_SEARCH_get_type");

var _OSSL_STORE_SEARCH_get0_name = Module["_OSSL_STORE_SEARCH_get0_name"] = createExportWrapper("OSSL_STORE_SEARCH_get0_name");

var _OSSL_STORE_INFO_free = Module["_OSSL_STORE_INFO_free"] = createExportWrapper("OSSL_STORE_INFO_free");

var _OSSL_STORE_INFO_get_type = Module["_OSSL_STORE_INFO_get_type"] = createExportWrapper("OSSL_STORE_INFO_get_type");

var _ossl_store_info_get0_EMBEDDED_pem_name = Module["_ossl_store_info_get0_EMBEDDED_pem_name"] = createExportWrapper("ossl_store_info_get0_EMBEDDED_pem_name");

var _ossl_store_info_get0_EMBEDDED_buffer = Module["_ossl_store_info_get0_EMBEDDED_buffer"] = createExportWrapper("ossl_store_info_get0_EMBEDDED_buffer");

var _OSSL_STORE_INFO_new_NAME = Module["_OSSL_STORE_INFO_new_NAME"] = createExportWrapper("OSSL_STORE_INFO_new_NAME");

var _UI_set_method = Module["_UI_set_method"] = createExportWrapper("UI_set_method");

var _UI_add_user_data = Module["_UI_add_user_data"] = createExportWrapper("UI_add_user_data");

var _UI_construct_prompt = Module["_UI_construct_prompt"] = createExportWrapper("UI_construct_prompt");

var _OSSL_STORE_INFO_new_PKEY = Module["_OSSL_STORE_INFO_new_PKEY"] = createExportWrapper("OSSL_STORE_INFO_new_PKEY");

var _OSSL_STORE_INFO_new_CERT = Module["_OSSL_STORE_INFO_new_CERT"] = createExportWrapper("OSSL_STORE_INFO_new_CERT");

var _ossl_store_info_new_EMBEDDED = Module["_ossl_store_info_new_EMBEDDED"] = createExportWrapper("ossl_store_info_new_EMBEDDED");

var _OSSL_STORE_INFO_new_CRL = Module["_OSSL_STORE_INFO_new_CRL"] = createExportWrapper("OSSL_STORE_INFO_new_CRL");

var _OSSL_STORE_INFO_new_PARAMS = Module["_OSSL_STORE_INFO_new_PARAMS"] = createExportWrapper("OSSL_STORE_INFO_new_PARAMS");

var _ossl_store_destroy_loaders_int = Module["_ossl_store_destroy_loaders_int"] = createExportWrapper("ossl_store_destroy_loaders_int");

var _OSSL_STORE_open = Module["_OSSL_STORE_open"] = createExportWrapper("OSSL_STORE_open");

var _OSSL_STORE_ctrl = Module["_OSSL_STORE_ctrl"] = createExportWrapper("OSSL_STORE_ctrl");

var _OSSL_STORE_vctrl = Module["_OSSL_STORE_vctrl"] = createExportWrapper("OSSL_STORE_vctrl");

var _OSSL_STORE_expect = Module["_OSSL_STORE_expect"] = createExportWrapper("OSSL_STORE_expect");

var _OSSL_STORE_find = Module["_OSSL_STORE_find"] = createExportWrapper("OSSL_STORE_find");

var _OSSL_STORE_load = Module["_OSSL_STORE_load"] = createExportWrapper("OSSL_STORE_load");

var _ossl_store_get0_loader_int = Module["_ossl_store_get0_loader_int"] = createExportWrapper("ossl_store_get0_loader_int");

var _OSSL_STORE_eof = Module["_OSSL_STORE_eof"] = createExportWrapper("OSSL_STORE_eof");

var _OSSL_STORE_error = Module["_OSSL_STORE_error"] = createExportWrapper("OSSL_STORE_error");

var _OSSL_STORE_close = Module["_OSSL_STORE_close"] = createExportWrapper("OSSL_STORE_close");

var _OSSL_STORE_INFO_set0_NAME_description = Module["_OSSL_STORE_INFO_set0_NAME_description"] = createExportWrapper("OSSL_STORE_INFO_set0_NAME_description");

var _OSSL_STORE_INFO_get0_NAME = Module["_OSSL_STORE_INFO_get0_NAME"] = createExportWrapper("OSSL_STORE_INFO_get0_NAME");

var _OSSL_STORE_INFO_get1_NAME = Module["_OSSL_STORE_INFO_get1_NAME"] = createExportWrapper("OSSL_STORE_INFO_get1_NAME");

var _OSSL_STORE_INFO_get0_NAME_description = Module["_OSSL_STORE_INFO_get0_NAME_description"] = createExportWrapper("OSSL_STORE_INFO_get0_NAME_description");

var _OSSL_STORE_INFO_get1_NAME_description = Module["_OSSL_STORE_INFO_get1_NAME_description"] = createExportWrapper("OSSL_STORE_INFO_get1_NAME_description");

var _OSSL_STORE_INFO_get0_PARAMS = Module["_OSSL_STORE_INFO_get0_PARAMS"] = createExportWrapper("OSSL_STORE_INFO_get0_PARAMS");

var _OSSL_STORE_INFO_get1_PARAMS = Module["_OSSL_STORE_INFO_get1_PARAMS"] = createExportWrapper("OSSL_STORE_INFO_get1_PARAMS");

var _OSSL_STORE_INFO_get0_PKEY = Module["_OSSL_STORE_INFO_get0_PKEY"] = createExportWrapper("OSSL_STORE_INFO_get0_PKEY");

var _OSSL_STORE_INFO_get1_PKEY = Module["_OSSL_STORE_INFO_get1_PKEY"] = createExportWrapper("OSSL_STORE_INFO_get1_PKEY");

var _OSSL_STORE_INFO_get0_CERT = Module["_OSSL_STORE_INFO_get0_CERT"] = createExportWrapper("OSSL_STORE_INFO_get0_CERT");

var _OSSL_STORE_INFO_get1_CERT = Module["_OSSL_STORE_INFO_get1_CERT"] = createExportWrapper("OSSL_STORE_INFO_get1_CERT");

var _OSSL_STORE_INFO_get0_CRL = Module["_OSSL_STORE_INFO_get0_CRL"] = createExportWrapper("OSSL_STORE_INFO_get0_CRL");

var _OSSL_STORE_INFO_get1_CRL = Module["_OSSL_STORE_INFO_get1_CRL"] = createExportWrapper("OSSL_STORE_INFO_get1_CRL");

var _OSSL_STORE_supports_search = Module["_OSSL_STORE_supports_search"] = createExportWrapper("OSSL_STORE_supports_search");

var _OSSL_STORE_SEARCH_by_name = Module["_OSSL_STORE_SEARCH_by_name"] = createExportWrapper("OSSL_STORE_SEARCH_by_name");

var _OSSL_STORE_SEARCH_by_issuer_serial = Module["_OSSL_STORE_SEARCH_by_issuer_serial"] = createExportWrapper("OSSL_STORE_SEARCH_by_issuer_serial");

var _OSSL_STORE_SEARCH_by_key_fingerprint = Module["_OSSL_STORE_SEARCH_by_key_fingerprint"] = createExportWrapper("OSSL_STORE_SEARCH_by_key_fingerprint");

var _OSSL_STORE_SEARCH_by_alias = Module["_OSSL_STORE_SEARCH_by_alias"] = createExportWrapper("OSSL_STORE_SEARCH_by_alias");

var _OSSL_STORE_SEARCH_free = Module["_OSSL_STORE_SEARCH_free"] = createExportWrapper("OSSL_STORE_SEARCH_free");

var _OSSL_STORE_SEARCH_get0_serial = Module["_OSSL_STORE_SEARCH_get0_serial"] = createExportWrapper("OSSL_STORE_SEARCH_get0_serial");

var _OSSL_STORE_SEARCH_get0_bytes = Module["_OSSL_STORE_SEARCH_get0_bytes"] = createExportWrapper("OSSL_STORE_SEARCH_get0_bytes");

var _OSSL_STORE_SEARCH_get0_string = Module["_OSSL_STORE_SEARCH_get0_string"] = createExportWrapper("OSSL_STORE_SEARCH_get0_string");

var _OSSL_STORE_SEARCH_get0_digest = Module["_OSSL_STORE_SEARCH_get0_digest"] = createExportWrapper("OSSL_STORE_SEARCH_get0_digest");

var _ossl_store_attach_pem_bio = Module["_ossl_store_attach_pem_bio"] = createExportWrapper("ossl_store_attach_pem_bio");

var _ossl_store_detach_pem_bio = Module["_ossl_store_detach_pem_bio"] = createExportWrapper("ossl_store_detach_pem_bio");

var _OSSL_STORE_LOADER_new = Module["_OSSL_STORE_LOADER_new"] = createExportWrapper("OSSL_STORE_LOADER_new");

var _OSSL_STORE_LOADER_get0_engine = Module["_OSSL_STORE_LOADER_get0_engine"] = createExportWrapper("OSSL_STORE_LOADER_get0_engine");

var _OSSL_STORE_LOADER_get0_scheme = Module["_OSSL_STORE_LOADER_get0_scheme"] = createExportWrapper("OSSL_STORE_LOADER_get0_scheme");

var _OSSL_STORE_LOADER_set_open = Module["_OSSL_STORE_LOADER_set_open"] = createExportWrapper("OSSL_STORE_LOADER_set_open");

var _OSSL_STORE_LOADER_set_ctrl = Module["_OSSL_STORE_LOADER_set_ctrl"] = createExportWrapper("OSSL_STORE_LOADER_set_ctrl");

var _OSSL_STORE_LOADER_set_expect = Module["_OSSL_STORE_LOADER_set_expect"] = createExportWrapper("OSSL_STORE_LOADER_set_expect");

var _OSSL_STORE_LOADER_set_find = Module["_OSSL_STORE_LOADER_set_find"] = createExportWrapper("OSSL_STORE_LOADER_set_find");

var _OSSL_STORE_LOADER_set_load = Module["_OSSL_STORE_LOADER_set_load"] = createExportWrapper("OSSL_STORE_LOADER_set_load");

var _OSSL_STORE_LOADER_set_eof = Module["_OSSL_STORE_LOADER_set_eof"] = createExportWrapper("OSSL_STORE_LOADER_set_eof");

var _OSSL_STORE_LOADER_set_error = Module["_OSSL_STORE_LOADER_set_error"] = createExportWrapper("OSSL_STORE_LOADER_set_error");

var _OSSL_STORE_LOADER_set_close = Module["_OSSL_STORE_LOADER_set_close"] = createExportWrapper("OSSL_STORE_LOADER_set_close");

var _OSSL_STORE_LOADER_free = Module["_OSSL_STORE_LOADER_free"] = createExportWrapper("OSSL_STORE_LOADER_free");

var _OSSL_STORE_register_loader = Module["_OSSL_STORE_register_loader"] = createExportWrapper("OSSL_STORE_register_loader");

var _OSSL_STORE_unregister_loader = Module["_OSSL_STORE_unregister_loader"] = createExportWrapper("OSSL_STORE_unregister_loader");

var _OSSL_STORE_do_all_loaders = Module["_OSSL_STORE_do_all_loaders"] = createExportWrapper("OSSL_STORE_do_all_loaders");

var _TXT_DB_get_by_index = Module["_TXT_DB_get_by_index"] = createExportWrapper("TXT_DB_get_by_index");

var _TXT_DB_create_index = Module["_TXT_DB_create_index"] = createExportWrapper("TXT_DB_create_index");

var _TXT_DB_write = Module["_TXT_DB_write"] = createExportWrapper("TXT_DB_write");

var _TXT_DB_insert = Module["_TXT_DB_insert"] = createExportWrapper("TXT_DB_insert");

var _UI_new_method = Module["_UI_new_method"] = createExportWrapper("UI_new_method");

var _UI_get_default_method = Module["_UI_get_default_method"] = createExportWrapper("UI_get_default_method");

var _UI_null = Module["_UI_null"] = createExportWrapper("UI_null");

var _UI_dup_input_string = Module["_UI_dup_input_string"] = createExportWrapper("UI_dup_input_string");

var _UI_dup_verify_string = Module["_UI_dup_verify_string"] = createExportWrapper("UI_dup_verify_string");

var _UI_add_input_boolean = Module["_UI_add_input_boolean"] = createExportWrapper("UI_add_input_boolean");

var _UI_dup_input_boolean = Module["_UI_dup_input_boolean"] = createExportWrapper("UI_dup_input_boolean");

var _UI_add_info_string = Module["_UI_add_info_string"] = createExportWrapper("UI_add_info_string");

var _UI_dup_info_string = Module["_UI_dup_info_string"] = createExportWrapper("UI_dup_info_string");

var _UI_add_error_string = Module["_UI_add_error_string"] = createExportWrapper("UI_add_error_string");

var _UI_dup_error_string = Module["_UI_dup_error_string"] = createExportWrapper("UI_dup_error_string");

var _UI_dup_user_data = Module["_UI_dup_user_data"] = createExportWrapper("UI_dup_user_data");

var _UI_get0_user_data = Module["_UI_get0_user_data"] = createExportWrapper("UI_get0_user_data");

var _UI_get0_result = Module["_UI_get0_result"] = createExportWrapper("UI_get0_result");

var _UI_get0_result_string = Module["_UI_get0_result_string"] = createExportWrapper("UI_get0_result_string");

var _UI_get_result_length = Module["_UI_get_result_length"] = createExportWrapper("UI_get_result_length");

var _UI_get_result_string_length = Module["_UI_get_result_string_length"] = createExportWrapper("UI_get_result_string_length");

var _UI_ctrl = Module["_UI_ctrl"] = createExportWrapper("UI_ctrl");

var _UI_set_ex_data = Module["_UI_set_ex_data"] = createExportWrapper("UI_set_ex_data");

var _UI_get_ex_data = Module["_UI_get_ex_data"] = createExportWrapper("UI_get_ex_data");

var _UI_get_method = Module["_UI_get_method"] = createExportWrapper("UI_get_method");

var _UI_create_method = Module["_UI_create_method"] = createExportWrapper("UI_create_method");

var _UI_destroy_method = Module["_UI_destroy_method"] = createExportWrapper("UI_destroy_method");

var _UI_method_set_opener = Module["_UI_method_set_opener"] = createExportWrapper("UI_method_set_opener");

var _UI_method_set_writer = Module["_UI_method_set_writer"] = createExportWrapper("UI_method_set_writer");

var _UI_method_set_flusher = Module["_UI_method_set_flusher"] = createExportWrapper("UI_method_set_flusher");

var _UI_method_set_reader = Module["_UI_method_set_reader"] = createExportWrapper("UI_method_set_reader");

var _UI_method_set_closer = Module["_UI_method_set_closer"] = createExportWrapper("UI_method_set_closer");

var _UI_method_set_data_duplicator = Module["_UI_method_set_data_duplicator"] = createExportWrapper("UI_method_set_data_duplicator");

var _UI_method_set_prompt_constructor = Module["_UI_method_set_prompt_constructor"] = createExportWrapper("UI_method_set_prompt_constructor");

var _UI_method_set_ex_data = Module["_UI_method_set_ex_data"] = createExportWrapper("UI_method_set_ex_data");

var _UI_method_get_opener = Module["_UI_method_get_opener"] = createExportWrapper("UI_method_get_opener");

var _UI_method_get_writer = Module["_UI_method_get_writer"] = createExportWrapper("UI_method_get_writer");

var _UI_method_get_flusher = Module["_UI_method_get_flusher"] = createExportWrapper("UI_method_get_flusher");

var _UI_method_get_reader = Module["_UI_method_get_reader"] = createExportWrapper("UI_method_get_reader");

var _UI_method_get_closer = Module["_UI_method_get_closer"] = createExportWrapper("UI_method_get_closer");

var _UI_method_get_prompt_constructor = Module["_UI_method_get_prompt_constructor"] = createExportWrapper("UI_method_get_prompt_constructor");

var _UI_method_get_data_duplicator = Module["_UI_method_get_data_duplicator"] = createExportWrapper("UI_method_get_data_duplicator");

var _UI_method_get_data_destructor = Module["_UI_method_get_data_destructor"] = createExportWrapper("UI_method_get_data_destructor");

var _UI_method_get_ex_data = Module["_UI_method_get_ex_data"] = createExportWrapper("UI_method_get_ex_data");

var _UI_get_string_type = Module["_UI_get_string_type"] = createExportWrapper("UI_get_string_type");

var _UI_get_input_flags = Module["_UI_get_input_flags"] = createExportWrapper("UI_get_input_flags");

var _UI_get0_output_string = Module["_UI_get0_output_string"] = createExportWrapper("UI_get0_output_string");

var _UI_get0_action_string = Module["_UI_get0_action_string"] = createExportWrapper("UI_get0_action_string");

var _UI_get0_test_string = Module["_UI_get0_test_string"] = createExportWrapper("UI_get0_test_string");

var _UI_get_result_minsize = Module["_UI_get_result_minsize"] = createExportWrapper("UI_get_result_minsize");

var _UI_get_result_maxsize = Module["_UI_get_result_maxsize"] = createExportWrapper("UI_get_result_maxsize");

var _UI_set_result = Module["_UI_set_result"] = createExportWrapper("UI_set_result");

var _UI_set_result_ex = Module["_UI_set_result_ex"] = createExportWrapper("UI_set_result_ex");

var _UI_set_default_method = Module["_UI_set_default_method"] = createExportWrapper("UI_set_default_method");

var _getegid = Module["_getegid"] = createExportWrapper("getegid");

var _whirlpool_block = Module["_whirlpool_block"] = createExportWrapper("whirlpool_block");

var _WHIRLPOOL_BitUpdate = Module["_WHIRLPOOL_BitUpdate"] = createExportWrapper("WHIRLPOOL_BitUpdate");

var _WHIRLPOOL = Module["_WHIRLPOOL"] = createExportWrapper("WHIRLPOOL");

var _X509_load_crl_file = Module["_X509_load_crl_file"] = createExportWrapper("X509_load_crl_file");

var _X509_load_cert_file = Module["_X509_load_cert_file"] = createExportWrapper("X509_load_cert_file");

var _X509_STORE_lock = Module["_X509_STORE_lock"] = createExportWrapper("X509_STORE_lock");

var _X509_STORE_unlock = Module["_X509_STORE_unlock"] = createExportWrapper("X509_STORE_unlock");

var _X509_STORE_add_crl = Module["_X509_STORE_add_crl"] = createExportWrapper("X509_STORE_add_crl");

var _d2i_X509_CRL_bio = Module["_d2i_X509_CRL_bio"] = createExportWrapper("d2i_X509_CRL_bio");

var _X509_load_cert_crl_file = Module["_X509_load_cert_crl_file"] = createExportWrapper("X509_load_cert_crl_file");

var _X509_REQ_print_ex = Module["_X509_REQ_print_ex"] = createExportWrapper("X509_REQ_print_ex");

var _X509_REQ_get_version = Module["_X509_REQ_get_version"] = createExportWrapper("X509_REQ_get_version");

var _X509_REQ_get_X509_PUBKEY = Module["_X509_REQ_get_X509_PUBKEY"] = createExportWrapper("X509_REQ_get_X509_PUBKEY");

var _X509_REQ_get0_pubkey = Module["_X509_REQ_get0_pubkey"] = createExportWrapper("X509_REQ_get0_pubkey");

var _X509_REQ_get_attr_count = Module["_X509_REQ_get_attr_count"] = createExportWrapper("X509_REQ_get_attr_count");

var _X509_REQ_get_attr = Module["_X509_REQ_get_attr"] = createExportWrapper("X509_REQ_get_attr");

var _X509_REQ_extension_nid = Module["_X509_REQ_extension_nid"] = createExportWrapper("X509_REQ_extension_nid");

var _X509_REQ_get_extensions = Module["_X509_REQ_get_extensions"] = createExportWrapper("X509_REQ_get_extensions");

var _X509_EXTENSION_get_critical = Module["_X509_EXTENSION_get_critical"] = createExportWrapper("X509_EXTENSION_get_critical");

var _X509_REQ_get0_signature = Module["_X509_REQ_get0_signature"] = createExportWrapper("X509_REQ_get0_signature");

var _X509_signature_print = Module["_X509_signature_print"] = createExportWrapper("X509_signature_print");

var _X509_print_ex = Module["_X509_print_ex"] = createExportWrapper("X509_print_ex");

var _X509_get0_tbs_sigalg = Module["_X509_get0_tbs_sigalg"] = createExportWrapper("X509_get0_tbs_sigalg");

var _X509_get0_notBefore = Module["_X509_get0_notBefore"] = createExportWrapper("X509_get0_notBefore");

var _X509_get0_notAfter = Module["_X509_get0_notAfter"] = createExportWrapper("X509_get0_notAfter");

var _X509_get0_uids = Module["_X509_get0_uids"] = createExportWrapper("X509_get0_uids");

var _X509_get0_extensions = Module["_X509_get0_extensions"] = createExportWrapper("X509_get0_extensions");

var _X509V3_extensions_print = Module["_X509V3_extensions_print"] = createExportWrapper("X509V3_extensions_print");

var _X509_get0_signature = Module["_X509_get0_signature"] = createExportWrapper("X509_get0_signature");

var _X509_aux_print = Module["_X509_aux_print"] = createExportWrapper("X509_aux_print");

var _X509_trusted = Module["_X509_trusted"] = createExportWrapper("X509_trusted");

var _X509_get0_trust_objects = Module["_X509_get0_trust_objects"] = createExportWrapper("X509_get0_trust_objects");

var _X509_get0_reject_objects = Module["_X509_get0_reject_objects"] = createExportWrapper("X509_get0_reject_objects");

var _X509_ocspid_print = Module["_X509_ocspid_print"] = createExportWrapper("X509_ocspid_print");

var _X509_get0_pubkey_bitstr = Module["_X509_get0_pubkey_bitstr"] = createExportWrapper("X509_get0_pubkey_bitstr");

var _X509_ATTRIBUTE_new = Module["_X509_ATTRIBUTE_new"] = createExportWrapper("X509_ATTRIBUTE_new");

var _X509_ATTRIBUTE_set1_data = Module["_X509_ATTRIBUTE_set1_data"] = createExportWrapper("X509_ATTRIBUTE_set1_data");

var _X509_ATTRIBUTE_create_by_OBJ = Module["_X509_ATTRIBUTE_create_by_OBJ"] = createExportWrapper("X509_ATTRIBUTE_create_by_OBJ");

var _X509_ATTRIBUTE_create_by_NID = Module["_X509_ATTRIBUTE_create_by_NID"] = createExportWrapper("X509_ATTRIBUTE_create_by_NID");

var _X509_ATTRIBUTE_create_by_txt = Module["_X509_ATTRIBUTE_create_by_txt"] = createExportWrapper("X509_ATTRIBUTE_create_by_txt");

var _X509_ATTRIBUTE_get0_data = Module["_X509_ATTRIBUTE_get0_data"] = createExportWrapper("X509_ATTRIBUTE_get0_data");

var _X509_ATTRIBUTE_set1_object = Module["_X509_ATTRIBUTE_set1_object"] = createExportWrapper("X509_ATTRIBUTE_set1_object");

var _X509_issuer_and_serial_cmp = Module["_X509_issuer_and_serial_cmp"] = createExportWrapper("X509_issuer_and_serial_cmp");

var _X509_issuer_and_serial_hash = Module["_X509_issuer_and_serial_hash"] = createExportWrapper("X509_issuer_and_serial_hash");

var _X509_issuer_name_cmp = Module["_X509_issuer_name_cmp"] = createExportWrapper("X509_issuer_name_cmp");

var _X509_subject_name_cmp = Module["_X509_subject_name_cmp"] = createExportWrapper("X509_subject_name_cmp");

var _X509_CRL_cmp = Module["_X509_CRL_cmp"] = createExportWrapper("X509_CRL_cmp");

var _X509_CRL_match = Module["_X509_CRL_match"] = createExportWrapper("X509_CRL_match");

var _X509_issuer_name_hash = Module["_X509_issuer_name_hash"] = createExportWrapper("X509_issuer_name_hash");

var _X509_issuer_name_hash_old = Module["_X509_issuer_name_hash_old"] = createExportWrapper("X509_issuer_name_hash_old");

var _X509_NAME_hash_old = Module["_X509_NAME_hash_old"] = createExportWrapper("X509_NAME_hash_old");

var _X509_get0_serialNumber = Module["_X509_get0_serialNumber"] = createExportWrapper("X509_get0_serialNumber");

var _X509_subject_name_hash_old = Module["_X509_subject_name_hash_old"] = createExportWrapper("X509_subject_name_hash_old");

var _X509_find_by_subject = Module["_X509_find_by_subject"] = createExportWrapper("X509_find_by_subject");

var _X509_PUBKEY_get0 = Module["_X509_PUBKEY_get0"] = createExportWrapper("X509_PUBKEY_get0");

var _X509_CRL_check_suiteb = Module["_X509_CRL_check_suiteb"] = createExportWrapper("X509_CRL_check_suiteb");

var _X509_CRL_get_ext_count = Module["_X509_CRL_get_ext_count"] = createExportWrapper("X509_CRL_get_ext_count");

var _X509_CRL_get_ext_by_NID = Module["_X509_CRL_get_ext_by_NID"] = createExportWrapper("X509_CRL_get_ext_by_NID");

var _X509_CRL_get_ext_by_OBJ = Module["_X509_CRL_get_ext_by_OBJ"] = createExportWrapper("X509_CRL_get_ext_by_OBJ");

var _X509_CRL_get_ext_by_critical = Module["_X509_CRL_get_ext_by_critical"] = createExportWrapper("X509_CRL_get_ext_by_critical");

var _X509_CRL_get_ext = Module["_X509_CRL_get_ext"] = createExportWrapper("X509_CRL_get_ext");

var _X509_CRL_delete_ext = Module["_X509_CRL_delete_ext"] = createExportWrapper("X509_CRL_delete_ext");

var _X509_CRL_get_ext_d2i = Module["_X509_CRL_get_ext_d2i"] = createExportWrapper("X509_CRL_get_ext_d2i");

var _X509_CRL_add1_ext_i2d = Module["_X509_CRL_add1_ext_i2d"] = createExportWrapper("X509_CRL_add1_ext_i2d");

var _X509_CRL_add_ext = Module["_X509_CRL_add_ext"] = createExportWrapper("X509_CRL_add_ext");

var _X509v3_get_ext_count = Module["_X509v3_get_ext_count"] = createExportWrapper("X509v3_get_ext_count");

var _X509v3_get_ext_by_NID = Module["_X509v3_get_ext_by_NID"] = createExportWrapper("X509v3_get_ext_by_NID");

var _X509v3_get_ext_by_OBJ = Module["_X509v3_get_ext_by_OBJ"] = createExportWrapper("X509v3_get_ext_by_OBJ");

var _X509v3_get_ext_by_critical = Module["_X509v3_get_ext_by_critical"] = createExportWrapper("X509v3_get_ext_by_critical");

var _X509v3_get_ext = Module["_X509v3_get_ext"] = createExportWrapper("X509v3_get_ext");

var _X509v3_delete_ext = Module["_X509v3_delete_ext"] = createExportWrapper("X509v3_delete_ext");

var _X509V3_get_d2i = Module["_X509V3_get_d2i"] = createExportWrapper("X509V3_get_d2i");

var _X509V3_add1_i2d = Module["_X509V3_add1_i2d"] = createExportWrapper("X509V3_add1_i2d");

var _X509v3_add_ext = Module["_X509v3_add_ext"] = createExportWrapper("X509v3_add_ext");

var _X509_get_ext_by_OBJ = Module["_X509_get_ext_by_OBJ"] = createExportWrapper("X509_get_ext_by_OBJ");

var _X509_get_ext_by_critical = Module["_X509_get_ext_by_critical"] = createExportWrapper("X509_get_ext_by_critical");

var _X509_add_ext = Module["_X509_add_ext"] = createExportWrapper("X509_add_ext");

var _X509_add1_ext_i2d = Module["_X509_add1_ext_i2d"] = createExportWrapper("X509_add1_ext_i2d");

var _X509_REVOKED_get_ext_count = Module["_X509_REVOKED_get_ext_count"] = createExportWrapper("X509_REVOKED_get_ext_count");

var _X509_REVOKED_get_ext_by_NID = Module["_X509_REVOKED_get_ext_by_NID"] = createExportWrapper("X509_REVOKED_get_ext_by_NID");

var _X509_REVOKED_get_ext_by_OBJ = Module["_X509_REVOKED_get_ext_by_OBJ"] = createExportWrapper("X509_REVOKED_get_ext_by_OBJ");

var _X509_REVOKED_get_ext_by_critical = Module["_X509_REVOKED_get_ext_by_critical"] = createExportWrapper("X509_REVOKED_get_ext_by_critical");

var _X509_REVOKED_get_ext = Module["_X509_REVOKED_get_ext"] = createExportWrapper("X509_REVOKED_get_ext");

var _X509_REVOKED_delete_ext = Module["_X509_REVOKED_delete_ext"] = createExportWrapper("X509_REVOKED_delete_ext");

var _X509_REVOKED_add_ext = Module["_X509_REVOKED_add_ext"] = createExportWrapper("X509_REVOKED_add_ext");

var _X509_REVOKED_get_ext_d2i = Module["_X509_REVOKED_get_ext_d2i"] = createExportWrapper("X509_REVOKED_get_ext_d2i");

var _X509_REVOKED_add1_ext_i2d = Module["_X509_REVOKED_add1_ext_i2d"] = createExportWrapper("X509_REVOKED_add1_ext_i2d");

var _X509_LOOKUP_new = Module["_X509_LOOKUP_new"] = createExportWrapper("X509_LOOKUP_new");

var _X509_LOOKUP_free = Module["_X509_LOOKUP_free"] = createExportWrapper("X509_LOOKUP_free");

var _X509_LOOKUP_init = Module["_X509_LOOKUP_init"] = createExportWrapper("X509_LOOKUP_init");

var _X509_LOOKUP_shutdown = Module["_X509_LOOKUP_shutdown"] = createExportWrapper("X509_LOOKUP_shutdown");

var _X509_LOOKUP_by_subject = Module["_X509_LOOKUP_by_subject"] = createExportWrapper("X509_LOOKUP_by_subject");

var _X509_LOOKUP_by_issuer_serial = Module["_X509_LOOKUP_by_issuer_serial"] = createExportWrapper("X509_LOOKUP_by_issuer_serial");

var _X509_LOOKUP_by_fingerprint = Module["_X509_LOOKUP_by_fingerprint"] = createExportWrapper("X509_LOOKUP_by_fingerprint");

var _X509_LOOKUP_by_alias = Module["_X509_LOOKUP_by_alias"] = createExportWrapper("X509_LOOKUP_by_alias");

var _X509_LOOKUP_set_method_data = Module["_X509_LOOKUP_set_method_data"] = createExportWrapper("X509_LOOKUP_set_method_data");

var _X509_LOOKUP_get_method_data = Module["_X509_LOOKUP_get_method_data"] = createExportWrapper("X509_LOOKUP_get_method_data");

var _X509_LOOKUP_get_store = Module["_X509_LOOKUP_get_store"] = createExportWrapper("X509_LOOKUP_get_store");

var _X509_OBJECT_free = Module["_X509_OBJECT_free"] = createExportWrapper("X509_OBJECT_free");

var _X509_STORE_CTX_get_obj_by_subject = Module["_X509_STORE_CTX_get_obj_by_subject"] = createExportWrapper("X509_STORE_CTX_get_obj_by_subject");

var _X509_STORE_CTX_get_by_subject = Module["_X509_STORE_CTX_get_by_subject"] = createExportWrapper("X509_STORE_CTX_get_by_subject");

var _X509_OBJECT_new = Module["_X509_OBJECT_new"] = createExportWrapper("X509_OBJECT_new");

var _X509_OBJECT_retrieve_by_subject = Module["_X509_OBJECT_retrieve_by_subject"] = createExportWrapper("X509_OBJECT_retrieve_by_subject");

var _X509_OBJECT_up_ref_count = Module["_X509_OBJECT_up_ref_count"] = createExportWrapper("X509_OBJECT_up_ref_count");

var _X509_OBJECT_retrieve_match = Module["_X509_OBJECT_retrieve_match"] = createExportWrapper("X509_OBJECT_retrieve_match");

var _X509_OBJECT_get0_X509 = Module["_X509_OBJECT_get0_X509"] = createExportWrapper("X509_OBJECT_get0_X509");

var _X509_OBJECT_get0_X509_CRL = Module["_X509_OBJECT_get0_X509_CRL"] = createExportWrapper("X509_OBJECT_get0_X509_CRL");

var _X509_OBJECT_get_type = Module["_X509_OBJECT_get_type"] = createExportWrapper("X509_OBJECT_get_type");

var _X509_OBJECT_set1_X509 = Module["_X509_OBJECT_set1_X509"] = createExportWrapper("X509_OBJECT_set1_X509");

var _X509_OBJECT_set1_X509_CRL = Module["_X509_OBJECT_set1_X509_CRL"] = createExportWrapper("X509_OBJECT_set1_X509_CRL");

var _X509_OBJECT_idx_by_subject = Module["_X509_OBJECT_idx_by_subject"] = createExportWrapper("X509_OBJECT_idx_by_subject");

var _X509_STORE_get0_objects = Module["_X509_STORE_get0_objects"] = createExportWrapper("X509_STORE_get0_objects");

var _X509_STORE_CTX_get1_certs = Module["_X509_STORE_CTX_get1_certs"] = createExportWrapper("X509_STORE_CTX_get1_certs");

var _X509_STORE_CTX_get1_crls = Module["_X509_STORE_CTX_get1_crls"] = createExportWrapper("X509_STORE_CTX_get1_crls");

var _X509_STORE_CTX_get1_issuer = Module["_X509_STORE_CTX_get1_issuer"] = createExportWrapper("X509_STORE_CTX_get1_issuer");

var _x509_check_cert_time = Module["_x509_check_cert_time"] = createExportWrapper("x509_check_cert_time");

var _X509_STORE_set_flags = Module["_X509_STORE_set_flags"] = createExportWrapper("X509_STORE_set_flags");

var _X509_VERIFY_PARAM_set_flags = Module["_X509_VERIFY_PARAM_set_flags"] = createExportWrapper("X509_VERIFY_PARAM_set_flags");

var _X509_STORE_set_depth = Module["_X509_STORE_set_depth"] = createExportWrapper("X509_STORE_set_depth");

var _X509_STORE_set_purpose = Module["_X509_STORE_set_purpose"] = createExportWrapper("X509_STORE_set_purpose");

var _X509_STORE_set_trust = Module["_X509_STORE_set_trust"] = createExportWrapper("X509_STORE_set_trust");

var _X509_STORE_set1_param = Module["_X509_STORE_set1_param"] = createExportWrapper("X509_STORE_set1_param");

var _X509_STORE_get0_param = Module["_X509_STORE_get0_param"] = createExportWrapper("X509_STORE_get0_param");

var _X509_STORE_set_verify = Module["_X509_STORE_set_verify"] = createExportWrapper("X509_STORE_set_verify");

var _X509_STORE_get_verify = Module["_X509_STORE_get_verify"] = createExportWrapper("X509_STORE_get_verify");

var _X509_STORE_set_verify_cb = Module["_X509_STORE_set_verify_cb"] = createExportWrapper("X509_STORE_set_verify_cb");

var _X509_STORE_get_verify_cb = Module["_X509_STORE_get_verify_cb"] = createExportWrapper("X509_STORE_get_verify_cb");

var _X509_STORE_set_get_issuer = Module["_X509_STORE_set_get_issuer"] = createExportWrapper("X509_STORE_set_get_issuer");

var _X509_STORE_get_get_issuer = Module["_X509_STORE_get_get_issuer"] = createExportWrapper("X509_STORE_get_get_issuer");

var _X509_STORE_set_check_issued = Module["_X509_STORE_set_check_issued"] = createExportWrapper("X509_STORE_set_check_issued");

var _X509_STORE_get_check_issued = Module["_X509_STORE_get_check_issued"] = createExportWrapper("X509_STORE_get_check_issued");

var _X509_STORE_set_check_revocation = Module["_X509_STORE_set_check_revocation"] = createExportWrapper("X509_STORE_set_check_revocation");

var _X509_STORE_get_check_revocation = Module["_X509_STORE_get_check_revocation"] = createExportWrapper("X509_STORE_get_check_revocation");

var _X509_STORE_set_get_crl = Module["_X509_STORE_set_get_crl"] = createExportWrapper("X509_STORE_set_get_crl");

var _X509_STORE_get_get_crl = Module["_X509_STORE_get_get_crl"] = createExportWrapper("X509_STORE_get_get_crl");

var _X509_STORE_set_check_crl = Module["_X509_STORE_set_check_crl"] = createExportWrapper("X509_STORE_set_check_crl");

var _X509_STORE_get_check_crl = Module["_X509_STORE_get_check_crl"] = createExportWrapper("X509_STORE_get_check_crl");

var _X509_STORE_set_cert_crl = Module["_X509_STORE_set_cert_crl"] = createExportWrapper("X509_STORE_set_cert_crl");

var _X509_STORE_get_cert_crl = Module["_X509_STORE_get_cert_crl"] = createExportWrapper("X509_STORE_get_cert_crl");

var _X509_STORE_set_check_policy = Module["_X509_STORE_set_check_policy"] = createExportWrapper("X509_STORE_set_check_policy");

var _X509_STORE_get_check_policy = Module["_X509_STORE_get_check_policy"] = createExportWrapper("X509_STORE_get_check_policy");

var _X509_STORE_set_lookup_certs = Module["_X509_STORE_set_lookup_certs"] = createExportWrapper("X509_STORE_set_lookup_certs");

var _X509_STORE_get_lookup_certs = Module["_X509_STORE_get_lookup_certs"] = createExportWrapper("X509_STORE_get_lookup_certs");

var _X509_STORE_set_lookup_crls = Module["_X509_STORE_set_lookup_crls"] = createExportWrapper("X509_STORE_set_lookup_crls");

var _X509_STORE_get_lookup_crls = Module["_X509_STORE_get_lookup_crls"] = createExportWrapper("X509_STORE_get_lookup_crls");

var _X509_STORE_set_cleanup = Module["_X509_STORE_set_cleanup"] = createExportWrapper("X509_STORE_set_cleanup");

var _X509_STORE_get_cleanup = Module["_X509_STORE_get_cleanup"] = createExportWrapper("X509_STORE_get_cleanup");

var _X509_STORE_set_ex_data = Module["_X509_STORE_set_ex_data"] = createExportWrapper("X509_STORE_set_ex_data");

var _X509_STORE_get_ex_data = Module["_X509_STORE_get_ex_data"] = createExportWrapper("X509_STORE_get_ex_data");

var _X509_STORE_CTX_get0_store = Module["_X509_STORE_CTX_get0_store"] = createExportWrapper("X509_STORE_CTX_get0_store");

var _X509_to_X509_REQ = Module["_X509_to_X509_REQ"] = createExportWrapper("X509_to_X509_REQ");

var _X509_REQ_set_subject_name = Module["_X509_REQ_set_subject_name"] = createExportWrapper("X509_REQ_set_subject_name");

var _X509_REQ_check_private_key = Module["_X509_REQ_check_private_key"] = createExportWrapper("X509_REQ_check_private_key");

var _X509_REQ_get_extension_nids = Module["_X509_REQ_get_extension_nids"] = createExportWrapper("X509_REQ_get_extension_nids");

var _X509_REQ_set_extension_nids = Module["_X509_REQ_set_extension_nids"] = createExportWrapper("X509_REQ_set_extension_nids");

var _X509_REQ_add_extensions_nid = Module["_X509_REQ_add_extensions_nid"] = createExportWrapper("X509_REQ_add_extensions_nid");

var _X509_REQ_add1_attr_by_NID = Module["_X509_REQ_add1_attr_by_NID"] = createExportWrapper("X509_REQ_add1_attr_by_NID");

var _X509_REQ_add_extensions = Module["_X509_REQ_add_extensions"] = createExportWrapper("X509_REQ_add_extensions");

var _X509_REQ_get_attr_by_OBJ = Module["_X509_REQ_get_attr_by_OBJ"] = createExportWrapper("X509_REQ_get_attr_by_OBJ");

var _X509_REQ_delete_attr = Module["_X509_REQ_delete_attr"] = createExportWrapper("X509_REQ_delete_attr");

var _X509_REQ_add1_attr = Module["_X509_REQ_add1_attr"] = createExportWrapper("X509_REQ_add1_attr");

var _X509_REQ_add1_attr_by_OBJ = Module["_X509_REQ_add1_attr_by_OBJ"] = createExportWrapper("X509_REQ_add1_attr_by_OBJ");

var _X509_REQ_set0_signature = Module["_X509_REQ_set0_signature"] = createExportWrapper("X509_REQ_set0_signature");

var _X509_REQ_set1_signature_algo = Module["_X509_REQ_set1_signature_algo"] = createExportWrapper("X509_REQ_set1_signature_algo");

var _X509_REQ_get_signature_nid = Module["_X509_REQ_get_signature_nid"] = createExportWrapper("X509_REQ_get_signature_nid");

var _i2d_re_X509_REQ_tbs = Module["_i2d_re_X509_REQ_tbs"] = createExportWrapper("i2d_re_X509_REQ_tbs");

var _i2d_X509_REQ_INFO = Module["_i2d_X509_REQ_INFO"] = createExportWrapper("i2d_X509_REQ_INFO");

var _X509_set_serialNumber = Module["_X509_set_serialNumber"] = createExportWrapper("X509_set_serialNumber");

var _x509_set1_time = Module["_x509_set1_time"] = createExportWrapper("x509_set1_time");

var _X509_set1_notBefore = Module["_X509_set1_notBefore"] = createExportWrapper("X509_set1_notBefore");

var _X509_set1_notAfter = Module["_X509_set1_notAfter"] = createExportWrapper("X509_set1_notAfter");

var _X509_get_signature_type = Module["_X509_get_signature_type"] = createExportWrapper("X509_get_signature_type");

var _X509_SIG_INFO_get = Module["_X509_SIG_INFO_get"] = createExportWrapper("X509_SIG_INFO_get");

var _x509_init_sig_info = Module["_x509_init_sig_info"] = createExportWrapper("x509_init_sig_info");

var _X509_TRUST_set_default = Module["_X509_TRUST_set_default"] = createExportWrapper("X509_TRUST_set_default");

var _X509_check_trust = Module["_X509_check_trust"] = createExportWrapper("X509_check_trust");

var _X509_TRUST_get_by_id = Module["_X509_TRUST_get_by_id"] = createExportWrapper("X509_TRUST_get_by_id");

var _X509_TRUST_get0 = Module["_X509_TRUST_get0"] = createExportWrapper("X509_TRUST_get0");

var _X509_TRUST_get_count = Module["_X509_TRUST_get_count"] = createExportWrapper("X509_TRUST_get_count");

var _X509_TRUST_set = Module["_X509_TRUST_set"] = createExportWrapper("X509_TRUST_set");

var _X509_TRUST_add = Module["_X509_TRUST_add"] = createExportWrapper("X509_TRUST_add");

var _X509_TRUST_cleanup = Module["_X509_TRUST_cleanup"] = createExportWrapper("X509_TRUST_cleanup");

var _X509_TRUST_get_flags = Module["_X509_TRUST_get_flags"] = createExportWrapper("X509_TRUST_get_flags");

var _X509_TRUST_get0_name = Module["_X509_TRUST_get0_name"] = createExportWrapper("X509_TRUST_get0_name");

var _X509_TRUST_get_trust = Module["_X509_TRUST_get_trust"] = createExportWrapper("X509_TRUST_get_trust");

var _X509_EXTENSION_dup = Module["_X509_EXTENSION_dup"] = createExportWrapper("X509_EXTENSION_dup");

var _X509_EXTENSION_create_by_NID = Module["_X509_EXTENSION_create_by_NID"] = createExportWrapper("X509_EXTENSION_create_by_NID");

var _X509_EXTENSION_create_by_OBJ = Module["_X509_EXTENSION_create_by_OBJ"] = createExportWrapper("X509_EXTENSION_create_by_OBJ");

var _X509_EXTENSION_new = Module["_X509_EXTENSION_new"] = createExportWrapper("X509_EXTENSION_new");

var _X509_EXTENSION_set_object = Module["_X509_EXTENSION_set_object"] = createExportWrapper("X509_EXTENSION_set_object");

var _X509_EXTENSION_set_critical = Module["_X509_EXTENSION_set_critical"] = createExportWrapper("X509_EXTENSION_set_critical");

var _X509_get_pubkey_parameters = Module["_X509_get_pubkey_parameters"] = createExportWrapper("X509_get_pubkey_parameters");

var _X509_check_ca = Module["_X509_check_ca"] = createExportWrapper("X509_check_ca");

var _X509_NAME_delete_entry = Module["_X509_NAME_delete_entry"] = createExportWrapper("X509_NAME_delete_entry");

var _X509_NAME_ENTRY_free = Module["_X509_NAME_ENTRY_free"] = createExportWrapper("X509_NAME_ENTRY_free");

var _NAME_CONSTRAINTS_check = Module["_NAME_CONSTRAINTS_check"] = createExportWrapper("NAME_CONSTRAINTS_check");

var _NAME_CONSTRAINTS_check_CN = Module["_NAME_CONSTRAINTS_check_CN"] = createExportWrapper("NAME_CONSTRAINTS_check_CN");

var _X509v3_asid_validate_path = Module["_X509v3_asid_validate_path"] = createExportWrapper("X509v3_asid_validate_path");

var _X509v3_addr_validate_path = Module["_X509v3_addr_validate_path"] = createExportWrapper("X509v3_addr_validate_path");

var _X509_cmp_time = Module["_X509_cmp_time"] = createExportWrapper("X509_cmp_time");

var _X509_cmp_current_time = Module["_X509_cmp_current_time"] = createExportWrapper("X509_cmp_current_time");

var _X509_time_adj = Module["_X509_time_adj"] = createExportWrapper("X509_time_adj");

var _X509_time_adj_ex = Module["_X509_time_adj_ex"] = createExportWrapper("X509_time_adj_ex");

var _X509_CRL_diff = Module["_X509_CRL_diff"] = createExportWrapper("X509_CRL_diff");

var _X509_CRL_get_issuer = Module["_X509_CRL_get_issuer"] = createExportWrapper("X509_CRL_get_issuer");

var _X509_CRL_verify = Module["_X509_CRL_verify"] = createExportWrapper("X509_CRL_verify");

var _X509_CRL_new = Module["_X509_CRL_new"] = createExportWrapper("X509_CRL_new");

var _X509_CRL_set_version = Module["_X509_CRL_set_version"] = createExportWrapper("X509_CRL_set_version");

var _X509_CRL_set_issuer_name = Module["_X509_CRL_set_issuer_name"] = createExportWrapper("X509_CRL_set_issuer_name");

var _X509_CRL_get0_lastUpdate = Module["_X509_CRL_get0_lastUpdate"] = createExportWrapper("X509_CRL_get0_lastUpdate");

var _X509_CRL_set1_lastUpdate = Module["_X509_CRL_set1_lastUpdate"] = createExportWrapper("X509_CRL_set1_lastUpdate");

var _X509_CRL_get0_nextUpdate = Module["_X509_CRL_get0_nextUpdate"] = createExportWrapper("X509_CRL_get0_nextUpdate");

var _X509_CRL_set1_nextUpdate = Module["_X509_CRL_set1_nextUpdate"] = createExportWrapper("X509_CRL_set1_nextUpdate");

var _X509_CRL_get_REVOKED = Module["_X509_CRL_get_REVOKED"] = createExportWrapper("X509_CRL_get_REVOKED");

var _X509_CRL_get0_by_serial = Module["_X509_CRL_get0_by_serial"] = createExportWrapper("X509_CRL_get0_by_serial");

var _X509_REVOKED_dup = Module["_X509_REVOKED_dup"] = createExportWrapper("X509_REVOKED_dup");

var _X509_CRL_add0_revoked = Module["_X509_CRL_add0_revoked"] = createExportWrapper("X509_CRL_add0_revoked");

var _X509_REVOKED_free = Module["_X509_REVOKED_free"] = createExportWrapper("X509_REVOKED_free");

var _X509_CRL_sign = Module["_X509_CRL_sign"] = createExportWrapper("X509_CRL_sign");

var _X509_STORE_CTX_set_error_depth = Module["_X509_STORE_CTX_set_error_depth"] = createExportWrapper("X509_STORE_CTX_set_error_depth");

var _X509_STORE_CTX_get_current_cert = Module["_X509_STORE_CTX_get_current_cert"] = createExportWrapper("X509_STORE_CTX_get_current_cert");

var _X509_STORE_CTX_set_current_cert = Module["_X509_STORE_CTX_set_current_cert"] = createExportWrapper("X509_STORE_CTX_set_current_cert");

var _X509_STORE_CTX_get0_current_issuer = Module["_X509_STORE_CTX_get0_current_issuer"] = createExportWrapper("X509_STORE_CTX_get0_current_issuer");

var _X509_STORE_CTX_get0_current_crl = Module["_X509_STORE_CTX_get0_current_crl"] = createExportWrapper("X509_STORE_CTX_get0_current_crl");

var _X509_STORE_CTX_get0_parent_ctx = Module["_X509_STORE_CTX_get0_parent_ctx"] = createExportWrapper("X509_STORE_CTX_get0_parent_ctx");

var _X509_STORE_CTX_set_cert = Module["_X509_STORE_CTX_set_cert"] = createExportWrapper("X509_STORE_CTX_set_cert");

var _X509_STORE_CTX_purpose_inherit = Module["_X509_STORE_CTX_purpose_inherit"] = createExportWrapper("X509_STORE_CTX_purpose_inherit");

var _X509_PURPOSE_get_by_id = Module["_X509_PURPOSE_get_by_id"] = createExportWrapper("X509_PURPOSE_get_by_id");

var _X509_STORE_CTX_set_trust = Module["_X509_STORE_CTX_set_trust"] = createExportWrapper("X509_STORE_CTX_set_trust");

var _X509_policy_tree_free = Module["_X509_policy_tree_free"] = createExportWrapper("X509_policy_tree_free");

var _X509_VERIFY_PARAM_lookup = Module["_X509_VERIFY_PARAM_lookup"] = createExportWrapper("X509_VERIFY_PARAM_lookup");

var _X509_PURPOSE_get_trust = Module["_X509_PURPOSE_get_trust"] = createExportWrapper("X509_PURPOSE_get_trust");

var _x509_likely_issued = Module["_x509_likely_issued"] = createExportWrapper("x509_likely_issued");

var _x509_signing_allowed = Module["_x509_signing_allowed"] = createExportWrapper("x509_signing_allowed");

var _X509_CRL_get0_by_cert = Module["_X509_CRL_get0_by_cert"] = createExportWrapper("X509_CRL_get0_by_cert");

var _X509_policy_check = Module["_X509_policy_check"] = createExportWrapper("X509_policy_check");

var _X509_STORE_CTX_set0_trusted_stack = Module["_X509_STORE_CTX_set0_trusted_stack"] = createExportWrapper("X509_STORE_CTX_set0_trusted_stack");

var _X509_STORE_CTX_set_depth = Module["_X509_STORE_CTX_set_depth"] = createExportWrapper("X509_STORE_CTX_set_depth");

var _X509_STORE_CTX_set_time = Module["_X509_STORE_CTX_set_time"] = createExportWrapper("X509_STORE_CTX_set_time");

var _X509_VERIFY_PARAM_set_time = Module["_X509_VERIFY_PARAM_set_time"] = createExportWrapper("X509_VERIFY_PARAM_set_time");

var _X509_STORE_CTX_get0_cert = Module["_X509_STORE_CTX_get0_cert"] = createExportWrapper("X509_STORE_CTX_get0_cert");

var _X509_STORE_CTX_get0_untrusted = Module["_X509_STORE_CTX_get0_untrusted"] = createExportWrapper("X509_STORE_CTX_get0_untrusted");

var _X509_STORE_CTX_set0_untrusted = Module["_X509_STORE_CTX_set0_untrusted"] = createExportWrapper("X509_STORE_CTX_set0_untrusted");

var _X509_STORE_CTX_set0_verified_chain = Module["_X509_STORE_CTX_set0_verified_chain"] = createExportWrapper("X509_STORE_CTX_set0_verified_chain");

var _X509_STORE_CTX_get_verify_cb = Module["_X509_STORE_CTX_get_verify_cb"] = createExportWrapper("X509_STORE_CTX_get_verify_cb");

var _X509_STORE_CTX_set_verify = Module["_X509_STORE_CTX_set_verify"] = createExportWrapper("X509_STORE_CTX_set_verify");

var _X509_STORE_CTX_get_verify = Module["_X509_STORE_CTX_get_verify"] = createExportWrapper("X509_STORE_CTX_get_verify");

var _X509_STORE_CTX_get_get_issuer = Module["_X509_STORE_CTX_get_get_issuer"] = createExportWrapper("X509_STORE_CTX_get_get_issuer");

var _X509_STORE_CTX_get_check_issued = Module["_X509_STORE_CTX_get_check_issued"] = createExportWrapper("X509_STORE_CTX_get_check_issued");

var _X509_STORE_CTX_get_check_revocation = Module["_X509_STORE_CTX_get_check_revocation"] = createExportWrapper("X509_STORE_CTX_get_check_revocation");

var _X509_STORE_CTX_get_get_crl = Module["_X509_STORE_CTX_get_get_crl"] = createExportWrapper("X509_STORE_CTX_get_get_crl");

var _X509_STORE_CTX_get_check_crl = Module["_X509_STORE_CTX_get_check_crl"] = createExportWrapper("X509_STORE_CTX_get_check_crl");

var _X509_STORE_CTX_get_cert_crl = Module["_X509_STORE_CTX_get_cert_crl"] = createExportWrapper("X509_STORE_CTX_get_cert_crl");

var _X509_STORE_CTX_get_check_policy = Module["_X509_STORE_CTX_get_check_policy"] = createExportWrapper("X509_STORE_CTX_get_check_policy");

var _X509_STORE_CTX_get_lookup_certs = Module["_X509_STORE_CTX_get_lookup_certs"] = createExportWrapper("X509_STORE_CTX_get_lookup_certs");

var _X509_STORE_CTX_get_lookup_crls = Module["_X509_STORE_CTX_get_lookup_crls"] = createExportWrapper("X509_STORE_CTX_get_lookup_crls");

var _X509_STORE_CTX_get_cleanup = Module["_X509_STORE_CTX_get_cleanup"] = createExportWrapper("X509_STORE_CTX_get_cleanup");

var _X509_STORE_CTX_get0_policy_tree = Module["_X509_STORE_CTX_get0_policy_tree"] = createExportWrapper("X509_STORE_CTX_get0_policy_tree");

var _X509_STORE_CTX_get_explicit_policy = Module["_X509_STORE_CTX_get_explicit_policy"] = createExportWrapper("X509_STORE_CTX_get_explicit_policy");

var _X509_STORE_CTX_get_num_untrusted = Module["_X509_STORE_CTX_get_num_untrusted"] = createExportWrapper("X509_STORE_CTX_get_num_untrusted");

var _X509_STORE_CTX_set0_param = Module["_X509_STORE_CTX_set0_param"] = createExportWrapper("X509_STORE_CTX_set0_param");

var _X509_check_host = Module["_X509_check_host"] = createExportWrapper("X509_check_host");

var _X509_check_email = Module["_X509_check_email"] = createExportWrapper("X509_check_email");

var _X509_check_ip = Module["_X509_check_ip"] = createExportWrapper("X509_check_ip");

var _X509_check_akid = Module["_X509_check_akid"] = createExportWrapper("X509_check_akid");

var _GENERAL_NAME_cmp = Module["_GENERAL_NAME_cmp"] = createExportWrapper("GENERAL_NAME_cmp");

var _X509_VERIFY_PARAM_set1_policies = Module["_X509_VERIFY_PARAM_set1_policies"] = createExportWrapper("X509_VERIFY_PARAM_set1_policies");

var _X509_VERIFY_PARAM_set1_email = Module["_X509_VERIFY_PARAM_set1_email"] = createExportWrapper("X509_VERIFY_PARAM_set1_email");

var _X509_VERIFY_PARAM_set1_ip = Module["_X509_VERIFY_PARAM_set1_ip"] = createExportWrapper("X509_VERIFY_PARAM_set1_ip");

var _X509_VERIFY_PARAM_set1_name = Module["_X509_VERIFY_PARAM_set1_name"] = createExportWrapper("X509_VERIFY_PARAM_set1_name");

var _X509_VERIFY_PARAM_clear_flags = Module["_X509_VERIFY_PARAM_clear_flags"] = createExportWrapper("X509_VERIFY_PARAM_clear_flags");

var _X509_VERIFY_PARAM_get_flags = Module["_X509_VERIFY_PARAM_get_flags"] = createExportWrapper("X509_VERIFY_PARAM_get_flags");

var _X509_VERIFY_PARAM_get_inh_flags = Module["_X509_VERIFY_PARAM_get_inh_flags"] = createExportWrapper("X509_VERIFY_PARAM_get_inh_flags");

var _X509_VERIFY_PARAM_set_inh_flags = Module["_X509_VERIFY_PARAM_set_inh_flags"] = createExportWrapper("X509_VERIFY_PARAM_set_inh_flags");

var _X509_PURPOSE_set = Module["_X509_PURPOSE_set"] = createExportWrapper("X509_PURPOSE_set");

var _X509_VERIFY_PARAM_get_time = Module["_X509_VERIFY_PARAM_get_time"] = createExportWrapper("X509_VERIFY_PARAM_get_time");

var _X509_VERIFY_PARAM_add0_policy = Module["_X509_VERIFY_PARAM_add0_policy"] = createExportWrapper("X509_VERIFY_PARAM_add0_policy");

var _X509_VERIFY_PARAM_get_hostflags = Module["_X509_VERIFY_PARAM_get_hostflags"] = createExportWrapper("X509_VERIFY_PARAM_get_hostflags");

var _X509_VERIFY_PARAM_set1_ip_asc = Module["_X509_VERIFY_PARAM_set1_ip_asc"] = createExportWrapper("X509_VERIFY_PARAM_set1_ip_asc");

var _a2i_ipadd = Module["_a2i_ipadd"] = createExportWrapper("a2i_ipadd");

var _X509_VERIFY_PARAM_get_auth_level = Module["_X509_VERIFY_PARAM_get_auth_level"] = createExportWrapper("X509_VERIFY_PARAM_get_auth_level");

var _X509_VERIFY_PARAM_get0_name = Module["_X509_VERIFY_PARAM_get0_name"] = createExportWrapper("X509_VERIFY_PARAM_get0_name");

var _X509_VERIFY_PARAM_add0_table = Module["_X509_VERIFY_PARAM_add0_table"] = createExportWrapper("X509_VERIFY_PARAM_add0_table");

var _X509_VERIFY_PARAM_get_count = Module["_X509_VERIFY_PARAM_get_count"] = createExportWrapper("X509_VERIFY_PARAM_get_count");

var _X509_VERIFY_PARAM_get0 = Module["_X509_VERIFY_PARAM_get0"] = createExportWrapper("X509_VERIFY_PARAM_get0");

var _X509_VERIFY_PARAM_table_cleanup = Module["_X509_VERIFY_PARAM_table_cleanup"] = createExportWrapper("X509_VERIFY_PARAM_table_cleanup");

var _X509_CRL_sort = Module["_X509_CRL_sort"] = createExportWrapper("X509_CRL_sort");

var _X509_CRL_get_version = Module["_X509_CRL_get_version"] = createExportWrapper("X509_CRL_get_version");

var _X509_CRL_get_lastUpdate = Module["_X509_CRL_get_lastUpdate"] = createExportWrapper("X509_CRL_get_lastUpdate");

var _X509_CRL_get_nextUpdate = Module["_X509_CRL_get_nextUpdate"] = createExportWrapper("X509_CRL_get_nextUpdate");

var _X509_CRL_get0_extensions = Module["_X509_CRL_get0_extensions"] = createExportWrapper("X509_CRL_get0_extensions");

var _X509_CRL_get0_signature = Module["_X509_CRL_get0_signature"] = createExportWrapper("X509_CRL_get0_signature");

var _X509_CRL_get_signature_nid = Module["_X509_CRL_get_signature_nid"] = createExportWrapper("X509_CRL_get_signature_nid");

var _X509_REVOKED_get0_revocationDate = Module["_X509_REVOKED_get0_revocationDate"] = createExportWrapper("X509_REVOKED_get0_revocationDate");

var _X509_REVOKED_set_revocationDate = Module["_X509_REVOKED_set_revocationDate"] = createExportWrapper("X509_REVOKED_set_revocationDate");

var _X509_REVOKED_get0_serialNumber = Module["_X509_REVOKED_get0_serialNumber"] = createExportWrapper("X509_REVOKED_get0_serialNumber");

var _X509_REVOKED_set_serialNumber = Module["_X509_REVOKED_set_serialNumber"] = createExportWrapper("X509_REVOKED_set_serialNumber");

var _X509_REVOKED_get0_extensions = Module["_X509_REVOKED_get0_extensions"] = createExportWrapper("X509_REVOKED_get0_extensions");

var _i2d_re_X509_CRL_tbs = Module["_i2d_re_X509_CRL_tbs"] = createExportWrapper("i2d_re_X509_CRL_tbs");

var _i2d_X509_CRL_INFO = Module["_i2d_X509_CRL_INFO"] = createExportWrapper("i2d_X509_CRL_INFO");

var _X509_NAME_get_text_by_OBJ = Module["_X509_NAME_get_text_by_OBJ"] = createExportWrapper("X509_NAME_get_text_by_OBJ");

var _X509_NAME_get_index_by_OBJ = Module["_X509_NAME_get_index_by_OBJ"] = createExportWrapper("X509_NAME_get_index_by_OBJ");

var _X509_NAME_add_entry_by_OBJ = Module["_X509_NAME_add_entry_by_OBJ"] = createExportWrapper("X509_NAME_add_entry_by_OBJ");

var _X509_NAME_ENTRY_new = Module["_X509_NAME_ENTRY_new"] = createExportWrapper("X509_NAME_ENTRY_new");

var _X509_NAME_ENTRY_set_data = Module["_X509_NAME_ENTRY_set_data"] = createExportWrapper("X509_NAME_ENTRY_set_data");

var _X509_NAME_add_entry = Module["_X509_NAME_add_entry"] = createExportWrapper("X509_NAME_add_entry");

var _X509_NAME_ENTRY_create_by_OBJ = Module["_X509_NAME_ENTRY_create_by_OBJ"] = createExportWrapper("X509_NAME_ENTRY_create_by_OBJ");

var _X509_NAME_ENTRY_dup = Module["_X509_NAME_ENTRY_dup"] = createExportWrapper("X509_NAME_ENTRY_dup");

var _X509_NAME_ENTRY_create_by_NID = Module["_X509_NAME_ENTRY_create_by_NID"] = createExportWrapper("X509_NAME_ENTRY_create_by_NID");

var _X509_NAME_ENTRY_create_by_txt = Module["_X509_NAME_ENTRY_create_by_txt"] = createExportWrapper("X509_NAME_ENTRY_create_by_txt");

var _X509_NAME_ENTRY_set_object = Module["_X509_NAME_ENTRY_set_object"] = createExportWrapper("X509_NAME_ENTRY_set_object");

var _NETSCAPE_SPKI_get_pubkey = Module["_NETSCAPE_SPKI_get_pubkey"] = createExportWrapper("NETSCAPE_SPKI_get_pubkey");

var _X509_sign_ctx = Module["_X509_sign_ctx"] = createExportWrapper("X509_sign_ctx");

var _X509_REQ_sign_ctx = Module["_X509_REQ_sign_ctx"] = createExportWrapper("X509_REQ_sign_ctx");

var _X509_CRL_sign_ctx = Module["_X509_CRL_sign_ctx"] = createExportWrapper("X509_CRL_sign_ctx");

var _i2d_X509_bio = Module["_i2d_X509_bio"] = createExportWrapper("i2d_X509_bio");

var _i2d_X509_CRL_bio = Module["_i2d_X509_CRL_bio"] = createExportWrapper("i2d_X509_CRL_bio");

var _d2i_PKCS7_bio = Module["_d2i_PKCS7_bio"] = createExportWrapper("d2i_PKCS7_bio");

var _i2d_PKCS7_bio = Module["_i2d_PKCS7_bio"] = createExportWrapper("i2d_PKCS7_bio");

var _d2i_X509_REQ_bio = Module["_d2i_X509_REQ_bio"] = createExportWrapper("d2i_X509_REQ_bio");

var _i2d_X509_REQ_bio = Module["_i2d_X509_REQ_bio"] = createExportWrapper("i2d_X509_REQ_bio");

var _i2d_RSAPrivateKey_bio = Module["_i2d_RSAPrivateKey_bio"] = createExportWrapper("i2d_RSAPrivateKey_bio");

var _d2i_RSAPublicKey_bio = Module["_d2i_RSAPublicKey_bio"] = createExportWrapper("d2i_RSAPublicKey_bio");

var _d2i_RSA_PUBKEY_bio = Module["_d2i_RSA_PUBKEY_bio"] = createExportWrapper("d2i_RSA_PUBKEY_bio");

var _i2d_RSAPublicKey_bio = Module["_i2d_RSAPublicKey_bio"] = createExportWrapper("i2d_RSAPublicKey_bio");

var _i2d_RSA_PUBKEY_bio = Module["_i2d_RSA_PUBKEY_bio"] = createExportWrapper("i2d_RSA_PUBKEY_bio");

var _d2i_DSAPrivateKey_bio = Module["_d2i_DSAPrivateKey_bio"] = createExportWrapper("d2i_DSAPrivateKey_bio");

var _i2d_DSAPrivateKey_bio = Module["_i2d_DSAPrivateKey_bio"] = createExportWrapper("i2d_DSAPrivateKey_bio");

var _d2i_DSA_PUBKEY_bio = Module["_d2i_DSA_PUBKEY_bio"] = createExportWrapper("d2i_DSA_PUBKEY_bio");

var _i2d_DSA_PUBKEY_bio = Module["_i2d_DSA_PUBKEY_bio"] = createExportWrapper("i2d_DSA_PUBKEY_bio");

var _d2i_EC_PUBKEY_bio = Module["_d2i_EC_PUBKEY_bio"] = createExportWrapper("d2i_EC_PUBKEY_bio");

var _i2d_EC_PUBKEY_bio = Module["_i2d_EC_PUBKEY_bio"] = createExportWrapper("i2d_EC_PUBKEY_bio");

var _d2i_ECPrivateKey_bio = Module["_d2i_ECPrivateKey_bio"] = createExportWrapper("d2i_ECPrivateKey_bio");

var _i2d_ECPrivateKey_bio = Module["_i2d_ECPrivateKey_bio"] = createExportWrapper("i2d_ECPrivateKey_bio");

var _X509_pubkey_digest = Module["_X509_pubkey_digest"] = createExportWrapper("X509_pubkey_digest");

var _X509_CRL_digest = Module["_X509_CRL_digest"] = createExportWrapper("X509_CRL_digest");

var _X509_REQ_digest = Module["_X509_REQ_digest"] = createExportWrapper("X509_REQ_digest");

var _X509_NAME_digest = Module["_X509_NAME_digest"] = createExportWrapper("X509_NAME_digest");

var _PKCS7_ISSUER_AND_SERIAL_digest = Module["_PKCS7_ISSUER_AND_SERIAL_digest"] = createExportWrapper("PKCS7_ISSUER_AND_SERIAL_digest");

var _d2i_PKCS8_PRIV_KEY_INFO_bio = Module["_d2i_PKCS8_PRIV_KEY_INFO_bio"] = createExportWrapper("d2i_PKCS8_PRIV_KEY_INFO_bio");

var _i2d_PKCS8PrivateKeyInfo_bio = Module["_i2d_PKCS8PrivateKeyInfo_bio"] = createExportWrapper("i2d_PKCS8PrivateKeyInfo_bio");

var _i2d_PrivateKey_bio = Module["_i2d_PrivateKey_bio"] = createExportWrapper("i2d_PrivateKey_bio");

var _i2d_PUBKEY_bio = Module["_i2d_PUBKEY_bio"] = createExportWrapper("i2d_PUBKEY_bio");

var _d2i_PUBKEY_bio = Module["_d2i_PUBKEY_bio"] = createExportWrapper("d2i_PUBKEY_bio");

var _d2i_X509_ATTRIBUTE = Module["_d2i_X509_ATTRIBUTE"] = createExportWrapper("d2i_X509_ATTRIBUTE");

var _i2d_X509_ATTRIBUTE = Module["_i2d_X509_ATTRIBUTE"] = createExportWrapper("i2d_X509_ATTRIBUTE");

var _d2i_X509_REVOKED = Module["_d2i_X509_REVOKED"] = createExportWrapper("d2i_X509_REVOKED");

var _i2d_X509_REVOKED = Module["_i2d_X509_REVOKED"] = createExportWrapper("i2d_X509_REVOKED");

var _X509_REVOKED_new = Module["_X509_REVOKED_new"] = createExportWrapper("X509_REVOKED_new");

var _d2i_X509_CRL_INFO = Module["_d2i_X509_CRL_INFO"] = createExportWrapper("d2i_X509_CRL_INFO");

var _X509_CRL_INFO_new = Module["_X509_CRL_INFO_new"] = createExportWrapper("X509_CRL_INFO_new");

var _X509_CRL_INFO_free = Module["_X509_CRL_INFO_free"] = createExportWrapper("X509_CRL_INFO_free");

var _X509_CRL_dup = Module["_X509_CRL_dup"] = createExportWrapper("X509_CRL_dup");

var _X509_CRL_set_default_method = Module["_X509_CRL_set_default_method"] = createExportWrapper("X509_CRL_set_default_method");

var _X509_CRL_METHOD_new = Module["_X509_CRL_METHOD_new"] = createExportWrapper("X509_CRL_METHOD_new");

var _X509_CRL_METHOD_free = Module["_X509_CRL_METHOD_free"] = createExportWrapper("X509_CRL_METHOD_free");

var _X509_CRL_set_meth_data = Module["_X509_CRL_set_meth_data"] = createExportWrapper("X509_CRL_set_meth_data");

var _X509_CRL_get_meth_data = Module["_X509_CRL_get_meth_data"] = createExportWrapper("X509_CRL_get_meth_data");

var _AUTHORITY_KEYID_free = Module["_AUTHORITY_KEYID_free"] = createExportWrapper("AUTHORITY_KEYID_free");

var _ISSUING_DIST_POINT_free = Module["_ISSUING_DIST_POINT_free"] = createExportWrapper("ISSUING_DIST_POINT_free");

var _DIST_POINT_set_dpname = Module["_DIST_POINT_set_dpname"] = createExportWrapper("DIST_POINT_set_dpname");

var _d2i_X509_EXTENSION = Module["_d2i_X509_EXTENSION"] = createExportWrapper("d2i_X509_EXTENSION");

var _i2d_X509_EXTENSION = Module["_i2d_X509_EXTENSION"] = createExportWrapper("i2d_X509_EXTENSION");

var _d2i_X509_EXTENSIONS = Module["_d2i_X509_EXTENSIONS"] = createExportWrapper("d2i_X509_EXTENSIONS");

var _i2d_X509_EXTENSIONS = Module["_i2d_X509_EXTENSIONS"] = createExportWrapper("i2d_X509_EXTENSIONS");

var _d2i_X509_NAME_ENTRY = Module["_d2i_X509_NAME_ENTRY"] = createExportWrapper("d2i_X509_NAME_ENTRY");

var _i2d_X509_NAME_ENTRY = Module["_i2d_X509_NAME_ENTRY"] = createExportWrapper("i2d_X509_NAME_ENTRY");

var _X509_NAME_new = Module["_X509_NAME_new"] = createExportWrapper("X509_NAME_new");

var _X509_NAME_get0_der = Module["_X509_NAME_get0_der"] = createExportWrapper("X509_NAME_get0_der");

var _d2i_X509_PUBKEY = Module["_d2i_X509_PUBKEY"] = createExportWrapper("d2i_X509_PUBKEY");

var _X509_PUBKEY_new = Module["_X509_PUBKEY_new"] = createExportWrapper("X509_PUBKEY_new");

var _d2i_X509_REQ_INFO = Module["_d2i_X509_REQ_INFO"] = createExportWrapper("d2i_X509_REQ_INFO");

var _X509_REQ_INFO_new = Module["_X509_REQ_INFO_new"] = createExportWrapper("X509_REQ_INFO_new");

var _X509_REQ_INFO_free = Module["_X509_REQ_INFO_free"] = createExportWrapper("X509_REQ_INFO_free");

var _X509_REQ_dup = Module["_X509_REQ_dup"] = createExportWrapper("X509_REQ_dup");

var _d2i_X509_CINF = Module["_d2i_X509_CINF"] = createExportWrapper("d2i_X509_CINF");

var _i2d_X509_CINF = Module["_i2d_X509_CINF"] = createExportWrapper("i2d_X509_CINF");

var _X509_CINF_new = Module["_X509_CINF_new"] = createExportWrapper("X509_CINF_new");

var _X509_CINF_free = Module["_X509_CINF_free"] = createExportWrapper("X509_CINF_free");

var _X509_set_ex_data = Module["_X509_set_ex_data"] = createExportWrapper("X509_set_ex_data");

var _X509_get_ex_data = Module["_X509_get_ex_data"] = createExportWrapper("X509_get_ex_data");

var _d2i_X509_CERT_AUX = Module["_d2i_X509_CERT_AUX"] = createExportWrapper("d2i_X509_CERT_AUX");

var _i2d_X509_CERT_AUX = Module["_i2d_X509_CERT_AUX"] = createExportWrapper("i2d_X509_CERT_AUX");

var _X509_CERT_AUX_free = Module["_X509_CERT_AUX_free"] = createExportWrapper("X509_CERT_AUX_free");

var _CRL_DIST_POINTS_free = Module["_CRL_DIST_POINTS_free"] = createExportWrapper("CRL_DIST_POINTS_free");

var _policy_cache_free = Module["_policy_cache_free"] = createExportWrapper("policy_cache_free");

var _NAME_CONSTRAINTS_free = Module["_NAME_CONSTRAINTS_free"] = createExportWrapper("NAME_CONSTRAINTS_free");

var _IPAddressFamily_free = Module["_IPAddressFamily_free"] = createExportWrapper("IPAddressFamily_free");

var _ASIdentifiers_free = Module["_ASIdentifiers_free"] = createExportWrapper("ASIdentifiers_free");

var _X509_CERT_AUX_new = Module["_X509_CERT_AUX_new"] = createExportWrapper("X509_CERT_AUX_new");

var _X509_add1_trust_object = Module["_X509_add1_trust_object"] = createExportWrapper("X509_add1_trust_object");

var _X509_add1_reject_object = Module["_X509_add1_reject_object"] = createExportWrapper("X509_add1_reject_object");

var _X509_trust_clear = Module["_X509_trust_clear"] = createExportWrapper("X509_trust_clear");

var _X509_reject_clear = Module["_X509_reject_clear"] = createExportWrapper("X509_reject_clear");

var _policy_data_free = Module["_policy_data_free"] = createExportWrapper("policy_data_free");

var _policy_cache_set = Module["_policy_cache_set"] = createExportWrapper("policy_cache_set");

var _policy_data_new = Module["_policy_data_new"] = createExportWrapper("policy_data_new");

var _POLICYINFO_free = Module["_POLICYINFO_free"] = createExportWrapper("POLICYINFO_free");

var _policy_cache_set_mapping = Module["_policy_cache_set_mapping"] = createExportWrapper("policy_cache_set_mapping");

var _POLICY_CONSTRAINTS_free = Module["_POLICY_CONSTRAINTS_free"] = createExportWrapper("POLICY_CONSTRAINTS_free");

var _policy_cache_find_data = Module["_policy_cache_find_data"] = createExportWrapper("policy_cache_find_data");

var _POLICYQUALINFO_free = Module["_POLICYQUALINFO_free"] = createExportWrapper("POLICYQUALINFO_free");

var _X509_policy_tree_level_count = Module["_X509_policy_tree_level_count"] = createExportWrapper("X509_policy_tree_level_count");

var _X509_policy_tree_get0_level = Module["_X509_policy_tree_get0_level"] = createExportWrapper("X509_policy_tree_get0_level");

var _X509_policy_tree_get0_policies = Module["_X509_policy_tree_get0_policies"] = createExportWrapper("X509_policy_tree_get0_policies");

var _X509_policy_tree_get0_user_policies = Module["_X509_policy_tree_get0_user_policies"] = createExportWrapper("X509_policy_tree_get0_user_policies");

var _X509_policy_level_node_count = Module["_X509_policy_level_node_count"] = createExportWrapper("X509_policy_level_node_count");

var _X509_policy_level_get0_node = Module["_X509_policy_level_get0_node"] = createExportWrapper("X509_policy_level_get0_node");

var _X509_policy_node_get0_policy = Module["_X509_policy_node_get0_policy"] = createExportWrapper("X509_policy_node_get0_policy");

var _X509_policy_node_get0_qualifiers = Module["_X509_policy_node_get0_qualifiers"] = createExportWrapper("X509_policy_node_get0_qualifiers");

var _X509_policy_node_get0_parent = Module["_X509_policy_node_get0_parent"] = createExportWrapper("X509_policy_node_get0_parent");

var _POLICY_MAPPING_free = Module["_POLICY_MAPPING_free"] = createExportWrapper("POLICY_MAPPING_free");

var _policy_node_cmp_new = Module["_policy_node_cmp_new"] = createExportWrapper("policy_node_cmp_new");

var _tree_find_sk = Module["_tree_find_sk"] = createExportWrapper("tree_find_sk");

var _level_find_node = Module["_level_find_node"] = createExportWrapper("level_find_node");

var _level_add_node = Module["_level_add_node"] = createExportWrapper("level_add_node");

var _policy_node_free = Module["_policy_node_free"] = createExportWrapper("policy_node_free");

var _policy_node_match = Module["_policy_node_match"] = createExportWrapper("policy_node_match");

var _d2i_IPAddressRange = Module["_d2i_IPAddressRange"] = createExportWrapper("d2i_IPAddressRange");

var _i2d_IPAddressRange = Module["_i2d_IPAddressRange"] = createExportWrapper("i2d_IPAddressRange");

var _IPAddressRange_new = Module["_IPAddressRange_new"] = createExportWrapper("IPAddressRange_new");

var _IPAddressRange_free = Module["_IPAddressRange_free"] = createExportWrapper("IPAddressRange_free");

var _d2i_IPAddressOrRange = Module["_d2i_IPAddressOrRange"] = createExportWrapper("d2i_IPAddressOrRange");

var _i2d_IPAddressOrRange = Module["_i2d_IPAddressOrRange"] = createExportWrapper("i2d_IPAddressOrRange");

var _IPAddressOrRange_new = Module["_IPAddressOrRange_new"] = createExportWrapper("IPAddressOrRange_new");

var _IPAddressOrRange_free = Module["_IPAddressOrRange_free"] = createExportWrapper("IPAddressOrRange_free");

var _d2i_IPAddressChoice = Module["_d2i_IPAddressChoice"] = createExportWrapper("d2i_IPAddressChoice");

var _i2d_IPAddressChoice = Module["_i2d_IPAddressChoice"] = createExportWrapper("i2d_IPAddressChoice");

var _IPAddressChoice_new = Module["_IPAddressChoice_new"] = createExportWrapper("IPAddressChoice_new");

var _IPAddressChoice_free = Module["_IPAddressChoice_free"] = createExportWrapper("IPAddressChoice_free");

var _d2i_IPAddressFamily = Module["_d2i_IPAddressFamily"] = createExportWrapper("d2i_IPAddressFamily");

var _i2d_IPAddressFamily = Module["_i2d_IPAddressFamily"] = createExportWrapper("i2d_IPAddressFamily");

var _IPAddressFamily_new = Module["_IPAddressFamily_new"] = createExportWrapper("IPAddressFamily_new");

var _X509v3_addr_get_afi = Module["_X509v3_addr_get_afi"] = createExportWrapper("X509v3_addr_get_afi");

var _X509v3_addr_add_inherit = Module["_X509v3_addr_add_inherit"] = createExportWrapper("X509v3_addr_add_inherit");

var _X509v3_addr_add_prefix = Module["_X509v3_addr_add_prefix"] = createExportWrapper("X509v3_addr_add_prefix");

var _X509v3_addr_add_range = Module["_X509v3_addr_add_range"] = createExportWrapper("X509v3_addr_add_range");

var _X509v3_addr_get_range = Module["_X509v3_addr_get_range"] = createExportWrapper("X509v3_addr_get_range");

var _X509v3_addr_is_canonical = Module["_X509v3_addr_is_canonical"] = createExportWrapper("X509v3_addr_is_canonical");

var _X509v3_addr_canonize = Module["_X509v3_addr_canonize"] = createExportWrapper("X509v3_addr_canonize");

var _name_cmp = Module["_name_cmp"] = createExportWrapper("name_cmp");

var _X509v3_addr_inherits = Module["_X509v3_addr_inherits"] = createExportWrapper("X509v3_addr_inherits");

var _X509v3_addr_subset = Module["_X509v3_addr_subset"] = createExportWrapper("X509v3_addr_subset");

var _X509v3_addr_validate_resource_set = Module["_X509v3_addr_validate_resource_set"] = createExportWrapper("X509v3_addr_validate_resource_set");

var _d2i_NAMING_AUTHORITY = Module["_d2i_NAMING_AUTHORITY"] = createExportWrapper("d2i_NAMING_AUTHORITY");

var _i2d_NAMING_AUTHORITY = Module["_i2d_NAMING_AUTHORITY"] = createExportWrapper("i2d_NAMING_AUTHORITY");

var _NAMING_AUTHORITY_new = Module["_NAMING_AUTHORITY_new"] = createExportWrapper("NAMING_AUTHORITY_new");

var _NAMING_AUTHORITY_free = Module["_NAMING_AUTHORITY_free"] = createExportWrapper("NAMING_AUTHORITY_free");

var _d2i_PROFESSION_INFO = Module["_d2i_PROFESSION_INFO"] = createExportWrapper("d2i_PROFESSION_INFO");

var _i2d_PROFESSION_INFO = Module["_i2d_PROFESSION_INFO"] = createExportWrapper("i2d_PROFESSION_INFO");

var _PROFESSION_INFO_new = Module["_PROFESSION_INFO_new"] = createExportWrapper("PROFESSION_INFO_new");

var _PROFESSION_INFO_free = Module["_PROFESSION_INFO_free"] = createExportWrapper("PROFESSION_INFO_free");

var _d2i_ADMISSIONS = Module["_d2i_ADMISSIONS"] = createExportWrapper("d2i_ADMISSIONS");

var _i2d_ADMISSIONS = Module["_i2d_ADMISSIONS"] = createExportWrapper("i2d_ADMISSIONS");

var _ADMISSIONS_new = Module["_ADMISSIONS_new"] = createExportWrapper("ADMISSIONS_new");

var _ADMISSIONS_free = Module["_ADMISSIONS_free"] = createExportWrapper("ADMISSIONS_free");

var _d2i_ADMISSION_SYNTAX = Module["_d2i_ADMISSION_SYNTAX"] = createExportWrapper("d2i_ADMISSION_SYNTAX");

var _i2d_ADMISSION_SYNTAX = Module["_i2d_ADMISSION_SYNTAX"] = createExportWrapper("i2d_ADMISSION_SYNTAX");

var _ADMISSION_SYNTAX_new = Module["_ADMISSION_SYNTAX_new"] = createExportWrapper("ADMISSION_SYNTAX_new");

var _ADMISSION_SYNTAX_free = Module["_ADMISSION_SYNTAX_free"] = createExportWrapper("ADMISSION_SYNTAX_free");

var _NAMING_AUTHORITY_get0_authorityId = Module["_NAMING_AUTHORITY_get0_authorityId"] = createExportWrapper("NAMING_AUTHORITY_get0_authorityId");

var _NAMING_AUTHORITY_set0_authorityId = Module["_NAMING_AUTHORITY_set0_authorityId"] = createExportWrapper("NAMING_AUTHORITY_set0_authorityId");

var _NAMING_AUTHORITY_get0_authorityURL = Module["_NAMING_AUTHORITY_get0_authorityURL"] = createExportWrapper("NAMING_AUTHORITY_get0_authorityURL");

var _NAMING_AUTHORITY_set0_authorityURL = Module["_NAMING_AUTHORITY_set0_authorityURL"] = createExportWrapper("NAMING_AUTHORITY_set0_authorityURL");

var _NAMING_AUTHORITY_get0_authorityText = Module["_NAMING_AUTHORITY_get0_authorityText"] = createExportWrapper("NAMING_AUTHORITY_get0_authorityText");

var _NAMING_AUTHORITY_set0_authorityText = Module["_NAMING_AUTHORITY_set0_authorityText"] = createExportWrapper("NAMING_AUTHORITY_set0_authorityText");

var _ADMISSION_SYNTAX_get0_admissionAuthority = Module["_ADMISSION_SYNTAX_get0_admissionAuthority"] = createExportWrapper("ADMISSION_SYNTAX_get0_admissionAuthority");

var _ADMISSION_SYNTAX_set0_admissionAuthority = Module["_ADMISSION_SYNTAX_set0_admissionAuthority"] = createExportWrapper("ADMISSION_SYNTAX_set0_admissionAuthority");

var _ADMISSION_SYNTAX_get0_contentsOfAdmissions = Module["_ADMISSION_SYNTAX_get0_contentsOfAdmissions"] = createExportWrapper("ADMISSION_SYNTAX_get0_contentsOfAdmissions");

var _ADMISSION_SYNTAX_set0_contentsOfAdmissions = Module["_ADMISSION_SYNTAX_set0_contentsOfAdmissions"] = createExportWrapper("ADMISSION_SYNTAX_set0_contentsOfAdmissions");

var _ADMISSIONS_get0_admissionAuthority = Module["_ADMISSIONS_get0_admissionAuthority"] = createExportWrapper("ADMISSIONS_get0_admissionAuthority");

var _ADMISSIONS_set0_admissionAuthority = Module["_ADMISSIONS_set0_admissionAuthority"] = createExportWrapper("ADMISSIONS_set0_admissionAuthority");

var _ADMISSIONS_get0_namingAuthority = Module["_ADMISSIONS_get0_namingAuthority"] = createExportWrapper("ADMISSIONS_get0_namingAuthority");

var _ADMISSIONS_set0_namingAuthority = Module["_ADMISSIONS_set0_namingAuthority"] = createExportWrapper("ADMISSIONS_set0_namingAuthority");

var _ADMISSIONS_get0_professionInfos = Module["_ADMISSIONS_get0_professionInfos"] = createExportWrapper("ADMISSIONS_get0_professionInfos");

var _ADMISSIONS_set0_professionInfos = Module["_ADMISSIONS_set0_professionInfos"] = createExportWrapper("ADMISSIONS_set0_professionInfos");

var _PROFESSION_INFO_get0_addProfessionInfo = Module["_PROFESSION_INFO_get0_addProfessionInfo"] = createExportWrapper("PROFESSION_INFO_get0_addProfessionInfo");

var _PROFESSION_INFO_set0_addProfessionInfo = Module["_PROFESSION_INFO_set0_addProfessionInfo"] = createExportWrapper("PROFESSION_INFO_set0_addProfessionInfo");

var _PROFESSION_INFO_get0_namingAuthority = Module["_PROFESSION_INFO_get0_namingAuthority"] = createExportWrapper("PROFESSION_INFO_get0_namingAuthority");

var _PROFESSION_INFO_set0_namingAuthority = Module["_PROFESSION_INFO_set0_namingAuthority"] = createExportWrapper("PROFESSION_INFO_set0_namingAuthority");

var _PROFESSION_INFO_get0_professionItems = Module["_PROFESSION_INFO_get0_professionItems"] = createExportWrapper("PROFESSION_INFO_get0_professionItems");

var _PROFESSION_INFO_set0_professionItems = Module["_PROFESSION_INFO_set0_professionItems"] = createExportWrapper("PROFESSION_INFO_set0_professionItems");

var _PROFESSION_INFO_get0_professionOIDs = Module["_PROFESSION_INFO_get0_professionOIDs"] = createExportWrapper("PROFESSION_INFO_get0_professionOIDs");

var _PROFESSION_INFO_set0_professionOIDs = Module["_PROFESSION_INFO_set0_professionOIDs"] = createExportWrapper("PROFESSION_INFO_set0_professionOIDs");

var _PROFESSION_INFO_get0_registrationNumber = Module["_PROFESSION_INFO_get0_registrationNumber"] = createExportWrapper("PROFESSION_INFO_get0_registrationNumber");

var _PROFESSION_INFO_set0_registrationNumber = Module["_PROFESSION_INFO_set0_registrationNumber"] = createExportWrapper("PROFESSION_INFO_set0_registrationNumber");

var _d2i_AUTHORITY_KEYID = Module["_d2i_AUTHORITY_KEYID"] = createExportWrapper("d2i_AUTHORITY_KEYID");

var _i2d_AUTHORITY_KEYID = Module["_i2d_AUTHORITY_KEYID"] = createExportWrapper("i2d_AUTHORITY_KEYID");

var _AUTHORITY_KEYID_new = Module["_AUTHORITY_KEYID_new"] = createExportWrapper("AUTHORITY_KEYID_new");

var _i2v_GENERAL_NAMES = Module["_i2v_GENERAL_NAMES"] = createExportWrapper("i2v_GENERAL_NAMES");

var _i2v_GENERAL_NAME = Module["_i2v_GENERAL_NAME"] = createExportWrapper("i2v_GENERAL_NAME");

var _v2i_GENERAL_NAME_ex = Module["_v2i_GENERAL_NAME_ex"] = createExportWrapper("v2i_GENERAL_NAME_ex");

var _X509V3_EXT_d2i = Module["_X509V3_EXT_d2i"] = createExportWrapper("X509V3_EXT_d2i");

var _X509V3_add_value = Module["_X509V3_add_value"] = createExportWrapper("X509V3_add_value");

var _x509v3_add_len_value_uchar = Module["_x509v3_add_len_value_uchar"] = createExportWrapper("x509v3_add_len_value_uchar");

var _v2i_GENERAL_NAMES = Module["_v2i_GENERAL_NAMES"] = createExportWrapper("v2i_GENERAL_NAMES");

var _v2i_GENERAL_NAME = Module["_v2i_GENERAL_NAME"] = createExportWrapper("v2i_GENERAL_NAME");

var _a2i_GENERAL_NAME = Module["_a2i_GENERAL_NAME"] = createExportWrapper("a2i_GENERAL_NAME");

var _GENERAL_NAME_new = Module["_GENERAL_NAME_new"] = createExportWrapper("GENERAL_NAME_new");

var _a2i_IPADDRESS_NC = Module["_a2i_IPADDRESS_NC"] = createExportWrapper("a2i_IPADDRESS_NC");

var _a2i_IPADDRESS = Module["_a2i_IPADDRESS"] = createExportWrapper("a2i_IPADDRESS");

var _X509V3_NAME_from_section = Module["_X509V3_NAME_from_section"] = createExportWrapper("X509V3_NAME_from_section");

var _OTHERNAME_new = Module["_OTHERNAME_new"] = createExportWrapper("OTHERNAME_new");

var _d2i_ASRange = Module["_d2i_ASRange"] = createExportWrapper("d2i_ASRange");

var _i2d_ASRange = Module["_i2d_ASRange"] = createExportWrapper("i2d_ASRange");

var _ASRange_new = Module["_ASRange_new"] = createExportWrapper("ASRange_new");

var _ASRange_free = Module["_ASRange_free"] = createExportWrapper("ASRange_free");

var _d2i_ASIdOrRange = Module["_d2i_ASIdOrRange"] = createExportWrapper("d2i_ASIdOrRange");

var _i2d_ASIdOrRange = Module["_i2d_ASIdOrRange"] = createExportWrapper("i2d_ASIdOrRange");

var _ASIdOrRange_new = Module["_ASIdOrRange_new"] = createExportWrapper("ASIdOrRange_new");

var _ASIdOrRange_free = Module["_ASIdOrRange_free"] = createExportWrapper("ASIdOrRange_free");

var _d2i_ASIdentifierChoice = Module["_d2i_ASIdentifierChoice"] = createExportWrapper("d2i_ASIdentifierChoice");

var _i2d_ASIdentifierChoice = Module["_i2d_ASIdentifierChoice"] = createExportWrapper("i2d_ASIdentifierChoice");

var _ASIdentifierChoice_new = Module["_ASIdentifierChoice_new"] = createExportWrapper("ASIdentifierChoice_new");

var _ASIdentifierChoice_free = Module["_ASIdentifierChoice_free"] = createExportWrapper("ASIdentifierChoice_free");

var _d2i_ASIdentifiers = Module["_d2i_ASIdentifiers"] = createExportWrapper("d2i_ASIdentifiers");

var _i2d_ASIdentifiers = Module["_i2d_ASIdentifiers"] = createExportWrapper("i2d_ASIdentifiers");

var _ASIdentifiers_new = Module["_ASIdentifiers_new"] = createExportWrapper("ASIdentifiers_new");

var _X509v3_asid_add_inherit = Module["_X509v3_asid_add_inherit"] = createExportWrapper("X509v3_asid_add_inherit");

var _X509v3_asid_add_id_or_range = Module["_X509v3_asid_add_id_or_range"] = createExportWrapper("X509v3_asid_add_id_or_range");

var _X509v3_asid_is_canonical = Module["_X509v3_asid_is_canonical"] = createExportWrapper("X509v3_asid_is_canonical");

var _X509v3_asid_canonize = Module["_X509v3_asid_canonize"] = createExportWrapper("X509v3_asid_canonize");

var _X509V3_get_value_int = Module["_X509V3_get_value_int"] = createExportWrapper("X509V3_get_value_int");

var _X509v3_asid_inherits = Module["_X509v3_asid_inherits"] = createExportWrapper("X509v3_asid_inherits");

var _X509v3_asid_subset = Module["_X509v3_asid_subset"] = createExportWrapper("X509v3_asid_subset");

var _X509v3_asid_validate_resource_set = Module["_X509v3_asid_validate_resource_set"] = createExportWrapper("X509v3_asid_validate_resource_set");

var _d2i_BASIC_CONSTRAINTS = Module["_d2i_BASIC_CONSTRAINTS"] = createExportWrapper("d2i_BASIC_CONSTRAINTS");

var _i2d_BASIC_CONSTRAINTS = Module["_i2d_BASIC_CONSTRAINTS"] = createExportWrapper("i2d_BASIC_CONSTRAINTS");

var _BASIC_CONSTRAINTS_new = Module["_BASIC_CONSTRAINTS_new"] = createExportWrapper("BASIC_CONSTRAINTS_new");

var _BASIC_CONSTRAINTS_free = Module["_BASIC_CONSTRAINTS_free"] = createExportWrapper("BASIC_CONSTRAINTS_free");

var _i2v_ASN1_BIT_STRING = Module["_i2v_ASN1_BIT_STRING"] = createExportWrapper("i2v_ASN1_BIT_STRING");

var _v2i_ASN1_BIT_STRING = Module["_v2i_ASN1_BIT_STRING"] = createExportWrapper("v2i_ASN1_BIT_STRING");

var _X509V3_EXT_nconf = Module["_X509V3_EXT_nconf"] = createExportWrapper("X509V3_EXT_nconf");

var _X509V3_EXT_nconf_nid = Module["_X509V3_EXT_nconf_nid"] = createExportWrapper("X509V3_EXT_nconf_nid");

var _X509V3_EXT_i2d = Module["_X509V3_EXT_i2d"] = createExportWrapper("X509V3_EXT_i2d");

var _X509V3_EXT_add_nconf_sk = Module["_X509V3_EXT_add_nconf_sk"] = createExportWrapper("X509V3_EXT_add_nconf_sk");

var _X509V3_EXT_get_nid = Module["_X509V3_EXT_get_nid"] = createExportWrapper("X509V3_EXT_get_nid");

var _X509V3_EXT_CRL_add_nconf = Module["_X509V3_EXT_CRL_add_nconf"] = createExportWrapper("X509V3_EXT_CRL_add_nconf");

var _X509V3_get_string = Module["_X509V3_get_string"] = createExportWrapper("X509V3_get_string");

var _X509V3_string_free = Module["_X509V3_string_free"] = createExportWrapper("X509V3_string_free");

var _X509V3_EXT_conf = Module["_X509V3_EXT_conf"] = createExportWrapper("X509V3_EXT_conf");

var _X509V3_EXT_conf_nid = Module["_X509V3_EXT_conf_nid"] = createExportWrapper("X509V3_EXT_conf_nid");

var _X509V3_set_conf_lhash = Module["_X509V3_set_conf_lhash"] = createExportWrapper("X509V3_set_conf_lhash");

var _X509V3_EXT_add_conf = Module["_X509V3_EXT_add_conf"] = createExportWrapper("X509V3_EXT_add_conf");

var _X509V3_EXT_CRL_add_conf = Module["_X509V3_EXT_CRL_add_conf"] = createExportWrapper("X509V3_EXT_CRL_add_conf");

var _X509V3_EXT_REQ_add_conf = Module["_X509V3_EXT_REQ_add_conf"] = createExportWrapper("X509V3_EXT_REQ_add_conf");

var _d2i_CERTIFICATEPOLICIES = Module["_d2i_CERTIFICATEPOLICIES"] = createExportWrapper("d2i_CERTIFICATEPOLICIES");

var _i2d_CERTIFICATEPOLICIES = Module["_i2d_CERTIFICATEPOLICIES"] = createExportWrapper("i2d_CERTIFICATEPOLICIES");

var _CERTIFICATEPOLICIES_new = Module["_CERTIFICATEPOLICIES_new"] = createExportWrapper("CERTIFICATEPOLICIES_new");

var _CERTIFICATEPOLICIES_free = Module["_CERTIFICATEPOLICIES_free"] = createExportWrapper("CERTIFICATEPOLICIES_free");

var _d2i_POLICYINFO = Module["_d2i_POLICYINFO"] = createExportWrapper("d2i_POLICYINFO");

var _i2d_POLICYINFO = Module["_i2d_POLICYINFO"] = createExportWrapper("i2d_POLICYINFO");

var _POLICYINFO_new = Module["_POLICYINFO_new"] = createExportWrapper("POLICYINFO_new");

var _d2i_POLICYQUALINFO = Module["_d2i_POLICYQUALINFO"] = createExportWrapper("d2i_POLICYQUALINFO");

var _i2d_POLICYQUALINFO = Module["_i2d_POLICYQUALINFO"] = createExportWrapper("i2d_POLICYQUALINFO");

var _POLICYQUALINFO_new = Module["_POLICYQUALINFO_new"] = createExportWrapper("POLICYQUALINFO_new");

var _d2i_USERNOTICE = Module["_d2i_USERNOTICE"] = createExportWrapper("d2i_USERNOTICE");

var _i2d_USERNOTICE = Module["_i2d_USERNOTICE"] = createExportWrapper("i2d_USERNOTICE");

var _USERNOTICE_new = Module["_USERNOTICE_new"] = createExportWrapper("USERNOTICE_new");

var _USERNOTICE_free = Module["_USERNOTICE_free"] = createExportWrapper("USERNOTICE_free");

var _d2i_NOTICEREF = Module["_d2i_NOTICEREF"] = createExportWrapper("d2i_NOTICEREF");

var _i2d_NOTICEREF = Module["_i2d_NOTICEREF"] = createExportWrapper("i2d_NOTICEREF");

var _NOTICEREF_new = Module["_NOTICEREF_new"] = createExportWrapper("NOTICEREF_new");

var _NOTICEREF_free = Module["_NOTICEREF_free"] = createExportWrapper("NOTICEREF_free");

var _X509_POLICY_NODE_print = Module["_X509_POLICY_NODE_print"] = createExportWrapper("X509_POLICY_NODE_print");

var _DIST_POINT_free = Module["_DIST_POINT_free"] = createExportWrapper("DIST_POINT_free");

var _d2i_DIST_POINT_NAME = Module["_d2i_DIST_POINT_NAME"] = createExportWrapper("d2i_DIST_POINT_NAME");

var _i2d_DIST_POINT_NAME = Module["_i2d_DIST_POINT_NAME"] = createExportWrapper("i2d_DIST_POINT_NAME");

var _DIST_POINT_NAME_new = Module["_DIST_POINT_NAME_new"] = createExportWrapper("DIST_POINT_NAME_new");

var _DIST_POINT_NAME_free = Module["_DIST_POINT_NAME_free"] = createExportWrapper("DIST_POINT_NAME_free");

var _d2i_DIST_POINT = Module["_d2i_DIST_POINT"] = createExportWrapper("d2i_DIST_POINT");

var _i2d_DIST_POINT = Module["_i2d_DIST_POINT"] = createExportWrapper("i2d_DIST_POINT");

var _DIST_POINT_new = Module["_DIST_POINT_new"] = createExportWrapper("DIST_POINT_new");

var _d2i_CRL_DIST_POINTS = Module["_d2i_CRL_DIST_POINTS"] = createExportWrapper("d2i_CRL_DIST_POINTS");

var _i2d_CRL_DIST_POINTS = Module["_i2d_CRL_DIST_POINTS"] = createExportWrapper("i2d_CRL_DIST_POINTS");

var _CRL_DIST_POINTS_new = Module["_CRL_DIST_POINTS_new"] = createExportWrapper("CRL_DIST_POINTS_new");

var _GENERAL_NAMES_new = Module["_GENERAL_NAMES_new"] = createExportWrapper("GENERAL_NAMES_new");

var _d2i_ISSUING_DIST_POINT = Module["_d2i_ISSUING_DIST_POINT"] = createExportWrapper("d2i_ISSUING_DIST_POINT");

var _i2d_ISSUING_DIST_POINT = Module["_i2d_ISSUING_DIST_POINT"] = createExportWrapper("i2d_ISSUING_DIST_POINT");

var _ISSUING_DIST_POINT_new = Module["_ISSUING_DIST_POINT_new"] = createExportWrapper("ISSUING_DIST_POINT_new");

var _i2s_ASN1_ENUMERATED_TABLE = Module["_i2s_ASN1_ENUMERATED_TABLE"] = createExportWrapper("i2s_ASN1_ENUMERATED_TABLE");

var _d2i_EXTENDED_KEY_USAGE = Module["_d2i_EXTENDED_KEY_USAGE"] = createExportWrapper("d2i_EXTENDED_KEY_USAGE");

var _i2d_EXTENDED_KEY_USAGE = Module["_i2d_EXTENDED_KEY_USAGE"] = createExportWrapper("i2d_EXTENDED_KEY_USAGE");

var _EXTENDED_KEY_USAGE_new = Module["_EXTENDED_KEY_USAGE_new"] = createExportWrapper("EXTENDED_KEY_USAGE_new");

var _EXTENDED_KEY_USAGE_free = Module["_EXTENDED_KEY_USAGE_free"] = createExportWrapper("EXTENDED_KEY_USAGE_free");

var _d2i_OTHERNAME = Module["_d2i_OTHERNAME"] = createExportWrapper("d2i_OTHERNAME");

var _i2d_OTHERNAME = Module["_i2d_OTHERNAME"] = createExportWrapper("i2d_OTHERNAME");

var _OTHERNAME_free = Module["_OTHERNAME_free"] = createExportWrapper("OTHERNAME_free");

var _d2i_EDIPARTYNAME = Module["_d2i_EDIPARTYNAME"] = createExportWrapper("d2i_EDIPARTYNAME");

var _i2d_EDIPARTYNAME = Module["_i2d_EDIPARTYNAME"] = createExportWrapper("i2d_EDIPARTYNAME");

var _EDIPARTYNAME_new = Module["_EDIPARTYNAME_new"] = createExportWrapper("EDIPARTYNAME_new");

var _EDIPARTYNAME_free = Module["_EDIPARTYNAME_free"] = createExportWrapper("EDIPARTYNAME_free");

var _d2i_GENERAL_NAME = Module["_d2i_GENERAL_NAME"] = createExportWrapper("d2i_GENERAL_NAME");

var _i2d_GENERAL_NAME = Module["_i2d_GENERAL_NAME"] = createExportWrapper("i2d_GENERAL_NAME");

var _d2i_GENERAL_NAMES = Module["_d2i_GENERAL_NAMES"] = createExportWrapper("d2i_GENERAL_NAMES");

var _i2d_GENERAL_NAMES = Module["_i2d_GENERAL_NAMES"] = createExportWrapper("i2d_GENERAL_NAMES");

var _GENERAL_NAME_dup = Module["_GENERAL_NAME_dup"] = createExportWrapper("GENERAL_NAME_dup");

var _OTHERNAME_cmp = Module["_OTHERNAME_cmp"] = createExportWrapper("OTHERNAME_cmp");

var _GENERAL_NAME_set0_value = Module["_GENERAL_NAME_set0_value"] = createExportWrapper("GENERAL_NAME_set0_value");

var _GENERAL_NAME_get0_value = Module["_GENERAL_NAME_get0_value"] = createExportWrapper("GENERAL_NAME_get0_value");

var _GENERAL_NAME_set0_othername = Module["_GENERAL_NAME_set0_othername"] = createExportWrapper("GENERAL_NAME_set0_othername");

var _GENERAL_NAME_get0_otherName = Module["_GENERAL_NAME_get0_otherName"] = createExportWrapper("GENERAL_NAME_get0_otherName");

var _i2s_ASN1_IA5STRING = Module["_i2s_ASN1_IA5STRING"] = createExportWrapper("i2s_ASN1_IA5STRING");

var _s2i_ASN1_IA5STRING = Module["_s2i_ASN1_IA5STRING"] = createExportWrapper("s2i_ASN1_IA5STRING");

var _ACCESS_DESCRIPTION_free = Module["_ACCESS_DESCRIPTION_free"] = createExportWrapper("ACCESS_DESCRIPTION_free");

var _d2i_ACCESS_DESCRIPTION = Module["_d2i_ACCESS_DESCRIPTION"] = createExportWrapper("d2i_ACCESS_DESCRIPTION");

var _i2d_ACCESS_DESCRIPTION = Module["_i2d_ACCESS_DESCRIPTION"] = createExportWrapper("i2d_ACCESS_DESCRIPTION");

var _ACCESS_DESCRIPTION_new = Module["_ACCESS_DESCRIPTION_new"] = createExportWrapper("ACCESS_DESCRIPTION_new");

var _d2i_AUTHORITY_INFO_ACCESS = Module["_d2i_AUTHORITY_INFO_ACCESS"] = createExportWrapper("d2i_AUTHORITY_INFO_ACCESS");

var _i2d_AUTHORITY_INFO_ACCESS = Module["_i2d_AUTHORITY_INFO_ACCESS"] = createExportWrapper("i2d_AUTHORITY_INFO_ACCESS");

var _AUTHORITY_INFO_ACCESS_new = Module["_AUTHORITY_INFO_ACCESS_new"] = createExportWrapper("AUTHORITY_INFO_ACCESS_new");

var _AUTHORITY_INFO_ACCESS_free = Module["_AUTHORITY_INFO_ACCESS_free"] = createExportWrapper("AUTHORITY_INFO_ACCESS_free");

var _i2a_ACCESS_DESCRIPTION = Module["_i2a_ACCESS_DESCRIPTION"] = createExportWrapper("i2a_ACCESS_DESCRIPTION");

var _X509V3_EXT_add = Module["_X509V3_EXT_add"] = createExportWrapper("X509V3_EXT_add");

var _X509V3_EXT_add_list = Module["_X509V3_EXT_add_list"] = createExportWrapper("X509V3_EXT_add_list");

var _X509V3_EXT_add_alias = Module["_X509V3_EXT_add_alias"] = createExportWrapper("X509V3_EXT_add_alias");

var _X509V3_EXT_cleanup = Module["_X509V3_EXT_cleanup"] = createExportWrapper("X509V3_EXT_cleanup");

var _X509V3_add_standard_extensions = Module["_X509V3_add_standard_extensions"] = createExportWrapper("X509V3_add_standard_extensions");

var _X509V3_add_value_bool = Module["_X509V3_add_value_bool"] = createExportWrapper("X509V3_add_value_bool");

var _X509V3_add_value_int = Module["_X509V3_add_value_int"] = createExportWrapper("X509V3_add_value_int");

var _i2s_ASN1_ENUMERATED = Module["_i2s_ASN1_ENUMERATED"] = createExportWrapper("i2s_ASN1_ENUMERATED");

var _GENERAL_SUBTREE_new = Module["_GENERAL_SUBTREE_new"] = createExportWrapper("GENERAL_SUBTREE_new");

var _GENERAL_SUBTREE_free = Module["_GENERAL_SUBTREE_free"] = createExportWrapper("GENERAL_SUBTREE_free");

var _NAME_CONSTRAINTS_new = Module["_NAME_CONSTRAINTS_new"] = createExportWrapper("NAME_CONSTRAINTS_new");

var _PROXY_CERT_INFO_EXTENSION_new = Module["_PROXY_CERT_INFO_EXTENSION_new"] = createExportWrapper("PROXY_CERT_INFO_EXTENSION_new");

var _PROXY_CERT_INFO_EXTENSION_free = Module["_PROXY_CERT_INFO_EXTENSION_free"] = createExportWrapper("PROXY_CERT_INFO_EXTENSION_free");

var _d2i_PROXY_POLICY = Module["_d2i_PROXY_POLICY"] = createExportWrapper("d2i_PROXY_POLICY");

var _i2d_PROXY_POLICY = Module["_i2d_PROXY_POLICY"] = createExportWrapper("i2d_PROXY_POLICY");

var _PROXY_POLICY_new = Module["_PROXY_POLICY_new"] = createExportWrapper("PROXY_POLICY_new");

var _PROXY_POLICY_free = Module["_PROXY_POLICY_free"] = createExportWrapper("PROXY_POLICY_free");

var _d2i_PROXY_CERT_INFO_EXTENSION = Module["_d2i_PROXY_CERT_INFO_EXTENSION"] = createExportWrapper("d2i_PROXY_CERT_INFO_EXTENSION");

var _i2d_PROXY_CERT_INFO_EXTENSION = Module["_i2d_PROXY_CERT_INFO_EXTENSION"] = createExportWrapper("i2d_PROXY_CERT_INFO_EXTENSION");

var _POLICY_CONSTRAINTS_new = Module["_POLICY_CONSTRAINTS_new"] = createExportWrapper("POLICY_CONSTRAINTS_new");

var _d2i_PKEY_USAGE_PERIOD = Module["_d2i_PKEY_USAGE_PERIOD"] = createExportWrapper("d2i_PKEY_USAGE_PERIOD");

var _i2d_PKEY_USAGE_PERIOD = Module["_i2d_PKEY_USAGE_PERIOD"] = createExportWrapper("i2d_PKEY_USAGE_PERIOD");

var _PKEY_USAGE_PERIOD_new = Module["_PKEY_USAGE_PERIOD_new"] = createExportWrapper("PKEY_USAGE_PERIOD_new");

var _PKEY_USAGE_PERIOD_free = Module["_PKEY_USAGE_PERIOD_free"] = createExportWrapper("PKEY_USAGE_PERIOD_free");

var _POLICY_MAPPING_new = Module["_POLICY_MAPPING_new"] = createExportWrapper("POLICY_MAPPING_new");

var _X509V3_EXT_val_prn = Module["_X509V3_EXT_val_prn"] = createExportWrapper("X509V3_EXT_val_prn");

var _X509_PURPOSE_get_by_sname = Module["_X509_PURPOSE_get_by_sname"] = createExportWrapper("X509_PURPOSE_get_by_sname");

var _X509_PURPOSE_add = Module["_X509_PURPOSE_add"] = createExportWrapper("X509_PURPOSE_add");

var _X509_PURPOSE_cleanup = Module["_X509_PURPOSE_cleanup"] = createExportWrapper("X509_PURPOSE_cleanup");

var _X509_supported_extension = Module["_X509_supported_extension"] = createExportWrapper("X509_supported_extension");

var _X509_set_proxy_flag = Module["_X509_set_proxy_flag"] = createExportWrapper("X509_set_proxy_flag");

var _X509_set_proxy_pathlen = Module["_X509_set_proxy_pathlen"] = createExportWrapper("X509_set_proxy_pathlen");

var _X509_check_issued = Module["_X509_check_issued"] = createExportWrapper("X509_check_issued");

var _X509_get_extended_key_usage = Module["_X509_get_extended_key_usage"] = createExportWrapper("X509_get_extended_key_usage");

var _X509_get0_authority_key_id = Module["_X509_get0_authority_key_id"] = createExportWrapper("X509_get0_authority_key_id");

var _X509_get0_authority_issuer = Module["_X509_get0_authority_issuer"] = createExportWrapper("X509_get0_authority_issuer");

var _X509_get0_authority_serial = Module["_X509_get0_authority_serial"] = createExportWrapper("X509_get0_authority_serial");

var _X509_get_pathlen = Module["_X509_get_pathlen"] = createExportWrapper("X509_get_pathlen");

var _X509_get_proxy_pathlen = Module["_X509_get_proxy_pathlen"] = createExportWrapper("X509_get_proxy_pathlen");

var _i2s_ASN1_OCTET_STRING = Module["_i2s_ASN1_OCTET_STRING"] = createExportWrapper("i2s_ASN1_OCTET_STRING");

var _s2i_ASN1_OCTET_STRING = Module["_s2i_ASN1_OCTET_STRING"] = createExportWrapper("s2i_ASN1_OCTET_STRING");

var _SXNET_add_id_INTEGER = Module["_SXNET_add_id_INTEGER"] = createExportWrapper("SXNET_add_id_INTEGER");

var _d2i_SXNETID = Module["_d2i_SXNETID"] = createExportWrapper("d2i_SXNETID");

var _i2d_SXNETID = Module["_i2d_SXNETID"] = createExportWrapper("i2d_SXNETID");

var _SXNETID_new = Module["_SXNETID_new"] = createExportWrapper("SXNETID_new");

var _SXNETID_free = Module["_SXNETID_free"] = createExportWrapper("SXNETID_free");

var _d2i_SXNET = Module["_d2i_SXNET"] = createExportWrapper("d2i_SXNET");

var _i2d_SXNET = Module["_i2d_SXNET"] = createExportWrapper("i2d_SXNET");

var _SXNET_new = Module["_SXNET_new"] = createExportWrapper("SXNET_new");

var _SXNET_free = Module["_SXNET_free"] = createExportWrapper("SXNET_free");

var _SXNET_add_id_asc = Module["_SXNET_add_id_asc"] = createExportWrapper("SXNET_add_id_asc");

var _SXNET_add_id_ulong = Module["_SXNET_add_id_ulong"] = createExportWrapper("SXNET_add_id_ulong");

var _SXNET_get_id_INTEGER = Module["_SXNET_get_id_INTEGER"] = createExportWrapper("SXNET_get_id_INTEGER");

var _SXNET_get_id_asc = Module["_SXNET_get_id_asc"] = createExportWrapper("SXNET_get_id_asc");

var _SXNET_get_id_ulong = Module["_SXNET_get_id_ulong"] = createExportWrapper("SXNET_get_id_ulong");

var _TLS_FEATURE_new = Module["_TLS_FEATURE_new"] = createExportWrapper("TLS_FEATURE_new");

var _TLS_FEATURE_free = Module["_TLS_FEATURE_free"] = createExportWrapper("TLS_FEATURE_free");

var _X509V3_add_value_uchar = Module["_X509V3_add_value_uchar"] = createExportWrapper("X509V3_add_value_uchar");

var _X509V3_add_value_bool_nf = Module["_X509V3_add_value_bool_nf"] = createExportWrapper("X509V3_add_value_bool_nf");

var _X509_get1_email = Module["_X509_get1_email"] = createExportWrapper("X509_get1_email");

var _X509_get1_ocsp = Module["_X509_get1_ocsp"] = createExportWrapper("X509_get1_ocsp");

var _X509_REQ_get1_email = Module["_X509_REQ_get1_email"] = createExportWrapper("X509_REQ_get1_email");

var _X509_email_free = Module["_X509_email_free"] = createExportWrapper("X509_email_free");

var _X509_check_ip_asc = Module["_X509_check_ip_asc"] = createExportWrapper("X509_check_ip_asc");

var _prvTidyAccessibilityChecks = Module["_prvTidyAccessibilityChecks"] = createExportWrapper("prvTidyAccessibilityChecks");

var _prvTidyNodeAttributeVersions = Module["_prvTidyNodeAttributeVersions"] = createExportWrapper("prvTidyNodeAttributeVersions");

var _prvTidyAttributeIsProprietary = Module["_prvTidyAttributeIsProprietary"] = createExportWrapper("prvTidyAttributeIsProprietary");

var _prvTidyAttributeIsMismatched = Module["_prvTidyAttributeIsMismatched"] = createExportWrapper("prvTidyAttributeIsMismatched");

var _prvTidyAttrGetById = Module["_prvTidyAttrGetById"] = createExportWrapper("prvTidyAttrGetById");

var _prvTidyFindAttribute = Module["_prvTidyFindAttribute"] = createExportWrapper("prvTidyFindAttribute");

var _prvTidyGetAttrByName = Module["_prvTidyGetAttrByName"] = createExportWrapper("prvTidyGetAttrByName");

var _prvTidyDropAttrByName = Module["_prvTidyDropAttrByName"] = createExportWrapper("prvTidyDropAttrByName");

var _prvTidyAddAttribute = Module["_prvTidyAddAttribute"] = createExportWrapper("prvTidyAddAttribute");

var _prvTidyRepairAttrValue = Module["_prvTidyRepairAttrValue"] = createExportWrapper("prvTidyRepairAttrValue");

var _prvTidyFreeAttrPriorityList = Module["_prvTidyFreeAttrPriorityList"] = createExportWrapper("prvTidyFreeAttrPriorityList");

var _prvTidyDefinePriorityAttribute = Module["_prvTidyDefinePriorityAttribute"] = createExportWrapper("prvTidyDefinePriorityAttribute");

var _prvTidygetPriorityAttrList = Module["_prvTidygetPriorityAttrList"] = createExportWrapper("prvTidygetPriorityAttrList");

var _prvTidygetNextPriorityAttr = Module["_prvTidygetNextPriorityAttr"] = createExportWrapper("prvTidygetNextPriorityAttr");

var _prvTidyIsUrl = Module["_prvTidyIsUrl"] = createExportWrapper("prvTidyIsUrl");

var _prvTidyCheckUrl = Module["_prvTidyCheckUrl"] = createExportWrapper("prvTidyCheckUrl");

var _prvTidyIsScript = Module["_prvTidyIsScript"] = createExportWrapper("prvTidyIsScript");

var _prvTidyIsAnchorElement = Module["_prvTidyIsAnchorElement"] = createExportWrapper("prvTidyIsAnchorElement");

var _prvTidyIsCSS1Selector = Module["_prvTidyIsCSS1Selector"] = createExportWrapper("prvTidyIsCSS1Selector");

var _prvTidyRemoveAnchorByNode = Module["_prvTidyRemoveAnchorByNode"] = createExportWrapper("prvTidyRemoveAnchorByNode");

var _prvTidyFreeAnchors = Module["_prvTidyFreeAnchors"] = createExportWrapper("prvTidyFreeAnchors");

var _prvTidyInitAttrs = Module["_prvTidyInitAttrs"] = createExportWrapper("prvTidyInitAttrs");

var _prvTidyFreeAttrTable = Module["_prvTidyFreeAttrTable"] = createExportWrapper("prvTidyFreeAttrTable");

var _prvTidyAppendToClassAttr = Module["_prvTidyAppendToClassAttr"] = createExportWrapper("prvTidyAppendToClassAttr");

var _prvTidyRepairDuplicateAttributes = Module["_prvTidyRepairDuplicateAttributes"] = createExportWrapper("prvTidyRepairDuplicateAttributes");

var _prvTidyCheckAttribute = Module["_prvTidyCheckAttribute"] = createExportWrapper("prvTidyCheckAttribute");

var _prvTidyIsBoolAttribute = Module["_prvTidyIsBoolAttribute"] = createExportWrapper("prvTidyIsBoolAttribute");

var _prvTidyattrIsEvent = Module["_prvTidyattrIsEvent"] = createExportWrapper("prvTidyattrIsEvent");

var _prvTidyIsValidHTMLID = Module["_prvTidyIsValidHTMLID"] = createExportWrapper("prvTidyIsValidHTMLID");

var _prvTidyIsValidXMLID = Module["_prvTidyIsValidXMLID"] = createExportWrapper("prvTidyIsValidXMLID");

var _prvTidySortAttributes = Module["_prvTidySortAttributes"] = createExportWrapper("prvTidySortAttributes");

var _prvTidyDupAttrs = Module["_prvTidyDupAttrs"] = createExportWrapper("prvTidyDupAttrs");

var _prvTidyPushInline = Module["_prvTidyPushInline"] = createExportWrapper("prvTidyPushInline");

var _prvTidyIsPushed = Module["_prvTidyIsPushed"] = createExportWrapper("prvTidyIsPushed");

var _prvTidyPopInline = Module["_prvTidyPopInline"] = createExportWrapper("prvTidyPopInline");

var _prvTidyIsPushedLast = Module["_prvTidyIsPushedLast"] = createExportWrapper("prvTidyIsPushedLast");

var _prvTidyInlineDup = Module["_prvTidyInlineDup"] = createExportWrapper("prvTidyInlineDup");

var _prvTidyDeferDup = Module["_prvTidyDeferDup"] = createExportWrapper("prvTidyDeferDup");

var _prvTidyInsertedToken = Module["_prvTidyInsertedToken"] = createExportWrapper("prvTidyInsertedToken");

var _prvTidySwitchInline = Module["_prvTidySwitchInline"] = createExportWrapper("prvTidySwitchInline");

var _prvTidyInlineDup1 = Module["_prvTidyInlineDup1"] = createExportWrapper("prvTidyInlineDup1");

var _prvTidyCheckNodeIntegrity = Module["_prvTidyCheckNodeIntegrity"] = createExportWrapper("prvTidyCheckNodeIntegrity");

var _prvTidyIsNewNode = Module["_prvTidyIsNewNode"] = createExportWrapper("prvTidyIsNewNode");

var _prvTidyCoerceNode = Module["_prvTidyCoerceNode"] = createExportWrapper("prvTidyCoerceNode");

var _prvTidyRemoveNode = Module["_prvTidyRemoveNode"] = createExportWrapper("prvTidyRemoveNode");

var _prvTidyDiscardElement = Module["_prvTidyDiscardElement"] = createExportWrapper("prvTidyDiscardElement");

var _prvTidyInsertNodeAtStart = Module["_prvTidyInsertNodeAtStart"] = createExportWrapper("prvTidyInsertNodeAtStart");

var _prvTidyInsertNodeAtEnd = Module["_prvTidyInsertNodeAtEnd"] = createExportWrapper("prvTidyInsertNodeAtEnd");

var _prvTidyInsertNodeBeforeElement = Module["_prvTidyInsertNodeBeforeElement"] = createExportWrapper("prvTidyInsertNodeBeforeElement");

var _prvTidyInsertNodeAfterElement = Module["_prvTidyInsertNodeAfterElement"] = createExportWrapper("prvTidyInsertNodeAfterElement");

var _prvTidyTrimEmptyElement = Module["_prvTidyTrimEmptyElement"] = createExportWrapper("prvTidyTrimEmptyElement");

var _prvTidyDropEmptyElements = Module["_prvTidyDropEmptyElements"] = createExportWrapper("prvTidyDropEmptyElements");

var _prvTidyIsBlank = Module["_prvTidyIsBlank"] = createExportWrapper("prvTidyIsBlank");

var _prvTidyParseBlock = Module["_prvTidyParseBlock"] = createExportWrapper("prvTidyParseBlock");

var _prvTidyParseList = Module["_prvTidyParseList"] = createExportWrapper("prvTidyParseList");

var _prvTidyParsePre = Module["_prvTidyParsePre"] = createExportWrapper("prvTidyParsePre");

var _prvTidyParseNamespace = Module["_prvTidyParseNamespace"] = createExportWrapper("prvTidyParseNamespace");

var _prvTidyParseInline = Module["_prvTidyParseInline"] = createExportWrapper("prvTidyParseInline");

var _prvTidyParseEmpty = Module["_prvTidyParseEmpty"] = createExportWrapper("prvTidyParseEmpty");

var _prvTidyParseDefList = Module["_prvTidyParseDefList"] = createExportWrapper("prvTidyParseDefList");

var _prvTidyParseRow = Module["_prvTidyParseRow"] = createExportWrapper("prvTidyParseRow");

var _prvTidyParseRowGroup = Module["_prvTidyParseRowGroup"] = createExportWrapper("prvTidyParseRowGroup");

var _prvTidyParseColGroup = Module["_prvTidyParseColGroup"] = createExportWrapper("prvTidyParseColGroup");

var _prvTidyParseTableTag = Module["_prvTidyParseTableTag"] = createExportWrapper("prvTidyParseTableTag");

var _prvTidyParseOptGroup = Module["_prvTidyParseOptGroup"] = createExportWrapper("prvTidyParseOptGroup");

var _prvTidyParseSelect = Module["_prvTidyParseSelect"] = createExportWrapper("prvTidyParseSelect");

var _prvTidyParseDatalist = Module["_prvTidyParseDatalist"] = createExportWrapper("prvTidyParseDatalist");

var _prvTidyParseText = Module["_prvTidyParseText"] = createExportWrapper("prvTidyParseText");

var _prvTidyParseTitle = Module["_prvTidyParseTitle"] = createExportWrapper("prvTidyParseTitle");

var _prvTidyParseScript = Module["_prvTidyParseScript"] = createExportWrapper("prvTidyParseScript");

var _prvTidyIsJavaScript = Module["_prvTidyIsJavaScript"] = createExportWrapper("prvTidyIsJavaScript");

var _prvTidyParseHead = Module["_prvTidyParseHead"] = createExportWrapper("prvTidyParseHead");

var _prvTidyFindNodeWithId = Module["_prvTidyFindNodeWithId"] = createExportWrapper("prvTidyFindNodeWithId");

var _prvTidyFindNodeById = Module["_prvTidyFindNodeById"] = createExportWrapper("prvTidyFindNodeById");

var _prvTidyParseBody = Module["_prvTidyParseBody"] = createExportWrapper("prvTidyParseBody");

var _prvTidyParseNoFrames = Module["_prvTidyParseNoFrames"] = createExportWrapper("prvTidyParseNoFrames");

var _prvTidyParseFrameSet = Module["_prvTidyParseFrameSet"] = createExportWrapper("prvTidyParseFrameSet");

var _prvTidyParseHTML = Module["_prvTidyParseHTML"] = createExportWrapper("prvTidyParseHTML");

var _prvTidyParseDocument = Module["_prvTidyParseDocument"] = createExportWrapper("prvTidyParseDocument");

var _prvTidyXMLPreserveWhiteSpace = Module["_prvTidyXMLPreserveWhiteSpace"] = createExportWrapper("prvTidyXMLPreserveWhiteSpace");

var _prvTidyParseXMLDocument = Module["_prvTidyParseXMLDocument"] = createExportWrapper("prvTidyParseXMLDocument");

var _prvTidyDeclareUserTag = Module["_prvTidyDeclareUserTag"] = createExportWrapper("prvTidyDeclareUserTag");

var _prvTidyDefineTag = Module["_prvTidyDefineTag"] = createExportWrapper("prvTidyDefineTag");

var _prvTidyFindTag = Module["_prvTidyFindTag"] = createExportWrapper("prvTidyFindTag");

var _prvTidynodeIsAutonomousCustomTag = Module["_prvTidynodeIsAutonomousCustomTag"] = createExportWrapper("prvTidynodeIsAutonomousCustomTag");

var _prvTidyLookupTagDef = Module["_prvTidyLookupTagDef"] = createExportWrapper("prvTidyLookupTagDef");

var _prvTidyFindParser = Module["_prvTidyFindParser"] = createExportWrapper("prvTidyFindParser");

var _prvTidyGetDeclaredTagList = Module["_prvTidyGetDeclaredTagList"] = createExportWrapper("prvTidyGetDeclaredTagList");

var _prvTidyGetNextDeclaredTag = Module["_prvTidyGetNextDeclaredTag"] = createExportWrapper("prvTidyGetNextDeclaredTag");

var _prvTidyInitTags = Module["_prvTidyInitTags"] = createExportWrapper("prvTidyInitTags");

var _prvTidyFreeDeclaredTags = Module["_prvTidyFreeDeclaredTags"] = createExportWrapper("prvTidyFreeDeclaredTags");

var _prvTidyAdjustTags = Module["_prvTidyAdjustTags"] = createExportWrapper("prvTidyAdjustTags");

var _prvTidyIsHTML5Mode = Module["_prvTidyIsHTML5Mode"] = createExportWrapper("prvTidyIsHTML5Mode");

var _prvTidyResetTags = Module["_prvTidyResetTags"] = createExportWrapper("prvTidyResetTags");

var _prvTidyFreeTags = Module["_prvTidyFreeTags"] = createExportWrapper("prvTidyFreeTags");

var _prvTidyCheckAttributes = Module["_prvTidyCheckAttributes"] = createExportWrapper("prvTidyCheckAttributes");

var _prvTidynodeIsText = Module["_prvTidynodeIsText"] = createExportWrapper("prvTidynodeIsText");

var _prvTidynodeHasText = Module["_prvTidynodeHasText"] = createExportWrapper("prvTidynodeHasText");

var _prvTidynodeIsElement = Module["_prvTidynodeIsElement"] = createExportWrapper("prvTidynodeIsElement");

var _prvTidyelementIsAutonomousCustomFormat = Module["_prvTidyelementIsAutonomousCustomFormat"] = createExportWrapper("prvTidyelementIsAutonomousCustomFormat");

var _prvTidynodeIsAutonomousCustomFormat = Module["_prvTidynodeIsAutonomousCustomFormat"] = createExportWrapper("prvTidynodeIsAutonomousCustomFormat");

var _prvTidynodeHasCM = Module["_prvTidynodeHasCM"] = createExportWrapper("prvTidynodeHasCM");

var _prvTidynodeCMIsBlock = Module["_prvTidynodeCMIsBlock"] = createExportWrapper("prvTidynodeCMIsBlock");

var _prvTidynodeCMIsInline = Module["_prvTidynodeCMIsInline"] = createExportWrapper("prvTidynodeCMIsInline");

var _prvTidynodeCMIsEmpty = Module["_prvTidynodeCMIsEmpty"] = createExportWrapper("prvTidynodeCMIsEmpty");

var _prvTidynodeIsHeader = Module["_prvTidynodeIsHeader"] = createExportWrapper("prvTidynodeIsHeader");

var _prvTidynodeHeaderLevel = Module["_prvTidynodeHeaderLevel"] = createExportWrapper("prvTidynodeHeaderLevel");

var _prvTidyTraverseNodeTree = Module["_prvTidyTraverseNodeTree"] = createExportWrapper("prvTidyTraverseNodeTree");

var _prvTidyEntityInfo = Module["_prvTidyEntityInfo"] = createExportWrapper("prvTidyEntityInfo");

var _prvTidyEntityName = Module["_prvTidyEntityName"] = createExportWrapper("prvTidyEntityName");

var _prvTidyHTMLVersion = Module["_prvTidyHTMLVersion"] = createExportWrapper("prvTidyHTMLVersion");

var _prvTidyConstrainVersion = Module["_prvTidyConstrainVersion"] = createExportWrapper("prvTidyConstrainVersion");

var _prvTidyIsWhite = Module["_prvTidyIsWhite"] = createExportWrapper("prvTidyIsWhite");

var _prvTidyIsNewline = Module["_prvTidyIsNewline"] = createExportWrapper("prvTidyIsNewline");

var _prvTidyIsDigit = Module["_prvTidyIsDigit"] = createExportWrapper("prvTidyIsDigit");

var _prvTidyIsLetter = Module["_prvTidyIsLetter"] = createExportWrapper("prvTidyIsLetter");

var _prvTidyIsHTMLSpace = Module["_prvTidyIsHTMLSpace"] = createExportWrapper("prvTidyIsHTMLSpace");

var _prvTidyIsNamechar = Module["_prvTidyIsNamechar"] = createExportWrapper("prvTidyIsNamechar");

var _prvTidyIsXMLLetter = Module["_prvTidyIsXMLLetter"] = createExportWrapper("prvTidyIsXMLLetter");

var _prvTidyIsXMLNamechar = Module["_prvTidyIsXMLNamechar"] = createExportWrapper("prvTidyIsXMLNamechar");

var _prvTidyIsUpper = Module["_prvTidyIsUpper"] = createExportWrapper("prvTidyIsUpper");

var _prvTidyToLower = Module["_prvTidyToLower"] = createExportWrapper("prvTidyToLower");

var _prvTidyToUpper = Module["_prvTidyToUpper"] = createExportWrapper("prvTidyToUpper");

var _prvTidyNewLexer = Module["_prvTidyNewLexer"] = createExportWrapper("prvTidyNewLexer");

var _prvTidyFreeLexer = Module["_prvTidyFreeLexer"] = createExportWrapper("prvTidyFreeLexer");

var _prvTidyFreeNode = Module["_prvTidyFreeNode"] = createExportWrapper("prvTidyFreeNode");

var _prvTidyAddCharToLexer = Module["_prvTidyAddCharToLexer"] = createExportWrapper("prvTidyAddCharToLexer");

var _prvTidyNewNode = Module["_prvTidyNewNode"] = createExportWrapper("prvTidyNewNode");

var _prvTidyCloneNode = Module["_prvTidyCloneNode"] = createExportWrapper("prvTidyCloneNode");

var _prvTidyFreeAttrs = Module["_prvTidyFreeAttrs"] = createExportWrapper("prvTidyFreeAttrs");

var _prvTidyFreeAttribute = Module["_prvTidyFreeAttribute"] = createExportWrapper("prvTidyFreeAttribute");

var _prvTidyDetachAttribute = Module["_prvTidyDetachAttribute"] = createExportWrapper("prvTidyDetachAttribute");

var _prvTidyRemoveAttribute = Module["_prvTidyRemoveAttribute"] = createExportWrapper("prvTidyRemoveAttribute");

var _prvTidyTextToken = Module["_prvTidyTextToken"] = createExportWrapper("prvTidyTextToken");

var _prvTidyNewLineNode = Module["_prvTidyNewLineNode"] = createExportWrapper("prvTidyNewLineNode");

var _prvTidyNewLiteralTextNode = Module["_prvTidyNewLiteralTextNode"] = createExportWrapper("prvTidyNewLiteralTextNode");

var _prvTidyAddStringLiteral = Module["_prvTidyAddStringLiteral"] = createExportWrapper("prvTidyAddStringLiteral");

var _prvTidyFindDocType = Module["_prvTidyFindDocType"] = createExportWrapper("prvTidyFindDocType");

var _prvTidyFindContainer = Module["_prvTidyFindContainer"] = createExportWrapper("prvTidyFindContainer");

var _prvTidyFindHTML = Module["_prvTidyFindHTML"] = createExportWrapper("prvTidyFindHTML");

var _prvTidyFindXmlDecl = Module["_prvTidyFindXmlDecl"] = createExportWrapper("prvTidyFindXmlDecl");

var _prvTidyFindHEAD = Module["_prvTidyFindHEAD"] = createExportWrapper("prvTidyFindHEAD");

var _prvTidyFindTITLE = Module["_prvTidyFindTITLE"] = createExportWrapper("prvTidyFindTITLE");

var _prvTidyFindBody = Module["_prvTidyFindBody"] = createExportWrapper("prvTidyFindBody");

var _prvTidyAddGenerator = Module["_prvTidyAddGenerator"] = createExportWrapper("prvTidyAddGenerator");

var _prvTidyInferredTag = Module["_prvTidyInferredTag"] = createExportWrapper("prvTidyInferredTag");

var _prvTidyApparentVersion = Module["_prvTidyApparentVersion"] = createExportWrapper("prvTidyApparentVersion");

var _prvTidyHTMLVersionNameFromCode = Module["_prvTidyHTMLVersionNameFromCode"] = createExportWrapper("prvTidyHTMLVersionNameFromCode");

var _prvTidyHTMLVersionNumberFromCode = Module["_prvTidyHTMLVersionNumberFromCode"] = createExportWrapper("prvTidyHTMLVersionNumberFromCode");

var _prvTidyWarnMissingSIInEmittedDocType = Module["_prvTidyWarnMissingSIInEmittedDocType"] = createExportWrapper("prvTidyWarnMissingSIInEmittedDocType");

var _prvTidySetXHTMLDocType = Module["_prvTidySetXHTMLDocType"] = createExportWrapper("prvTidySetXHTMLDocType");

var _prvTidyFixDocType = Module["_prvTidyFixDocType"] = createExportWrapper("prvTidyFixDocType");

var _prvTidyFixXmlDecl = Module["_prvTidyFixXmlDecl"] = createExportWrapper("prvTidyFixXmlDecl");

var _prvTidyUngetToken = Module["_prvTidyUngetToken"] = createExportWrapper("prvTidyUngetToken");

var _prvTidyGetToken = Module["_prvTidyGetToken"] = createExportWrapper("prvTidyGetToken");

var _prvTidyInitMap = Module["_prvTidyInitMap"] = createExportWrapper("prvTidyInitMap");

var _prvTidyNewAttribute = Module["_prvTidyNewAttribute"] = createExportWrapper("prvTidyNewAttribute");

var _prvTidyNewAttributeEx = Module["_prvTidyNewAttributeEx"] = createExportWrapper("prvTidyNewAttributeEx");

var _prvTidyInsertAttributeAtEnd = Module["_prvTidyInsertAttributeAtEnd"] = createExportWrapper("prvTidyInsertAttributeAtEnd");

var _prvTidyInsertAttributeAtStart = Module["_prvTidyInsertAttributeAtStart"] = createExportWrapper("prvTidyInsertAttributeAtStart");

var _prvTidyPPrintTabs = Module["_prvTidyPPrintTabs"] = createExportWrapper("prvTidyPPrintTabs");

var _prvTidyPPrintSpaces = Module["_prvTidyPPrintSpaces"] = createExportWrapper("prvTidyPPrintSpaces");

var _prvTidyInitPrintBuf = Module["_prvTidyInitPrintBuf"] = createExportWrapper("prvTidyInitPrintBuf");

var _prvTidyFreePrintBuf = Module["_prvTidyFreePrintBuf"] = createExportWrapper("prvTidyFreePrintBuf");

var _prvTidyPFlushLine = Module["_prvTidyPFlushLine"] = createExportWrapper("prvTidyPFlushLine");

var _prvTidyPFlushLineSmart = Module["_prvTidyPFlushLineSmart"] = createExportWrapper("prvTidyPFlushLineSmart");

var _prvTidyTextNodeEndWithSpace = Module["_prvTidyTextNodeEndWithSpace"] = createExportWrapper("prvTidyTextNodeEndWithSpace");

var _prvTidyPrintBody = Module["_prvTidyPrintBody"] = createExportWrapper("prvTidyPrintBody");

var _prvTidyPPrintTree = Module["_prvTidyPPrintTree"] = createExportWrapper("prvTidyPPrintTree");

var _prvTidyPPrintXMLTree = Module["_prvTidyPPrintXMLTree"] = createExportWrapper("prvTidyPPrintXMLTree");

var _prvTidyFreeStyles = Module["_prvTidyFreeStyles"] = createExportWrapper("prvTidyFreeStyles");

var _prvTidyAddStyleAsClass = Module["_prvTidyAddStyleAsClass"] = createExportWrapper("prvTidyAddStyleAsClass");

var _prvTidyFixNodeLinks = Module["_prvTidyFixNodeLinks"] = createExportWrapper("prvTidyFixNodeLinks");

var _prvTidyAddStyleProperty = Module["_prvTidyAddStyleProperty"] = createExportWrapper("prvTidyAddStyleProperty");

var _prvTidyCleanDocument = Module["_prvTidyCleanDocument"] = createExportWrapper("prvTidyCleanDocument");

var _prvTidyNestedEmphasis = Module["_prvTidyNestedEmphasis"] = createExportWrapper("prvTidyNestedEmphasis");

var _prvTidyEmFromI = Module["_prvTidyEmFromI"] = createExportWrapper("prvTidyEmFromI");

var _prvTidyList2BQ = Module["_prvTidyList2BQ"] = createExportWrapper("prvTidyList2BQ");

var _prvTidyBQ2Div = Module["_prvTidyBQ2Div"] = createExportWrapper("prvTidyBQ2Div");

var _prvTidyDropSections = Module["_prvTidyDropSections"] = createExportWrapper("prvTidyDropSections");

var _prvTidyNormalizeSpaces = Module["_prvTidyNormalizeSpaces"] = createExportWrapper("prvTidyNormalizeSpaces");

var _prvTidyCleanWord2000 = Module["_prvTidyCleanWord2000"] = createExportWrapper("prvTidyCleanWord2000");

var _prvTidyIsWord2000 = Module["_prvTidyIsWord2000"] = createExportWrapper("prvTidyIsWord2000");

var _prvTidyBumpObject = Module["_prvTidyBumpObject"] = createExportWrapper("prvTidyBumpObject");

var _prvTidyTidyMetaCharset = Module["_prvTidyTidyMetaCharset"] = createExportWrapper("prvTidyTidyMetaCharset");

var _prvTidyDropComments = Module["_prvTidyDropComments"] = createExportWrapper("prvTidyDropComments");

var _prvTidyDropFontElements = Module["_prvTidyDropFontElements"] = createExportWrapper("prvTidyDropFontElements");

var _prvTidyWbrToSpace = Module["_prvTidyWbrToSpace"] = createExportWrapper("prvTidyWbrToSpace");

var _prvTidyDowngradeTypography = Module["_prvTidyDowngradeTypography"] = createExportWrapper("prvTidyDowngradeTypography");

var _prvTidyReplacePreformattedSpaces = Module["_prvTidyReplacePreformattedSpaces"] = createExportWrapper("prvTidyReplacePreformattedSpaces");

var _prvTidyConvertCDATANodes = Module["_prvTidyConvertCDATANodes"] = createExportWrapper("prvTidyConvertCDATANodes");

var _prvTidyFixLanguageInformation = Module["_prvTidyFixLanguageInformation"] = createExportWrapper("prvTidyFixLanguageInformation");

var _prvTidyFixXhtmlNamespace = Module["_prvTidyFixXhtmlNamespace"] = createExportWrapper("prvTidyFixXhtmlNamespace");

var _prvTidyFixAnchors = Module["_prvTidyFixAnchors"] = createExportWrapper("prvTidyFixAnchors");

var _prvTidyCleanStyle = Module["_prvTidyCleanStyle"] = createExportWrapper("prvTidyCleanStyle");

var _prvTidyReleaseDate = Module["_prvTidyReleaseDate"] = createExportWrapper("prvTidyReleaseDate");

var _prvTidytidyLibraryVersion = Module["_prvTidytidyLibraryVersion"] = createExportWrapper("prvTidytidyLibraryVersion");

var _prvTidyReport = Module["_prvTidyReport"] = createExportWrapper("prvTidyReport");

var _prvTidyReportAccessError = Module["_prvTidyReportAccessError"] = createExportWrapper("prvTidyReportAccessError");

var _prvTidyReportAttrError = Module["_prvTidyReportAttrError"] = createExportWrapper("prvTidyReportAttrError");

var _prvTidyReportBadArgument = Module["_prvTidyReportBadArgument"] = createExportWrapper("prvTidyReportBadArgument");

var _prvTidyReportEntityError = Module["_prvTidyReportEntityError"] = createExportWrapper("prvTidyReportEntityError");

var _prvTidyReportFileError = Module["_prvTidyReportFileError"] = createExportWrapper("prvTidyReportFileError");

var _prvTidyReportEncodingError = Module["_prvTidyReportEncodingError"] = createExportWrapper("prvTidyReportEncodingError");

var _prvTidyReportEncodingWarning = Module["_prvTidyReportEncodingWarning"] = createExportWrapper("prvTidyReportEncodingWarning");

var _prvTidyReportMissingAttr = Module["_prvTidyReportMissingAttr"] = createExportWrapper("prvTidyReportMissingAttr");

var _prvTidyReportSurrogateError = Module["_prvTidyReportSurrogateError"] = createExportWrapper("prvTidyReportSurrogateError");

var _prvTidyReportUnknownOption = Module["_prvTidyReportUnknownOption"] = createExportWrapper("prvTidyReportUnknownOption");

var _formatDialogue = Module["_formatDialogue"] = createExportWrapper("formatDialogue");

var _prvTidyDialogue = Module["_prvTidyDialogue"] = createExportWrapper("prvTidyDialogue");

var _prvTidyErrorSummary = Module["_prvTidyErrorSummary"] = createExportWrapper("prvTidyErrorSummary");

var _prvTidyReportMarkupVersion = Module["_prvTidyReportMarkupVersion"] = createExportWrapper("prvTidyReportMarkupVersion");

var _prvTidyReportNumWarnings = Module["_prvTidyReportNumWarnings"] = createExportWrapper("prvTidyReportNumWarnings");

var _prvTidyFreeMutedMessageList = Module["_prvTidyFreeMutedMessageList"] = createExportWrapper("prvTidyFreeMutedMessageList");

var _prvTidyDefineMutedMessage = Module["_prvTidyDefineMutedMessage"] = createExportWrapper("prvTidyDefineMutedMessage");

var _prvTidytidyErrorCodeFromKey = Module["_prvTidytidyErrorCodeFromKey"] = createExportWrapper("prvTidytidyErrorCodeFromKey");

var _prvTidygetMutedMessageList = Module["_prvTidygetMutedMessageList"] = createExportWrapper("prvTidygetMutedMessageList");

var _prvTidygetNextMutedMessage = Module["_prvTidygetNextMutedMessage"] = createExportWrapper("prvTidygetNextMutedMessage");

var _prvTidytidyErrorCodeAsKey = Module["_prvTidytidyErrorCodeAsKey"] = createExportWrapper("prvTidytidyErrorCodeAsKey");

var _prvTidygetErrorCodeList = Module["_prvTidygetErrorCodeList"] = createExportWrapper("prvTidygetErrorCodeList");

var _prvTidygetNextErrorCode = Module["_prvTidygetNextErrorCode"] = createExportWrapper("prvTidygetNextErrorCode");

var _prvTidyOptGetDocDesc = Module["_prvTidyOptGetDocDesc"] = createExportWrapper("prvTidyOptGetDocDesc");

var _prvTidyInitConfig = Module["_prvTidyInitConfig"] = createExportWrapper("prvTidyInitConfig");

var _prvTidyResetConfigToDefault = Module["_prvTidyResetConfigToDefault"] = createExportWrapper("prvTidyResetConfigToDefault");

var _prvTidyFreeConfig = Module["_prvTidyFreeConfig"] = createExportWrapper("prvTidyFreeConfig");

var _prvTidyTakeConfigSnapshot = Module["_prvTidyTakeConfigSnapshot"] = createExportWrapper("prvTidyTakeConfigSnapshot");

var _prvTidylookupOption = Module["_prvTidylookupOption"] = createExportWrapper("prvTidylookupOption");

var _prvTidygetOption = Module["_prvTidygetOption"] = createExportWrapper("prvTidygetOption");

var _prvTidygetOptionIsList = Module["_prvTidygetOptionIsList"] = createExportWrapper("prvTidygetOptionIsList");

var _prvTidyDeclareListItem = Module["_prvTidyDeclareListItem"] = createExportWrapper("prvTidyDeclareListItem");

var _prvTidyGetPickListLabelForPick = Module["_prvTidyGetPickListLabelForPick"] = createExportWrapper("prvTidyGetPickListLabelForPick");

var _prvTidySetOptionInt = Module["_prvTidySetOptionInt"] = createExportWrapper("prvTidySetOptionInt");

var _prvTidySetOptionBool = Module["_prvTidySetOptionBool"] = createExportWrapper("prvTidySetOptionBool");

var _prvTidyResetOptionToDefault = Module["_prvTidyResetOptionToDefault"] = createExportWrapper("prvTidyResetOptionToDefault");

var _prvTidyResetConfigToSnapshot = Module["_prvTidyResetConfigToSnapshot"] = createExportWrapper("prvTidyResetConfigToSnapshot");

var _prvTidyParseConfigValue = Module["_prvTidyParseConfigValue"] = createExportWrapper("prvTidyParseConfigValue");

var _prvTidyCopyConfig = Module["_prvTidyCopyConfig"] = createExportWrapper("prvTidyCopyConfig");

var _tidyFileExists = Module["_tidyFileExists"] = createExportWrapper("tidyFileExists");

var _prvTidyParseConfigFile = Module["_prvTidyParseConfigFile"] = createExportWrapper("prvTidyParseConfigFile");

var _prvTidyParseConfigFileEnc = Module["_prvTidyParseConfigFileEnc"] = createExportWrapper("prvTidyParseConfigFileEnc");

var _prvTidyCharEncodingId = Module["_prvTidyCharEncodingId"] = createExportWrapper("prvTidyCharEncodingId");

var _prvTidyParseConfigOption = Module["_prvTidyParseConfigOption"] = createExportWrapper("prvTidyParseConfigOption");

var _prvTidyAdjustCharEncoding = Module["_prvTidyAdjustCharEncoding"] = createExportWrapper("prvTidyAdjustCharEncoding");

var _prvTidyAdjustConfig = Module["_prvTidyAdjustConfig"] = createExportWrapper("prvTidyAdjustConfig");

var _prvTidyCharEncodingName = Module["_prvTidyCharEncodingName"] = createExportWrapper("prvTidyCharEncodingName");

var _prvTidyCharEncodingOptName = Module["_prvTidyCharEncodingOptName"] = createExportWrapper("prvTidyCharEncodingOptName");

var _prvTidygetOptionList = Module["_prvTidygetOptionList"] = createExportWrapper("prvTidygetOptionList");

var _prvTidygetNextOption = Module["_prvTidygetNextOption"] = createExportWrapper("prvTidygetNextOption");

var _prvTidygetOptionPickList = Module["_prvTidygetOptionPickList"] = createExportWrapper("prvTidygetOptionPickList");

var _prvTidygetNextOptionPick = Module["_prvTidygetNextOptionPick"] = createExportWrapper("prvTidygetNextOptionPick");

var _prvTidyConfigDiffThanSnapshot = Module["_prvTidyConfigDiffThanSnapshot"] = createExportWrapper("prvTidyConfigDiffThanSnapshot");

var _prvTidyConfigDiffThanDefault = Module["_prvTidyConfigDiffThanDefault"] = createExportWrapper("prvTidyConfigDiffThanDefault");

var _prvTidySaveConfigFile = Module["_prvTidySaveConfigFile"] = createExportWrapper("prvTidySaveConfigFile");

var _prvTidySaveConfigSink = Module["_prvTidySaveConfigSink"] = createExportWrapper("prvTidySaveConfigSink");

var _fiprintf = Module["_fiprintf"] = createExportWrapper("fiprintf");

var _tidyInitInputBuffer = Module["_tidyInitInputBuffer"] = createExportWrapper("tidyInitInputBuffer");

var _tidyInitOutputBuffer = Module["_tidyInitOutputBuffer"] = createExportWrapper("tidyInitOutputBuffer");

var _tidyBufInitWithAllocator = Module["_tidyBufInitWithAllocator"] = createExportWrapper("tidyBufInitWithAllocator");

var _tidyBufAlloc = Module["_tidyBufAlloc"] = createExportWrapper("tidyBufAlloc");

var _tidyBufAllocWithAllocator = Module["_tidyBufAllocWithAllocator"] = createExportWrapper("tidyBufAllocWithAllocator");

var _tidyBufCheckAlloc = Module["_tidyBufCheckAlloc"] = createExportWrapper("tidyBufCheckAlloc");

var _tidyBufClear = Module["_tidyBufClear"] = createExportWrapper("tidyBufClear");

var _tidyBufDetach = Module["_tidyBufDetach"] = createExportWrapper("tidyBufDetach");

var _tidyBufAppend = Module["_tidyBufAppend"] = createExportWrapper("tidyBufAppend");

var _tidyBufPutByte = Module["_tidyBufPutByte"] = createExportWrapper("tidyBufPutByte");

var _tidyBufPopByte = Module["_tidyBufPopByte"] = createExportWrapper("tidyBufPopByte");

var _tidyBufGetByte = Module["_tidyBufGetByte"] = createExportWrapper("tidyBufGetByte");

var _tidyBufEndOfInput = Module["_tidyBufEndOfInput"] = createExportWrapper("tidyBufEndOfInput");

var _tidyBufUngetByte = Module["_tidyBufUngetByte"] = createExportWrapper("tidyBufUngetByte");

var _prvTidyinitStdIOFileSource = Module["_prvTidyinitStdIOFileSource"] = createExportWrapper("prvTidyinitStdIOFileSource");

var _prvTidyfreeStdIOFileSource = Module["_prvTidyfreeStdIOFileSource"] = createExportWrapper("prvTidyfreeStdIOFileSource");

var _prvTidyfilesink_putByte = Module["_prvTidyfilesink_putByte"] = createExportWrapper("prvTidyfilesink_putByte");

var _prvTidyinitFileSink = Module["_prvTidyinitFileSink"] = createExportWrapper("prvTidyinitFileSink");

var _prvTidyStdErrOutput = Module["_prvTidyStdErrOutput"] = createExportWrapper("prvTidyStdErrOutput");

var _prvTidyReleaseStreamOut = Module["_prvTidyReleaseStreamOut"] = createExportWrapper("prvTidyReleaseStreamOut");

var _prvTidyinitStreamIn = Module["_prvTidyinitStreamIn"] = createExportWrapper("prvTidyinitStreamIn");

var _prvTidyfreeStreamIn = Module["_prvTidyfreeStreamIn"] = createExportWrapper("prvTidyfreeStreamIn");

var _prvTidyFileInput = Module["_prvTidyFileInput"] = createExportWrapper("prvTidyFileInput");

var _prvTidyBufferInput = Module["_prvTidyBufferInput"] = createExportWrapper("prvTidyBufferInput");

var _prvTidyUserInput = Module["_prvTidyUserInput"] = createExportWrapper("prvTidyUserInput");

var _prvTidyReadBOMEncoding = Module["_prvTidyReadBOMEncoding"] = createExportWrapper("prvTidyReadBOMEncoding");

var _prvTidyReadChar = Module["_prvTidyReadChar"] = createExportWrapper("prvTidyReadChar");

var _prvTidyUngetChar = Module["_prvTidyUngetChar"] = createExportWrapper("prvTidyUngetChar");

var _prvTidyDecodeMacRoman = Module["_prvTidyDecodeMacRoman"] = createExportWrapper("prvTidyDecodeMacRoman");

var _prvTidyDecodeWin1252 = Module["_prvTidyDecodeWin1252"] = createExportWrapper("prvTidyDecodeWin1252");

var _prvTidyFileOutput = Module["_prvTidyFileOutput"] = createExportWrapper("prvTidyFileOutput");

var _prvTidyBufferOutput = Module["_prvTidyBufferOutput"] = createExportWrapper("prvTidyBufferOutput");

var _prvTidyUserOutput = Module["_prvTidyUserOutput"] = createExportWrapper("prvTidyUserOutput");

var _prvTidyWriteChar = Module["_prvTidyWriteChar"] = createExportWrapper("prvTidyWriteChar");

var _tidyInitSource = Module["_tidyInitSource"] = createExportWrapper("tidyInitSource");

var _tidyInitSink = Module["_tidyInitSink"] = createExportWrapper("tidyInitSink");

var _tidyGetByte = Module["_tidyGetByte"] = createExportWrapper("tidyGetByte");

var _tidyIsEOF = Module["_tidyIsEOF"] = createExportWrapper("tidyIsEOF");

var _tidyUngetByte = Module["_tidyUngetByte"] = createExportWrapper("tidyUngetByte");

var _tidyPutByte = Module["_tidyPutByte"] = createExportWrapper("tidyPutByte");

var _prvTidyIsEOF = Module["_prvTidyIsEOF"] = createExportWrapper("prvTidyIsEOF");

var _prvTidyoutBOM = Module["_prvTidyoutBOM"] = createExportWrapper("prvTidyoutBOM");

var _prvTidyGetEncodingNameFromTidyId = Module["_prvTidyGetEncodingNameFromTidyId"] = createExportWrapper("prvTidyGetEncodingNameFromTidyId");

var _prvTidyGetEncodingOptNameFromTidyId = Module["_prvTidyGetEncodingOptNameFromTidyId"] = createExportWrapper("prvTidyGetEncodingOptNameFromTidyId");

var _prvTidyGetCharEncodingFromOptName = Module["_prvTidyGetCharEncodingFromOptName"] = createExportWrapper("prvTidyGetCharEncodingFromOptName");

var _prvTidytmbstrdup = Module["_prvTidytmbstrdup"] = createExportWrapper("prvTidytmbstrdup");

var _prvTidytmbstrlen = Module["_prvTidytmbstrlen"] = createExportWrapper("prvTidytmbstrlen");

var _prvTidytmbstrndup = Module["_prvTidytmbstrndup"] = createExportWrapper("prvTidytmbstrndup");

var _prvTidytmbstrncpy = Module["_prvTidytmbstrncpy"] = createExportWrapper("prvTidytmbstrncpy");

var _prvTidytmbstrcpy = Module["_prvTidytmbstrcpy"] = createExportWrapper("prvTidytmbstrcpy");

var _prvTidytmbstrcat = Module["_prvTidytmbstrcat"] = createExportWrapper("prvTidytmbstrcat");

var _prvTidytmbstrcmp = Module["_prvTidytmbstrcmp"] = createExportWrapper("prvTidytmbstrcmp");

var _prvTidytmbstrcasecmp = Module["_prvTidytmbstrcasecmp"] = createExportWrapper("prvTidytmbstrcasecmp");

var _prvTidytmbstrncmp = Module["_prvTidytmbstrncmp"] = createExportWrapper("prvTidytmbstrncmp");

var _prvTidytmbstrncasecmp = Module["_prvTidytmbstrncasecmp"] = createExportWrapper("prvTidytmbstrncasecmp");

var _prvTidytmbsubstrn = Module["_prvTidytmbsubstrn"] = createExportWrapper("prvTidytmbsubstrn");

var _prvTidytmbsubstr = Module["_prvTidytmbsubstr"] = createExportWrapper("prvTidytmbsubstr");

var _prvTidytmbstrtolower = Module["_prvTidytmbstrtolower"] = createExportWrapper("prvTidytmbstrtolower");

var _prvTidytmbstrtoupper = Module["_prvTidytmbstrtoupper"] = createExportWrapper("prvTidytmbstrtoupper");

var _prvTidytmbvsnprintf = Module["_prvTidytmbvsnprintf"] = createExportWrapper("prvTidytmbvsnprintf");

var _prvTidytmbsnprintf = Module["_prvTidytmbsnprintf"] = createExportWrapper("prvTidytmbsnprintf");

var _prvTidyDecodeUTF8BytesToChar = Module["_prvTidyDecodeUTF8BytesToChar"] = createExportWrapper("prvTidyDecodeUTF8BytesToChar");

var _prvTidyEncodeCharToUTF8Bytes = Module["_prvTidyEncodeCharToUTF8Bytes"] = createExportWrapper("prvTidyEncodeCharToUTF8Bytes");

var _prvTidyGetUTF8 = Module["_prvTidyGetUTF8"] = createExportWrapper("prvTidyGetUTF8");

var _prvTidyPutUTF8 = Module["_prvTidyPutUTF8"] = createExportWrapper("prvTidyPutUTF8");

var _prvTidyIsValidUTF16FromUCS4 = Module["_prvTidyIsValidUTF16FromUCS4"] = createExportWrapper("prvTidyIsValidUTF16FromUCS4");

var _prvTidyIsHighSurrogate = Module["_prvTidyIsHighSurrogate"] = createExportWrapper("prvTidyIsHighSurrogate");

var _prvTidyIsLowSurrogate = Module["_prvTidyIsLowSurrogate"] = createExportWrapper("prvTidyIsLowSurrogate");

var _prvTidyCombineSurrogatePair = Module["_prvTidyCombineSurrogatePair"] = createExportWrapper("prvTidyCombineSurrogatePair");

var _prvTidySplitSurrogatePair = Module["_prvTidySplitSurrogatePair"] = createExportWrapper("prvTidySplitSurrogatePair");

var _prvTidyIsValidCombinedChar = Module["_prvTidyIsValidCombinedChar"] = createExportWrapper("prvTidyIsValidCombinedChar");

var _prvTidyIsCombinedChar = Module["_prvTidyIsCombinedChar"] = createExportWrapper("prvTidyIsCombinedChar");

var _vsnprintf = Module["_vsnprintf"] = createExportWrapper("vsnprintf");

var _prvTidytidyMessageCreate = Module["_prvTidytidyMessageCreate"] = createExportWrapper("prvTidytidyMessageCreate");

var _tidyLocalizedStringN = Module["_tidyLocalizedStringN"] = createExportWrapper("tidyLocalizedStringN");

var _prvTidyinitFileSource = Module["_prvTidyinitFileSource"] = createExportWrapper("prvTidyinitFileSource");

var _fputc = Module["_fputc"] = createExportWrapper("fputc");

var _prvTidytidyMessageRelease = Module["_prvTidytidyMessageRelease"] = createExportWrapper("prvTidytidyMessageRelease");

var _tidyLocalizedString = Module["_tidyLocalizedString"] = createExportWrapper("tidyLocalizedString");

var _prvTidytidyMessageCreateWithNode = Module["_prvTidytidyMessageCreateWithNode"] = createExportWrapper("prvTidytidyMessageCreateWithNode");

var _prvTidytidyMessageCreateWithLexer = Module["_prvTidytidyMessageCreateWithLexer"] = createExportWrapper("prvTidytidyMessageCreateWithLexer");

var _prvTidyfreeFileSource = Module["_prvTidyfreeFileSource"] = createExportWrapper("prvTidyfreeFileSource");

var _strtok = Module["_strtok"] = createExportWrapper("strtok");

var _prvTidytidyGetLanguageSetByUser = Module["_prvTidytidyGetLanguageSetByUser"] = createExportWrapper("prvTidytidyGetLanguageSetByUser");

var _prvTidytidySetLanguage = Module["_prvTidytidySetLanguage"] = createExportWrapper("prvTidytidySetLanguage");

var _tidyCreateWithAllocator = Module["_tidyCreateWithAllocator"] = createExportWrapper("tidyCreateWithAllocator");

var _tidySetAppData = Module["_tidySetAppData"] = createExportWrapper("tidySetAppData");

var _tidyGetAppData = Module["_tidyGetAppData"] = createExportWrapper("tidyGetAppData");

var _tidyPlatform = Module["_tidyPlatform"] = createExportWrapper("tidyPlatform");

var _tidySetOptionCallback = Module["_tidySetOptionCallback"] = createExportWrapper("tidySetOptionCallback");

var _tidySetConfigCallback = Module["_tidySetConfigCallback"] = createExportWrapper("tidySetConfigCallback");

var _tidySetConfigChangeCallback = Module["_tidySetConfigChangeCallback"] = createExportWrapper("tidySetConfigChangeCallback");

var _tidyLoadConfigEnc = Module["_tidyLoadConfigEnc"] = createExportWrapper("tidyLoadConfigEnc");

var _tidySetInCharEncoding = Module["_tidySetInCharEncoding"] = createExportWrapper("tidySetInCharEncoding");

var _tidySetOutCharEncoding = Module["_tidySetOutCharEncoding"] = createExportWrapper("tidySetOutCharEncoding");

var _tidyOptGetIdForName = Module["_tidyOptGetIdForName"] = createExportWrapper("tidyOptGetIdForName");

var _tidyGetOption = Module["_tidyGetOption"] = createExportWrapper("tidyGetOption");

var _tidyOptionIsList = Module["_tidyOptionIsList"] = createExportWrapper("tidyOptionIsList");

var _tidyOptGetCategory = Module["_tidyOptGetCategory"] = createExportWrapper("tidyOptGetCategory");

var _tidyOptGetDefault = Module["_tidyOptGetDefault"] = createExportWrapper("tidyOptGetDefault");

var _tidyOptGetDefaultInt = Module["_tidyOptGetDefaultInt"] = createExportWrapper("tidyOptGetDefaultInt");

var _tidyOptGetDefaultBool = Module["_tidyOptGetDefaultBool"] = createExportWrapper("tidyOptGetDefaultBool");

var _tidyOptGetPickList = Module["_tidyOptGetPickList"] = createExportWrapper("tidyOptGetPickList");

var _tidyOptGetNextPick = Module["_tidyOptGetNextPick"] = createExportWrapper("tidyOptGetNextPick");

var _tidyOptParseValue = Module["_tidyOptParseValue"] = createExportWrapper("tidyOptParseValue");

var _tidyOptGetEncName = Module["_tidyOptGetEncName"] = createExportWrapper("tidyOptGetEncName");

var _tidyOptGetCurrPick = Module["_tidyOptGetCurrPick"] = createExportWrapper("tidyOptGetCurrPick");

var _tidyOptGetDeclTagList = Module["_tidyOptGetDeclTagList"] = createExportWrapper("tidyOptGetDeclTagList");

var _tidyOptGetNextDeclTag = Module["_tidyOptGetNextDeclTag"] = createExportWrapper("tidyOptGetNextDeclTag");

var _tidyOptGetPriorityAttrList = Module["_tidyOptGetPriorityAttrList"] = createExportWrapper("tidyOptGetPriorityAttrList");

var _tidyOptGetNextPriorityAttr = Module["_tidyOptGetNextPriorityAttr"] = createExportWrapper("tidyOptGetNextPriorityAttr");

var _tidyOptGetMutedMessageList = Module["_tidyOptGetMutedMessageList"] = createExportWrapper("tidyOptGetMutedMessageList");

var _tidyOptGetNextMutedMessage = Module["_tidyOptGetNextMutedMessage"] = createExportWrapper("tidyOptGetNextMutedMessage");

var _prvTidytidyLocalizedString = Module["_prvTidytidyLocalizedString"] = createExportWrapper("prvTidytidyLocalizedString");

var _tidyOptGetDocLinksList = Module["_tidyOptGetDocLinksList"] = createExportWrapper("tidyOptGetDocLinksList");

var _tidyOptGetNextDocLinks = Module["_tidyOptGetNextDocLinks"] = createExportWrapper("tidyOptGetNextDocLinks");

var _tidyOptSaveFile = Module["_tidyOptSaveFile"] = createExportWrapper("tidyOptSaveFile");

var _tidyOptSaveSink = Module["_tidyOptSaveSink"] = createExportWrapper("tidyOptSaveSink");

var _tidyOptSnapshot = Module["_tidyOptSnapshot"] = createExportWrapper("tidyOptSnapshot");

var _tidyOptResetToSnapshot = Module["_tidyOptResetToSnapshot"] = createExportWrapper("tidyOptResetToSnapshot");

var _tidyOptResetAllToDefault = Module["_tidyOptResetAllToDefault"] = createExportWrapper("tidyOptResetAllToDefault");

var _tidyOptResetToDefault = Module["_tidyOptResetToDefault"] = createExportWrapper("tidyOptResetToDefault");

var _tidyOptDiffThanDefault = Module["_tidyOptDiffThanDefault"] = createExportWrapper("tidyOptDiffThanDefault");

var _tidyOptDiffThanSnapshot = Module["_tidyOptDiffThanSnapshot"] = createExportWrapper("tidyOptDiffThanSnapshot");

var _tidyOptCopyConfig = Module["_tidyOptCopyConfig"] = createExportWrapper("tidyOptCopyConfig");

var _tidySetEmacsFile = Module["_tidySetEmacsFile"] = createExportWrapper("tidySetEmacsFile");

var _tidyGetEmacsFile = Module["_tidyGetEmacsFile"] = createExportWrapper("tidyGetEmacsFile");

var _tidySetReportFilter = Module["_tidySetReportFilter"] = createExportWrapper("tidySetReportFilter");

var _tidySetReportCallback = Module["_tidySetReportCallback"] = createExportWrapper("tidySetReportCallback");

var _tidySetMessageCallback = Module["_tidySetMessageCallback"] = createExportWrapper("tidySetMessageCallback");

var _tidyGetMessageDoc = Module["_tidyGetMessageDoc"] = createExportWrapper("tidyGetMessageDoc");

var _prvTidygetMessageDoc = Module["_prvTidygetMessageDoc"] = createExportWrapper("prvTidygetMessageDoc");

var _tidyGetMessageCode = Module["_tidyGetMessageCode"] = createExportWrapper("tidyGetMessageCode");

var _prvTidygetMessageCode = Module["_prvTidygetMessageCode"] = createExportWrapper("prvTidygetMessageCode");

var _tidyGetMessageKey = Module["_tidyGetMessageKey"] = createExportWrapper("tidyGetMessageKey");

var _prvTidygetMessageKey = Module["_prvTidygetMessageKey"] = createExportWrapper("prvTidygetMessageKey");

var _tidyGetMessageLine = Module["_tidyGetMessageLine"] = createExportWrapper("tidyGetMessageLine");

var _prvTidygetMessageLine = Module["_prvTidygetMessageLine"] = createExportWrapper("prvTidygetMessageLine");

var _tidyGetMessageColumn = Module["_tidyGetMessageColumn"] = createExportWrapper("tidyGetMessageColumn");

var _prvTidygetMessageColumn = Module["_prvTidygetMessageColumn"] = createExportWrapper("prvTidygetMessageColumn");

var _tidyGetMessageLevel = Module["_tidyGetMessageLevel"] = createExportWrapper("tidyGetMessageLevel");

var _prvTidygetMessageLevel = Module["_prvTidygetMessageLevel"] = createExportWrapper("prvTidygetMessageLevel");

var _tidyGetMessageIsMuted = Module["_tidyGetMessageIsMuted"] = createExportWrapper("tidyGetMessageIsMuted");

var _prvTidygetMessageIsMuted = Module["_prvTidygetMessageIsMuted"] = createExportWrapper("prvTidygetMessageIsMuted");

var _tidyGetMessageFormatDefault = Module["_tidyGetMessageFormatDefault"] = createExportWrapper("tidyGetMessageFormatDefault");

var _prvTidygetMessageFormatDefault = Module["_prvTidygetMessageFormatDefault"] = createExportWrapper("prvTidygetMessageFormatDefault");

var _tidyGetMessageFormat = Module["_tidyGetMessageFormat"] = createExportWrapper("tidyGetMessageFormat");

var _prvTidygetMessageFormat = Module["_prvTidygetMessageFormat"] = createExportWrapper("prvTidygetMessageFormat");

var _tidyGetMessageDefault = Module["_tidyGetMessageDefault"] = createExportWrapper("tidyGetMessageDefault");

var _prvTidygetMessageDefault = Module["_prvTidygetMessageDefault"] = createExportWrapper("prvTidygetMessageDefault");

var _tidyGetMessage = Module["_tidyGetMessage"] = createExportWrapper("tidyGetMessage");

var _prvTidygetMessage = Module["_prvTidygetMessage"] = createExportWrapper("prvTidygetMessage");

var _tidyGetMessagePosDefault = Module["_tidyGetMessagePosDefault"] = createExportWrapper("tidyGetMessagePosDefault");

var _prvTidygetMessagePosDefault = Module["_prvTidygetMessagePosDefault"] = createExportWrapper("prvTidygetMessagePosDefault");

var _tidyGetMessagePos = Module["_tidyGetMessagePos"] = createExportWrapper("tidyGetMessagePos");

var _prvTidygetMessagePos = Module["_prvTidygetMessagePos"] = createExportWrapper("prvTidygetMessagePos");

var _tidyGetMessagePrefixDefault = Module["_tidyGetMessagePrefixDefault"] = createExportWrapper("tidyGetMessagePrefixDefault");

var _prvTidygetMessagePrefixDefault = Module["_prvTidygetMessagePrefixDefault"] = createExportWrapper("prvTidygetMessagePrefixDefault");

var _tidyGetMessagePrefix = Module["_tidyGetMessagePrefix"] = createExportWrapper("tidyGetMessagePrefix");

var _prvTidygetMessagePrefix = Module["_prvTidygetMessagePrefix"] = createExportWrapper("prvTidygetMessagePrefix");

var _tidyGetMessageOutputDefault = Module["_tidyGetMessageOutputDefault"] = createExportWrapper("tidyGetMessageOutputDefault");

var _prvTidygetMessageOutputDefault = Module["_prvTidygetMessageOutputDefault"] = createExportWrapper("prvTidygetMessageOutputDefault");

var _tidyGetMessageOutput = Module["_tidyGetMessageOutput"] = createExportWrapper("tidyGetMessageOutput");

var _prvTidygetMessageOutput = Module["_prvTidygetMessageOutput"] = createExportWrapper("prvTidygetMessageOutput");

var _tidyGetMessageArguments = Module["_tidyGetMessageArguments"] = createExportWrapper("tidyGetMessageArguments");

var _prvTidygetMessageArguments = Module["_prvTidygetMessageArguments"] = createExportWrapper("prvTidygetMessageArguments");

var _tidyGetNextMessageArgument = Module["_tidyGetNextMessageArgument"] = createExportWrapper("tidyGetNextMessageArgument");

var _prvTidygetNextMessageArgument = Module["_prvTidygetNextMessageArgument"] = createExportWrapper("prvTidygetNextMessageArgument");

var _tidyGetArgType = Module["_tidyGetArgType"] = createExportWrapper("tidyGetArgType");

var _prvTidygetArgType = Module["_prvTidygetArgType"] = createExportWrapper("prvTidygetArgType");

var _tidyGetArgFormat = Module["_tidyGetArgFormat"] = createExportWrapper("tidyGetArgFormat");

var _prvTidygetArgFormat = Module["_prvTidygetArgFormat"] = createExportWrapper("prvTidygetArgFormat");

var _tidyGetArgValueString = Module["_tidyGetArgValueString"] = createExportWrapper("tidyGetArgValueString");

var _prvTidygetArgValueString = Module["_prvTidygetArgValueString"] = createExportWrapper("prvTidygetArgValueString");

var _tidyGetArgValueUInt = Module["_tidyGetArgValueUInt"] = createExportWrapper("tidyGetArgValueUInt");

var _prvTidygetArgValueUInt = Module["_prvTidygetArgValueUInt"] = createExportWrapper("prvTidygetArgValueUInt");

var _tidyGetArgValueInt = Module["_tidyGetArgValueInt"] = createExportWrapper("tidyGetArgValueInt");

var _prvTidygetArgValueInt = Module["_prvTidygetArgValueInt"] = createExportWrapper("prvTidygetArgValueInt");

var _tidyGetArgValueDouble = Module["_tidyGetArgValueDouble"] = createExportWrapper("tidyGetArgValueDouble");

var _prvTidygetArgValueDouble = Module["_prvTidygetArgValueDouble"] = createExportWrapper("prvTidygetArgValueDouble");

var _tidySetErrorFile = Module["_tidySetErrorFile"] = createExportWrapper("tidySetErrorFile");

var _tidySetErrorSink = Module["_tidySetErrorSink"] = createExportWrapper("tidySetErrorSink");

var _tidySetPrettyPrinterCallback = Module["_tidySetPrettyPrinterCallback"] = createExportWrapper("tidySetPrettyPrinterCallback");

var _tidyErrorSummary = Module["_tidyErrorSummary"] = createExportWrapper("tidyErrorSummary");

var _tidyGeneralInfo = Module["_tidyGeneralInfo"] = createExportWrapper("tidyGeneralInfo");

var _tidyParseFile = Module["_tidyParseFile"] = createExportWrapper("tidyParseFile");

var _prvTidyDocParseStream = Module["_prvTidyDocParseStream"] = createExportWrapper("prvTidyDocParseStream");

var _tidyParseStdin = Module["_tidyParseStdin"] = createExportWrapper("tidyParseStdin");

var _tidyParseString = Module["_tidyParseString"] = createExportWrapper("tidyParseString");

var _tidyParseSource = Module["_tidyParseSource"] = createExportWrapper("tidyParseSource");

var _tidySaveFile = Module["_tidySaveFile"] = createExportWrapper("tidySaveFile");

var _tidySaveStdout = Module["_tidySaveStdout"] = createExportWrapper("tidySaveStdout");

var _tidySaveString = Module["_tidySaveString"] = createExportWrapper("tidySaveString");

var _tidySaveSink = Module["_tidySaveSink"] = createExportWrapper("tidySaveSink");

var _prvTidyCleanGoogleDocument = Module["_prvTidyCleanGoogleDocument"] = createExportWrapper("prvTidyCleanGoogleDocument");

var _prvTidyCheckHTML5 = Module["_prvTidyCheckHTML5"] = createExportWrapper("prvTidyCheckHTML5");

var _prvTidyCheckHTMLTagsAttribsVersions = Module["_prvTidyCheckHTMLTagsAttribsVersions"] = createExportWrapper("prvTidyCheckHTMLTagsAttribsVersions");

var _tidyReportDoctype = Module["_tidyReportDoctype"] = createExportWrapper("tidyReportDoctype");

var _inRemovedInfo = Module["_inRemovedInfo"] = createExportWrapper("inRemovedInfo");

var _tidyDiscardElement = Module["_tidyDiscardElement"] = createExportWrapper("tidyDiscardElement");

var _tidyGetPrev = Module["_tidyGetPrev"] = createExportWrapper("tidyGetPrev");

var _tidyNodeHasText = Module["_tidyNodeHasText"] = createExportWrapper("tidyNodeHasText");

var _tidyNodeGetValue = Module["_tidyNodeGetValue"] = createExportWrapper("tidyNodeGetValue");

var _tidyAttrDiscard = Module["_tidyAttrDiscard"] = createExportWrapper("tidyAttrDiscard");

var _tidyAttrGetId = Module["_tidyAttrGetId"] = createExportWrapper("tidyAttrGetId");

var _tidyAttrGetById = Module["_tidyAttrGetById"] = createExportWrapper("tidyAttrGetById");

var _tidyAttrIsEvent = Module["_tidyAttrIsEvent"] = createExportWrapper("tidyAttrIsEvent");

var _tidyErrorCodeAsKey = Module["_tidyErrorCodeAsKey"] = createExportWrapper("tidyErrorCodeAsKey");

var _tidyErrorCodeFromKey = Module["_tidyErrorCodeFromKey"] = createExportWrapper("tidyErrorCodeFromKey");

var _getErrorCodeList = Module["_getErrorCodeList"] = createExportWrapper("getErrorCodeList");

var _getNextErrorCode = Module["_getNextErrorCode"] = createExportWrapper("getNextErrorCode");

var _tidySetLanguage = Module["_tidySetLanguage"] = createExportWrapper("tidySetLanguage");

var _prvTidytidySetLanguageSetByUser = Module["_prvTidytidySetLanguageSetByUser"] = createExportWrapper("prvTidytidySetLanguageSetByUser");

var _tidyGetLanguage = Module["_tidyGetLanguage"] = createExportWrapper("tidyGetLanguage");

var _prvTidytidyGetLanguage = Module["_prvTidytidyGetLanguage"] = createExportWrapper("prvTidytidyGetLanguage");

var _prvTidytidyLocalizedStringN = Module["_prvTidytidyLocalizedStringN"] = createExportWrapper("prvTidytidyLocalizedStringN");

var _tidyDefaultString = Module["_tidyDefaultString"] = createExportWrapper("tidyDefaultString");

var _prvTidytidyDefaultString = Module["_prvTidytidyDefaultString"] = createExportWrapper("prvTidytidyDefaultString");

var _getStringKeyList = Module["_getStringKeyList"] = createExportWrapper("getStringKeyList");

var _prvTidygetStringKeyList = Module["_prvTidygetStringKeyList"] = createExportWrapper("prvTidygetStringKeyList");

var _getNextStringKey = Module["_getNextStringKey"] = createExportWrapper("getNextStringKey");

var _prvTidygetNextStringKey = Module["_prvTidygetNextStringKey"] = createExportWrapper("prvTidygetNextStringKey");

var _getWindowsLanguageList = Module["_getWindowsLanguageList"] = createExportWrapper("getWindowsLanguageList");

var _prvTidygetWindowsLanguageList = Module["_prvTidygetWindowsLanguageList"] = createExportWrapper("prvTidygetWindowsLanguageList");

var _getNextWindowsLanguage = Module["_getNextWindowsLanguage"] = createExportWrapper("getNextWindowsLanguage");

var _prvTidygetNextWindowsLanguage = Module["_prvTidygetNextWindowsLanguage"] = createExportWrapper("prvTidygetNextWindowsLanguage");

var _TidyLangWindowsName = Module["_TidyLangWindowsName"] = createExportWrapper("TidyLangWindowsName");

var _prvTidyTidyLangWindowsName = Module["_prvTidyTidyLangWindowsName"] = createExportWrapper("prvTidyTidyLangWindowsName");

var _TidyLangPosixName = Module["_TidyLangPosixName"] = createExportWrapper("TidyLangPosixName");

var _prvTidyTidyLangPosixName = Module["_prvTidyTidyLangPosixName"] = createExportWrapper("prvTidyTidyLangPosixName");

var _getInstalledLanguageList = Module["_getInstalledLanguageList"] = createExportWrapper("getInstalledLanguageList");

var _prvTidygetInstalledLanguageList = Module["_prvTidygetInstalledLanguageList"] = createExportWrapper("prvTidygetInstalledLanguageList");

var _getNextInstalledLanguage = Module["_getNextInstalledLanguage"] = createExportWrapper("getNextInstalledLanguage");

var _prvTidygetNextInstalledLanguage = Module["_prvTidygetNextInstalledLanguage"] = createExportWrapper("prvTidygetNextInstalledLanguage");

var _prvTidytidyNormalizedLocaleName = Module["_prvTidytidyNormalizedLocaleName"] = createExportWrapper("prvTidytidyNormalizedLocaleName");

var _prvTidytidyTestLanguage = Module["_prvTidytidyTestLanguage"] = createExportWrapper("prvTidytidyTestLanguage");

var _locale_charset = Module["_locale_charset"] = createExportWrapper("locale_charset");

var _mbrtowc = Module["_mbrtowc"] = createExportWrapper("mbrtowc");

var _wcrtomb = Module["_wcrtomb"] = createExportWrapper("wcrtomb");

var _libiconv_open_into = Module["_libiconv_open_into"] = createExportWrapper("libiconv_open_into");

var _libiconvctl = Module["_libiconvctl"] = createExportWrapper("libiconvctl");

var _libiconvlist = Module["_libiconvlist"] = createExportWrapper("libiconvlist");

var _iconv_canonicalize = Module["_iconv_canonicalize"] = createExportWrapper("iconv_canonicalize");

var _initxmlDefaultSAXHandler = Module["_initxmlDefaultSAXHandler"] = createExportWrapper("initxmlDefaultSAXHandler");

var _inithtmlDefaultSAXHandler = Module["_inithtmlDefaultSAXHandler"] = createExportWrapper("inithtmlDefaultSAXHandler");

var _initdocbDefaultSAXHandler = Module["_initdocbDefaultSAXHandler"] = createExportWrapper("initdocbDefaultSAXHandler");

var _xmlAddDtdEntity = Module["_xmlAddDtdEntity"] = createExportWrapper("xmlAddDtdEntity");

var ___xmlSimpleError = Module["___xmlSimpleError"] = createExportWrapper("__xmlSimpleError");

var _xmlHashCreateDict = Module["_xmlHashCreateDict"] = createExportWrapper("xmlHashCreateDict");

var _xmlHashAddEntry = Module["_xmlHashAddEntry"] = createExportWrapper("xmlHashAddEntry");

var _xmlAddDocEntity = Module["_xmlAddDocEntity"] = createExportWrapper("xmlAddDocEntity");

var _xmlNewEntity = Module["_xmlNewEntity"] = createExportWrapper("xmlNewEntity");

var _xmlDictLookup = Module["_xmlDictLookup"] = createExportWrapper("xmlDictLookup");

var _xmlGetParameterEntity = Module["_xmlGetParameterEntity"] = createExportWrapper("xmlGetParameterEntity");

var _xmlGetDtdEntity = Module["_xmlGetDtdEntity"] = createExportWrapper("xmlGetDtdEntity");

var _xmlEncodeAttributeEntities = Module["_xmlEncodeAttributeEntities"] = createExportWrapper("xmlEncodeAttributeEntities");

var _xmlStrstr = Module["_xmlStrstr"] = createExportWrapper("xmlStrstr");

var _xmlEncodeSpecialChars = Module["_xmlEncodeSpecialChars"] = createExportWrapper("xmlEncodeSpecialChars");

var _xmlCreateEntitiesTable = Module["_xmlCreateEntitiesTable"] = createExportWrapper("xmlCreateEntitiesTable");

var _xmlHashCreate = Module["_xmlHashCreate"] = createExportWrapper("xmlHashCreate");

var _xmlFreeEntitiesTable = Module["_xmlFreeEntitiesTable"] = createExportWrapper("xmlFreeEntitiesTable");

var _xmlHashFree = Module["_xmlHashFree"] = createExportWrapper("xmlHashFree");

var _xmlCopyEntitiesTable = Module["_xmlCopyEntitiesTable"] = createExportWrapper("xmlCopyEntitiesTable");

var _xmlHashCopy = Module["_xmlHashCopy"] = createExportWrapper("xmlHashCopy");

var _xmlDumpEntityDecl = Module["_xmlDumpEntityDecl"] = createExportWrapper("xmlDumpEntityDecl");

var _xmlBufferWriteChar = Module["_xmlBufferWriteChar"] = createExportWrapper("xmlBufferWriteChar");

var _xmlBufferWriteCHAR = Module["_xmlBufferWriteCHAR"] = createExportWrapper("xmlBufferWriteCHAR");

var _xmlBufferWriteQuotedString = Module["_xmlBufferWriteQuotedString"] = createExportWrapper("xmlBufferWriteQuotedString");

var _xmlBufferCCat = Module["_xmlBufferCCat"] = createExportWrapper("xmlBufferCCat");

var _xmlBufferAdd = Module["_xmlBufferAdd"] = createExportWrapper("xmlBufferAdd");

var _xmlDumpEntitiesTable = Module["_xmlDumpEntitiesTable"] = createExportWrapper("xmlDumpEntitiesTable");

var _xmlFreeNodeList = Module["_xmlFreeNodeList"] = createExportWrapper("xmlFreeNodeList");

var _xmlDictOwns = Module["_xmlDictOwns"] = createExportWrapper("xmlDictOwns");

var _isolat1ToUTF8 = Module["_isolat1ToUTF8"] = createExportWrapper("isolat1ToUTF8");

var _UTF8Toisolat1 = Module["_UTF8Toisolat1"] = createExportWrapper("UTF8Toisolat1");

var _xmlDetectCharEncoding = Module["_xmlDetectCharEncoding"] = createExportWrapper("xmlDetectCharEncoding");

var _xmlCleanupEncodingAliases = Module["_xmlCleanupEncodingAliases"] = createExportWrapper("xmlCleanupEncodingAliases");

var _xmlGetEncodingAlias = Module["_xmlGetEncodingAlias"] = createExportWrapper("xmlGetEncodingAlias");

var _xmlAddEncodingAlias = Module["_xmlAddEncodingAlias"] = createExportWrapper("xmlAddEncodingAlias");

var _xmlDelEncodingAlias = Module["_xmlDelEncodingAlias"] = createExportWrapper("xmlDelEncodingAlias");

var _xmlGetCharEncodingName = Module["_xmlGetCharEncodingName"] = createExportWrapper("xmlGetCharEncodingName");

var _xmlNewCharEncodingHandler = Module["_xmlNewCharEncodingHandler"] = createExportWrapper("xmlNewCharEncodingHandler");

var _xmlInitCharEncodingHandlers = Module["_xmlInitCharEncodingHandlers"] = createExportWrapper("xmlInitCharEncodingHandlers");

var ___xmlRaiseError = Module["___xmlRaiseError"] = createExportWrapper("__xmlRaiseError");

var _xmlRegisterCharEncodingHandler = Module["_xmlRegisterCharEncodingHandler"] = createExportWrapper("xmlRegisterCharEncodingHandler");

var _UTF8ToHtml = Module["_UTF8ToHtml"] = createExportWrapper("UTF8ToHtml");

var _xmlCleanupCharEncodingHandlers = Module["_xmlCleanupCharEncodingHandlers"] = createExportWrapper("xmlCleanupCharEncodingHandlers");

var _xmlGetCharEncodingHandler = Module["_xmlGetCharEncodingHandler"] = createExportWrapper("xmlGetCharEncodingHandler");

var _iconv_open = Module["_iconv_open"] = createExportWrapper("iconv_open");

var _iconv_close = Module["_iconv_close"] = createExportWrapper("iconv_close");

var _xmlCharEncFirstLineInt = Module["_xmlCharEncFirstLineInt"] = createExportWrapper("xmlCharEncFirstLineInt");

var _xmlBufferGrow = Module["_xmlBufferGrow"] = createExportWrapper("xmlBufferGrow");

var _xmlBufferShrink = Module["_xmlBufferShrink"] = createExportWrapper("xmlBufferShrink");

var _xmlCharEncFirstLine = Module["_xmlCharEncFirstLine"] = createExportWrapper("xmlCharEncFirstLine");

var _xmlCharEncFirstLineInput = Module["_xmlCharEncFirstLineInput"] = createExportWrapper("xmlCharEncFirstLineInput");

var _xmlBufUse = Module["_xmlBufUse"] = createExportWrapper("xmlBufUse");

var _xmlBufAvail = Module["_xmlBufAvail"] = createExportWrapper("xmlBufAvail");

var _xmlBufGrow = Module["_xmlBufGrow"] = createExportWrapper("xmlBufGrow");

var _xmlBufEnd = Module["_xmlBufEnd"] = createExportWrapper("xmlBufEnd");

var _xmlBufContent = Module["_xmlBufContent"] = createExportWrapper("xmlBufContent");

var _xmlBufShrink = Module["_xmlBufShrink"] = createExportWrapper("xmlBufShrink");

var _xmlBufAddLen = Module["_xmlBufAddLen"] = createExportWrapper("xmlBufAddLen");

var _xmlCharEncInput = Module["_xmlCharEncInput"] = createExportWrapper("xmlCharEncInput");

var _xmlCharEncInFunc = Module["_xmlCharEncInFunc"] = createExportWrapper("xmlCharEncInFunc");

var _xmlCharEncOutput = Module["_xmlCharEncOutput"] = createExportWrapper("xmlCharEncOutput");

var _xmlGetUTF8Char = Module["_xmlGetUTF8Char"] = createExportWrapper("xmlGetUTF8Char");

var _xmlBufGetAllocationScheme = Module["_xmlBufGetAllocationScheme"] = createExportWrapper("xmlBufGetAllocationScheme");

var _xmlCharEncOutFunc = Module["_xmlCharEncOutFunc"] = createExportWrapper("xmlCharEncOutFunc");

var _xmlByteConsumed = Module["_xmlByteConsumed"] = createExportWrapper("xmlByteConsumed");

var _iconv = Module["_iconv"] = createExportWrapper("iconv");

var _xmlGenericErrorDefaultFunc = Module["_xmlGenericErrorDefaultFunc"] = createExportWrapper("xmlGenericErrorDefaultFunc");

var _initGenericErrorDefaultFunc = Module["_initGenericErrorDefaultFunc"] = createExportWrapper("initGenericErrorDefaultFunc");

var _vfprintf = Module["_vfprintf"] = createExportWrapper("vfprintf");

var _xmlParserPrintFileInfo = Module["_xmlParserPrintFileInfo"] = createExportWrapper("xmlParserPrintFileInfo");

var _xmlParserPrintFileContext = Module["_xmlParserPrintFileContext"] = createExportWrapper("xmlParserPrintFileContext");

var _xmlGetProp = Module["_xmlGetProp"] = createExportWrapper("xmlGetProp");

var _xmlParserValidityWarning = Module["_xmlParserValidityWarning"] = createExportWrapper("xmlParserValidityWarning");

var _xmlParserValidityError = Module["_xmlParserValidityError"] = createExportWrapper("xmlParserValidityError");

var _xmlParserError = Module["_xmlParserError"] = createExportWrapper("xmlParserError");

var _xmlParserWarning = Module["_xmlParserWarning"] = createExportWrapper("xmlParserWarning");

var _xmlCtxtGetLastError = Module["_xmlCtxtGetLastError"] = createExportWrapper("xmlCtxtGetLastError");

var _xmlCtxtResetLastError = Module["_xmlCtxtResetLastError"] = createExportWrapper("xmlCtxtResetLastError");

var _xmlCheckVersion = Module["_xmlCheckVersion"] = createExportWrapper("xmlCheckVersion");

var _xmlErrMemory = Module["_xmlErrMemory"] = createExportWrapper("xmlErrMemory");

var ___xmlErrEncoding = Module["___xmlErrEncoding"] = createExportWrapper("__xmlErrEncoding");

var _xmlIsLetter = Module["_xmlIsLetter"] = createExportWrapper("xmlIsLetter");

var _xmlParserInputRead = Module["_xmlParserInputRead"] = createExportWrapper("xmlParserInputRead");

var _xmlParserInputGrow = Module["_xmlParserInputGrow"] = createExportWrapper("xmlParserInputGrow");

var _xmlParserInputShrink = Module["_xmlParserInputShrink"] = createExportWrapper("xmlParserInputShrink");

var _xmlNextChar = Module["_xmlNextChar"] = createExportWrapper("xmlNextChar");

var _xmlCurrentChar = Module["_xmlCurrentChar"] = createExportWrapper("xmlCurrentChar");

var _xmlStringCurrentChar = Module["_xmlStringCurrentChar"] = createExportWrapper("xmlStringCurrentChar");

var _xmlCopyCharMultiByte = Module["_xmlCopyCharMultiByte"] = createExportWrapper("xmlCopyCharMultiByte");

var _xmlCopyChar = Module["_xmlCopyChar"] = createExportWrapper("xmlCopyChar");

var _xmlSwitchEncoding = Module["_xmlSwitchEncoding"] = createExportWrapper("xmlSwitchEncoding");

var _xmlSwitchInputEncoding = Module["_xmlSwitchInputEncoding"] = createExportWrapper("xmlSwitchInputEncoding");

var _xmlSwitchToEncoding = Module["_xmlSwitchToEncoding"] = createExportWrapper("xmlSwitchToEncoding");

var _xmlFreeInputStream = Module["_xmlFreeInputStream"] = createExportWrapper("xmlFreeInputStream");

var _xmlNewInputStream = Module["_xmlNewInputStream"] = createExportWrapper("xmlNewInputStream");

var _xmlCharInRange = Module["_xmlCharInRange"] = createExportWrapper("xmlCharInRange");

var _xmlParserInputBufferGrow = Module["_xmlParserInputBufferGrow"] = createExportWrapper("xmlParserInputBufferGrow");

var _xmlParserInputBufferRead = Module["_xmlParserInputBufferRead"] = createExportWrapper("xmlParserInputBufferRead");

var _xmlBufIsEmpty = Module["_xmlBufIsEmpty"] = createExportWrapper("xmlBufIsEmpty");

var _xmlBufCreate = Module["_xmlBufCreate"] = createExportWrapper("xmlBufCreate");

var _xmlBufResetInput = Module["_xmlBufResetInput"] = createExportWrapper("xmlBufResetInput");

var _xmlNewEntityInputStream = Module["_xmlNewEntityInputStream"] = createExportWrapper("xmlNewEntityInputStream");

var _xmlLoadExternalEntity = Module["_xmlLoadExternalEntity"] = createExportWrapper("xmlLoadExternalEntity");

var _xmlNewStringInputStream = Module["_xmlNewStringInputStream"] = createExportWrapper("xmlNewStringInputStream");

var _xmlParserInputBufferCreateFilename = Module["_xmlParserInputBufferCreateFilename"] = createExportWrapper("xmlParserInputBufferCreateFilename");

var ___xmlLoaderErr = Module["___xmlLoaderErr"] = createExportWrapper("__xmlLoaderErr");

var _xmlCheckHTTPInput = Module["_xmlCheckHTTPInput"] = createExportWrapper("xmlCheckHTTPInput");

var _xmlParserGetDirectory = Module["_xmlParserGetDirectory"] = createExportWrapper("xmlParserGetDirectory");

var _xmlInitParserCtxt = Module["_xmlInitParserCtxt"] = createExportWrapper("xmlInitParserCtxt");

var _xmlDefaultSAXHandlerInit = Module["_xmlDefaultSAXHandlerInit"] = createExportWrapper("xmlDefaultSAXHandlerInit");

var _xmlDictCreate = Module["_xmlDictCreate"] = createExportWrapper("xmlDictCreate");

var _xmlDictSetLimit = Module["_xmlDictSetLimit"] = createExportWrapper("xmlDictSetLimit");

var _xmlSAXVersion = Module["_xmlSAXVersion"] = createExportWrapper("xmlSAXVersion");

var _inputPop = Module["_inputPop"] = createExportWrapper("inputPop");

var _xmlSAX2IgnorableWhitespace = Module["_xmlSAX2IgnorableWhitespace"] = createExportWrapper("xmlSAX2IgnorableWhitespace");

var _xmlInitNodeInfoSeq = Module["_xmlInitNodeInfoSeq"] = createExportWrapper("xmlInitNodeInfoSeq");

var _xmlDictFree = Module["_xmlDictFree"] = createExportWrapper("xmlDictFree");

var _xmlHashDefaultDeallocator = Module["_xmlHashDefaultDeallocator"] = createExportWrapper("xmlHashDefaultDeallocator");

var _xmlCatalogFreeLocal = Module["_xmlCatalogFreeLocal"] = createExportWrapper("xmlCatalogFreeLocal");

var _xmlNewParserCtxt = Module["_xmlNewParserCtxt"] = createExportWrapper("xmlNewParserCtxt");

var _xmlClearParserCtxt = Module["_xmlClearParserCtxt"] = createExportWrapper("xmlClearParserCtxt");

var _xmlCtxtReset = Module["_xmlCtxtReset"] = createExportWrapper("xmlCtxtReset");

var _xmlClearNodeInfoSeq = Module["_xmlClearNodeInfoSeq"] = createExportWrapper("xmlClearNodeInfoSeq");

var _xmlParserFindNodeInfo = Module["_xmlParserFindNodeInfo"] = createExportWrapper("xmlParserFindNodeInfo");

var _xmlParserFindNodeInfoIndex = Module["_xmlParserFindNodeInfoIndex"] = createExportWrapper("xmlParserFindNodeInfoIndex");

var _xmlParserAddNodeInfo = Module["_xmlParserAddNodeInfo"] = createExportWrapper("xmlParserAddNodeInfo");

var _xmlHasFeature = Module["_xmlHasFeature"] = createExportWrapper("xmlHasFeature");

var _xmlCheckLanguageID = Module["_xmlCheckLanguageID"] = createExportWrapper("xmlCheckLanguageID");

var _inputPush = Module["_inputPush"] = createExportWrapper("inputPush");

var _nodePush = Module["_nodePush"] = createExportWrapper("nodePush");

var _nodePop = Module["_nodePop"] = createExportWrapper("nodePop");

var _namePush = Module["_namePush"] = createExportWrapper("namePush");

var _namePop = Module["_namePop"] = createExportWrapper("namePop");

var _xmlSkipBlankChars = Module["_xmlSkipBlankChars"] = createExportWrapper("xmlSkipBlankChars");

var _xmlParsePEReference = Module["_xmlParsePEReference"] = createExportWrapper("xmlParsePEReference");

var _xmlPopInput = Module["_xmlPopInput"] = createExportWrapper("xmlPopInput");

var _xmlParseName = Module["_xmlParseName"] = createExportWrapper("xmlParseName");

var _xmlPushInput = Module["_xmlPushInput"] = createExportWrapper("xmlPushInput");

var _xmlParseTextDecl = Module["_xmlParseTextDecl"] = createExportWrapper("xmlParseTextDecl");

var _xmlInputReadCallbackNop = Module["_xmlInputReadCallbackNop"] = createExportWrapper("xmlInputReadCallbackNop");

var _xmlParseCharRef = Module["_xmlParseCharRef"] = createExportWrapper("xmlParseCharRef");

var _xmlParserHandlePEReference = Module["_xmlParserHandlePEReference"] = createExportWrapper("xmlParserHandlePEReference");

var _xmlStringLenDecodeEntities = Module["_xmlStringLenDecodeEntities"] = createExportWrapper("xmlStringLenDecodeEntities");

var _xmlSAX2GetEntity = Module["_xmlSAX2GetEntity"] = createExportWrapper("xmlSAX2GetEntity");

var _xmlStringDecodeEntities = Module["_xmlStringDecodeEntities"] = createExportWrapper("xmlStringDecodeEntities");

var _xmlSplitQName = Module["_xmlSplitQName"] = createExportWrapper("xmlSplitQName");

var _xmlParseNmtoken = Module["_xmlParseNmtoken"] = createExportWrapper("xmlParseNmtoken");

var _xmlParseEntityValue = Module["_xmlParseEntityValue"] = createExportWrapper("xmlParseEntityValue");

var _xmlParseAttValue = Module["_xmlParseAttValue"] = createExportWrapper("xmlParseAttValue");

var _xmlParseEntityRef = Module["_xmlParseEntityRef"] = createExportWrapper("xmlParseEntityRef");

var _xmlParseSystemLiteral = Module["_xmlParseSystemLiteral"] = createExportWrapper("xmlParseSystemLiteral");

var _xmlParsePubidLiteral = Module["_xmlParsePubidLiteral"] = createExportWrapper("xmlParsePubidLiteral");

var _xmlParseCharData = Module["_xmlParseCharData"] = createExportWrapper("xmlParseCharData");

var _xmlIsMixedElement = Module["_xmlIsMixedElement"] = createExportWrapper("xmlIsMixedElement");

var _xmlGetLastChild = Module["_xmlGetLastChild"] = createExportWrapper("xmlGetLastChild");

var _xmlNodeIsText = Module["_xmlNodeIsText"] = createExportWrapper("xmlNodeIsText");

var _xmlParseExternalID = Module["_xmlParseExternalID"] = createExportWrapper("xmlParseExternalID");

var _xmlParseComment = Module["_xmlParseComment"] = createExportWrapper("xmlParseComment");

var _xmlParsePITarget = Module["_xmlParsePITarget"] = createExportWrapper("xmlParsePITarget");

var _xmlParsePI = Module["_xmlParsePI"] = createExportWrapper("xmlParsePI");

var _xmlCatalogGetDefaults = Module["_xmlCatalogGetDefaults"] = createExportWrapper("xmlCatalogGetDefaults");

var _xmlCatalogAddLocal = Module["_xmlCatalogAddLocal"] = createExportWrapper("xmlCatalogAddLocal");

var _xmlParseNotationDecl = Module["_xmlParseNotationDecl"] = createExportWrapper("xmlParseNotationDecl");

var _xmlParseEntityDecl = Module["_xmlParseEntityDecl"] = createExportWrapper("xmlParseEntityDecl");

var _xmlNewDtd = Module["_xmlNewDtd"] = createExportWrapper("xmlNewDtd");

var _xmlSAX2EntityDecl = Module["_xmlSAX2EntityDecl"] = createExportWrapper("xmlSAX2EntityDecl");

var _xmlParseDefaultDecl = Module["_xmlParseDefaultDecl"] = createExportWrapper("xmlParseDefaultDecl");

var _xmlParseNotationType = Module["_xmlParseNotationType"] = createExportWrapper("xmlParseNotationType");

var _xmlCreateEnumeration = Module["_xmlCreateEnumeration"] = createExportWrapper("xmlCreateEnumeration");

var _xmlFreeEnumeration = Module["_xmlFreeEnumeration"] = createExportWrapper("xmlFreeEnumeration");

var _xmlParseEnumerationType = Module["_xmlParseEnumerationType"] = createExportWrapper("xmlParseEnumerationType");

var _xmlParseEnumeratedType = Module["_xmlParseEnumeratedType"] = createExportWrapper("xmlParseEnumeratedType");

var _xmlParseAttributeType = Module["_xmlParseAttributeType"] = createExportWrapper("xmlParseAttributeType");

var _xmlParseAttributeListDecl = Module["_xmlParseAttributeListDecl"] = createExportWrapper("xmlParseAttributeListDecl");

var _xmlHashLookup2 = Module["_xmlHashLookup2"] = createExportWrapper("xmlHashLookup2");

var _xmlHashUpdateEntry2 = Module["_xmlHashUpdateEntry2"] = createExportWrapper("xmlHashUpdateEntry2");

var _xmlHashAddEntry2 = Module["_xmlHashAddEntry2"] = createExportWrapper("xmlHashAddEntry2");

var _xmlParseElementMixedContentDecl = Module["_xmlParseElementMixedContentDecl"] = createExportWrapper("xmlParseElementMixedContentDecl");

var _xmlNewDocElementContent = Module["_xmlNewDocElementContent"] = createExportWrapper("xmlNewDocElementContent");

var _xmlFreeDocElementContent = Module["_xmlFreeDocElementContent"] = createExportWrapper("xmlFreeDocElementContent");

var _xmlParseElementChildrenContentDecl = Module["_xmlParseElementChildrenContentDecl"] = createExportWrapper("xmlParseElementChildrenContentDecl");

var _xmlParseElementContentDecl = Module["_xmlParseElementContentDecl"] = createExportWrapper("xmlParseElementContentDecl");

var _xmlParseElementDecl = Module["_xmlParseElementDecl"] = createExportWrapper("xmlParseElementDecl");

var _xmlParseMarkupDecl = Module["_xmlParseMarkupDecl"] = createExportWrapper("xmlParseMarkupDecl");

var _xmlParseVersionInfo = Module["_xmlParseVersionInfo"] = createExportWrapper("xmlParseVersionInfo");

var _xmlCharStrdup = Module["_xmlCharStrdup"] = createExportWrapper("xmlCharStrdup");

var _xmlParseEncodingDecl = Module["_xmlParseEncodingDecl"] = createExportWrapper("xmlParseEncodingDecl");

var _xmlParseVersionNum = Module["_xmlParseVersionNum"] = createExportWrapper("xmlParseVersionNum");

var _xmlParseEncName = Module["_xmlParseEncName"] = createExportWrapper("xmlParseEncName");

var _xmlStrcasecmp = Module["_xmlStrcasecmp"] = createExportWrapper("xmlStrcasecmp");

var _xmlParseExternalSubset = Module["_xmlParseExternalSubset"] = createExportWrapper("xmlParseExternalSubset");

var _xmlParseReference = Module["_xmlParseReference"] = createExportWrapper("xmlParseReference");

var _xmlDictReference = Module["_xmlDictReference"] = createExportWrapper("xmlDictReference");

var _xmlParseContent = Module["_xmlParseContent"] = createExportWrapper("xmlParseContent");

var _xmlValidateElement = Module["_xmlValidateElement"] = createExportWrapper("xmlValidateElement");

var _xmlParseDocTypeDecl = Module["_xmlParseDocTypeDecl"] = createExportWrapper("xmlParseDocTypeDecl");

var _xmlParseAttribute = Module["_xmlParseAttribute"] = createExportWrapper("xmlParseAttribute");

var _xmlParseStartTag = Module["_xmlParseStartTag"] = createExportWrapper("xmlParseStartTag");

var _xmlParseEndTag = Module["_xmlParseEndTag"] = createExportWrapper("xmlParseEndTag");

var _xmlParseCDSect = Module["_xmlParseCDSect"] = createExportWrapper("xmlParseCDSect");

var _xmlValidateRoot = Module["_xmlValidateRoot"] = createExportWrapper("xmlValidateRoot");

var _xmlParseElement = Module["_xmlParseElement"] = createExportWrapper("xmlParseElement");

var _xmlParseSDDecl = Module["_xmlParseSDDecl"] = createExportWrapper("xmlParseSDDecl");

var _xmlParseXMLDecl = Module["_xmlParseXMLDecl"] = createExportWrapper("xmlParseXMLDecl");

var _xmlParseMisc = Module["_xmlParseMisc"] = createExportWrapper("xmlParseMisc");

var _xmlInitThreads = Module["_xmlInitThreads"] = createExportWrapper("xmlInitThreads");

var _xmlInitGlobals = Module["_xmlInitGlobals"] = createExportWrapper("xmlInitGlobals");

var _xmlInitMemory = Module["_xmlInitMemory"] = createExportWrapper("xmlInitMemory");

var _xmlInitializeDict = Module["_xmlInitializeDict"] = createExportWrapper("xmlInitializeDict");

var _xmlRegisterDefaultInputCallbacks = Module["_xmlRegisterDefaultInputCallbacks"] = createExportWrapper("xmlRegisterDefaultInputCallbacks");

var _xmlRegisterDefaultOutputCallbacks = Module["_xmlRegisterDefaultOutputCallbacks"] = createExportWrapper("xmlRegisterDefaultOutputCallbacks");

var _htmlInitAutoClose = Module["_htmlInitAutoClose"] = createExportWrapper("htmlInitAutoClose");

var _htmlDefaultSAXHandlerInit = Module["_htmlDefaultSAXHandlerInit"] = createExportWrapper("htmlDefaultSAXHandlerInit");

var _xmlXPathInit = Module["_xmlXPathInit"] = createExportWrapper("xmlXPathInit");

var _xmlHashScanFull = Module["_xmlHashScanFull"] = createExportWrapper("xmlHashScanFull");

var _xmlParseExtParsedEnt = Module["_xmlParseExtParsedEnt"] = createExportWrapper("xmlParseExtParsedEnt");

var _xmlBufGetInputBase = Module["_xmlBufGetInputBase"] = createExportWrapper("xmlBufGetInputBase");

var _xmlStrcasestr = Module["_xmlStrcasestr"] = createExportWrapper("xmlStrcasestr");

var _xmlParserInputBufferPush = Module["_xmlParserInputBufferPush"] = createExportWrapper("xmlParserInputBufferPush");

var _xmlBufSetInputBaseCur = Module["_xmlBufSetInputBaseCur"] = createExportWrapper("xmlBufSetInputBaseCur");

var _xmlCreateIOParserCtxt = Module["_xmlCreateIOParserCtxt"] = createExportWrapper("xmlCreateIOParserCtxt");

var _xmlParserInputBufferCreateIO = Module["_xmlParserInputBufferCreateIO"] = createExportWrapper("xmlParserInputBufferCreateIO");

var _xmlIOParseDTD = Module["_xmlIOParseDTD"] = createExportWrapper("xmlIOParseDTD");

var _xmlSAXParseDTD = Module["_xmlSAXParseDTD"] = createExportWrapper("xmlSAXParseDTD");

var _xmlParseDTD = Module["_xmlParseDTD"] = createExportWrapper("xmlParseDTD");

var _xmlParseCtxtExternalEntity = Module["_xmlParseCtxtExternalEntity"] = createExportWrapper("xmlParseCtxtExternalEntity");

var _xmlBuildURI = Module["_xmlBuildURI"] = createExportWrapper("xmlBuildURI");

var _xmlParseExternalEntity = Module["_xmlParseExternalEntity"] = createExportWrapper("xmlParseExternalEntity");

var _xmlParseBalancedChunkMemoryRecover = Module["_xmlParseBalancedChunkMemoryRecover"] = createExportWrapper("xmlParseBalancedChunkMemoryRecover");

var _xmlParseInNodeContext = Module["_xmlParseInNodeContext"] = createExportWrapper("xmlParseInNodeContext");

var ___htmlParseContent = Module["___htmlParseContent"] = createExportWrapper("__htmlParseContent");

var _xmlParserInputBufferCreateMem = Module["_xmlParserInputBufferCreateMem"] = createExportWrapper("xmlParserInputBufferCreateMem");

var _xmlSAX2EndElement = Module["_xmlSAX2EndElement"] = createExportWrapper("xmlSAX2EndElement");

var _xmlSAX2StartElement = Module["_xmlSAX2StartElement"] = createExportWrapper("xmlSAX2StartElement");

var _xmlSAXParseEntity = Module["_xmlSAXParseEntity"] = createExportWrapper("xmlSAXParseEntity");

var _xmlCreateURLParserCtxt = Module["_xmlCreateURLParserCtxt"] = createExportWrapper("xmlCreateURLParserCtxt");

var _xmlParseEntity = Module["_xmlParseEntity"] = createExportWrapper("xmlParseEntity");

var _xmlCreateEntityParserCtxt = Module["_xmlCreateEntityParserCtxt"] = createExportWrapper("xmlCreateEntityParserCtxt");

var _xmlSAXParseFileWithData = Module["_xmlSAXParseFileWithData"] = createExportWrapper("xmlSAXParseFileWithData");

var _xmlSAXParseFile = Module["_xmlSAXParseFile"] = createExportWrapper("xmlSAXParseFile");

var _xmlRecoverDoc = Module["_xmlRecoverDoc"] = createExportWrapper("xmlRecoverDoc");

var _xmlSAXParseDoc = Module["_xmlSAXParseDoc"] = createExportWrapper("xmlSAXParseDoc");

var _xmlParseFile = Module["_xmlParseFile"] = createExportWrapper("xmlParseFile");

var _xmlRecoverFile = Module["_xmlRecoverFile"] = createExportWrapper("xmlRecoverFile");

var _xmlSetupParserForBuffer = Module["_xmlSetupParserForBuffer"] = createExportWrapper("xmlSetupParserForBuffer");

var _xmlSAXUserParseFile = Module["_xmlSAXUserParseFile"] = createExportWrapper("xmlSAXUserParseFile");

var _xmlSAXParseMemoryWithData = Module["_xmlSAXParseMemoryWithData"] = createExportWrapper("xmlSAXParseMemoryWithData");

var _xmlSAXParseMemory = Module["_xmlSAXParseMemory"] = createExportWrapper("xmlSAXParseMemory");

var _xmlParseMemory = Module["_xmlParseMemory"] = createExportWrapper("xmlParseMemory");

var _xmlRecoverMemory = Module["_xmlRecoverMemory"] = createExportWrapper("xmlRecoverMemory");

var _xmlSAXUserParseMemory = Module["_xmlSAXUserParseMemory"] = createExportWrapper("xmlSAXUserParseMemory");

var _xmlCreateDocParserCtxt = Module["_xmlCreateDocParserCtxt"] = createExportWrapper("xmlCreateDocParserCtxt");

var _xmlParseDoc = Module["_xmlParseDoc"] = createExportWrapper("xmlParseDoc");

var _xmlSetEntityReferenceFunc = Module["_xmlSetEntityReferenceFunc"] = createExportWrapper("xmlSetEntityReferenceFunc");

var _xmlCleanupParser = Module["_xmlCleanupParser"] = createExportWrapper("xmlCleanupParser");

var _xmlCatalogCleanup = Module["_xmlCatalogCleanup"] = createExportWrapper("xmlCatalogCleanup");

var _xmlDictCleanup = Module["_xmlDictCleanup"] = createExportWrapper("xmlDictCleanup");

var _xmlCleanupInputCallbacks = Module["_xmlCleanupInputCallbacks"] = createExportWrapper("xmlCleanupInputCallbacks");

var _xmlCleanupOutputCallbacks = Module["_xmlCleanupOutputCallbacks"] = createExportWrapper("xmlCleanupOutputCallbacks");

var _xmlSchemaCleanupTypes = Module["_xmlSchemaCleanupTypes"] = createExportWrapper("xmlSchemaCleanupTypes");

var _xmlCleanupGlobals = Module["_xmlCleanupGlobals"] = createExportWrapper("xmlCleanupGlobals");

var _xmlCleanupThreads = Module["_xmlCleanupThreads"] = createExportWrapper("xmlCleanupThreads");

var _xmlCleanupMemory = Module["_xmlCleanupMemory"] = createExportWrapper("xmlCleanupMemory");

var _xmlCtxtResetPush = Module["_xmlCtxtResetPush"] = createExportWrapper("xmlCtxtResetPush");

var _xmlReadDoc = Module["_xmlReadDoc"] = createExportWrapper("xmlReadDoc");

var _xmlReadFd = Module["_xmlReadFd"] = createExportWrapper("xmlReadFd");

var _xmlParserInputBufferCreateFd = Module["_xmlParserInputBufferCreateFd"] = createExportWrapper("xmlParserInputBufferCreateFd");

var _xmlReadIO = Module["_xmlReadIO"] = createExportWrapper("xmlReadIO");

var _xmlCtxtReadDoc = Module["_xmlCtxtReadDoc"] = createExportWrapper("xmlCtxtReadDoc");

var _xmlCtxtReadFile = Module["_xmlCtxtReadFile"] = createExportWrapper("xmlCtxtReadFile");

var _xmlCtxtReadMemory = Module["_xmlCtxtReadMemory"] = createExportWrapper("xmlCtxtReadMemory");

var _xmlCtxtReadFd = Module["_xmlCtxtReadFd"] = createExportWrapper("xmlCtxtReadFd");

var _xmlCtxtReadIO = Module["_xmlCtxtReadIO"] = createExportWrapper("xmlCtxtReadIO");

var _xmlHashQLookup2 = Module["_xmlHashQLookup2"] = createExportWrapper("xmlHashQLookup2");

var _xmlBuildQName = Module["_xmlBuildQName"] = createExportWrapper("xmlBuildQName");

var _xmlHashRemoveEntry2 = Module["_xmlHashRemoveEntry2"] = createExportWrapper("xmlHashRemoveEntry2");

var _xmlValidateNCName = Module["_xmlValidateNCName"] = createExportWrapper("xmlValidateNCName");

var _xmlValidateNMToken = Module["_xmlValidateNMToken"] = createExportWrapper("xmlValidateNMToken");

var _xmlSetBufferAllocationScheme = Module["_xmlSetBufferAllocationScheme"] = createExportWrapper("xmlSetBufferAllocationScheme");

var _xmlGetBufferAllocationScheme = Module["_xmlGetBufferAllocationScheme"] = createExportWrapper("xmlGetBufferAllocationScheme");

var _xmlFreeNsList = Module["_xmlFreeNsList"] = createExportWrapper("xmlFreeNsList");

var _xmlFreeDtd = Module["_xmlFreeDtd"] = createExportWrapper("xmlFreeDtd");

var _xmlFreeNotationTable = Module["_xmlFreeNotationTable"] = createExportWrapper("xmlFreeNotationTable");

var _xmlFreeElementTable = Module["_xmlFreeElementTable"] = createExportWrapper("xmlFreeElementTable");

var _xmlFreeAttributeTable = Module["_xmlFreeAttributeTable"] = createExportWrapper("xmlFreeAttributeTable");

var _xmlHashRemoveEntry = Module["_xmlHashRemoveEntry"] = createExportWrapper("xmlHashRemoveEntry");

var _xmlFreeIDTable = Module["_xmlFreeIDTable"] = createExportWrapper("xmlFreeIDTable");

var _xmlFreeRefTable = Module["_xmlFreeRefTable"] = createExportWrapper("xmlFreeRefTable");

var _xmlStringLenGetNodeList = Module["_xmlStringLenGetNodeList"] = createExportWrapper("xmlStringLenGetNodeList");

var _xmlBufCreateSize = Module["_xmlBufCreateSize"] = createExportWrapper("xmlBufCreateSize");

var _xmlBufSetAllocationScheme = Module["_xmlBufSetAllocationScheme"] = createExportWrapper("xmlBufSetAllocationScheme");

var _xmlBufAdd = Module["_xmlBufAdd"] = createExportWrapper("xmlBufAdd");

var _xmlBufCat = Module["_xmlBufCat"] = createExportWrapper("xmlBufCat");

var _xmlBufDetach = Module["_xmlBufDetach"] = createExportWrapper("xmlBufDetach");

var _xmlStringGetNodeList = Module["_xmlStringGetNodeList"] = createExportWrapper("xmlStringGetNodeList");

var _xmlBufFree = Module["_xmlBufFree"] = createExportWrapper("xmlBufFree");

var _xmlNodeAddContentLen = Module["_xmlNodeAddContentLen"] = createExportWrapper("xmlNodeAddContentLen");

var _xmlNodeListGetRawString = Module["_xmlNodeListGetRawString"] = createExportWrapper("xmlNodeListGetRawString");

var _xmlCheckUTF8 = Module["_xmlCheckUTF8"] = createExportWrapper("xmlCheckUTF8");

var _xmlIsID = Module["_xmlIsID"] = createExportWrapper("xmlIsID");

var _xmlNewNsPropEatName = Module["_xmlNewNsPropEatName"] = createExportWrapper("xmlNewNsPropEatName");

var _xmlFreePropList = Module["_xmlFreePropList"] = createExportWrapper("xmlFreePropList");

var _xmlRemoveProp = Module["_xmlRemoveProp"] = createExportWrapper("xmlRemoveProp");

var _xmlNewDocPI = Module["_xmlNewDocPI"] = createExportWrapper("xmlNewDocPI");

var _xmlNewNodeEatName = Module["_xmlNewNodeEatName"] = createExportWrapper("xmlNewNodeEatName");

var _xmlNewDocNodeEatName = Module["_xmlNewDocNodeEatName"] = createExportWrapper("xmlNewDocNodeEatName");

var _xmlNewDocRawNode = Module["_xmlNewDocRawNode"] = createExportWrapper("xmlNewDocRawNode");

var _xmlNewCharRef = Module["_xmlNewCharRef"] = createExportWrapper("xmlNewCharRef");

var _xmlNewTextLen = Module["_xmlNewTextLen"] = createExportWrapper("xmlNewTextLen");

var _xmlNewDocTextLen = Module["_xmlNewDocTextLen"] = createExportWrapper("xmlNewDocTextLen");

var _xmlSetListDoc = Module["_xmlSetListDoc"] = createExportWrapper("xmlSetListDoc");

var _xmlAddSibling = Module["_xmlAddSibling"] = createExportWrapper("xmlAddSibling");

var _xmlChildElementCount = Module["_xmlChildElementCount"] = createExportWrapper("xmlChildElementCount");

var _xmlFirstElementChild = Module["_xmlFirstElementChild"] = createExportWrapper("xmlFirstElementChild");

var _xmlLastElementChild = Module["_xmlLastElementChild"] = createExportWrapper("xmlLastElementChild");

var _xmlPreviousElementSibling = Module["_xmlPreviousElementSibling"] = createExportWrapper("xmlPreviousElementSibling");

var _xmlNextElementSibling = Module["_xmlNextElementSibling"] = createExportWrapper("xmlNextElementSibling");

var _xmlCopyNamespace = Module["_xmlCopyNamespace"] = createExportWrapper("xmlCopyNamespace");

var _xmlCopyProp = Module["_xmlCopyProp"] = createExportWrapper("xmlCopyProp");

var _xmlCopyDtd = Module["_xmlCopyDtd"] = createExportWrapper("xmlCopyDtd");

var _xmlDocCopyNodeList = Module["_xmlDocCopyNodeList"] = createExportWrapper("xmlDocCopyNodeList");

var _xmlCopyNodeList = Module["_xmlCopyNodeList"] = createExportWrapper("xmlCopyNodeList");

var _xmlCopyNotationTable = Module["_xmlCopyNotationTable"] = createExportWrapper("xmlCopyNotationTable");

var _xmlCopyElementTable = Module["_xmlCopyElementTable"] = createExportWrapper("xmlCopyElementTable");

var _xmlCopyAttributeTable = Module["_xmlCopyAttributeTable"] = createExportWrapper("xmlCopyAttributeTable");

var _xmlGetDtdQElementDesc = Module["_xmlGetDtdQElementDesc"] = createExportWrapper("xmlGetDtdQElementDesc");

var _xmlGetDtdQAttrDesc = Module["_xmlGetDtdQAttrDesc"] = createExportWrapper("xmlGetDtdQAttrDesc");

var _xmlNodeSetLang = Module["_xmlNodeSetLang"] = createExportWrapper("xmlNodeSetLang");

var _xmlNodeGetLang = Module["_xmlNodeGetLang"] = createExportWrapper("xmlNodeGetLang");

var _xmlNodeSetSpacePreserve = Module["_xmlNodeSetSpacePreserve"] = createExportWrapper("xmlNodeSetSpacePreserve");

var _xmlNodeGetSpacePreserve = Module["_xmlNodeGetSpacePreserve"] = createExportWrapper("xmlNodeGetSpacePreserve");

var _xmlNodeSetName = Module["_xmlNodeSetName"] = createExportWrapper("xmlNodeSetName");

var _xmlNodeSetBase = Module["_xmlNodeSetBase"] = createExportWrapper("xmlNodeSetBase");

var _xmlPathToURI = Module["_xmlPathToURI"] = createExportWrapper("xmlPathToURI");

var _xmlNodeBufGetContent = Module["_xmlNodeBufGetContent"] = createExportWrapper("xmlNodeBufGetContent");

var _xmlBufFromBuffer = Module["_xmlBufFromBuffer"] = createExportWrapper("xmlBufFromBuffer");

var _xmlBufGetNodeContent = Module["_xmlBufGetNodeContent"] = createExportWrapper("xmlBufGetNodeContent");

var _xmlBufBackToBuffer = Module["_xmlBufBackToBuffer"] = createExportWrapper("xmlBufBackToBuffer");

var _xmlTextMerge = Module["_xmlTextMerge"] = createExportWrapper("xmlTextMerge");

var _xmlGetDtdAttrDesc = Module["_xmlGetDtdAttrDesc"] = createExportWrapper("xmlGetDtdAttrDesc");

var _xmlGetNoNsProp = Module["_xmlGetNoNsProp"] = createExportWrapper("xmlGetNoNsProp");

var _xmlUnsetProp = Module["_xmlUnsetProp"] = createExportWrapper("xmlUnsetProp");

var _xmlUnsetNsProp = Module["_xmlUnsetNsProp"] = createExportWrapper("xmlUnsetNsProp");

var _xmlBufferCreateSize = Module["_xmlBufferCreateSize"] = createExportWrapper("xmlBufferCreateSize");

var _xmlBufferDetach = Module["_xmlBufferDetach"] = createExportWrapper("xmlBufferDetach");

var _xmlBufferCreateStatic = Module["_xmlBufferCreateStatic"] = createExportWrapper("xmlBufferCreateStatic");

var _xmlBufferSetAllocationScheme = Module["_xmlBufferSetAllocationScheme"] = createExportWrapper("xmlBufferSetAllocationScheme");

var _xmlBufferEmpty = Module["_xmlBufferEmpty"] = createExportWrapper("xmlBufferEmpty");

var _xmlBufferDump = Module["_xmlBufferDump"] = createExportWrapper("xmlBufferDump");

var _xmlBufferResize = Module["_xmlBufferResize"] = createExportWrapper("xmlBufferResize");

var _xmlBufferAddHead = Module["_xmlBufferAddHead"] = createExportWrapper("xmlBufferAddHead");

var _xmlBufferCat = Module["_xmlBufferCat"] = createExportWrapper("xmlBufferCat");

var _xmlGetDocCompressMode = Module["_xmlGetDocCompressMode"] = createExportWrapper("xmlGetDocCompressMode");

var _xmlSetDocCompressMode = Module["_xmlSetDocCompressMode"] = createExportWrapper("xmlSetDocCompressMode");

var _xmlGetCompressMode = Module["_xmlGetCompressMode"] = createExportWrapper("xmlGetCompressMode");

var _xmlSetCompressMode = Module["_xmlSetCompressMode"] = createExportWrapper("xmlSetCompressMode");

var _xmlDOMWrapNewCtxt = Module["_xmlDOMWrapNewCtxt"] = createExportWrapper("xmlDOMWrapNewCtxt");

var _xmlDOMWrapFreeCtxt = Module["_xmlDOMWrapFreeCtxt"] = createExportWrapper("xmlDOMWrapFreeCtxt");

var _xmlDOMWrapRemoveNode = Module["_xmlDOMWrapRemoveNode"] = createExportWrapper("xmlDOMWrapRemoveNode");

var _xmlDOMWrapCloneNode = Module["_xmlDOMWrapCloneNode"] = createExportWrapper("xmlDOMWrapCloneNode");

var _xmlDOMWrapAdoptNode = Module["_xmlDOMWrapAdoptNode"] = createExportWrapper("xmlDOMWrapAdoptNode");

var ___xmlRandom = Module["___xmlRandom"] = createExportWrapper("__xmlRandom");

var _xmlHashAddEntry3 = Module["_xmlHashAddEntry3"] = createExportWrapper("xmlHashAddEntry3");

var _xmlHashUpdateEntry = Module["_xmlHashUpdateEntry"] = createExportWrapper("xmlHashUpdateEntry");

var _xmlHashUpdateEntry3 = Module["_xmlHashUpdateEntry3"] = createExportWrapper("xmlHashUpdateEntry3");

var _xmlHashLookup3 = Module["_xmlHashLookup3"] = createExportWrapper("xmlHashLookup3");

var _xmlHashQLookup = Module["_xmlHashQLookup"] = createExportWrapper("xmlHashQLookup");

var _xmlHashQLookup3 = Module["_xmlHashQLookup3"] = createExportWrapper("xmlHashQLookup3");

var _xmlStrQEqual = Module["_xmlStrQEqual"] = createExportWrapper("xmlStrQEqual");

var _xmlHashScan3 = Module["_xmlHashScan3"] = createExportWrapper("xmlHashScan3");

var _xmlHashScanFull3 = Module["_xmlHashScanFull3"] = createExportWrapper("xmlHashScanFull3");

var _xmlHashRemoveEntry3 = Module["_xmlHashRemoveEntry3"] = createExportWrapper("xmlHashRemoveEntry3");

var _xmlListCreate = Module["_xmlListCreate"] = createExportWrapper("xmlListCreate");

var _xmlListSearch = Module["_xmlListSearch"] = createExportWrapper("xmlListSearch");

var _xmlListReverseSearch = Module["_xmlListReverseSearch"] = createExportWrapper("xmlListReverseSearch");

var _xmlListInsert = Module["_xmlListInsert"] = createExportWrapper("xmlListInsert");

var _xmlListAppend = Module["_xmlListAppend"] = createExportWrapper("xmlListAppend");

var _xmlListDelete = Module["_xmlListDelete"] = createExportWrapper("xmlListDelete");

var _xmlListClear = Module["_xmlListClear"] = createExportWrapper("xmlListClear");

var _xmlListRemoveFirst = Module["_xmlListRemoveFirst"] = createExportWrapper("xmlListRemoveFirst");

var _xmlListRemoveLast = Module["_xmlListRemoveLast"] = createExportWrapper("xmlListRemoveLast");

var _xmlListRemoveAll = Module["_xmlListRemoveAll"] = createExportWrapper("xmlListRemoveAll");

var _xmlListEmpty = Module["_xmlListEmpty"] = createExportWrapper("xmlListEmpty");

var _xmlListFront = Module["_xmlListFront"] = createExportWrapper("xmlListFront");

var _xmlListEnd = Module["_xmlListEnd"] = createExportWrapper("xmlListEnd");

var _xmlListSize = Module["_xmlListSize"] = createExportWrapper("xmlListSize");

var _xmlListPopFront = Module["_xmlListPopFront"] = createExportWrapper("xmlListPopFront");

var _xmlListPopBack = Module["_xmlListPopBack"] = createExportWrapper("xmlListPopBack");

var _xmlListPushFront = Module["_xmlListPushFront"] = createExportWrapper("xmlListPushFront");

var _xmlListPushBack = Module["_xmlListPushBack"] = createExportWrapper("xmlListPushBack");

var _xmlLinkGetData = Module["_xmlLinkGetData"] = createExportWrapper("xmlLinkGetData");

var _xmlListReverse = Module["_xmlListReverse"] = createExportWrapper("xmlListReverse");

var _xmlListSort = Module["_xmlListSort"] = createExportWrapper("xmlListSort");

var _xmlListCopy = Module["_xmlListCopy"] = createExportWrapper("xmlListCopy");

var _xmlListDup = Module["_xmlListDup"] = createExportWrapper("xmlListDup");

var _xmlListMerge = Module["_xmlListMerge"] = createExportWrapper("xmlListMerge");

var _xmlListWalk = Module["_xmlListWalk"] = createExportWrapper("xmlListWalk");

var _xmlListReverseWalk = Module["_xmlListReverseWalk"] = createExportWrapper("xmlListReverseWalk");

var ___xmlIOErr = Module["___xmlIOErr"] = createExportWrapper("__xmlIOErr");

var _xmlNormalizeWindowsPath = Module["_xmlNormalizeWindowsPath"] = createExportWrapper("xmlNormalizeWindowsPath");

var _xmlPopInputCallbacks = Module["_xmlPopInputCallbacks"] = createExportWrapper("xmlPopInputCallbacks");

var _xmlCheckFilename = Module["_xmlCheckFilename"] = createExportWrapper("xmlCheckFilename");

var _xmlFileMatch = Module["_xmlFileMatch"] = createExportWrapper("xmlFileMatch");

var _xmlFileOpen = Module["_xmlFileOpen"] = createExportWrapper("xmlFileOpen");

var _xmlStrncasecmp = Module["_xmlStrncasecmp"] = createExportWrapper("xmlStrncasecmp");

var _xmlFileRead = Module["_xmlFileRead"] = createExportWrapper("xmlFileRead");

var _xmlFileClose = Module["_xmlFileClose"] = createExportWrapper("xmlFileClose");

var _xmlRegisterInputCallbacks = Module["_xmlRegisterInputCallbacks"] = createExportWrapper("xmlRegisterInputCallbacks");

var _xmlRegisterOutputCallbacks = Module["_xmlRegisterOutputCallbacks"] = createExportWrapper("xmlRegisterOutputCallbacks");

var _xmlAllocOutputBufferInternal = Module["_xmlAllocOutputBufferInternal"] = createExportWrapper("xmlAllocOutputBufferInternal");

var ___xmlParserInputBufferCreateFilename = Module["___xmlParserInputBufferCreateFilename"] = createExportWrapper("__xmlParserInputBufferCreateFilename");

var ___xmlOutputBufferCreateFilename = Module["___xmlOutputBufferCreateFilename"] = createExportWrapper("__xmlOutputBufferCreateFilename");

var _xmlParserInputBufferCreateFile = Module["_xmlParserInputBufferCreateFile"] = createExportWrapper("xmlParserInputBufferCreateFile");

var _xmlOutputBufferCreateFile = Module["_xmlOutputBufferCreateFile"] = createExportWrapper("xmlOutputBufferCreateFile");

var _xmlOutputBufferCreateIO = Module["_xmlOutputBufferCreateIO"] = createExportWrapper("xmlOutputBufferCreateIO");

var _xmlParserInputBufferCreateStatic = Module["_xmlParserInputBufferCreateStatic"] = createExportWrapper("xmlParserInputBufferCreateStatic");

var _xmlBufCreateStatic = Module["_xmlBufCreateStatic"] = createExportWrapper("xmlBufCreateStatic");

var _xmlOutputBufferCreateFd = Module["_xmlOutputBufferCreateFd"] = createExportWrapper("xmlOutputBufferCreateFd");

var _xmlOutputBufferWrite = Module["_xmlOutputBufferWrite"] = createExportWrapper("xmlOutputBufferWrite");

var _xmlOutputBufferWriteEscape = Module["_xmlOutputBufferWriteEscape"] = createExportWrapper("xmlOutputBufferWriteEscape");

var _xmlOutputBufferWriteString = Module["_xmlOutputBufferWriteString"] = createExportWrapper("xmlOutputBufferWriteString");

var _xmlNoNetExternalEntityLoader = Module["_xmlNoNetExternalEntityLoader"] = createExportWrapper("xmlNoNetExternalEntityLoader");

var _xmlCatalogLocalResolve = Module["_xmlCatalogLocalResolve"] = createExportWrapper("xmlCatalogLocalResolve");

var _xmlCatalogResolve = Module["_xmlCatalogResolve"] = createExportWrapper("xmlCatalogResolve");

var _xmlCatalogLocalResolveURI = Module["_xmlCatalogLocalResolveURI"] = createExportWrapper("xmlCatalogLocalResolveURI");

var _xmlCatalogResolveURI = Module["_xmlCatalogResolveURI"] = createExportWrapper("xmlCatalogResolveURI");

var _xmlMallocBreakpoint = Module["_xmlMallocBreakpoint"] = createExportWrapper("xmlMallocBreakpoint");

var _xmlMallocLoc = Module["_xmlMallocLoc"] = createExportWrapper("xmlMallocLoc");

var _xmlNewMutex = Module["_xmlNewMutex"] = createExportWrapper("xmlNewMutex");

var _xmlMutexLock = Module["_xmlMutexLock"] = createExportWrapper("xmlMutexLock");

var _xmlMutexUnlock = Module["_xmlMutexUnlock"] = createExportWrapper("xmlMutexUnlock");

var _xmlMemoryDump = Module["_xmlMemoryDump"] = createExportWrapper("xmlMemoryDump");

var _xmlMallocAtomicLoc = Module["_xmlMallocAtomicLoc"] = createExportWrapper("xmlMallocAtomicLoc");

var _xmlMemMalloc = Module["_xmlMemMalloc"] = createExportWrapper("xmlMemMalloc");

var _xmlReallocLoc = Module["_xmlReallocLoc"] = createExportWrapper("xmlReallocLoc");

var _xmlMemRealloc = Module["_xmlMemRealloc"] = createExportWrapper("xmlMemRealloc");

var _xmlMemFree = Module["_xmlMemFree"] = createExportWrapper("xmlMemFree");

var _xmlMemStrdupLoc = Module["_xmlMemStrdupLoc"] = createExportWrapper("xmlMemStrdupLoc");

var _xmlMemoryStrdup = Module["_xmlMemoryStrdup"] = createExportWrapper("xmlMemoryStrdup");

var _xmlMemUsed = Module["_xmlMemUsed"] = createExportWrapper("xmlMemUsed");

var _xmlMemBlocks = Module["_xmlMemBlocks"] = createExportWrapper("xmlMemBlocks");

var _xmlMemDisplayLast = Module["_xmlMemDisplayLast"] = createExportWrapper("xmlMemDisplayLast");

var _xmlMemDisplay = Module["_xmlMemDisplay"] = createExportWrapper("xmlMemDisplay");

var _xmlMemShow = Module["_xmlMemShow"] = createExportWrapper("xmlMemShow");

var _xmlFreeMutex = Module["_xmlFreeMutex"] = createExportWrapper("xmlFreeMutex");

var _xmlMemSetup = Module["_xmlMemSetup"] = createExportWrapper("xmlMemSetup");

var _xmlMemGet = Module["_xmlMemGet"] = createExportWrapper("xmlMemGet");

var _xmlGcMemSetup = Module["_xmlGcMemSetup"] = createExportWrapper("xmlGcMemSetup");

var _xmlGcMemGet = Module["_xmlGcMemGet"] = createExportWrapper("xmlGcMemGet");

var _xmlParseURIRaw = Module["_xmlParseURIRaw"] = createExportWrapper("xmlParseURIRaw");

var _xmlSaveUri = Module["_xmlSaveUri"] = createExportWrapper("xmlSaveUri");

var _xmlPrintURI = Module["_xmlPrintURI"] = createExportWrapper("xmlPrintURI");

var _fputs = Module["_fputs"] = createExportWrapper("fputs");

var _xmlNormalizeURIPath = Module["_xmlNormalizeURIPath"] = createExportWrapper("xmlNormalizeURIPath");

var _xmlURIEscape = Module["_xmlURIEscape"] = createExportWrapper("xmlURIEscape");

var _xmlBuildRelativeURI = Module["_xmlBuildRelativeURI"] = createExportWrapper("xmlBuildRelativeURI");

var _xmlValidBuildContentModel = Module["_xmlValidBuildContentModel"] = createExportWrapper("xmlValidBuildContentModel");

var _xmlSnprintfElementContent = Module["_xmlSnprintfElementContent"] = createExportWrapper("xmlSnprintfElementContent");

var _xmlRegexpIsDeterminist = Module["_xmlRegexpIsDeterminist"] = createExportWrapper("xmlRegexpIsDeterminist");

var _xmlNewAutomata = Module["_xmlNewAutomata"] = createExportWrapper("xmlNewAutomata");

var _xmlAutomataGetInitState = Module["_xmlAutomataGetInitState"] = createExportWrapper("xmlAutomataGetInitState");

var _xmlAutomataSetFinalState = Module["_xmlAutomataSetFinalState"] = createExportWrapper("xmlAutomataSetFinalState");

var _xmlAutomataCompile = Module["_xmlAutomataCompile"] = createExportWrapper("xmlAutomataCompile");

var _xmlFreeAutomata = Module["_xmlFreeAutomata"] = createExportWrapper("xmlFreeAutomata");

var _xmlAutomataNewTransition = Module["_xmlAutomataNewTransition"] = createExportWrapper("xmlAutomataNewTransition");

var _xmlAutomataNewEpsilon = Module["_xmlAutomataNewEpsilon"] = createExportWrapper("xmlAutomataNewEpsilon");

var _xmlAutomataNewState = Module["_xmlAutomataNewState"] = createExportWrapper("xmlAutomataNewState");

var _xmlNewElementContent = Module["_xmlNewElementContent"] = createExportWrapper("xmlNewElementContent");

var _xmlCopyDocElementContent = Module["_xmlCopyDocElementContent"] = createExportWrapper("xmlCopyDocElementContent");

var _xmlCopyElementContent = Module["_xmlCopyElementContent"] = createExportWrapper("xmlCopyElementContent");

var _xmlFreeElementContent = Module["_xmlFreeElementContent"] = createExportWrapper("xmlFreeElementContent");

var _xmlSprintfElementContent = Module["_xmlSprintfElementContent"] = createExportWrapper("xmlSprintfElementContent");

var _xmlAddElementDecl = Module["_xmlAddElementDecl"] = createExportWrapper("xmlAddElementDecl");

var _xmlRegFreeRegexp = Module["_xmlRegFreeRegexp"] = createExportWrapper("xmlRegFreeRegexp");

var _xmlDumpElementDecl = Module["_xmlDumpElementDecl"] = createExportWrapper("xmlDumpElementDecl");

var _xmlDumpElementTable = Module["_xmlDumpElementTable"] = createExportWrapper("xmlDumpElementTable");

var _xmlCopyEnumeration = Module["_xmlCopyEnumeration"] = createExportWrapper("xmlCopyEnumeration");

var _xmlAddAttributeDecl = Module["_xmlAddAttributeDecl"] = createExportWrapper("xmlAddAttributeDecl");

var _xmlDumpAttributeDecl = Module["_xmlDumpAttributeDecl"] = createExportWrapper("xmlDumpAttributeDecl");

var _xmlDumpAttributeTable = Module["_xmlDumpAttributeTable"] = createExportWrapper("xmlDumpAttributeTable");

var _xmlAddNotationDecl = Module["_xmlAddNotationDecl"] = createExportWrapper("xmlAddNotationDecl");

var _xmlDumpNotationDecl = Module["_xmlDumpNotationDecl"] = createExportWrapper("xmlDumpNotationDecl");

var _xmlDumpNotationTable = Module["_xmlDumpNotationTable"] = createExportWrapper("xmlDumpNotationTable");

var _xmlAddRef = Module["_xmlAddRef"] = createExportWrapper("xmlAddRef");

var _xmlIsRef = Module["_xmlIsRef"] = createExportWrapper("xmlIsRef");

var _xmlRemoveRef = Module["_xmlRemoveRef"] = createExportWrapper("xmlRemoveRef");

var _xmlGetRefs = Module["_xmlGetRefs"] = createExportWrapper("xmlGetRefs");

var _xmlGetDtdElementDesc = Module["_xmlGetDtdElementDesc"] = createExportWrapper("xmlGetDtdElementDesc");

var _xmlGetDtdNotationDesc = Module["_xmlGetDtdNotationDesc"] = createExportWrapper("xmlGetDtdNotationDesc");

var _xmlValidateNotationUse = Module["_xmlValidateNotationUse"] = createExportWrapper("xmlValidateNotationUse");

var _xmlValidateNameValue = Module["_xmlValidateNameValue"] = createExportWrapper("xmlValidateNameValue");

var _xmlValidateNamesValue = Module["_xmlValidateNamesValue"] = createExportWrapper("xmlValidateNamesValue");

var _xmlValidateNmtokenValue = Module["_xmlValidateNmtokenValue"] = createExportWrapper("xmlValidateNmtokenValue");

var _xmlValidateNmtokensValue = Module["_xmlValidateNmtokensValue"] = createExportWrapper("xmlValidateNmtokensValue");

var _xmlValidateNotationDecl = Module["_xmlValidateNotationDecl"] = createExportWrapper("xmlValidateNotationDecl");

var _xmlValidateAttributeValue = Module["_xmlValidateAttributeValue"] = createExportWrapper("xmlValidateAttributeValue");

var _xmlValidCtxtNormalizeAttributeValue = Module["_xmlValidCtxtNormalizeAttributeValue"] = createExportWrapper("xmlValidCtxtNormalizeAttributeValue");

var _xmlValidNormalizeAttributeValue = Module["_xmlValidNormalizeAttributeValue"] = createExportWrapper("xmlValidNormalizeAttributeValue");

var _xmlValidateAttributeDecl = Module["_xmlValidateAttributeDecl"] = createExportWrapper("xmlValidateAttributeDecl");

var _xmlValidateElementDecl = Module["_xmlValidateElementDecl"] = createExportWrapper("xmlValidateElementDecl");

var _xmlValidateOneAttribute = Module["_xmlValidateOneAttribute"] = createExportWrapper("xmlValidateOneAttribute");

var _xmlValidateOneNamespace = Module["_xmlValidateOneNamespace"] = createExportWrapper("xmlValidateOneNamespace");

var _xmlValidatePushElement = Module["_xmlValidatePushElement"] = createExportWrapper("xmlValidatePushElement");

var _xmlRegExecPushString = Module["_xmlRegExecPushString"] = createExportWrapper("xmlRegExecPushString");

var _xmlRegNewExecCtxt = Module["_xmlRegNewExecCtxt"] = createExportWrapper("xmlRegNewExecCtxt");

var _xmlValidatePushCData = Module["_xmlValidatePushCData"] = createExportWrapper("xmlValidatePushCData");

var _xmlValidatePopElement = Module["_xmlValidatePopElement"] = createExportWrapper("xmlValidatePopElement");

var _xmlRegFreeExecCtxt = Module["_xmlRegFreeExecCtxt"] = createExportWrapper("xmlRegFreeExecCtxt");

var _xmlValidateOneElement = Module["_xmlValidateOneElement"] = createExportWrapper("xmlValidateOneElement");

var _xmlValidateDocumentFinal = Module["_xmlValidateDocumentFinal"] = createExportWrapper("xmlValidateDocumentFinal");

var _xmlValidateDtd = Module["_xmlValidateDtd"] = createExportWrapper("xmlValidateDtd");

var _xmlValidateDtdFinal = Module["_xmlValidateDtdFinal"] = createExportWrapper("xmlValidateDtdFinal");

var _xmlValidGetPotentialChildren = Module["_xmlValidGetPotentialChildren"] = createExportWrapper("xmlValidGetPotentialChildren");

var _xmlValidGetValidElements = Module["_xmlValidGetValidElements"] = createExportWrapper("xmlValidGetValidElements");

var _htmlTagLookup = Module["_htmlTagLookup"] = createExportWrapper("htmlTagLookup");

var _htmlAutoCloseTag = Module["_htmlAutoCloseTag"] = createExportWrapper("htmlAutoCloseTag");

var _htmlIsAutoClosed = Module["_htmlIsAutoClosed"] = createExportWrapper("htmlIsAutoClosed");

var _htmlIsScriptAttribute = Module["_htmlIsScriptAttribute"] = createExportWrapper("htmlIsScriptAttribute");

var _htmlEntityLookup = Module["_htmlEntityLookup"] = createExportWrapper("htmlEntityLookup");

var _htmlEntityValueLookup = Module["_htmlEntityValueLookup"] = createExportWrapper("htmlEntityValueLookup");

var _htmlEncodeEntities = Module["_htmlEncodeEntities"] = createExportWrapper("htmlEncodeEntities");

var _htmlNewDocNoDtD = Module["_htmlNewDocNoDtD"] = createExportWrapper("htmlNewDocNoDtD");

var _htmlNewDoc = Module["_htmlNewDoc"] = createExportWrapper("htmlNewDoc");

var _htmlParseEntityRef = Module["_htmlParseEntityRef"] = createExportWrapper("htmlParseEntityRef");

var _htmlParseCharRef = Module["_htmlParseCharRef"] = createExportWrapper("htmlParseCharRef");

var _htmlParseElement = Module["_htmlParseElement"] = createExportWrapper("htmlParseElement");

var _htmlNewParserCtxt = Module["_htmlNewParserCtxt"] = createExportWrapper("htmlNewParserCtxt");

var _htmlParseChunk = Module["_htmlParseChunk"] = createExportWrapper("htmlParseChunk");

var _htmlCreatePushParserCtxt = Module["_htmlCreatePushParserCtxt"] = createExportWrapper("htmlCreatePushParserCtxt");

var _htmlSAXParseDoc = Module["_htmlSAXParseDoc"] = createExportWrapper("htmlSAXParseDoc");

var _htmlParseDoc = Module["_htmlParseDoc"] = createExportWrapper("htmlParseDoc");

var _htmlSAXParseFile = Module["_htmlSAXParseFile"] = createExportWrapper("htmlSAXParseFile");

var _htmlParseFile = Module["_htmlParseFile"] = createExportWrapper("htmlParseFile");

var _htmlHandleOmittedElem = Module["_htmlHandleOmittedElem"] = createExportWrapper("htmlHandleOmittedElem");

var _htmlElementAllowedHere = Module["_htmlElementAllowedHere"] = createExportWrapper("htmlElementAllowedHere");

var _htmlElementStatusHere = Module["_htmlElementStatusHere"] = createExportWrapper("htmlElementStatusHere");

var _htmlAttrAllowed = Module["_htmlAttrAllowed"] = createExportWrapper("htmlAttrAllowed");

var _htmlNodeStatus = Module["_htmlNodeStatus"] = createExportWrapper("htmlNodeStatus");

var _htmlCtxtReset = Module["_htmlCtxtReset"] = createExportWrapper("htmlCtxtReset");

var _htmlReadDoc = Module["_htmlReadDoc"] = createExportWrapper("htmlReadDoc");

var _htmlReadFile = Module["_htmlReadFile"] = createExportWrapper("htmlReadFile");

var _htmlReadMemory = Module["_htmlReadMemory"] = createExportWrapper("htmlReadMemory");

var _htmlReadFd = Module["_htmlReadFd"] = createExportWrapper("htmlReadFd");

var _htmlReadIO = Module["_htmlReadIO"] = createExportWrapper("htmlReadIO");

var _htmlCtxtReadDoc = Module["_htmlCtxtReadDoc"] = createExportWrapper("htmlCtxtReadDoc");

var _htmlCtxtReadFile = Module["_htmlCtxtReadFile"] = createExportWrapper("htmlCtxtReadFile");

var _htmlCtxtReadMemory = Module["_htmlCtxtReadMemory"] = createExportWrapper("htmlCtxtReadMemory");

var _htmlCtxtReadFd = Module["_htmlCtxtReadFd"] = createExportWrapper("htmlCtxtReadFd");

var _htmlCtxtReadIO = Module["_htmlCtxtReadIO"] = createExportWrapper("htmlCtxtReadIO");

var _htmlSetMetaEncoding = Module["_htmlSetMetaEncoding"] = createExportWrapper("htmlSetMetaEncoding");

var _htmlIsBooleanAttr = Module["_htmlIsBooleanAttr"] = createExportWrapper("htmlIsBooleanAttr");

var _htmlNodeDump = Module["_htmlNodeDump"] = createExportWrapper("htmlNodeDump");

var _htmlNodeDumpFileFormat = Module["_htmlNodeDumpFileFormat"] = createExportWrapper("htmlNodeDumpFileFormat");

var _htmlDocContentDumpFormatOutput = Module["_htmlDocContentDumpFormatOutput"] = createExportWrapper("htmlDocContentDumpFormatOutput");

var _xmlNsListDumpOutput = Module["_xmlNsListDumpOutput"] = createExportWrapper("xmlNsListDumpOutput");

var _htmlNodeDumpFile = Module["_htmlNodeDumpFile"] = createExportWrapper("htmlNodeDumpFile");

var _xmlBufWriteQuotedString = Module["_xmlBufWriteQuotedString"] = createExportWrapper("xmlBufWriteQuotedString");

var _htmlDocDumpMemory = Module["_htmlDocDumpMemory"] = createExportWrapper("htmlDocDumpMemory");

var _htmlDocContentDumpOutput = Module["_htmlDocContentDumpOutput"] = createExportWrapper("htmlDocContentDumpOutput");

var _xmlBufCCat = Module["_xmlBufCCat"] = createExportWrapper("xmlBufCCat");

var _htmlNodeDumpOutput = Module["_htmlNodeDumpOutput"] = createExportWrapper("htmlNodeDumpOutput");

var _htmlDocDump = Module["_htmlDocDump"] = createExportWrapper("htmlDocDump");

var _htmlSaveFile = Module["_htmlSaveFile"] = createExportWrapper("htmlSaveFile");

var _htmlSaveFileEnc = Module["_htmlSaveFileEnc"] = createExportWrapper("htmlSaveFileEnc");

var _xmlDebugDumpString = Module["_xmlDebugDumpString"] = createExportWrapper("xmlDebugDumpString");

var _xmlDebugDumpAttr = Module["_xmlDebugDumpAttr"] = createExportWrapper("xmlDebugDumpAttr");

var _xmlDebugDumpEntities = Module["_xmlDebugDumpEntities"] = createExportWrapper("xmlDebugDumpEntities");

var _xmlDebugDumpAttrList = Module["_xmlDebugDumpAttrList"] = createExportWrapper("xmlDebugDumpAttrList");

var _xmlDebugDumpOneNode = Module["_xmlDebugDumpOneNode"] = createExportWrapper("xmlDebugDumpOneNode");

var _xmlDebugDumpNode = Module["_xmlDebugDumpNode"] = createExportWrapper("xmlDebugDumpNode");

var _xmlDebugDumpNodeList = Module["_xmlDebugDumpNodeList"] = createExportWrapper("xmlDebugDumpNodeList");

var _xmlDebugDumpDocumentHead = Module["_xmlDebugDumpDocumentHead"] = createExportWrapper("xmlDebugDumpDocumentHead");

var _xmlDebugDumpDocument = Module["_xmlDebugDumpDocument"] = createExportWrapper("xmlDebugDumpDocument");

var _xmlDebugDumpDTD = Module["_xmlDebugDumpDTD"] = createExportWrapper("xmlDebugDumpDTD");

var _xmlDebugCheckDocument = Module["_xmlDebugCheckDocument"] = createExportWrapper("xmlDebugCheckDocument");

var _xmlLsCountNode = Module["_xmlLsCountNode"] = createExportWrapper("xmlLsCountNode");

var _xmlLsOneNode = Module["_xmlLsOneNode"] = createExportWrapper("xmlLsOneNode");

var _xmlBoolToText = Module["_xmlBoolToText"] = createExportWrapper("xmlBoolToText");

var _xmlShellPrintXPathError = Module["_xmlShellPrintXPathError"] = createExportWrapper("xmlShellPrintXPathError");

var _xmlShellPrintNode = Module["_xmlShellPrintNode"] = createExportWrapper("xmlShellPrintNode");

var _xmlShellPrintXPathResult = Module["_xmlShellPrintXPathResult"] = createExportWrapper("xmlShellPrintXPathResult");

var _xmlShellList = Module["_xmlShellList"] = createExportWrapper("xmlShellList");

var _xmlShellBase = Module["_xmlShellBase"] = createExportWrapper("xmlShellBase");

var _xmlShellDir = Module["_xmlShellDir"] = createExportWrapper("xmlShellDir");

var _xmlShellCat = Module["_xmlShellCat"] = createExportWrapper("xmlShellCat");

var _xmlShellLoad = Module["_xmlShellLoad"] = createExportWrapper("xmlShellLoad");

var _xmlShellWrite = Module["_xmlShellWrite"] = createExportWrapper("xmlShellWrite");

var _xmlShellSave = Module["_xmlShellSave"] = createExportWrapper("xmlShellSave");

var _xmlShellValidate = Module["_xmlShellValidate"] = createExportWrapper("xmlShellValidate");

var _xmlShellDu = Module["_xmlShellDu"] = createExportWrapper("xmlShellDu");

var _xmlShellPwd = Module["_xmlShellPwd"] = createExportWrapper("xmlShellPwd");

var _xmlShell = Module["_xmlShell"] = createExportWrapper("xmlShell");

var _libxml_domnode_binary_insertion_sort = Module["_libxml_domnode_binary_insertion_sort"] = createExportWrapper("libxml_domnode_binary_insertion_sort");

var _libxml_domnode_tim_sort = Module["_libxml_domnode_tim_sort"] = createExportWrapper("libxml_domnode_tim_sort");

var _xmlXPathIsNaN = Module["_xmlXPathIsNaN"] = createExportWrapper("xmlXPathIsNaN");

var _xmlXPathIsInf = Module["_xmlXPathIsInf"] = createExportWrapper("xmlXPathIsInf");

var _xmlXPathErr = Module["_xmlXPathErr"] = createExportWrapper("xmlXPathErr");

var _xmlXPatherror = Module["_xmlXPatherror"] = createExportWrapper("xmlXPatherror");

var _xmlXPathFreeCompExpr = Module["_xmlXPathFreeCompExpr"] = createExportWrapper("xmlXPathFreeCompExpr");

var _xmlFreePatternList = Module["_xmlFreePatternList"] = createExportWrapper("xmlFreePatternList");

var _xmlXPtrFreeLocationSet = Module["_xmlXPtrFreeLocationSet"] = createExportWrapper("xmlXPtrFreeLocationSet");

var _xmlXPathDebugDumpObject = Module["_xmlXPathDebugDumpObject"] = createExportWrapper("xmlXPathDebugDumpObject");

var _xmlDocDump = Module["_xmlDocDump"] = createExportWrapper("xmlDocDump");

var _xmlElemDump = Module["_xmlElemDump"] = createExportWrapper("xmlElemDump");

var ___small_fprintf = Module["___small_fprintf"] = createExportWrapper("__small_fprintf");

var _xmlXPathDebugDumpCompExpr = Module["_xmlXPathDebugDumpCompExpr"] = createExportWrapper("xmlXPathDebugDumpCompExpr");

var _xmlXPathContextSetCache = Module["_xmlXPathContextSetCache"] = createExportWrapper("xmlXPathContextSetCache");

var _xmlXPathPopBoolean = Module["_xmlXPathPopBoolean"] = createExportWrapper("xmlXPathPopBoolean");

var _xmlXPathCastToBoolean = Module["_xmlXPathCastToBoolean"] = createExportWrapper("xmlXPathCastToBoolean");

var _xmlXPathFreeNodeSet = Module["_xmlXPathFreeNodeSet"] = createExportWrapper("xmlXPathFreeNodeSet");

var _xmlXPathNodeSetFreeNs = Module["_xmlXPathNodeSetFreeNs"] = createExportWrapper("xmlXPathNodeSetFreeNs");

var _xmlXPathPopNumber = Module["_xmlXPathPopNumber"] = createExportWrapper("xmlXPathPopNumber");

var _xmlXPathCastToNumber = Module["_xmlXPathCastToNumber"] = createExportWrapper("xmlXPathCastToNumber");

var _xmlXPathStringEvalNumber = Module["_xmlXPathStringEvalNumber"] = createExportWrapper("xmlXPathStringEvalNumber");

var _xmlXPathPopString = Module["_xmlXPathPopString"] = createExportWrapper("xmlXPathPopString");

var _xmlXPathCastNumberToString = Module["_xmlXPathCastNumberToString"] = createExportWrapper("xmlXPathCastNumberToString");

var _xmlXPathPopNodeSet = Module["_xmlXPathPopNodeSet"] = createExportWrapper("xmlXPathPopNodeSet");

var _xmlXPathPopExternal = Module["_xmlXPathPopExternal"] = createExportWrapper("xmlXPathPopExternal");

var _xmlXPathOrderDocElems = Module["_xmlXPathOrderDocElems"] = createExportWrapper("xmlXPathOrderDocElems");

var _xmlXPathCmpNodes = Module["_xmlXPathCmpNodes"] = createExportWrapper("xmlXPathCmpNodes");

var _xmlXPathNodeSetSort = Module["_xmlXPathNodeSetSort"] = createExportWrapper("xmlXPathNodeSetSort");

var _xmlXPathNodeSetCreate = Module["_xmlXPathNodeSetCreate"] = createExportWrapper("xmlXPathNodeSetCreate");

var _xmlStrPrintf = Module["_xmlStrPrintf"] = createExportWrapper("xmlStrPrintf");

var _xmlXPathNodeSetContains = Module["_xmlXPathNodeSetContains"] = createExportWrapper("xmlXPathNodeSetContains");

var _xmlXPathNodeSetAddNs = Module["_xmlXPathNodeSetAddNs"] = createExportWrapper("xmlXPathNodeSetAddNs");

var _xmlXPathNodeSetAdd = Module["_xmlXPathNodeSetAdd"] = createExportWrapper("xmlXPathNodeSetAdd");

var _xmlXPathNodeSetAddUnique = Module["_xmlXPathNodeSetAddUnique"] = createExportWrapper("xmlXPathNodeSetAddUnique");

var _xmlXPathNodeSetMerge = Module["_xmlXPathNodeSetMerge"] = createExportWrapper("xmlXPathNodeSetMerge");

var _xmlXPathNodeSetDel = Module["_xmlXPathNodeSetDel"] = createExportWrapper("xmlXPathNodeSetDel");

var _xmlXPathNodeSetRemove = Module["_xmlXPathNodeSetRemove"] = createExportWrapper("xmlXPathNodeSetRemove");

var _xmlXPathNewValueTree = Module["_xmlXPathNewValueTree"] = createExportWrapper("xmlXPathNewValueTree");

var _xmlXPathNewNodeSetList = Module["_xmlXPathNewNodeSetList"] = createExportWrapper("xmlXPathNewNodeSetList");

var _xmlXPathWrapNodeSet = Module["_xmlXPathWrapNodeSet"] = createExportWrapper("xmlXPathWrapNodeSet");

var _xmlXPathFreeNodeSetList = Module["_xmlXPathFreeNodeSetList"] = createExportWrapper("xmlXPathFreeNodeSetList");

var _xmlXPathDifference = Module["_xmlXPathDifference"] = createExportWrapper("xmlXPathDifference");

var _xmlXPathIntersection = Module["_xmlXPathIntersection"] = createExportWrapper("xmlXPathIntersection");

var _xmlXPathDistinctSorted = Module["_xmlXPathDistinctSorted"] = createExportWrapper("xmlXPathDistinctSorted");

var _xmlXPathCastNodeToString = Module["_xmlXPathCastNodeToString"] = createExportWrapper("xmlXPathCastNodeToString");

var _xmlXPathDistinct = Module["_xmlXPathDistinct"] = createExportWrapper("xmlXPathDistinct");

var _xmlXPathHasSameNodes = Module["_xmlXPathHasSameNodes"] = createExportWrapper("xmlXPathHasSameNodes");

var _xmlXPathNodeLeadingSorted = Module["_xmlXPathNodeLeadingSorted"] = createExportWrapper("xmlXPathNodeLeadingSorted");

var _xmlXPathNodeLeading = Module["_xmlXPathNodeLeading"] = createExportWrapper("xmlXPathNodeLeading");

var _xmlXPathLeadingSorted = Module["_xmlXPathLeadingSorted"] = createExportWrapper("xmlXPathLeadingSorted");

var _xmlXPathLeading = Module["_xmlXPathLeading"] = createExportWrapper("xmlXPathLeading");

var _xmlXPathNodeTrailingSorted = Module["_xmlXPathNodeTrailingSorted"] = createExportWrapper("xmlXPathNodeTrailingSorted");

var _xmlXPathNodeTrailing = Module["_xmlXPathNodeTrailing"] = createExportWrapper("xmlXPathNodeTrailing");

var _xmlXPathTrailingSorted = Module["_xmlXPathTrailingSorted"] = createExportWrapper("xmlXPathTrailingSorted");

var _xmlXPathTrailing = Module["_xmlXPathTrailing"] = createExportWrapper("xmlXPathTrailing");

var _xmlXPathRegisterFunc = Module["_xmlXPathRegisterFunc"] = createExportWrapper("xmlXPathRegisterFunc");

var _xmlXPathRegisterFuncLookup = Module["_xmlXPathRegisterFuncLookup"] = createExportWrapper("xmlXPathRegisterFuncLookup");

var _xmlXPathFunctionLookup = Module["_xmlXPathFunctionLookup"] = createExportWrapper("xmlXPathFunctionLookup");

var _xmlXPathFunctionLookupNS = Module["_xmlXPathFunctionLookupNS"] = createExportWrapper("xmlXPathFunctionLookupNS");

var _xmlXPathRegisteredFuncsCleanup = Module["_xmlXPathRegisteredFuncsCleanup"] = createExportWrapper("xmlXPathRegisteredFuncsCleanup");

var _xmlXPathRegisterVariable = Module["_xmlXPathRegisterVariable"] = createExportWrapper("xmlXPathRegisterVariable");

var _xmlXPathRegisterVariableNS = Module["_xmlXPathRegisterVariableNS"] = createExportWrapper("xmlXPathRegisterVariableNS");

var _xmlXPathRegisterVariableLookup = Module["_xmlXPathRegisterVariableLookup"] = createExportWrapper("xmlXPathRegisterVariableLookup");

var _xmlXPathVariableLookup = Module["_xmlXPathVariableLookup"] = createExportWrapper("xmlXPathVariableLookup");

var _xmlXPathVariableLookupNS = Module["_xmlXPathVariableLookupNS"] = createExportWrapper("xmlXPathVariableLookupNS");

var _xmlXPathObjectCopy = Module["_xmlXPathObjectCopy"] = createExportWrapper("xmlXPathObjectCopy");

var _xmlXPathRegisteredVariablesCleanup = Module["_xmlXPathRegisteredVariablesCleanup"] = createExportWrapper("xmlXPathRegisteredVariablesCleanup");

var _xmlXPathNsLookup = Module["_xmlXPathNsLookup"] = createExportWrapper("xmlXPathNsLookup");

var _xmlXPathRegisteredNsCleanup = Module["_xmlXPathRegisteredNsCleanup"] = createExportWrapper("xmlXPathRegisteredNsCleanup");

var _xmlXPathNewFloat = Module["_xmlXPathNewFloat"] = createExportWrapper("xmlXPathNewFloat");

var _xmlXPathWrapString = Module["_xmlXPathWrapString"] = createExportWrapper("xmlXPathWrapString");

var _xmlXPathNewCString = Module["_xmlXPathNewCString"] = createExportWrapper("xmlXPathNewCString");

var _xmlXPathWrapCString = Module["_xmlXPathWrapCString"] = createExportWrapper("xmlXPathWrapCString");

var _xmlXPathWrapExternal = Module["_xmlXPathWrapExternal"] = createExportWrapper("xmlXPathWrapExternal");

var _xmlXPtrLocationSetMerge = Module["_xmlXPtrLocationSetMerge"] = createExportWrapper("xmlXPtrLocationSetMerge");

var _xmlXPathCastBooleanToString = Module["_xmlXPathCastBooleanToString"] = createExportWrapper("xmlXPathCastBooleanToString");

var _xmlXPathCastNodeSetToString = Module["_xmlXPathCastNodeSetToString"] = createExportWrapper("xmlXPathCastNodeSetToString");

var _xmlXPathConvertString = Module["_xmlXPathConvertString"] = createExportWrapper("xmlXPathConvertString");

var _xmlXPathCastBooleanToNumber = Module["_xmlXPathCastBooleanToNumber"] = createExportWrapper("xmlXPathCastBooleanToNumber");

var _xmlXPathCastStringToNumber = Module["_xmlXPathCastStringToNumber"] = createExportWrapper("xmlXPathCastStringToNumber");

var _xmlXPathCastNodeToNumber = Module["_xmlXPathCastNodeToNumber"] = createExportWrapper("xmlXPathCastNodeToNumber");

var _xmlXPathCastNodeSetToNumber = Module["_xmlXPathCastNodeSetToNumber"] = createExportWrapper("xmlXPathCastNodeSetToNumber");

var _xmlXPathConvertNumber = Module["_xmlXPathConvertNumber"] = createExportWrapper("xmlXPathConvertNumber");

var _xmlXPathCastNumberToBoolean = Module["_xmlXPathCastNumberToBoolean"] = createExportWrapper("xmlXPathCastNumberToBoolean");

var _xmlXPathCastStringToBoolean = Module["_xmlXPathCastStringToBoolean"] = createExportWrapper("xmlXPathCastStringToBoolean");

var _xmlXPathCastNodeSetToBoolean = Module["_xmlXPathCastNodeSetToBoolean"] = createExportWrapper("xmlXPathCastNodeSetToBoolean");

var _xmlXPathConvertBoolean = Module["_xmlXPathConvertBoolean"] = createExportWrapper("xmlXPathConvertBoolean");

var _xmlXPathRegisterAllFunctions = Module["_xmlXPathRegisterAllFunctions"] = createExportWrapper("xmlXPathRegisterAllFunctions");

var _xmlXPathBooleanFunction = Module["_xmlXPathBooleanFunction"] = createExportWrapper("xmlXPathBooleanFunction");

var _xmlXPathCeilingFunction = Module["_xmlXPathCeilingFunction"] = createExportWrapper("xmlXPathCeilingFunction");

var _xmlXPathCountFunction = Module["_xmlXPathCountFunction"] = createExportWrapper("xmlXPathCountFunction");

var _xmlXPathConcatFunction = Module["_xmlXPathConcatFunction"] = createExportWrapper("xmlXPathConcatFunction");

var _xmlXPathContainsFunction = Module["_xmlXPathContainsFunction"] = createExportWrapper("xmlXPathContainsFunction");

var _xmlXPathIdFunction = Module["_xmlXPathIdFunction"] = createExportWrapper("xmlXPathIdFunction");

var _xmlXPathFalseFunction = Module["_xmlXPathFalseFunction"] = createExportWrapper("xmlXPathFalseFunction");

var _xmlXPathFloorFunction = Module["_xmlXPathFloorFunction"] = createExportWrapper("xmlXPathFloorFunction");

var _xmlXPathLastFunction = Module["_xmlXPathLastFunction"] = createExportWrapper("xmlXPathLastFunction");

var _xmlXPathLangFunction = Module["_xmlXPathLangFunction"] = createExportWrapper("xmlXPathLangFunction");

var _xmlXPathLocalNameFunction = Module["_xmlXPathLocalNameFunction"] = createExportWrapper("xmlXPathLocalNameFunction");

var _xmlXPathNotFunction = Module["_xmlXPathNotFunction"] = createExportWrapper("xmlXPathNotFunction");

var _xmlXPathNamespaceURIFunction = Module["_xmlXPathNamespaceURIFunction"] = createExportWrapper("xmlXPathNamespaceURIFunction");

var _xmlXPathNormalizeFunction = Module["_xmlXPathNormalizeFunction"] = createExportWrapper("xmlXPathNormalizeFunction");

var _xmlXPathNumberFunction = Module["_xmlXPathNumberFunction"] = createExportWrapper("xmlXPathNumberFunction");

var _xmlXPathPositionFunction = Module["_xmlXPathPositionFunction"] = createExportWrapper("xmlXPathPositionFunction");

var _xmlXPathRoundFunction = Module["_xmlXPathRoundFunction"] = createExportWrapper("xmlXPathRoundFunction");

var _xmlXPathStringFunction = Module["_xmlXPathStringFunction"] = createExportWrapper("xmlXPathStringFunction");

var _xmlXPathStringLengthFunction = Module["_xmlXPathStringLengthFunction"] = createExportWrapper("xmlXPathStringLengthFunction");

var _xmlXPathStartsWithFunction = Module["_xmlXPathStartsWithFunction"] = createExportWrapper("xmlXPathStartsWithFunction");

var _xmlXPathSubstringFunction = Module["_xmlXPathSubstringFunction"] = createExportWrapper("xmlXPathSubstringFunction");

var _xmlXPathSubstringBeforeFunction = Module["_xmlXPathSubstringBeforeFunction"] = createExportWrapper("xmlXPathSubstringBeforeFunction");

var _xmlXPathSubstringAfterFunction = Module["_xmlXPathSubstringAfterFunction"] = createExportWrapper("xmlXPathSubstringAfterFunction");

var _xmlXPathSumFunction = Module["_xmlXPathSumFunction"] = createExportWrapper("xmlXPathSumFunction");

var _xmlXPathTrueFunction = Module["_xmlXPathTrueFunction"] = createExportWrapper("xmlXPathTrueFunction");

var _xmlXPathTranslateFunction = Module["_xmlXPathTranslateFunction"] = createExportWrapper("xmlXPathTranslateFunction");

var _xmlXPathNewParserContext = Module["_xmlXPathNewParserContext"] = createExportWrapper("xmlXPathNewParserContext");

var _xmlXPathFreeParserContext = Module["_xmlXPathFreeParserContext"] = createExportWrapper("xmlXPathFreeParserContext");

var _xmlXPathEqualValues = Module["_xmlXPathEqualValues"] = createExportWrapper("xmlXPathEqualValues");

var _xmlXPathNotEqualValues = Module["_xmlXPathNotEqualValues"] = createExportWrapper("xmlXPathNotEqualValues");

var _xmlXPathCompareValues = Module["_xmlXPathCompareValues"] = createExportWrapper("xmlXPathCompareValues");

var _xmlXPathValueFlipSign = Module["_xmlXPathValueFlipSign"] = createExportWrapper("xmlXPathValueFlipSign");

var _xmlXPathAddValues = Module["_xmlXPathAddValues"] = createExportWrapper("xmlXPathAddValues");

var _xmlXPathSubValues = Module["_xmlXPathSubValues"] = createExportWrapper("xmlXPathSubValues");

var _xmlXPathMultValues = Module["_xmlXPathMultValues"] = createExportWrapper("xmlXPathMultValues");

var _xmlXPathDivValues = Module["_xmlXPathDivValues"] = createExportWrapper("xmlXPathDivValues");

var _xmlXPathModValues = Module["_xmlXPathModValues"] = createExportWrapper("xmlXPathModValues");

var _xmlXPathNextSelf = Module["_xmlXPathNextSelf"] = createExportWrapper("xmlXPathNextSelf");

var _xmlXPathNextChild = Module["_xmlXPathNextChild"] = createExportWrapper("xmlXPathNextChild");

var _xmlXPathNextDescendant = Module["_xmlXPathNextDescendant"] = createExportWrapper("xmlXPathNextDescendant");

var _xmlXPathNextDescendantOrSelf = Module["_xmlXPathNextDescendantOrSelf"] = createExportWrapper("xmlXPathNextDescendantOrSelf");

var _xmlXPathNextParent = Module["_xmlXPathNextParent"] = createExportWrapper("xmlXPathNextParent");

var _xmlXPathNextAncestor = Module["_xmlXPathNextAncestor"] = createExportWrapper("xmlXPathNextAncestor");

var _xmlXPathNextAncestorOrSelf = Module["_xmlXPathNextAncestorOrSelf"] = createExportWrapper("xmlXPathNextAncestorOrSelf");

var _xmlXPathNextFollowingSibling = Module["_xmlXPathNextFollowingSibling"] = createExportWrapper("xmlXPathNextFollowingSibling");

var _xmlXPathNextPrecedingSibling = Module["_xmlXPathNextPrecedingSibling"] = createExportWrapper("xmlXPathNextPrecedingSibling");

var _xmlXPathNextFollowing = Module["_xmlXPathNextFollowing"] = createExportWrapper("xmlXPathNextFollowing");

var _xmlXPathNextPreceding = Module["_xmlXPathNextPreceding"] = createExportWrapper("xmlXPathNextPreceding");

var _xmlXPathNextNamespace = Module["_xmlXPathNextNamespace"] = createExportWrapper("xmlXPathNextNamespace");

var _xmlXPathNextAttribute = Module["_xmlXPathNextAttribute"] = createExportWrapper("xmlXPathNextAttribute");

var _xmlXPathRoot = Module["_xmlXPathRoot"] = createExportWrapper("xmlXPathRoot");

var _xmlUTF8Strloc = Module["_xmlUTF8Strloc"] = createExportWrapper("xmlUTF8Strloc");

var _xmlUTF8Strpos = Module["_xmlUTF8Strpos"] = createExportWrapper("xmlUTF8Strpos");

var _xmlUTF8Strsize = Module["_xmlUTF8Strsize"] = createExportWrapper("xmlUTF8Strsize");

var _xmlXPathParseNCName = Module["_xmlXPathParseNCName"] = createExportWrapper("xmlXPathParseNCName");

var _xmlXPathParseName = Module["_xmlXPathParseName"] = createExportWrapper("xmlXPathParseName");

var _xmlXPathIsNodeType = Module["_xmlXPathIsNodeType"] = createExportWrapper("xmlXPathIsNodeType");

var _xmlXPathEvalPredicate = Module["_xmlXPathEvalPredicate"] = createExportWrapper("xmlXPathEvalPredicate");

var _xmlXPathEvaluatePredicateResult = Module["_xmlXPathEvaluatePredicateResult"] = createExportWrapper("xmlXPathEvaluatePredicateResult");

var _xmlXPathCtxtCompile = Module["_xmlXPathCtxtCompile"] = createExportWrapper("xmlXPathCtxtCompile");

var _xmlPatterncompile = Module["_xmlPatterncompile"] = createExportWrapper("xmlPatterncompile");

var _xmlPatternStreamable = Module["_xmlPatternStreamable"] = createExportWrapper("xmlPatternStreamable");

var _xmlFreePattern = Module["_xmlFreePattern"] = createExportWrapper("xmlFreePattern");

var _xmlXPathCompile = Module["_xmlXPathCompile"] = createExportWrapper("xmlXPathCompile");

var _xmlXPathCompiledEval = Module["_xmlXPathCompiledEval"] = createExportWrapper("xmlXPathCompiledEval");

var _xmlXPathCompiledEvalToBoolean = Module["_xmlXPathCompiledEvalToBoolean"] = createExportWrapper("xmlXPathCompiledEvalToBoolean");

var _xmlXPathEvalExpr = Module["_xmlXPathEvalExpr"] = createExportWrapper("xmlXPathEvalExpr");

var _xmlXPathSetContextNode = Module["_xmlXPathSetContextNode"] = createExportWrapper("xmlXPathSetContextNode");

var _xmlXPathNodeEval = Module["_xmlXPathNodeEval"] = createExportWrapper("xmlXPathNodeEval");

var _xmlPatternMaxDepth = Module["_xmlPatternMaxDepth"] = createExportWrapper("xmlPatternMaxDepth");

var _xmlPatternMinDepth = Module["_xmlPatternMinDepth"] = createExportWrapper("xmlPatternMinDepth");

var _xmlPatternFromRoot = Module["_xmlPatternFromRoot"] = createExportWrapper("xmlPatternFromRoot");

var _xmlPatternGetStreamCtxt = Module["_xmlPatternGetStreamCtxt"] = createExportWrapper("xmlPatternGetStreamCtxt");

var _xmlStreamWantsAnyNode = Module["_xmlStreamWantsAnyNode"] = createExportWrapper("xmlStreamWantsAnyNode");

var _xmlStreamPush = Module["_xmlStreamPush"] = createExportWrapper("xmlStreamPush");

var _xmlStreamPop = Module["_xmlStreamPop"] = createExportWrapper("xmlStreamPop");

var _xmlStreamPushNode = Module["_xmlStreamPushNode"] = createExportWrapper("xmlStreamPushNode");

var _xmlFreeStreamCtxt = Module["_xmlFreeStreamCtxt"] = createExportWrapper("xmlFreeStreamCtxt");

var _xmlXPtrLocationSetCreate = Module["_xmlXPtrLocationSetCreate"] = createExportWrapper("xmlXPtrLocationSetCreate");

var _xmlXPtrNewRange = Module["_xmlXPtrNewRange"] = createExportWrapper("xmlXPtrNewRange");

var _xmlXPtrLocationSetAdd = Module["_xmlXPtrLocationSetAdd"] = createExportWrapper("xmlXPtrLocationSetAdd");

var _xmlXPtrNewRangeNodeObject = Module["_xmlXPtrNewRangeNodeObject"] = createExportWrapper("xmlXPtrNewRangeNodeObject");

var _xmlXPtrWrapLocationSet = Module["_xmlXPtrWrapLocationSet"] = createExportWrapper("xmlXPtrWrapLocationSet");

var _xmlXPtrNewRangePoints = Module["_xmlXPtrNewRangePoints"] = createExportWrapper("xmlXPtrNewRangePoints");

var _xmlXPtrNewRangePointNode = Module["_xmlXPtrNewRangePointNode"] = createExportWrapper("xmlXPtrNewRangePointNode");

var _xmlXPtrNewRangeNodePoint = Module["_xmlXPtrNewRangeNodePoint"] = createExportWrapper("xmlXPtrNewRangeNodePoint");

var _xmlXPtrNewRangeNodes = Module["_xmlXPtrNewRangeNodes"] = createExportWrapper("xmlXPtrNewRangeNodes");

var _xmlXPtrNewCollapsedRange = Module["_xmlXPtrNewCollapsedRange"] = createExportWrapper("xmlXPtrNewCollapsedRange");

var _xmlXPtrLocationSetDel = Module["_xmlXPtrLocationSetDel"] = createExportWrapper("xmlXPtrLocationSetDel");

var _xmlXPtrLocationSetRemove = Module["_xmlXPtrLocationSetRemove"] = createExportWrapper("xmlXPtrLocationSetRemove");

var _xmlXPtrNewLocationSetNodes = Module["_xmlXPtrNewLocationSetNodes"] = createExportWrapper("xmlXPtrNewLocationSetNodes");

var _xmlXPtrNewLocationSetNodeSet = Module["_xmlXPtrNewLocationSetNodeSet"] = createExportWrapper("xmlXPtrNewLocationSetNodeSet");

var _xmlXPtrNewContext = Module["_xmlXPtrNewContext"] = createExportWrapper("xmlXPtrNewContext");

var _xmlXPtrEval = Module["_xmlXPtrEval"] = createExportWrapper("xmlXPtrEval");

var _xmlXPtrBuildNodeList = Module["_xmlXPtrBuildNodeList"] = createExportWrapper("xmlXPtrBuildNodeList");

var _xmlXPtrRangeToFunction = Module["_xmlXPtrRangeToFunction"] = createExportWrapper("xmlXPtrRangeToFunction");

var _xmlXPtrAdvanceNode = Module["_xmlXPtrAdvanceNode"] = createExportWrapper("xmlXPtrAdvanceNode");

var _xmlXPtrEvalRangePredicate = Module["_xmlXPtrEvalRangePredicate"] = createExportWrapper("xmlXPtrEvalRangePredicate");

var _xmlXIncludeNewContext = Module["_xmlXIncludeNewContext"] = createExportWrapper("xmlXIncludeNewContext");

var _xmlXIncludeFreeContext = Module["_xmlXIncludeFreeContext"] = createExportWrapper("xmlXIncludeFreeContext");

var _xmlXIncludeSetFlags = Module["_xmlXIncludeSetFlags"] = createExportWrapper("xmlXIncludeSetFlags");

var _xmlXIncludeProcessTreeFlagsData = Module["_xmlXIncludeProcessTreeFlagsData"] = createExportWrapper("xmlXIncludeProcessTreeFlagsData");

var _xmlXIncludeProcessFlagsData = Module["_xmlXIncludeProcessFlagsData"] = createExportWrapper("xmlXIncludeProcessFlagsData");

var _xmlBufLength = Module["_xmlBufLength"] = createExportWrapper("xmlBufLength");

var _xmlXIncludeProcess = Module["_xmlXIncludeProcess"] = createExportWrapper("xmlXIncludeProcess");

var _xmlXIncludeProcessTreeFlags = Module["_xmlXIncludeProcessTreeFlags"] = createExportWrapper("xmlXIncludeProcessTreeFlags");

var _xmlXIncludeProcessTree = Module["_xmlXIncludeProcessTree"] = createExportWrapper("xmlXIncludeProcessTree");

var _xmlXIncludeProcessNode = Module["_xmlXIncludeProcessNode"] = createExportWrapper("xmlXIncludeProcessNode");

var _xmlFreeCatalog = Module["_xmlFreeCatalog"] = createExportWrapper("xmlFreeCatalog");

var _xmlConvertSGMLCatalog = Module["_xmlConvertSGMLCatalog"] = createExportWrapper("xmlConvertSGMLCatalog");

var _xmlParseCatalogFile = Module["_xmlParseCatalogFile"] = createExportWrapper("xmlParseCatalogFile");

var _xmlLoadSGMLSuperCatalog = Module["_xmlLoadSGMLSuperCatalog"] = createExportWrapper("xmlLoadSGMLSuperCatalog");

var _xmlLoadACatalog = Module["_xmlLoadACatalog"] = createExportWrapper("xmlLoadACatalog");

var _xmlACatalogResolveSystem = Module["_xmlACatalogResolveSystem"] = createExportWrapper("xmlACatalogResolveSystem");

var _xmlACatalogResolvePublic = Module["_xmlACatalogResolvePublic"] = createExportWrapper("xmlACatalogResolvePublic");

var _xmlACatalogResolve = Module["_xmlACatalogResolve"] = createExportWrapper("xmlACatalogResolve");

var _xmlACatalogResolveURI = Module["_xmlACatalogResolveURI"] = createExportWrapper("xmlACatalogResolveURI");

var _xmlACatalogDump = Module["_xmlACatalogDump"] = createExportWrapper("xmlACatalogDump");

var _xmlACatalogAdd = Module["_xmlACatalogAdd"] = createExportWrapper("xmlACatalogAdd");

var _xmlACatalogRemove = Module["_xmlACatalogRemove"] = createExportWrapper("xmlACatalogRemove");

var _xmlNewCatalog = Module["_xmlNewCatalog"] = createExportWrapper("xmlNewCatalog");

var _xmlCatalogIsEmpty = Module["_xmlCatalogIsEmpty"] = createExportWrapper("xmlCatalogIsEmpty");

var _xmlInitializeCatalog = Module["_xmlInitializeCatalog"] = createExportWrapper("xmlInitializeCatalog");

var _xmlLoadCatalog = Module["_xmlLoadCatalog"] = createExportWrapper("xmlLoadCatalog");

var _xmlLoadCatalogs = Module["_xmlLoadCatalogs"] = createExportWrapper("xmlLoadCatalogs");

var _xmlSaveFormatFileTo = Module["_xmlSaveFormatFileTo"] = createExportWrapper("xmlSaveFormatFileTo");

var _xmlNewRMutex = Module["_xmlNewRMutex"] = createExportWrapper("xmlNewRMutex");

var _xmlRMutexLock = Module["_xmlRMutexLock"] = createExportWrapper("xmlRMutexLock");

var _xmlRMutexUnlock = Module["_xmlRMutexUnlock"] = createExportWrapper("xmlRMutexUnlock");

var _xmlFreeRMutex = Module["_xmlFreeRMutex"] = createExportWrapper("xmlFreeRMutex");

var _xmlCatalogResolveSystem = Module["_xmlCatalogResolveSystem"] = createExportWrapper("xmlCatalogResolveSystem");

var _xmlCatalogResolvePublic = Module["_xmlCatalogResolvePublic"] = createExportWrapper("xmlCatalogResolvePublic");

var _xmlCatalogDump = Module["_xmlCatalogDump"] = createExportWrapper("xmlCatalogDump");

var _xmlCatalogAdd = Module["_xmlCatalogAdd"] = createExportWrapper("xmlCatalogAdd");

var _xmlCatalogRemove = Module["_xmlCatalogRemove"] = createExportWrapper("xmlCatalogRemove");

var _xmlCatalogConvert = Module["_xmlCatalogConvert"] = createExportWrapper("xmlCatalogConvert");

var _xmlCatalogSetDefaults = Module["_xmlCatalogSetDefaults"] = createExportWrapper("xmlCatalogSetDefaults");

var _xmlCatalogSetDefaultPrefer = Module["_xmlCatalogSetDefaultPrefer"] = createExportWrapper("xmlCatalogSetDefaultPrefer");

var _xmlCatalogSetDebug = Module["_xmlCatalogSetDebug"] = createExportWrapper("xmlCatalogSetDebug");

var _xmlCatalogGetSystem = Module["_xmlCatalogGetSystem"] = createExportWrapper("xmlCatalogGetSystem");

var _xmlCatalogGetPublic = Module["_xmlCatalogGetPublic"] = createExportWrapper("xmlCatalogGetPublic");

var _xmlGetThreadId = Module["_xmlGetThreadId"] = createExportWrapper("xmlGetThreadId");

var ___xmlGlobalInitMutexDestroy = Module["___xmlGlobalInitMutexDestroy"] = createExportWrapper("__xmlGlobalInitMutexDestroy");

var _xmlInitializeGlobalState = Module["_xmlInitializeGlobalState"] = createExportWrapper("xmlInitializeGlobalState");

var _xmlSAX2ExternalSubset = Module["_xmlSAX2ExternalSubset"] = createExportWrapper("xmlSAX2ExternalSubset");

var _xmlSAX2InternalSubset = Module["_xmlSAX2InternalSubset"] = createExportWrapper("xmlSAX2InternalSubset");

var _xmlSAX2GetParameterEntity = Module["_xmlSAX2GetParameterEntity"] = createExportWrapper("xmlSAX2GetParameterEntity");

var _xmlSAX2ResolveEntity = Module["_xmlSAX2ResolveEntity"] = createExportWrapper("xmlSAX2ResolveEntity");

var _xmlSAX2HasExternalSubset = Module["_xmlSAX2HasExternalSubset"] = createExportWrapper("xmlSAX2HasExternalSubset");

var _xmlSAX2HasInternalSubset = Module["_xmlSAX2HasInternalSubset"] = createExportWrapper("xmlSAX2HasInternalSubset");

var _xmlSAX2IsStandalone = Module["_xmlSAX2IsStandalone"] = createExportWrapper("xmlSAX2IsStandalone");

var _xmlSAX2ElementDecl = Module["_xmlSAX2ElementDecl"] = createExportWrapper("xmlSAX2ElementDecl");

var _xmlSAX2AttributeDecl = Module["_xmlSAX2AttributeDecl"] = createExportWrapper("xmlSAX2AttributeDecl");

var _xmlSAX2CDataBlock = Module["_xmlSAX2CDataBlock"] = createExportWrapper("xmlSAX2CDataBlock");

var _xmlSAX2Characters = Module["_xmlSAX2Characters"] = createExportWrapper("xmlSAX2Characters");

var _xmlSAX2Reference = Module["_xmlSAX2Reference"] = createExportWrapper("xmlSAX2Reference");

var _xmlSAX2EndDocument = Module["_xmlSAX2EndDocument"] = createExportWrapper("xmlSAX2EndDocument");

var _xmlSAX2StartDocument = Module["_xmlSAX2StartDocument"] = createExportWrapper("xmlSAX2StartDocument");

var _xmlSAX2SetDocumentLocator = Module["_xmlSAX2SetDocumentLocator"] = createExportWrapper("xmlSAX2SetDocumentLocator");

var _xmlSAX2UnparsedEntityDecl = Module["_xmlSAX2UnparsedEntityDecl"] = createExportWrapper("xmlSAX2UnparsedEntityDecl");

var _xmlSAX2NotationDecl = Module["_xmlSAX2NotationDecl"] = createExportWrapper("xmlSAX2NotationDecl");

var _xmlSAX2ProcessingInstruction = Module["_xmlSAX2ProcessingInstruction"] = createExportWrapper("xmlSAX2ProcessingInstruction");

var _xmlSAX2Comment = Module["_xmlSAX2Comment"] = createExportWrapper("xmlSAX2Comment");

var _xmlSAX2GetColumnNumber = Module["_xmlSAX2GetColumnNumber"] = createExportWrapper("xmlSAX2GetColumnNumber");

var _xmlSAX2GetLineNumber = Module["_xmlSAX2GetLineNumber"] = createExportWrapper("xmlSAX2GetLineNumber");

var _xmlSAX2GetSystemId = Module["_xmlSAX2GetSystemId"] = createExportWrapper("xmlSAX2GetSystemId");

var _xmlSAX2GetPublicId = Module["_xmlSAX2GetPublicId"] = createExportWrapper("xmlSAX2GetPublicId");

var _xmlThrDefSetGenericErrorFunc = Module["_xmlThrDefSetGenericErrorFunc"] = createExportWrapper("xmlThrDefSetGenericErrorFunc");

var _xmlThrDefSetStructuredErrorFunc = Module["_xmlThrDefSetStructuredErrorFunc"] = createExportWrapper("xmlThrDefSetStructuredErrorFunc");

var _xmlRegisterNodeDefault = Module["_xmlRegisterNodeDefault"] = createExportWrapper("xmlRegisterNodeDefault");

var _xmlThrDefRegisterNodeDefault = Module["_xmlThrDefRegisterNodeDefault"] = createExportWrapper("xmlThrDefRegisterNodeDefault");

var _xmlDeregisterNodeDefault = Module["_xmlDeregisterNodeDefault"] = createExportWrapper("xmlDeregisterNodeDefault");

var _xmlThrDefDeregisterNodeDefault = Module["_xmlThrDefDeregisterNodeDefault"] = createExportWrapper("xmlThrDefDeregisterNodeDefault");

var _xmlThrDefParserInputBufferCreateFilenameDefault = Module["_xmlThrDefParserInputBufferCreateFilenameDefault"] = createExportWrapper("xmlThrDefParserInputBufferCreateFilenameDefault");

var _xmlThrDefOutputBufferCreateFilenameDefault = Module["_xmlThrDefOutputBufferCreateFilenameDefault"] = createExportWrapper("xmlThrDefOutputBufferCreateFilenameDefault");

var ___docbDefaultSAXHandler = Module["___docbDefaultSAXHandler"] = createExportWrapper("__docbDefaultSAXHandler");

var ___htmlDefaultSAXHandler = Module["___htmlDefaultSAXHandler"] = createExportWrapper("__htmlDefaultSAXHandler");

var ___xmlLastError = Module["___xmlLastError"] = createExportWrapper("__xmlLastError");

var ___oldXMLWDcompatibility = Module["___oldXMLWDcompatibility"] = createExportWrapper("__oldXMLWDcompatibility");

var ___xmlBufferAllocScheme = Module["___xmlBufferAllocScheme"] = createExportWrapper("__xmlBufferAllocScheme");

var _xmlThrDefBufferAllocScheme = Module["_xmlThrDefBufferAllocScheme"] = createExportWrapper("xmlThrDefBufferAllocScheme");

var ___xmlDefaultBufferSize = Module["___xmlDefaultBufferSize"] = createExportWrapper("__xmlDefaultBufferSize");

var _xmlThrDefDefaultBufferSize = Module["_xmlThrDefDefaultBufferSize"] = createExportWrapper("xmlThrDefDefaultBufferSize");

var ___xmlDefaultSAXHandler = Module["___xmlDefaultSAXHandler"] = createExportWrapper("__xmlDefaultSAXHandler");

var ___xmlDefaultSAXLocator = Module["___xmlDefaultSAXLocator"] = createExportWrapper("__xmlDefaultSAXLocator");

var ___xmlDoValidityCheckingDefaultValue = Module["___xmlDoValidityCheckingDefaultValue"] = createExportWrapper("__xmlDoValidityCheckingDefaultValue");

var _xmlThrDefDoValidityCheckingDefaultValue = Module["_xmlThrDefDoValidityCheckingDefaultValue"] = createExportWrapper("xmlThrDefDoValidityCheckingDefaultValue");

var ___xmlGenericError = Module["___xmlGenericError"] = createExportWrapper("__xmlGenericError");

var ___xmlStructuredError = Module["___xmlStructuredError"] = createExportWrapper("__xmlStructuredError");

var ___xmlGenericErrorContext = Module["___xmlGenericErrorContext"] = createExportWrapper("__xmlGenericErrorContext");

var ___xmlStructuredErrorContext = Module["___xmlStructuredErrorContext"] = createExportWrapper("__xmlStructuredErrorContext");

var ___xmlGetWarningsDefaultValue = Module["___xmlGetWarningsDefaultValue"] = createExportWrapper("__xmlGetWarningsDefaultValue");

var _xmlThrDefGetWarningsDefaultValue = Module["_xmlThrDefGetWarningsDefaultValue"] = createExportWrapper("xmlThrDefGetWarningsDefaultValue");

var ___xmlIndentTreeOutput = Module["___xmlIndentTreeOutput"] = createExportWrapper("__xmlIndentTreeOutput");

var _xmlThrDefIndentTreeOutput = Module["_xmlThrDefIndentTreeOutput"] = createExportWrapper("xmlThrDefIndentTreeOutput");

var ___xmlTreeIndentString = Module["___xmlTreeIndentString"] = createExportWrapper("__xmlTreeIndentString");

var _xmlThrDefTreeIndentString = Module["_xmlThrDefTreeIndentString"] = createExportWrapper("xmlThrDefTreeIndentString");

var ___xmlKeepBlanksDefaultValue = Module["___xmlKeepBlanksDefaultValue"] = createExportWrapper("__xmlKeepBlanksDefaultValue");

var _xmlThrDefKeepBlanksDefaultValue = Module["_xmlThrDefKeepBlanksDefaultValue"] = createExportWrapper("xmlThrDefKeepBlanksDefaultValue");

var ___xmlLineNumbersDefaultValue = Module["___xmlLineNumbersDefaultValue"] = createExportWrapper("__xmlLineNumbersDefaultValue");

var _xmlThrDefLineNumbersDefaultValue = Module["_xmlThrDefLineNumbersDefaultValue"] = createExportWrapper("xmlThrDefLineNumbersDefaultValue");

var ___xmlLoadExtDtdDefaultValue = Module["___xmlLoadExtDtdDefaultValue"] = createExportWrapper("__xmlLoadExtDtdDefaultValue");

var _xmlThrDefLoadExtDtdDefaultValue = Module["_xmlThrDefLoadExtDtdDefaultValue"] = createExportWrapper("xmlThrDefLoadExtDtdDefaultValue");

var ___xmlParserDebugEntities = Module["___xmlParserDebugEntities"] = createExportWrapper("__xmlParserDebugEntities");

var _xmlThrDefParserDebugEntities = Module["_xmlThrDefParserDebugEntities"] = createExportWrapper("xmlThrDefParserDebugEntities");

var ___xmlParserVersion = Module["___xmlParserVersion"] = createExportWrapper("__xmlParserVersion");

var ___xmlPedanticParserDefaultValue = Module["___xmlPedanticParserDefaultValue"] = createExportWrapper("__xmlPedanticParserDefaultValue");

var _xmlThrDefPedanticParserDefaultValue = Module["_xmlThrDefPedanticParserDefaultValue"] = createExportWrapper("xmlThrDefPedanticParserDefaultValue");

var ___xmlSaveNoEmptyTags = Module["___xmlSaveNoEmptyTags"] = createExportWrapper("__xmlSaveNoEmptyTags");

var _xmlThrDefSaveNoEmptyTags = Module["_xmlThrDefSaveNoEmptyTags"] = createExportWrapper("xmlThrDefSaveNoEmptyTags");

var ___xmlSubstituteEntitiesDefaultValue = Module["___xmlSubstituteEntitiesDefaultValue"] = createExportWrapper("__xmlSubstituteEntitiesDefaultValue");

var _xmlThrDefSubstituteEntitiesDefaultValue = Module["_xmlThrDefSubstituteEntitiesDefaultValue"] = createExportWrapper("xmlThrDefSubstituteEntitiesDefaultValue");

var ___xmlRegisterNodeDefaultValue = Module["___xmlRegisterNodeDefaultValue"] = createExportWrapper("__xmlRegisterNodeDefaultValue");

var ___xmlDeregisterNodeDefaultValue = Module["___xmlDeregisterNodeDefaultValue"] = createExportWrapper("__xmlDeregisterNodeDefaultValue");

var ___xmlParserInputBufferCreateFilenameValue = Module["___xmlParserInputBufferCreateFilenameValue"] = createExportWrapper("__xmlParserInputBufferCreateFilenameValue");

var ___xmlOutputBufferCreateFilenameValue = Module["___xmlOutputBufferCreateFilenameValue"] = createExportWrapper("__xmlOutputBufferCreateFilenameValue");

var ___xmlGlobalInitMutexLock = Module["___xmlGlobalInitMutexLock"] = createExportWrapper("__xmlGlobalInitMutexLock");

var ___xmlGlobalInitMutexUnlock = Module["___xmlGlobalInitMutexUnlock"] = createExportWrapper("__xmlGlobalInitMutexUnlock");

var _xmlGetGlobalState = Module["_xmlGetGlobalState"] = createExportWrapper("xmlGetGlobalState");

var _xmlIsMainThread = Module["_xmlIsMainThread"] = createExportWrapper("xmlIsMainThread");

var _xmlLockLibrary = Module["_xmlLockLibrary"] = createExportWrapper("xmlLockLibrary");

var _xmlUnlockLibrary = Module["_xmlUnlockLibrary"] = createExportWrapper("xmlUnlockLibrary");

var _xmlC14NExecute = Module["_xmlC14NExecute"] = createExportWrapper("xmlC14NExecute");

var _xmlC14NDocDumpMemory = Module["_xmlC14NDocDumpMemory"] = createExportWrapper("xmlC14NDocDumpMemory");

var _xmlC14NDocSave = Module["_xmlC14NDocSave"] = createExportWrapper("xmlC14NDocSave");

var _xmlStrsub = Module["_xmlStrsub"] = createExportWrapper("xmlStrsub");

var _xmlStrVPrintf = Module["_xmlStrVPrintf"] = createExportWrapper("xmlStrVPrintf");

var _xmlUTF8Size = Module["_xmlUTF8Size"] = createExportWrapper("xmlUTF8Size");

var _xmlUTF8Charcmp = Module["_xmlUTF8Charcmp"] = createExportWrapper("xmlUTF8Charcmp");

var _xmlEscapeFormatString = Module["_xmlEscapeFormatString"] = createExportWrapper("xmlEscapeFormatString");

var _xmlBufEmpty = Module["_xmlBufEmpty"] = createExportWrapper("xmlBufEmpty");

var _xmlBufInflate = Module["_xmlBufInflate"] = createExportWrapper("xmlBufInflate");

var _xmlBufDump = Module["_xmlBufDump"] = createExportWrapper("xmlBufDump");

var _xmlBufErase = Module["_xmlBufErase"] = createExportWrapper("xmlBufErase");

var _xmlBufResize = Module["_xmlBufResize"] = createExportWrapper("xmlBufResize");

var _xmlBufAddHead = Module["_xmlBufAddHead"] = createExportWrapper("xmlBufAddHead");

var _xmlBufWriteCHAR = Module["_xmlBufWriteCHAR"] = createExportWrapper("xmlBufWriteCHAR");

var _xmlBufWriteChar = Module["_xmlBufWriteChar"] = createExportWrapper("xmlBufWriteChar");

var _xmlBufMergeBuffer = Module["_xmlBufMergeBuffer"] = createExportWrapper("xmlBufMergeBuffer");

var _xmlRegExecPushString2 = Module["_xmlRegExecPushString2"] = createExportWrapper("xmlRegExecPushString2");

var _xmlRegExecNextValues = Module["_xmlRegExecNextValues"] = createExportWrapper("xmlRegExecNextValues");

var _xmlRegExecErrInfo = Module["_xmlRegExecErrInfo"] = createExportWrapper("xmlRegExecErrInfo");

var _xmlRegexpPrint = Module["_xmlRegexpPrint"] = createExportWrapper("xmlRegexpPrint");

var _xmlRegexpCompile = Module["_xmlRegexpCompile"] = createExportWrapper("xmlRegexpCompile");

var _xmlRegexpExec = Module["_xmlRegexpExec"] = createExportWrapper("xmlRegexpExec");

var _xmlAutomataSetFlags = Module["_xmlAutomataSetFlags"] = createExportWrapper("xmlAutomataSetFlags");

var _xmlAutomataNewTransition2 = Module["_xmlAutomataNewTransition2"] = createExportWrapper("xmlAutomataNewTransition2");

var _xmlAutomataNewNegTrans = Module["_xmlAutomataNewNegTrans"] = createExportWrapper("xmlAutomataNewNegTrans");

var _xmlAutomataNewCountTrans2 = Module["_xmlAutomataNewCountTrans2"] = createExportWrapper("xmlAutomataNewCountTrans2");

var _xmlAutomataNewCountTrans = Module["_xmlAutomataNewCountTrans"] = createExportWrapper("xmlAutomataNewCountTrans");

var _xmlAutomataNewOnceTrans2 = Module["_xmlAutomataNewOnceTrans2"] = createExportWrapper("xmlAutomataNewOnceTrans2");

var _xmlAutomataNewOnceTrans = Module["_xmlAutomataNewOnceTrans"] = createExportWrapper("xmlAutomataNewOnceTrans");

var _xmlAutomataNewAllTrans = Module["_xmlAutomataNewAllTrans"] = createExportWrapper("xmlAutomataNewAllTrans");

var _xmlAutomataNewCounter = Module["_xmlAutomataNewCounter"] = createExportWrapper("xmlAutomataNewCounter");

var _xmlAutomataNewCountedTrans = Module["_xmlAutomataNewCountedTrans"] = createExportWrapper("xmlAutomataNewCountedTrans");

var _xmlAutomataNewCounterTrans = Module["_xmlAutomataNewCounterTrans"] = createExportWrapper("xmlAutomataNewCounterTrans");

var _xmlAutomataIsDeterminist = Module["_xmlAutomataIsDeterminist"] = createExportWrapper("xmlAutomataIsDeterminist");

var _puts = Module["_puts"] = createExportWrapper("puts");

var _xmlUCSIsCatNd = Module["_xmlUCSIsCatNd"] = createExportWrapper("xmlUCSIsCatNd");

var _xmlUCSIsCatP = Module["_xmlUCSIsCatP"] = createExportWrapper("xmlUCSIsCatP");

var _xmlUCSIsCatZ = Module["_xmlUCSIsCatZ"] = createExportWrapper("xmlUCSIsCatZ");

var _xmlUCSIsCatC = Module["_xmlUCSIsCatC"] = createExportWrapper("xmlUCSIsCatC");

var _xmlUCSIsCatL = Module["_xmlUCSIsCatL"] = createExportWrapper("xmlUCSIsCatL");

var _xmlUCSIsCatLu = Module["_xmlUCSIsCatLu"] = createExportWrapper("xmlUCSIsCatLu");

var _xmlUCSIsCatLl = Module["_xmlUCSIsCatLl"] = createExportWrapper("xmlUCSIsCatLl");

var _xmlUCSIsCatLt = Module["_xmlUCSIsCatLt"] = createExportWrapper("xmlUCSIsCatLt");

var _xmlUCSIsCatLm = Module["_xmlUCSIsCatLm"] = createExportWrapper("xmlUCSIsCatLm");

var _xmlUCSIsCatLo = Module["_xmlUCSIsCatLo"] = createExportWrapper("xmlUCSIsCatLo");

var _xmlUCSIsCatM = Module["_xmlUCSIsCatM"] = createExportWrapper("xmlUCSIsCatM");

var _xmlUCSIsCatMn = Module["_xmlUCSIsCatMn"] = createExportWrapper("xmlUCSIsCatMn");

var _xmlUCSIsCatMc = Module["_xmlUCSIsCatMc"] = createExportWrapper("xmlUCSIsCatMc");

var _xmlUCSIsCatMe = Module["_xmlUCSIsCatMe"] = createExportWrapper("xmlUCSIsCatMe");

var _xmlUCSIsCatN = Module["_xmlUCSIsCatN"] = createExportWrapper("xmlUCSIsCatN");

var _xmlUCSIsCatNl = Module["_xmlUCSIsCatNl"] = createExportWrapper("xmlUCSIsCatNl");

var _xmlUCSIsCatNo = Module["_xmlUCSIsCatNo"] = createExportWrapper("xmlUCSIsCatNo");

var _xmlUCSIsCatPc = Module["_xmlUCSIsCatPc"] = createExportWrapper("xmlUCSIsCatPc");

var _xmlUCSIsCatPd = Module["_xmlUCSIsCatPd"] = createExportWrapper("xmlUCSIsCatPd");

var _xmlUCSIsCatPs = Module["_xmlUCSIsCatPs"] = createExportWrapper("xmlUCSIsCatPs");

var _xmlUCSIsCatPe = Module["_xmlUCSIsCatPe"] = createExportWrapper("xmlUCSIsCatPe");

var _xmlUCSIsCatPi = Module["_xmlUCSIsCatPi"] = createExportWrapper("xmlUCSIsCatPi");

var _xmlUCSIsCatPf = Module["_xmlUCSIsCatPf"] = createExportWrapper("xmlUCSIsCatPf");

var _xmlUCSIsCatPo = Module["_xmlUCSIsCatPo"] = createExportWrapper("xmlUCSIsCatPo");

var _xmlUCSIsCatZs = Module["_xmlUCSIsCatZs"] = createExportWrapper("xmlUCSIsCatZs");

var _xmlUCSIsCatZl = Module["_xmlUCSIsCatZl"] = createExportWrapper("xmlUCSIsCatZl");

var _xmlUCSIsCatZp = Module["_xmlUCSIsCatZp"] = createExportWrapper("xmlUCSIsCatZp");

var _xmlUCSIsCatS = Module["_xmlUCSIsCatS"] = createExportWrapper("xmlUCSIsCatS");

var _xmlUCSIsCatSm = Module["_xmlUCSIsCatSm"] = createExportWrapper("xmlUCSIsCatSm");

var _xmlUCSIsCatSc = Module["_xmlUCSIsCatSc"] = createExportWrapper("xmlUCSIsCatSc");

var _xmlUCSIsCatSk = Module["_xmlUCSIsCatSk"] = createExportWrapper("xmlUCSIsCatSk");

var _xmlUCSIsCatSo = Module["_xmlUCSIsCatSo"] = createExportWrapper("xmlUCSIsCatSo");

var _xmlUCSIsCatCc = Module["_xmlUCSIsCatCc"] = createExportWrapper("xmlUCSIsCatCc");

var _xmlUCSIsCatCf = Module["_xmlUCSIsCatCf"] = createExportWrapper("xmlUCSIsCatCf");

var _xmlUCSIsCatCo = Module["_xmlUCSIsCatCo"] = createExportWrapper("xmlUCSIsCatCo");

var _xmlUCSIsBlock = Module["_xmlUCSIsBlock"] = createExportWrapper("xmlUCSIsBlock");

var _xmlSchemaNewFacet = Module["_xmlSchemaNewFacet"] = createExportWrapper("xmlSchemaNewFacet");

var _xmlSchemaFreeWildcard = Module["_xmlSchemaFreeWildcard"] = createExportWrapper("xmlSchemaFreeWildcard");

var _xmlSchemaFreeFacet = Module["_xmlSchemaFreeFacet"] = createExportWrapper("xmlSchemaFreeFacet");

var _xmlSchemaFreeType = Module["_xmlSchemaFreeType"] = createExportWrapper("xmlSchemaFreeType");

var _xmlSchemaFreeValue = Module["_xmlSchemaFreeValue"] = createExportWrapper("xmlSchemaFreeValue");

var _xmlSchemaDump = Module["_xmlSchemaDump"] = createExportWrapper("xmlSchemaDump");

var _xmlSchemaNewDocParserCtxt = Module["_xmlSchemaNewDocParserCtxt"] = createExportWrapper("xmlSchemaNewDocParserCtxt");

var _xmlSchemaCheckFacet = Module["_xmlSchemaCheckFacet"] = createExportWrapper("xmlSchemaCheckFacet");

var _xmlSchemaGetBuiltInType = Module["_xmlSchemaGetBuiltInType"] = createExportWrapper("xmlSchemaGetBuiltInType");

var _xmlSchemaValidatePredefinedType = Module["_xmlSchemaValidatePredefinedType"] = createExportWrapper("xmlSchemaValidatePredefinedType");

var _xmlSchemaCollapseString = Module["_xmlSchemaCollapseString"] = createExportWrapper("xmlSchemaCollapseString");

var _xmlSchemaWhiteSpaceReplace = Module["_xmlSchemaWhiteSpaceReplace"] = createExportWrapper("xmlSchemaWhiteSpaceReplace");

var _xmlSchemaNewQNameValue = Module["_xmlSchemaNewQNameValue"] = createExportWrapper("xmlSchemaNewQNameValue");

var _xmlSchemaValPredefTypeNodeNoNorm = Module["_xmlSchemaValPredefTypeNodeNoNorm"] = createExportWrapper("xmlSchemaValPredefTypeNodeNoNorm");

var _xmlSchemaValueAppend = Module["_xmlSchemaValueAppend"] = createExportWrapper("xmlSchemaValueAppend");

var _xmlSchemaInitTypes = Module["_xmlSchemaInitTypes"] = createExportWrapper("xmlSchemaInitTypes");

var _xmlSchemaSetParserStructuredErrors = Module["_xmlSchemaSetParserStructuredErrors"] = createExportWrapper("xmlSchemaSetParserStructuredErrors");

var _xmlSchemaSetValidStructuredErrors = Module["_xmlSchemaSetValidStructuredErrors"] = createExportWrapper("xmlSchemaSetValidStructuredErrors");

var _xmlSchemaGetParserErrors = Module["_xmlSchemaGetParserErrors"] = createExportWrapper("xmlSchemaGetParserErrors");

var _xmlSchemaValidateSetFilename = Module["_xmlSchemaValidateSetFilename"] = createExportWrapper("xmlSchemaValidateSetFilename");

var _xmlSchemaIsValid = Module["_xmlSchemaIsValid"] = createExportWrapper("xmlSchemaIsValid");

var _xmlSchemaGetValidErrors = Module["_xmlSchemaGetValidErrors"] = createExportWrapper("xmlSchemaGetValidErrors");

var _xmlSchemaValidCtxtGetOptions = Module["_xmlSchemaValidCtxtGetOptions"] = createExportWrapper("xmlSchemaValidCtxtGetOptions");

var _xmlSchemaValidateOneElement = Module["_xmlSchemaValidateOneElement"] = createExportWrapper("xmlSchemaValidateOneElement");

var _xmlSchemaSAXPlug = Module["_xmlSchemaSAXPlug"] = createExportWrapper("xmlSchemaSAXPlug");

var _xmlSchemaSAXUnplug = Module["_xmlSchemaSAXUnplug"] = createExportWrapper("xmlSchemaSAXUnplug");

var _xmlSchemaValidateSetLocator = Module["_xmlSchemaValidateSetLocator"] = createExportWrapper("xmlSchemaValidateSetLocator");

var _xmlSchemaValidateStream = Module["_xmlSchemaValidateStream"] = createExportWrapper("xmlSchemaValidateStream");

var _xmlSchemaValidateFile = Module["_xmlSchemaValidateFile"] = createExportWrapper("xmlSchemaValidateFile");

var _xmlSchemaValidCtxtGetParserCtxt = Module["_xmlSchemaValidCtxtGetParserCtxt"] = createExportWrapper("xmlSchemaValidCtxtGetParserCtxt");

var _xmlSchemaValPredefTypeNode = Module["_xmlSchemaValPredefTypeNode"] = createExportWrapper("xmlSchemaValPredefTypeNode");

var _xmlSchemaGetPredefinedType = Module["_xmlSchemaGetPredefinedType"] = createExportWrapper("xmlSchemaGetPredefinedType");

var _xmlSchemaIsBuiltInTypeFacet = Module["_xmlSchemaIsBuiltInTypeFacet"] = createExportWrapper("xmlSchemaIsBuiltInTypeFacet");

var _xmlSchemaCompareValues = Module["_xmlSchemaCompareValues"] = createExportWrapper("xmlSchemaCompareValues");

var _xmlSchemaGetValType = Module["_xmlSchemaGetValType"] = createExportWrapper("xmlSchemaGetValType");

var _xmlSchemaValueGetAsString = Module["_xmlSchemaValueGetAsString"] = createExportWrapper("xmlSchemaValueGetAsString");

var _xmlSchemaCompareValuesWhtsp = Module["_xmlSchemaCompareValuesWhtsp"] = createExportWrapper("xmlSchemaCompareValuesWhtsp");

var _xmlSchemaValueGetNext = Module["_xmlSchemaValueGetNext"] = createExportWrapper("xmlSchemaValueGetNext");

var _xmlSchemaNewNOTATIONValue = Module["_xmlSchemaNewNOTATIONValue"] = createExportWrapper("xmlSchemaNewNOTATIONValue");

var _xmlSchemaValidateLengthFacetWhtsp = Module["_xmlSchemaValidateLengthFacetWhtsp"] = createExportWrapper("xmlSchemaValidateLengthFacetWhtsp");

var _xmlSchemaValidateFacetWhtsp = Module["_xmlSchemaValidateFacetWhtsp"] = createExportWrapper("xmlSchemaValidateFacetWhtsp");

var _xmlSchemaValidateListSimpleTypeFacet = Module["_xmlSchemaValidateListSimpleTypeFacet"] = createExportWrapper("xmlSchemaValidateListSimpleTypeFacet");

var _xmlTextReaderLookupNamespace = Module["_xmlTextReaderLookupNamespace"] = createExportWrapper("xmlTextReaderLookupNamespace");

var _xmlSchemaGetFacetValueAsULong = Module["_xmlSchemaGetFacetValueAsULong"] = createExportWrapper("xmlSchemaGetFacetValueAsULong");

var _xmlSchemaGetCanonValue = Module["_xmlSchemaGetCanonValue"] = createExportWrapper("xmlSchemaGetCanonValue");

var _xmlSchemaValueGetAsBoolean = Module["_xmlSchemaValueGetAsBoolean"] = createExportWrapper("xmlSchemaValueGetAsBoolean");

var _xmlStreamPushAttr = Module["_xmlStreamPushAttr"] = createExportWrapper("xmlStreamPushAttr");

var _xmlSchemaCopyValue = Module["_xmlSchemaCopyValue"] = createExportWrapper("xmlSchemaCopyValue");

var _xmlSchemaNewStringValue = Module["_xmlSchemaNewStringValue"] = createExportWrapper("xmlSchemaNewStringValue");

var _xmlSchemaGetBuiltInListSimpleTypeItemType = Module["_xmlSchemaGetBuiltInListSimpleTypeItemType"] = createExportWrapper("xmlSchemaGetBuiltInListSimpleTypeItemType");

var _xmlSchemaValidateFacet = Module["_xmlSchemaValidateFacet"] = createExportWrapper("xmlSchemaValidateFacet");

var _xmlSchemaValidateLengthFacet = Module["_xmlSchemaValidateLengthFacet"] = createExportWrapper("xmlSchemaValidateLengthFacet");

var _xmlSchemaGetCanonValueWhtsp = Module["_xmlSchemaGetCanonValueWhtsp"] = createExportWrapper("xmlSchemaGetCanonValueWhtsp");

var _xmlUCSIsAegeanNumbers = Module["_xmlUCSIsAegeanNumbers"] = createExportWrapper("xmlUCSIsAegeanNumbers");

var _xmlUCSIsAlphabeticPresentationForms = Module["_xmlUCSIsAlphabeticPresentationForms"] = createExportWrapper("xmlUCSIsAlphabeticPresentationForms");

var _xmlUCSIsArabic = Module["_xmlUCSIsArabic"] = createExportWrapper("xmlUCSIsArabic");

var _xmlUCSIsArabicPresentationFormsA = Module["_xmlUCSIsArabicPresentationFormsA"] = createExportWrapper("xmlUCSIsArabicPresentationFormsA");

var _xmlUCSIsArabicPresentationFormsB = Module["_xmlUCSIsArabicPresentationFormsB"] = createExportWrapper("xmlUCSIsArabicPresentationFormsB");

var _xmlUCSIsArmenian = Module["_xmlUCSIsArmenian"] = createExportWrapper("xmlUCSIsArmenian");

var _xmlUCSIsArrows = Module["_xmlUCSIsArrows"] = createExportWrapper("xmlUCSIsArrows");

var _xmlUCSIsBasicLatin = Module["_xmlUCSIsBasicLatin"] = createExportWrapper("xmlUCSIsBasicLatin");

var _xmlUCSIsBengali = Module["_xmlUCSIsBengali"] = createExportWrapper("xmlUCSIsBengali");

var _xmlUCSIsBlockElements = Module["_xmlUCSIsBlockElements"] = createExportWrapper("xmlUCSIsBlockElements");

var _xmlUCSIsBopomofo = Module["_xmlUCSIsBopomofo"] = createExportWrapper("xmlUCSIsBopomofo");

var _xmlUCSIsBopomofoExtended = Module["_xmlUCSIsBopomofoExtended"] = createExportWrapper("xmlUCSIsBopomofoExtended");

var _xmlUCSIsBoxDrawing = Module["_xmlUCSIsBoxDrawing"] = createExportWrapper("xmlUCSIsBoxDrawing");

var _xmlUCSIsBraillePatterns = Module["_xmlUCSIsBraillePatterns"] = createExportWrapper("xmlUCSIsBraillePatterns");

var _xmlUCSIsBuhid = Module["_xmlUCSIsBuhid"] = createExportWrapper("xmlUCSIsBuhid");

var _xmlUCSIsByzantineMusicalSymbols = Module["_xmlUCSIsByzantineMusicalSymbols"] = createExportWrapper("xmlUCSIsByzantineMusicalSymbols");

var _xmlUCSIsCJKCompatibility = Module["_xmlUCSIsCJKCompatibility"] = createExportWrapper("xmlUCSIsCJKCompatibility");

var _xmlUCSIsCJKCompatibilityForms = Module["_xmlUCSIsCJKCompatibilityForms"] = createExportWrapper("xmlUCSIsCJKCompatibilityForms");

var _xmlUCSIsCJKCompatibilityIdeographs = Module["_xmlUCSIsCJKCompatibilityIdeographs"] = createExportWrapper("xmlUCSIsCJKCompatibilityIdeographs");

var _xmlUCSIsCJKCompatibilityIdeographsSupplement = Module["_xmlUCSIsCJKCompatibilityIdeographsSupplement"] = createExportWrapper("xmlUCSIsCJKCompatibilityIdeographsSupplement");

var _xmlUCSIsCJKRadicalsSupplement = Module["_xmlUCSIsCJKRadicalsSupplement"] = createExportWrapper("xmlUCSIsCJKRadicalsSupplement");

var _xmlUCSIsCJKSymbolsandPunctuation = Module["_xmlUCSIsCJKSymbolsandPunctuation"] = createExportWrapper("xmlUCSIsCJKSymbolsandPunctuation");

var _xmlUCSIsCJKUnifiedIdeographs = Module["_xmlUCSIsCJKUnifiedIdeographs"] = createExportWrapper("xmlUCSIsCJKUnifiedIdeographs");

var _xmlUCSIsCJKUnifiedIdeographsExtensionA = Module["_xmlUCSIsCJKUnifiedIdeographsExtensionA"] = createExportWrapper("xmlUCSIsCJKUnifiedIdeographsExtensionA");

var _xmlUCSIsCJKUnifiedIdeographsExtensionB = Module["_xmlUCSIsCJKUnifiedIdeographsExtensionB"] = createExportWrapper("xmlUCSIsCJKUnifiedIdeographsExtensionB");

var _xmlUCSIsCherokee = Module["_xmlUCSIsCherokee"] = createExportWrapper("xmlUCSIsCherokee");

var _xmlUCSIsCombiningDiacriticalMarks = Module["_xmlUCSIsCombiningDiacriticalMarks"] = createExportWrapper("xmlUCSIsCombiningDiacriticalMarks");

var _xmlUCSIsCombiningDiacriticalMarksforSymbols = Module["_xmlUCSIsCombiningDiacriticalMarksforSymbols"] = createExportWrapper("xmlUCSIsCombiningDiacriticalMarksforSymbols");

var _xmlUCSIsCombiningHalfMarks = Module["_xmlUCSIsCombiningHalfMarks"] = createExportWrapper("xmlUCSIsCombiningHalfMarks");

var _xmlUCSIsCombiningMarksforSymbols = Module["_xmlUCSIsCombiningMarksforSymbols"] = createExportWrapper("xmlUCSIsCombiningMarksforSymbols");

var _xmlUCSIsControlPictures = Module["_xmlUCSIsControlPictures"] = createExportWrapper("xmlUCSIsControlPictures");

var _xmlUCSIsCurrencySymbols = Module["_xmlUCSIsCurrencySymbols"] = createExportWrapper("xmlUCSIsCurrencySymbols");

var _xmlUCSIsCypriotSyllabary = Module["_xmlUCSIsCypriotSyllabary"] = createExportWrapper("xmlUCSIsCypriotSyllabary");

var _xmlUCSIsCyrillic = Module["_xmlUCSIsCyrillic"] = createExportWrapper("xmlUCSIsCyrillic");

var _xmlUCSIsCyrillicSupplement = Module["_xmlUCSIsCyrillicSupplement"] = createExportWrapper("xmlUCSIsCyrillicSupplement");

var _xmlUCSIsDeseret = Module["_xmlUCSIsDeseret"] = createExportWrapper("xmlUCSIsDeseret");

var _xmlUCSIsDevanagari = Module["_xmlUCSIsDevanagari"] = createExportWrapper("xmlUCSIsDevanagari");

var _xmlUCSIsDingbats = Module["_xmlUCSIsDingbats"] = createExportWrapper("xmlUCSIsDingbats");

var _xmlUCSIsEnclosedAlphanumerics = Module["_xmlUCSIsEnclosedAlphanumerics"] = createExportWrapper("xmlUCSIsEnclosedAlphanumerics");

var _xmlUCSIsEnclosedCJKLettersandMonths = Module["_xmlUCSIsEnclosedCJKLettersandMonths"] = createExportWrapper("xmlUCSIsEnclosedCJKLettersandMonths");

var _xmlUCSIsEthiopic = Module["_xmlUCSIsEthiopic"] = createExportWrapper("xmlUCSIsEthiopic");

var _xmlUCSIsGeneralPunctuation = Module["_xmlUCSIsGeneralPunctuation"] = createExportWrapper("xmlUCSIsGeneralPunctuation");

var _xmlUCSIsGeometricShapes = Module["_xmlUCSIsGeometricShapes"] = createExportWrapper("xmlUCSIsGeometricShapes");

var _xmlUCSIsGeorgian = Module["_xmlUCSIsGeorgian"] = createExportWrapper("xmlUCSIsGeorgian");

var _xmlUCSIsGothic = Module["_xmlUCSIsGothic"] = createExportWrapper("xmlUCSIsGothic");

var _xmlUCSIsGreek = Module["_xmlUCSIsGreek"] = createExportWrapper("xmlUCSIsGreek");

var _xmlUCSIsGreekExtended = Module["_xmlUCSIsGreekExtended"] = createExportWrapper("xmlUCSIsGreekExtended");

var _xmlUCSIsGreekandCoptic = Module["_xmlUCSIsGreekandCoptic"] = createExportWrapper("xmlUCSIsGreekandCoptic");

var _xmlUCSIsGujarati = Module["_xmlUCSIsGujarati"] = createExportWrapper("xmlUCSIsGujarati");

var _xmlUCSIsGurmukhi = Module["_xmlUCSIsGurmukhi"] = createExportWrapper("xmlUCSIsGurmukhi");

var _xmlUCSIsHalfwidthandFullwidthForms = Module["_xmlUCSIsHalfwidthandFullwidthForms"] = createExportWrapper("xmlUCSIsHalfwidthandFullwidthForms");

var _xmlUCSIsHangulCompatibilityJamo = Module["_xmlUCSIsHangulCompatibilityJamo"] = createExportWrapper("xmlUCSIsHangulCompatibilityJamo");

var _xmlUCSIsHangulJamo = Module["_xmlUCSIsHangulJamo"] = createExportWrapper("xmlUCSIsHangulJamo");

var _xmlUCSIsHangulSyllables = Module["_xmlUCSIsHangulSyllables"] = createExportWrapper("xmlUCSIsHangulSyllables");

var _xmlUCSIsHanunoo = Module["_xmlUCSIsHanunoo"] = createExportWrapper("xmlUCSIsHanunoo");

var _xmlUCSIsHebrew = Module["_xmlUCSIsHebrew"] = createExportWrapper("xmlUCSIsHebrew");

var _xmlUCSIsHighPrivateUseSurrogates = Module["_xmlUCSIsHighPrivateUseSurrogates"] = createExportWrapper("xmlUCSIsHighPrivateUseSurrogates");

var _xmlUCSIsHighSurrogates = Module["_xmlUCSIsHighSurrogates"] = createExportWrapper("xmlUCSIsHighSurrogates");

var _xmlUCSIsHiragana = Module["_xmlUCSIsHiragana"] = createExportWrapper("xmlUCSIsHiragana");

var _xmlUCSIsIPAExtensions = Module["_xmlUCSIsIPAExtensions"] = createExportWrapper("xmlUCSIsIPAExtensions");

var _xmlUCSIsIdeographicDescriptionCharacters = Module["_xmlUCSIsIdeographicDescriptionCharacters"] = createExportWrapper("xmlUCSIsIdeographicDescriptionCharacters");

var _xmlUCSIsKanbun = Module["_xmlUCSIsKanbun"] = createExportWrapper("xmlUCSIsKanbun");

var _xmlUCSIsKangxiRadicals = Module["_xmlUCSIsKangxiRadicals"] = createExportWrapper("xmlUCSIsKangxiRadicals");

var _xmlUCSIsKannada = Module["_xmlUCSIsKannada"] = createExportWrapper("xmlUCSIsKannada");

var _xmlUCSIsKatakana = Module["_xmlUCSIsKatakana"] = createExportWrapper("xmlUCSIsKatakana");

var _xmlUCSIsKatakanaPhoneticExtensions = Module["_xmlUCSIsKatakanaPhoneticExtensions"] = createExportWrapper("xmlUCSIsKatakanaPhoneticExtensions");

var _xmlUCSIsKhmer = Module["_xmlUCSIsKhmer"] = createExportWrapper("xmlUCSIsKhmer");

var _xmlUCSIsKhmerSymbols = Module["_xmlUCSIsKhmerSymbols"] = createExportWrapper("xmlUCSIsKhmerSymbols");

var _xmlUCSIsLao = Module["_xmlUCSIsLao"] = createExportWrapper("xmlUCSIsLao");

var _xmlUCSIsLatin1Supplement = Module["_xmlUCSIsLatin1Supplement"] = createExportWrapper("xmlUCSIsLatin1Supplement");

var _xmlUCSIsLatinExtendedA = Module["_xmlUCSIsLatinExtendedA"] = createExportWrapper("xmlUCSIsLatinExtendedA");

var _xmlUCSIsLatinExtendedB = Module["_xmlUCSIsLatinExtendedB"] = createExportWrapper("xmlUCSIsLatinExtendedB");

var _xmlUCSIsLatinExtendedAdditional = Module["_xmlUCSIsLatinExtendedAdditional"] = createExportWrapper("xmlUCSIsLatinExtendedAdditional");

var _xmlUCSIsLetterlikeSymbols = Module["_xmlUCSIsLetterlikeSymbols"] = createExportWrapper("xmlUCSIsLetterlikeSymbols");

var _xmlUCSIsLimbu = Module["_xmlUCSIsLimbu"] = createExportWrapper("xmlUCSIsLimbu");

var _xmlUCSIsLinearBIdeograms = Module["_xmlUCSIsLinearBIdeograms"] = createExportWrapper("xmlUCSIsLinearBIdeograms");

var _xmlUCSIsLinearBSyllabary = Module["_xmlUCSIsLinearBSyllabary"] = createExportWrapper("xmlUCSIsLinearBSyllabary");

var _xmlUCSIsLowSurrogates = Module["_xmlUCSIsLowSurrogates"] = createExportWrapper("xmlUCSIsLowSurrogates");

var _xmlUCSIsMalayalam = Module["_xmlUCSIsMalayalam"] = createExportWrapper("xmlUCSIsMalayalam");

var _xmlUCSIsMathematicalAlphanumericSymbols = Module["_xmlUCSIsMathematicalAlphanumericSymbols"] = createExportWrapper("xmlUCSIsMathematicalAlphanumericSymbols");

var _xmlUCSIsMathematicalOperators = Module["_xmlUCSIsMathematicalOperators"] = createExportWrapper("xmlUCSIsMathematicalOperators");

var _xmlUCSIsMiscellaneousMathematicalSymbolsA = Module["_xmlUCSIsMiscellaneousMathematicalSymbolsA"] = createExportWrapper("xmlUCSIsMiscellaneousMathematicalSymbolsA");

var _xmlUCSIsMiscellaneousMathematicalSymbolsB = Module["_xmlUCSIsMiscellaneousMathematicalSymbolsB"] = createExportWrapper("xmlUCSIsMiscellaneousMathematicalSymbolsB");

var _xmlUCSIsMiscellaneousSymbols = Module["_xmlUCSIsMiscellaneousSymbols"] = createExportWrapper("xmlUCSIsMiscellaneousSymbols");

var _xmlUCSIsMiscellaneousSymbolsandArrows = Module["_xmlUCSIsMiscellaneousSymbolsandArrows"] = createExportWrapper("xmlUCSIsMiscellaneousSymbolsandArrows");

var _xmlUCSIsMiscellaneousTechnical = Module["_xmlUCSIsMiscellaneousTechnical"] = createExportWrapper("xmlUCSIsMiscellaneousTechnical");

var _xmlUCSIsMongolian = Module["_xmlUCSIsMongolian"] = createExportWrapper("xmlUCSIsMongolian");

var _xmlUCSIsMusicalSymbols = Module["_xmlUCSIsMusicalSymbols"] = createExportWrapper("xmlUCSIsMusicalSymbols");

var _xmlUCSIsMyanmar = Module["_xmlUCSIsMyanmar"] = createExportWrapper("xmlUCSIsMyanmar");

var _xmlUCSIsNumberForms = Module["_xmlUCSIsNumberForms"] = createExportWrapper("xmlUCSIsNumberForms");

var _xmlUCSIsOgham = Module["_xmlUCSIsOgham"] = createExportWrapper("xmlUCSIsOgham");

var _xmlUCSIsOldItalic = Module["_xmlUCSIsOldItalic"] = createExportWrapper("xmlUCSIsOldItalic");

var _xmlUCSIsOpticalCharacterRecognition = Module["_xmlUCSIsOpticalCharacterRecognition"] = createExportWrapper("xmlUCSIsOpticalCharacterRecognition");

var _xmlUCSIsOriya = Module["_xmlUCSIsOriya"] = createExportWrapper("xmlUCSIsOriya");

var _xmlUCSIsOsmanya = Module["_xmlUCSIsOsmanya"] = createExportWrapper("xmlUCSIsOsmanya");

var _xmlUCSIsPhoneticExtensions = Module["_xmlUCSIsPhoneticExtensions"] = createExportWrapper("xmlUCSIsPhoneticExtensions");

var _xmlUCSIsPrivateUse = Module["_xmlUCSIsPrivateUse"] = createExportWrapper("xmlUCSIsPrivateUse");

var _xmlUCSIsPrivateUseArea = Module["_xmlUCSIsPrivateUseArea"] = createExportWrapper("xmlUCSIsPrivateUseArea");

var _xmlUCSIsRunic = Module["_xmlUCSIsRunic"] = createExportWrapper("xmlUCSIsRunic");

var _xmlUCSIsShavian = Module["_xmlUCSIsShavian"] = createExportWrapper("xmlUCSIsShavian");

var _xmlUCSIsSinhala = Module["_xmlUCSIsSinhala"] = createExportWrapper("xmlUCSIsSinhala");

var _xmlUCSIsSmallFormVariants = Module["_xmlUCSIsSmallFormVariants"] = createExportWrapper("xmlUCSIsSmallFormVariants");

var _xmlUCSIsSpacingModifierLetters = Module["_xmlUCSIsSpacingModifierLetters"] = createExportWrapper("xmlUCSIsSpacingModifierLetters");

var _xmlUCSIsSpecials = Module["_xmlUCSIsSpecials"] = createExportWrapper("xmlUCSIsSpecials");

var _xmlUCSIsSuperscriptsandSubscripts = Module["_xmlUCSIsSuperscriptsandSubscripts"] = createExportWrapper("xmlUCSIsSuperscriptsandSubscripts");

var _xmlUCSIsSupplementalArrowsA = Module["_xmlUCSIsSupplementalArrowsA"] = createExportWrapper("xmlUCSIsSupplementalArrowsA");

var _xmlUCSIsSupplementalArrowsB = Module["_xmlUCSIsSupplementalArrowsB"] = createExportWrapper("xmlUCSIsSupplementalArrowsB");

var _xmlUCSIsSupplementalMathematicalOperators = Module["_xmlUCSIsSupplementalMathematicalOperators"] = createExportWrapper("xmlUCSIsSupplementalMathematicalOperators");

var _xmlUCSIsSupplementaryPrivateUseAreaA = Module["_xmlUCSIsSupplementaryPrivateUseAreaA"] = createExportWrapper("xmlUCSIsSupplementaryPrivateUseAreaA");

var _xmlUCSIsSupplementaryPrivateUseAreaB = Module["_xmlUCSIsSupplementaryPrivateUseAreaB"] = createExportWrapper("xmlUCSIsSupplementaryPrivateUseAreaB");

var _xmlUCSIsSyriac = Module["_xmlUCSIsSyriac"] = createExportWrapper("xmlUCSIsSyriac");

var _xmlUCSIsTagalog = Module["_xmlUCSIsTagalog"] = createExportWrapper("xmlUCSIsTagalog");

var _xmlUCSIsTagbanwa = Module["_xmlUCSIsTagbanwa"] = createExportWrapper("xmlUCSIsTagbanwa");

var _xmlUCSIsTags = Module["_xmlUCSIsTags"] = createExportWrapper("xmlUCSIsTags");

var _xmlUCSIsTaiLe = Module["_xmlUCSIsTaiLe"] = createExportWrapper("xmlUCSIsTaiLe");

var _xmlUCSIsTaiXuanJingSymbols = Module["_xmlUCSIsTaiXuanJingSymbols"] = createExportWrapper("xmlUCSIsTaiXuanJingSymbols");

var _xmlUCSIsTamil = Module["_xmlUCSIsTamil"] = createExportWrapper("xmlUCSIsTamil");

var _xmlUCSIsTelugu = Module["_xmlUCSIsTelugu"] = createExportWrapper("xmlUCSIsTelugu");

var _xmlUCSIsThaana = Module["_xmlUCSIsThaana"] = createExportWrapper("xmlUCSIsThaana");

var _xmlUCSIsThai = Module["_xmlUCSIsThai"] = createExportWrapper("xmlUCSIsThai");

var _xmlUCSIsTibetan = Module["_xmlUCSIsTibetan"] = createExportWrapper("xmlUCSIsTibetan");

var _xmlUCSIsUgaritic = Module["_xmlUCSIsUgaritic"] = createExportWrapper("xmlUCSIsUgaritic");

var _xmlUCSIsUnifiedCanadianAboriginalSyllabics = Module["_xmlUCSIsUnifiedCanadianAboriginalSyllabics"] = createExportWrapper("xmlUCSIsUnifiedCanadianAboriginalSyllabics");

var _xmlUCSIsVariationSelectors = Module["_xmlUCSIsVariationSelectors"] = createExportWrapper("xmlUCSIsVariationSelectors");

var _xmlUCSIsVariationSelectorsSupplement = Module["_xmlUCSIsVariationSelectorsSupplement"] = createExportWrapper("xmlUCSIsVariationSelectorsSupplement");

var _xmlUCSIsYiRadicals = Module["_xmlUCSIsYiRadicals"] = createExportWrapper("xmlUCSIsYiRadicals");

var _xmlUCSIsYiSyllables = Module["_xmlUCSIsYiSyllables"] = createExportWrapper("xmlUCSIsYiSyllables");

var _xmlUCSIsYijingHexagramSymbols = Module["_xmlUCSIsYijingHexagramSymbols"] = createExportWrapper("xmlUCSIsYijingHexagramSymbols");

var _xmlUCSIsCatCs = Module["_xmlUCSIsCatCs"] = createExportWrapper("xmlUCSIsCatCs");

var _xmlUCSIsCat = Module["_xmlUCSIsCat"] = createExportWrapper("xmlUCSIsCat");

var _xmlTextReaderRead = Module["_xmlTextReaderRead"] = createExportWrapper("xmlTextReaderRead");

var _xmlTextReaderExpand = Module["_xmlTextReaderExpand"] = createExportWrapper("xmlTextReaderExpand");

var _xmlTextReaderPreserve = Module["_xmlTextReaderPreserve"] = createExportWrapper("xmlTextReaderPreserve");

var _xmlTextReaderReadState = Module["_xmlTextReaderReadState"] = createExportWrapper("xmlTextReaderReadState");

var _xmlTextReaderNext = Module["_xmlTextReaderNext"] = createExportWrapper("xmlTextReaderNext");

var _xmlTextReaderReadInnerXml = Module["_xmlTextReaderReadInnerXml"] = createExportWrapper("xmlTextReaderReadInnerXml");

var _xmlTextReaderReadOuterXml = Module["_xmlTextReaderReadOuterXml"] = createExportWrapper("xmlTextReaderReadOuterXml");

var _xmlTextReaderReadString = Module["_xmlTextReaderReadString"] = createExportWrapper("xmlTextReaderReadString");

var _xmlTextReaderNextSibling = Module["_xmlTextReaderNextSibling"] = createExportWrapper("xmlTextReaderNextSibling");

var _xmlNewTextReader = Module["_xmlNewTextReader"] = createExportWrapper("xmlNewTextReader");

var _xmlNewTextReaderFilename = Module["_xmlNewTextReaderFilename"] = createExportWrapper("xmlNewTextReaderFilename");

var _xmlFreeTextReader = Module["_xmlFreeTextReader"] = createExportWrapper("xmlFreeTextReader");

var _xmlTextReaderClose = Module["_xmlTextReaderClose"] = createExportWrapper("xmlTextReaderClose");

var _xmlTextReaderGetAttributeNo = Module["_xmlTextReaderGetAttributeNo"] = createExportWrapper("xmlTextReaderGetAttributeNo");

var _xmlTextReaderGetAttribute = Module["_xmlTextReaderGetAttribute"] = createExportWrapper("xmlTextReaderGetAttribute");

var _xmlTextReaderGetAttributeNs = Module["_xmlTextReaderGetAttributeNs"] = createExportWrapper("xmlTextReaderGetAttributeNs");

var _xmlTextReaderGetRemainder = Module["_xmlTextReaderGetRemainder"] = createExportWrapper("xmlTextReaderGetRemainder");

var _xmlPatternMatch = Module["_xmlPatternMatch"] = createExportWrapper("xmlPatternMatch");

var _xmlRelaxNGValidatePopElement = Module["_xmlRelaxNGValidatePopElement"] = createExportWrapper("xmlRelaxNGValidatePopElement");

var _xmlRelaxNGValidatePushCData = Module["_xmlRelaxNGValidatePushCData"] = createExportWrapper("xmlRelaxNGValidatePushCData");

var _xmlRelaxNGValidatePushElement = Module["_xmlRelaxNGValidatePushElement"] = createExportWrapper("xmlRelaxNGValidatePushElement");

var _xmlRelaxNGValidateFullElement = Module["_xmlRelaxNGValidateFullElement"] = createExportWrapper("xmlRelaxNGValidateFullElement");

var _xmlTextReaderMoveToAttributeNo = Module["_xmlTextReaderMoveToAttributeNo"] = createExportWrapper("xmlTextReaderMoveToAttributeNo");

var _xmlTextReaderMoveToAttribute = Module["_xmlTextReaderMoveToAttribute"] = createExportWrapper("xmlTextReaderMoveToAttribute");

var _xmlTextReaderMoveToAttributeNs = Module["_xmlTextReaderMoveToAttributeNs"] = createExportWrapper("xmlTextReaderMoveToAttributeNs");

var _xmlTextReaderMoveToFirstAttribute = Module["_xmlTextReaderMoveToFirstAttribute"] = createExportWrapper("xmlTextReaderMoveToFirstAttribute");

var _xmlTextReaderMoveToNextAttribute = Module["_xmlTextReaderMoveToNextAttribute"] = createExportWrapper("xmlTextReaderMoveToNextAttribute");

var _xmlTextReaderMoveToElement = Module["_xmlTextReaderMoveToElement"] = createExportWrapper("xmlTextReaderMoveToElement");

var _xmlTextReaderReadAttributeValue = Module["_xmlTextReaderReadAttributeValue"] = createExportWrapper("xmlTextReaderReadAttributeValue");

var _xmlTextReaderConstEncoding = Module["_xmlTextReaderConstEncoding"] = createExportWrapper("xmlTextReaderConstEncoding");

var _xmlTextReaderAttributeCount = Module["_xmlTextReaderAttributeCount"] = createExportWrapper("xmlTextReaderAttributeCount");

var _xmlTextReaderNodeType = Module["_xmlTextReaderNodeType"] = createExportWrapper("xmlTextReaderNodeType");

var _xmlTextReaderIsEmptyElement = Module["_xmlTextReaderIsEmptyElement"] = createExportWrapper("xmlTextReaderIsEmptyElement");

var _xmlTextReaderLocalName = Module["_xmlTextReaderLocalName"] = createExportWrapper("xmlTextReaderLocalName");

var _xmlTextReaderName = Module["_xmlTextReaderName"] = createExportWrapper("xmlTextReaderName");

var _xmlTextReaderConstLocalName = Module["_xmlTextReaderConstLocalName"] = createExportWrapper("xmlTextReaderConstLocalName");

var _xmlTextReaderConstName = Module["_xmlTextReaderConstName"] = createExportWrapper("xmlTextReaderConstName");

var _xmlDictQLookup = Module["_xmlDictQLookup"] = createExportWrapper("xmlDictQLookup");

var _xmlTextReaderPrefix = Module["_xmlTextReaderPrefix"] = createExportWrapper("xmlTextReaderPrefix");

var _xmlTextReaderConstPrefix = Module["_xmlTextReaderConstPrefix"] = createExportWrapper("xmlTextReaderConstPrefix");

var _xmlTextReaderNamespaceUri = Module["_xmlTextReaderNamespaceUri"] = createExportWrapper("xmlTextReaderNamespaceUri");

var _xmlTextReaderConstNamespaceUri = Module["_xmlTextReaderConstNamespaceUri"] = createExportWrapper("xmlTextReaderConstNamespaceUri");

var _xmlTextReaderBaseUri = Module["_xmlTextReaderBaseUri"] = createExportWrapper("xmlTextReaderBaseUri");

var _xmlTextReaderConstBaseUri = Module["_xmlTextReaderConstBaseUri"] = createExportWrapper("xmlTextReaderConstBaseUri");

var _xmlTextReaderDepth = Module["_xmlTextReaderDepth"] = createExportWrapper("xmlTextReaderDepth");

var _xmlTextReaderHasAttributes = Module["_xmlTextReaderHasAttributes"] = createExportWrapper("xmlTextReaderHasAttributes");

var _xmlTextReaderHasValue = Module["_xmlTextReaderHasValue"] = createExportWrapper("xmlTextReaderHasValue");

var _xmlTextReaderValue = Module["_xmlTextReaderValue"] = createExportWrapper("xmlTextReaderValue");

var _xmlTextReaderConstValue = Module["_xmlTextReaderConstValue"] = createExportWrapper("xmlTextReaderConstValue");

var _xmlTextReaderIsDefault = Module["_xmlTextReaderIsDefault"] = createExportWrapper("xmlTextReaderIsDefault");

var _xmlTextReaderQuoteChar = Module["_xmlTextReaderQuoteChar"] = createExportWrapper("xmlTextReaderQuoteChar");

var _xmlTextReaderXmlLang = Module["_xmlTextReaderXmlLang"] = createExportWrapper("xmlTextReaderXmlLang");

var _xmlTextReaderConstXmlLang = Module["_xmlTextReaderConstXmlLang"] = createExportWrapper("xmlTextReaderConstXmlLang");

var _xmlTextReaderConstString = Module["_xmlTextReaderConstString"] = createExportWrapper("xmlTextReaderConstString");

var _xmlTextReaderNormalization = Module["_xmlTextReaderNormalization"] = createExportWrapper("xmlTextReaderNormalization");

var _xmlTextReaderSetParserProp = Module["_xmlTextReaderSetParserProp"] = createExportWrapper("xmlTextReaderSetParserProp");

var _xmlTextReaderGetParserProp = Module["_xmlTextReaderGetParserProp"] = createExportWrapper("xmlTextReaderGetParserProp");

var _xmlTextReaderGetParserLineNumber = Module["_xmlTextReaderGetParserLineNumber"] = createExportWrapper("xmlTextReaderGetParserLineNumber");

var _xmlTextReaderGetParserColumnNumber = Module["_xmlTextReaderGetParserColumnNumber"] = createExportWrapper("xmlTextReaderGetParserColumnNumber");

var _xmlTextReaderCurrentNode = Module["_xmlTextReaderCurrentNode"] = createExportWrapper("xmlTextReaderCurrentNode");

var _xmlTextReaderPreservePattern = Module["_xmlTextReaderPreservePattern"] = createExportWrapper("xmlTextReaderPreservePattern");

var _xmlTextReaderCurrentDoc = Module["_xmlTextReaderCurrentDoc"] = createExportWrapper("xmlTextReaderCurrentDoc");

var _xmlTextReaderRelaxNGSetSchema = Module["_xmlTextReaderRelaxNGSetSchema"] = createExportWrapper("xmlTextReaderRelaxNGSetSchema");

var _xmlRelaxNGSetValidStructuredErrors = Module["_xmlRelaxNGSetValidStructuredErrors"] = createExportWrapper("xmlRelaxNGSetValidStructuredErrors");

var _xmlTextReaderSetSchema = Module["_xmlTextReaderSetSchema"] = createExportWrapper("xmlTextReaderSetSchema");

var _xmlTextReaderSchemaValidateCtxt = Module["_xmlTextReaderSchemaValidateCtxt"] = createExportWrapper("xmlTextReaderSchemaValidateCtxt");

var _xmlTextReaderSchemaValidate = Module["_xmlTextReaderSchemaValidate"] = createExportWrapper("xmlTextReaderSchemaValidate");

var _xmlTextReaderRelaxNGValidateCtxt = Module["_xmlTextReaderRelaxNGValidateCtxt"] = createExportWrapper("xmlTextReaderRelaxNGValidateCtxt");

var _xmlTextReaderRelaxNGValidate = Module["_xmlTextReaderRelaxNGValidate"] = createExportWrapper("xmlTextReaderRelaxNGValidate");

var _xmlTextReaderIsNamespaceDecl = Module["_xmlTextReaderIsNamespaceDecl"] = createExportWrapper("xmlTextReaderIsNamespaceDecl");

var _xmlTextReaderConstXmlVersion = Module["_xmlTextReaderConstXmlVersion"] = createExportWrapper("xmlTextReaderConstXmlVersion");

var _xmlTextReaderStandalone = Module["_xmlTextReaderStandalone"] = createExportWrapper("xmlTextReaderStandalone");

var _xmlTextReaderLocatorLineNumber = Module["_xmlTextReaderLocatorLineNumber"] = createExportWrapper("xmlTextReaderLocatorLineNumber");

var _xmlTextReaderLocatorBaseURI = Module["_xmlTextReaderLocatorBaseURI"] = createExportWrapper("xmlTextReaderLocatorBaseURI");

var _xmlTextReaderSetErrorHandler = Module["_xmlTextReaderSetErrorHandler"] = createExportWrapper("xmlTextReaderSetErrorHandler");

var _xmlTextReaderSetStructuredErrorHandler = Module["_xmlTextReaderSetStructuredErrorHandler"] = createExportWrapper("xmlTextReaderSetStructuredErrorHandler");

var _xmlTextReaderIsValid = Module["_xmlTextReaderIsValid"] = createExportWrapper("xmlTextReaderIsValid");

var _xmlTextReaderGetErrorHandler = Module["_xmlTextReaderGetErrorHandler"] = createExportWrapper("xmlTextReaderGetErrorHandler");

var _xmlTextReaderSetup = Module["_xmlTextReaderSetup"] = createExportWrapper("xmlTextReaderSetup");

var _xmlTextReaderByteConsumed = Module["_xmlTextReaderByteConsumed"] = createExportWrapper("xmlTextReaderByteConsumed");

var _xmlReaderWalker = Module["_xmlReaderWalker"] = createExportWrapper("xmlReaderWalker");

var _xmlReaderForDoc = Module["_xmlReaderForDoc"] = createExportWrapper("xmlReaderForDoc");

var _xmlReaderForMemory = Module["_xmlReaderForMemory"] = createExportWrapper("xmlReaderForMemory");

var _xmlReaderForFile = Module["_xmlReaderForFile"] = createExportWrapper("xmlReaderForFile");

var _xmlReaderForFd = Module["_xmlReaderForFd"] = createExportWrapper("xmlReaderForFd");

var _xmlReaderForIO = Module["_xmlReaderForIO"] = createExportWrapper("xmlReaderForIO");

var _xmlReaderNewWalker = Module["_xmlReaderNewWalker"] = createExportWrapper("xmlReaderNewWalker");

var _xmlReaderNewDoc = Module["_xmlReaderNewDoc"] = createExportWrapper("xmlReaderNewDoc");

var _xmlReaderNewMemory = Module["_xmlReaderNewMemory"] = createExportWrapper("xmlReaderNewMemory");

var _xmlReaderNewFile = Module["_xmlReaderNewFile"] = createExportWrapper("xmlReaderNewFile");

var _xmlReaderNewFd = Module["_xmlReaderNewFd"] = createExportWrapper("xmlReaderNewFd");

var _xmlReaderNewIO = Module["_xmlReaderNewIO"] = createExportWrapper("xmlReaderNewIO");

var _xmlRelaxParserSetFlag = Module["_xmlRelaxParserSetFlag"] = createExportWrapper("xmlRelaxParserSetFlag");

var _xmlRelaxNGInitTypes = Module["_xmlRelaxNGInitTypes"] = createExportWrapper("xmlRelaxNGInitTypes");

var _xmlRelaxNGNewDocParserCtxt = Module["_xmlRelaxNGNewDocParserCtxt"] = createExportWrapper("xmlRelaxNGNewDocParserCtxt");

var _xmlRelaxNGGetParserErrors = Module["_xmlRelaxNGGetParserErrors"] = createExportWrapper("xmlRelaxNGGetParserErrors");

var _xmlRelaxNGSetParserStructuredErrors = Module["_xmlRelaxNGSetParserStructuredErrors"] = createExportWrapper("xmlRelaxNGSetParserStructuredErrors");

var _xmlRelaxNGDump = Module["_xmlRelaxNGDump"] = createExportWrapper("xmlRelaxNGDump");

var _xmlRelaxNGDumpTree = Module["_xmlRelaxNGDumpTree"] = createExportWrapper("xmlRelaxNGDumpTree");

var _xmlRelaxNGGetValidErrors = Module["_xmlRelaxNGGetValidErrors"] = createExportWrapper("xmlRelaxNGGetValidErrors");

var ___xmlInitializeDict = Module["___xmlInitializeDict"] = createExportWrapper("__xmlInitializeDict");

var _rand_r = Module["_rand_r"] = createExportWrapper("rand_r");

var _xmlDictCreateSub = Module["_xmlDictCreateSub"] = createExportWrapper("xmlDictCreateSub");

var _xmlDictExists = Module["_xmlDictExists"] = createExportWrapper("xmlDictExists");

var _xmlDictSize = Module["_xmlDictSize"] = createExportWrapper("xmlDictSize");

var _xmlDictGetUsage = Module["_xmlDictGetUsage"] = createExportWrapper("xmlDictGetUsage");

var _xmlSAX2StartElementNs = Module["_xmlSAX2StartElementNs"] = createExportWrapper("xmlSAX2StartElementNs");

var _xmlSAX2EndElementNs = Module["_xmlSAX2EndElementNs"] = createExportWrapper("xmlSAX2EndElementNs");

var _xmlSAXDefaultVersion = Module["_xmlSAXDefaultVersion"] = createExportWrapper("xmlSAXDefaultVersion");

var _xmlSAX2InitDefaultSAXHandler = Module["_xmlSAX2InitDefaultSAXHandler"] = createExportWrapper("xmlSAX2InitDefaultSAXHandler");

var _xmlSAX2InitHtmlDefaultSAXHandler = Module["_xmlSAX2InitHtmlDefaultSAXHandler"] = createExportWrapper("xmlSAX2InitHtmlDefaultSAXHandler");

var _xmlSAX2InitDocbDefaultSAXHandler = Module["_xmlSAX2InitDocbDefaultSAXHandler"] = createExportWrapper("xmlSAX2InitDocbDefaultSAXHandler");

var _docbDefaultSAXHandlerInit = Module["_docbDefaultSAXHandlerInit"] = createExportWrapper("docbDefaultSAXHandlerInit");

var _xmlIsBaseChar = Module["_xmlIsBaseChar"] = createExportWrapper("xmlIsBaseChar");

var _xmlIsBlank = Module["_xmlIsBlank"] = createExportWrapper("xmlIsBlank");

var _xmlIsChar = Module["_xmlIsChar"] = createExportWrapper("xmlIsChar");

var _xmlIsCombining = Module["_xmlIsCombining"] = createExportWrapper("xmlIsCombining");

var _xmlIsDigit = Module["_xmlIsDigit"] = createExportWrapper("xmlIsDigit");

var _xmlIsExtender = Module["_xmlIsExtender"] = createExportWrapper("xmlIsExtender");

var _xmlIsIdeographic = Module["_xmlIsIdeographic"] = createExportWrapper("xmlIsIdeographic");

var _xmlIsPubidChar = Module["_xmlIsPubidChar"] = createExportWrapper("xmlIsPubidChar");

var _xmlIsXHTML = Module["_xmlIsXHTML"] = createExportWrapper("xmlIsXHTML");

var _xmlBufDumpNotationTable = Module["_xmlBufDumpNotationTable"] = createExportWrapper("xmlBufDumpNotationTable");

var _xmlBufDumpElementDecl = Module["_xmlBufDumpElementDecl"] = createExportWrapper("xmlBufDumpElementDecl");

var _xmlBufDumpAttributeDecl = Module["_xmlBufDumpAttributeDecl"] = createExportWrapper("xmlBufDumpAttributeDecl");

var _xmlBufDumpEntityDecl = Module["_xmlBufDumpEntityDecl"] = createExportWrapper("xmlBufDumpEntityDecl");

var _xmlSaveToFd = Module["_xmlSaveToFd"] = createExportWrapper("xmlSaveToFd");

var _xmlSaveToFilename = Module["_xmlSaveToFilename"] = createExportWrapper("xmlSaveToFilename");

var _xmlSaveToBuffer = Module["_xmlSaveToBuffer"] = createExportWrapper("xmlSaveToBuffer");

var _xmlSaveToIO = Module["_xmlSaveToIO"] = createExportWrapper("xmlSaveToIO");

var _xmlSaveDoc = Module["_xmlSaveDoc"] = createExportWrapper("xmlSaveDoc");

var _xmlSaveTree = Module["_xmlSaveTree"] = createExportWrapper("xmlSaveTree");

var _xmlSaveFlush = Module["_xmlSaveFlush"] = createExportWrapper("xmlSaveFlush");

var _xmlSaveClose = Module["_xmlSaveClose"] = createExportWrapper("xmlSaveClose");

var _xmlSaveSetEscape = Module["_xmlSaveSetEscape"] = createExportWrapper("xmlSaveSetEscape");

var _xmlSaveSetAttrEscape = Module["_xmlSaveSetAttrEscape"] = createExportWrapper("xmlSaveSetAttrEscape");

var _xmlBufAttrSerializeTxtContent = Module["_xmlBufAttrSerializeTxtContent"] = createExportWrapper("xmlBufAttrSerializeTxtContent");

var _xmlAttrSerializeTxtContent = Module["_xmlAttrSerializeTxtContent"] = createExportWrapper("xmlAttrSerializeTxtContent");

var _xmlBufNodeDump = Module["_xmlBufNodeDump"] = createExportWrapper("xmlBufNodeDump");

var _xmlDocDumpFormatMemoryEnc = Module["_xmlDocDumpFormatMemoryEnc"] = createExportWrapper("xmlDocDumpFormatMemoryEnc");

var _xmlDocDumpMemory = Module["_xmlDocDumpMemory"] = createExportWrapper("xmlDocDumpMemory");

var _xmlDocFormatDump = Module["_xmlDocFormatDump"] = createExportWrapper("xmlDocFormatDump");

var _xmlSaveFileTo = Module["_xmlSaveFileTo"] = createExportWrapper("xmlSaveFileTo");

var _xmlSaveFileEnc = Module["_xmlSaveFileEnc"] = createExportWrapper("xmlSaveFileEnc");

var _xmlSaveFormatFile = Module["_xmlSaveFormatFile"] = createExportWrapper("xmlSaveFormatFile");

var _sqlite3_status64 = Module["_sqlite3_status64"] = createExportWrapper("sqlite3_status64");

var _sqlite3_mutex_enter = Module["_sqlite3_mutex_enter"] = createExportWrapper("sqlite3_mutex_enter");

var _sqlite3_mutex_leave = Module["_sqlite3_mutex_leave"] = createExportWrapper("sqlite3_mutex_leave");

var _sqlite3_status = Module["_sqlite3_status"] = createExportWrapper("sqlite3_status");

var _sqlite3_db_status = Module["_sqlite3_db_status"] = createExportWrapper("sqlite3_db_status");

var _sqlite3_msize = Module["_sqlite3_msize"] = createExportWrapper("sqlite3_msize");

var _sqlite3_vfs_find = Module["_sqlite3_vfs_find"] = createExportWrapper("sqlite3_vfs_find");

var _sqlite3_initialize = Module["_sqlite3_initialize"] = createExportWrapper("sqlite3_initialize");

var _sqlite3_mutex_free = Module["_sqlite3_mutex_free"] = createExportWrapper("sqlite3_mutex_free");

var _sqlite3_vfs_register = Module["_sqlite3_vfs_register"] = createExportWrapper("sqlite3_vfs_register");

var _sqlite3_vfs_unregister = Module["_sqlite3_vfs_unregister"] = createExportWrapper("sqlite3_vfs_unregister");

var _sqlite3_mutex_alloc = Module["_sqlite3_mutex_alloc"] = createExportWrapper("sqlite3_mutex_alloc");

var _sqlite3_mutex_try = Module["_sqlite3_mutex_try"] = createExportWrapper("sqlite3_mutex_try");

var _sqlite3_release_memory = Module["_sqlite3_release_memory"] = createExportWrapper("sqlite3_release_memory");

var _sqlite3_memory_alarm = Module["_sqlite3_memory_alarm"] = createExportWrapper("sqlite3_memory_alarm");

var _sqlite3_soft_heap_limit64 = Module["_sqlite3_soft_heap_limit64"] = createExportWrapper("sqlite3_soft_heap_limit64");

var _sqlite3_memory_used = Module["_sqlite3_memory_used"] = createExportWrapper("sqlite3_memory_used");

var _sqlite3_soft_heap_limit = Module["_sqlite3_soft_heap_limit"] = createExportWrapper("sqlite3_soft_heap_limit");

var _sqlite3_hard_heap_limit64 = Module["_sqlite3_hard_heap_limit64"] = createExportWrapper("sqlite3_hard_heap_limit64");

var _sqlite3_memory_highwater = Module["_sqlite3_memory_highwater"] = createExportWrapper("sqlite3_memory_highwater");

var _sqlite3_malloc = Module["_sqlite3_malloc"] = createExportWrapper("sqlite3_malloc");

var _sqlite3_malloc64 = Module["_sqlite3_malloc64"] = createExportWrapper("sqlite3_malloc64");

var _sqlite3_realloc = Module["_sqlite3_realloc"] = createExportWrapper("sqlite3_realloc");

var _sqlite3_realloc64 = Module["_sqlite3_realloc64"] = createExportWrapper("sqlite3_realloc64");

var _sqlite3_str_vappendf = Module["_sqlite3_str_vappendf"] = createExportWrapper("sqlite3_str_vappendf");

var _sqlite3_str_append = Module["_sqlite3_str_append"] = createExportWrapper("sqlite3_str_append");

var ___lttf2 = Module["___lttf2"] = createExportWrapper("__lttf2");

var ___multf3 = Module["___multf3"] = createExportWrapper("__multf3");

var ___addtf3 = Module["___addtf3"] = createExportWrapper("__addtf3");

var ___gttf2 = Module["___gttf2"] = createExportWrapper("__gttf2");

var ___getf2 = Module["___getf2"] = createExportWrapper("__getf2");

var ___divtf3 = Module["___divtf3"] = createExportWrapper("__divtf3");

var _sqlite3_str_appendchar = Module["_sqlite3_str_appendchar"] = createExportWrapper("sqlite3_str_appendchar");

var _sqlite3_str_appendall = Module["_sqlite3_str_appendall"] = createExportWrapper("sqlite3_str_appendall");

var _sqlite3_str_appendf = Module["_sqlite3_str_appendf"] = createExportWrapper("sqlite3_str_appendf");

var _sqlite3_value_int64 = Module["_sqlite3_value_int64"] = createExportWrapper("sqlite3_value_int64");

var ___fixtfsi = Module["___fixtfsi"] = createExportWrapper("__fixtfsi");

var ___floatsitf = Module["___floatsitf"] = createExportWrapper("__floatsitf");

var ___subtf3 = Module["___subtf3"] = createExportWrapper("__subtf3");

var _sqlite3_str_reset = Module["_sqlite3_str_reset"] = createExportWrapper("sqlite3_str_reset");

var _sqlite3_str_finish = Module["_sqlite3_str_finish"] = createExportWrapper("sqlite3_str_finish");

var _sqlite3_str_errcode = Module["_sqlite3_str_errcode"] = createExportWrapper("sqlite3_str_errcode");

var _sqlite3_str_length = Module["_sqlite3_str_length"] = createExportWrapper("sqlite3_str_length");

var _sqlite3_str_value = Module["_sqlite3_str_value"] = createExportWrapper("sqlite3_str_value");

var _sqlite3_str_new = Module["_sqlite3_str_new"] = createExportWrapper("sqlite3_str_new");

var _sqlite3_vmprintf = Module["_sqlite3_vmprintf"] = createExportWrapper("sqlite3_vmprintf");

var _sqlite3_vsnprintf = Module["_sqlite3_vsnprintf"] = createExportWrapper("sqlite3_vsnprintf");

var _sqlite3_log = Module["_sqlite3_log"] = createExportWrapper("sqlite3_log");

var _sqlite3_randomness = Module["_sqlite3_randomness"] = createExportWrapper("sqlite3_randomness");

var _sqlite3_stricmp = Module["_sqlite3_stricmp"] = createExportWrapper("sqlite3_stricmp");

var _sqlite3_strnicmp = Module["_sqlite3_strnicmp"] = createExportWrapper("sqlite3_strnicmp");

var _sqlite3_os_init = Module["_sqlite3_os_init"] = createExportWrapper("sqlite3_os_init");

var _sqlite3_os_end = Module["_sqlite3_os_end"] = createExportWrapper("sqlite3_os_end");

var _sqlite3_serialize = Module["_sqlite3_serialize"] = createExportWrapper("sqlite3_serialize");

var _sqlite3_column_int = Module["_sqlite3_column_int"] = createExportWrapper("sqlite3_column_int");

var _sqlite3_file_control = Module["_sqlite3_file_control"] = createExportWrapper("sqlite3_file_control");

var _sqlite3_deserialize = Module["_sqlite3_deserialize"] = createExportWrapper("sqlite3_deserialize");

var _sqlite3_database_file_object = Module["_sqlite3_database_file_object"] = createExportWrapper("sqlite3_database_file_object");

var _sqlite3_enable_shared_cache = Module["_sqlite3_enable_shared_cache"] = createExportWrapper("sqlite3_enable_shared_cache");

var _sqlite3_backup_remaining = Module["_sqlite3_backup_remaining"] = createExportWrapper("sqlite3_backup_remaining");

var _sqlite3_backup_pagecount = Module["_sqlite3_backup_pagecount"] = createExportWrapper("sqlite3_backup_pagecount");

var _sqlite3_expired = Module["_sqlite3_expired"] = createExportWrapper("sqlite3_expired");

var _sqlite3_value_blob = Module["_sqlite3_value_blob"] = createExportWrapper("sqlite3_value_blob");

var _sqlite3_value_bytes16 = Module["_sqlite3_value_bytes16"] = createExportWrapper("sqlite3_value_bytes16");

var _sqlite3_value_subtype = Module["_sqlite3_value_subtype"] = createExportWrapper("sqlite3_value_subtype");

var _sqlite3_value_pointer = Module["_sqlite3_value_pointer"] = createExportWrapper("sqlite3_value_pointer");

var _sqlite3_value_text16 = Module["_sqlite3_value_text16"] = createExportWrapper("sqlite3_value_text16");

var _sqlite3_value_text16be = Module["_sqlite3_value_text16be"] = createExportWrapper("sqlite3_value_text16be");

var _sqlite3_value_text16le = Module["_sqlite3_value_text16le"] = createExportWrapper("sqlite3_value_text16le");

var _sqlite3_value_encoding = Module["_sqlite3_value_encoding"] = createExportWrapper("sqlite3_value_encoding");

var _sqlite3_value_nochange = Module["_sqlite3_value_nochange"] = createExportWrapper("sqlite3_value_nochange");

var _sqlite3_value_frombind = Module["_sqlite3_value_frombind"] = createExportWrapper("sqlite3_value_frombind");

var _sqlite3_value_dup = Module["_sqlite3_value_dup"] = createExportWrapper("sqlite3_value_dup");

var _sqlite3_value_free = Module["_sqlite3_value_free"] = createExportWrapper("sqlite3_value_free");

var _sqlite3_result_blob = Module["_sqlite3_result_blob"] = createExportWrapper("sqlite3_result_blob");

var _sqlite3_result_error_toobig = Module["_sqlite3_result_error_toobig"] = createExportWrapper("sqlite3_result_error_toobig");

var _sqlite3_result_error_nomem = Module["_sqlite3_result_error_nomem"] = createExportWrapper("sqlite3_result_error_nomem");

var _sqlite3_result_blob64 = Module["_sqlite3_result_blob64"] = createExportWrapper("sqlite3_result_blob64");

var _sqlite3_result_error16 = Module["_sqlite3_result_error16"] = createExportWrapper("sqlite3_result_error16");

var _sqlite3_result_int64 = Module["_sqlite3_result_int64"] = createExportWrapper("sqlite3_result_int64");

var _sqlite3_result_pointer = Module["_sqlite3_result_pointer"] = createExportWrapper("sqlite3_result_pointer");

var _sqlite3_result_subtype = Module["_sqlite3_result_subtype"] = createExportWrapper("sqlite3_result_subtype");

var _sqlite3_result_text64 = Module["_sqlite3_result_text64"] = createExportWrapper("sqlite3_result_text64");

var _sqlite3_result_text16 = Module["_sqlite3_result_text16"] = createExportWrapper("sqlite3_result_text16");

var _sqlite3_result_text16be = Module["_sqlite3_result_text16be"] = createExportWrapper("sqlite3_result_text16be");

var _sqlite3_result_text16le = Module["_sqlite3_result_text16le"] = createExportWrapper("sqlite3_result_text16le");

var _sqlite3_result_value = Module["_sqlite3_result_value"] = createExportWrapper("sqlite3_result_value");

var _sqlite3_result_zeroblob = Module["_sqlite3_result_zeroblob"] = createExportWrapper("sqlite3_result_zeroblob");

var _sqlite3_result_zeroblob64 = Module["_sqlite3_result_zeroblob64"] = createExportWrapper("sqlite3_result_zeroblob64");

var _sqlite3_result_error_code = Module["_sqlite3_result_error_code"] = createExportWrapper("sqlite3_result_error_code");

var _sqlite3_context_db_handle = Module["_sqlite3_context_db_handle"] = createExportWrapper("sqlite3_context_db_handle");

var _sqlite3_vtab_nochange = Module["_sqlite3_vtab_nochange"] = createExportWrapper("sqlite3_vtab_nochange");

var _sqlite3_vtab_in_first = Module["_sqlite3_vtab_in_first"] = createExportWrapper("sqlite3_vtab_in_first");

var _sqlite3_vtab_in_next = Module["_sqlite3_vtab_in_next"] = createExportWrapper("sqlite3_vtab_in_next");

var _sqlite3_get_auxdata = Module["_sqlite3_get_auxdata"] = createExportWrapper("sqlite3_get_auxdata");

var _sqlite3_set_auxdata = Module["_sqlite3_set_auxdata"] = createExportWrapper("sqlite3_set_auxdata");

var _sqlite3_aggregate_count = Module["_sqlite3_aggregate_count"] = createExportWrapper("sqlite3_aggregate_count");

var _sqlite3_column_bytes16 = Module["_sqlite3_column_bytes16"] = createExportWrapper("sqlite3_column_bytes16");

var _sqlite3_column_value = Module["_sqlite3_column_value"] = createExportWrapper("sqlite3_column_value");

var _sqlite3_column_text16 = Module["_sqlite3_column_text16"] = createExportWrapper("sqlite3_column_text16");

var _sqlite3_column_name16 = Module["_sqlite3_column_name16"] = createExportWrapper("sqlite3_column_name16");

var _sqlite3_column_decltype16 = Module["_sqlite3_column_decltype16"] = createExportWrapper("sqlite3_column_decltype16");

var _sqlite3_bind_blob64 = Module["_sqlite3_bind_blob64"] = createExportWrapper("sqlite3_bind_blob64");

var _sqlite3_bind_int64 = Module["_sqlite3_bind_int64"] = createExportWrapper("sqlite3_bind_int64");

var _sqlite3_bind_pointer = Module["_sqlite3_bind_pointer"] = createExportWrapper("sqlite3_bind_pointer");

var _sqlite3_bind_text64 = Module["_sqlite3_bind_text64"] = createExportWrapper("sqlite3_bind_text64");

var _sqlite3_bind_text16 = Module["_sqlite3_bind_text16"] = createExportWrapper("sqlite3_bind_text16");

var _sqlite3_bind_value = Module["_sqlite3_bind_value"] = createExportWrapper("sqlite3_bind_value");

var _sqlite3_bind_zeroblob = Module["_sqlite3_bind_zeroblob"] = createExportWrapper("sqlite3_bind_zeroblob");

var _sqlite3_bind_zeroblob64 = Module["_sqlite3_bind_zeroblob64"] = createExportWrapper("sqlite3_bind_zeroblob64");

var _sqlite3_bind_parameter_name = Module["_sqlite3_bind_parameter_name"] = createExportWrapper("sqlite3_bind_parameter_name");

var _sqlite3_transfer_bindings = Module["_sqlite3_transfer_bindings"] = createExportWrapper("sqlite3_transfer_bindings");

var _sqlite3_stmt_isexplain = Module["_sqlite3_stmt_isexplain"] = createExportWrapper("sqlite3_stmt_isexplain");

var _sqlite3_stmt_busy = Module["_sqlite3_stmt_busy"] = createExportWrapper("sqlite3_stmt_busy");

var _sqlite3_next_stmt = Module["_sqlite3_next_stmt"] = createExportWrapper("sqlite3_next_stmt");

var _sqlite3_stmt_status = Module["_sqlite3_stmt_status"] = createExportWrapper("sqlite3_stmt_status");

var _sqlite3_expanded_sql = Module["_sqlite3_expanded_sql"] = createExportWrapper("sqlite3_expanded_sql");

var _sqlite3_value_numeric_type = Module["_sqlite3_value_numeric_type"] = createExportWrapper("sqlite3_value_numeric_type");

var _sqlite3_blob_reopen = Module["_sqlite3_blob_reopen"] = createExportWrapper("sqlite3_blob_reopen");

var _sqlite3_strglob = Module["_sqlite3_strglob"] = createExportWrapper("sqlite3_strglob");

var _sqlite3_strlike = Module["_sqlite3_strlike"] = createExportWrapper("sqlite3_strlike");

var _sqlite3_auto_extension = Module["_sqlite3_auto_extension"] = createExportWrapper("sqlite3_auto_extension");

var _sqlite3_cancel_auto_extension = Module["_sqlite3_cancel_auto_extension"] = createExportWrapper("sqlite3_cancel_auto_extension");

var _sqlite3_reset_auto_extension = Module["_sqlite3_reset_auto_extension"] = createExportWrapper("sqlite3_reset_auto_extension");

var _sqlite3_prepare = Module["_sqlite3_prepare"] = createExportWrapper("sqlite3_prepare");

var _sqlite3_prepare_v3 = Module["_sqlite3_prepare_v3"] = createExportWrapper("sqlite3_prepare_v3");

var _sqlite3_prepare16 = Module["_sqlite3_prepare16"] = createExportWrapper("sqlite3_prepare16");

var _sqlite3_prepare16_v2 = Module["_sqlite3_prepare16_v2"] = createExportWrapper("sqlite3_prepare16_v2");

var _sqlite3_prepare16_v3 = Module["_sqlite3_prepare16_v3"] = createExportWrapper("sqlite3_prepare16_v3");

var _sqlite3_get_table = Module["_sqlite3_get_table"] = createExportWrapper("sqlite3_get_table");

var _sqlite3_free_table = Module["_sqlite3_free_table"] = createExportWrapper("sqlite3_free_table");

var _sqlite3_create_module = Module["_sqlite3_create_module"] = createExportWrapper("sqlite3_create_module");

var _sqlite3_create_module_v2 = Module["_sqlite3_create_module_v2"] = createExportWrapper("sqlite3_create_module_v2");

var _sqlite3_drop_modules = Module["_sqlite3_drop_modules"] = createExportWrapper("sqlite3_drop_modules");

var _sqlite3_declare_vtab = Module["_sqlite3_declare_vtab"] = createExportWrapper("sqlite3_declare_vtab");

var _sqlite3_vtab_on_conflict = Module["_sqlite3_vtab_on_conflict"] = createExportWrapper("sqlite3_vtab_on_conflict");

var _sqlite3_vtab_config = Module["_sqlite3_vtab_config"] = createExportWrapper("sqlite3_vtab_config");

var _sqlite3_vtab_collation = Module["_sqlite3_vtab_collation"] = createExportWrapper("sqlite3_vtab_collation");

var _sqlite3_vtab_in = Module["_sqlite3_vtab_in"] = createExportWrapper("sqlite3_vtab_in");

var _sqlite3_vtab_rhs_value = Module["_sqlite3_vtab_rhs_value"] = createExportWrapper("sqlite3_vtab_rhs_value");

var _sqlite3_vtab_distinct = Module["_sqlite3_vtab_distinct"] = createExportWrapper("sqlite3_vtab_distinct");

var _sqlite3_keyword_name = Module["_sqlite3_keyword_name"] = createExportWrapper("sqlite3_keyword_name");

var _sqlite3_keyword_count = Module["_sqlite3_keyword_count"] = createExportWrapper("sqlite3_keyword_count");

var _sqlite3_keyword_check = Module["_sqlite3_keyword_check"] = createExportWrapper("sqlite3_keyword_check");

var _sqlite3_complete = Module["_sqlite3_complete"] = createExportWrapper("sqlite3_complete");

var _sqlite3_complete16 = Module["_sqlite3_complete16"] = createExportWrapper("sqlite3_complete16");

var _sqlite3_threadsafe = Module["_sqlite3_threadsafe"] = createExportWrapper("sqlite3_threadsafe");

var _sqlite3_shutdown = Module["_sqlite3_shutdown"] = createExportWrapper("sqlite3_shutdown");

var _sqlite3_config = Module["_sqlite3_config"] = createExportWrapper("sqlite3_config");

var _sqlite3_db_mutex = Module["_sqlite3_db_mutex"] = createExportWrapper("sqlite3_db_mutex");

var _sqlite3_db_release_memory = Module["_sqlite3_db_release_memory"] = createExportWrapper("sqlite3_db_release_memory");

var _sqlite3_db_cacheflush = Module["_sqlite3_db_cacheflush"] = createExportWrapper("sqlite3_db_cacheflush");

var _sqlite3_set_last_insert_rowid = Module["_sqlite3_set_last_insert_rowid"] = createExportWrapper("sqlite3_set_last_insert_rowid");

var _sqlite3_changes64 = Module["_sqlite3_changes64"] = createExportWrapper("sqlite3_changes64");

var _sqlite3_total_changes64 = Module["_sqlite3_total_changes64"] = createExportWrapper("sqlite3_total_changes64");

var _sqlite3_total_changes = Module["_sqlite3_total_changes"] = createExportWrapper("sqlite3_total_changes");

var _sqlite3_txn_state = Module["_sqlite3_txn_state"] = createExportWrapper("sqlite3_txn_state");

var _sqlite3_close_v2 = Module["_sqlite3_close_v2"] = createExportWrapper("sqlite3_close_v2");

var _sqlite3_busy_handler = Module["_sqlite3_busy_handler"] = createExportWrapper("sqlite3_busy_handler");

var _sqlite3_progress_handler = Module["_sqlite3_progress_handler"] = createExportWrapper("sqlite3_progress_handler");

var _sqlite3_interrupt = Module["_sqlite3_interrupt"] = createExportWrapper("sqlite3_interrupt");

var _sqlite3_is_interrupted = Module["_sqlite3_is_interrupted"] = createExportWrapper("sqlite3_is_interrupted");

var _sqlite3_create_function_v2 = Module["_sqlite3_create_function_v2"] = createExportWrapper("sqlite3_create_function_v2");

var _sqlite3_create_window_function = Module["_sqlite3_create_window_function"] = createExportWrapper("sqlite3_create_window_function");

var _sqlite3_create_function16 = Module["_sqlite3_create_function16"] = createExportWrapper("sqlite3_create_function16");

var _sqlite3_overload_function = Module["_sqlite3_overload_function"] = createExportWrapper("sqlite3_overload_function");

var _sqlite3_trace = Module["_sqlite3_trace"] = createExportWrapper("sqlite3_trace");

var _sqlite3_trace_v2 = Module["_sqlite3_trace_v2"] = createExportWrapper("sqlite3_trace_v2");

var _sqlite3_profile = Module["_sqlite3_profile"] = createExportWrapper("sqlite3_profile");

var _sqlite3_commit_hook = Module["_sqlite3_commit_hook"] = createExportWrapper("sqlite3_commit_hook");

var _sqlite3_update_hook = Module["_sqlite3_update_hook"] = createExportWrapper("sqlite3_update_hook");

var _sqlite3_rollback_hook = Module["_sqlite3_rollback_hook"] = createExportWrapper("sqlite3_rollback_hook");

var _sqlite3_autovacuum_pages = Module["_sqlite3_autovacuum_pages"] = createExportWrapper("sqlite3_autovacuum_pages");

var _sqlite3_wal_autocheckpoint = Module["_sqlite3_wal_autocheckpoint"] = createExportWrapper("sqlite3_wal_autocheckpoint");

var _sqlite3_wal_hook = Module["_sqlite3_wal_hook"] = createExportWrapper("sqlite3_wal_hook");

var _sqlite3_wal_checkpoint = Module["_sqlite3_wal_checkpoint"] = createExportWrapper("sqlite3_wal_checkpoint");

var _sqlite3_wal_checkpoint_v2 = Module["_sqlite3_wal_checkpoint_v2"] = createExportWrapper("sqlite3_wal_checkpoint_v2");

var _sqlite3_error_offset = Module["_sqlite3_error_offset"] = createExportWrapper("sqlite3_error_offset");

var _sqlite3_errmsg16 = Module["_sqlite3_errmsg16"] = createExportWrapper("sqlite3_errmsg16");

var _sqlite3_system_errno = Module["_sqlite3_system_errno"] = createExportWrapper("sqlite3_system_errno");

var _sqlite3_errstr = Module["_sqlite3_errstr"] = createExportWrapper("sqlite3_errstr");

var _sqlite3_limit = Module["_sqlite3_limit"] = createExportWrapper("sqlite3_limit");

var _sqlite3_open = Module["_sqlite3_open"] = createExportWrapper("sqlite3_open");

var _sqlite3_free_filename = Module["_sqlite3_free_filename"] = createExportWrapper("sqlite3_free_filename");

var _sqlite3_open16 = Module["_sqlite3_open16"] = createExportWrapper("sqlite3_open16");

var _sqlite3_create_collation_v2 = Module["_sqlite3_create_collation_v2"] = createExportWrapper("sqlite3_create_collation_v2");

var _sqlite3_create_collation16 = Module["_sqlite3_create_collation16"] = createExportWrapper("sqlite3_create_collation16");

var _sqlite3_collation_needed = Module["_sqlite3_collation_needed"] = createExportWrapper("sqlite3_collation_needed");

var _sqlite3_collation_needed16 = Module["_sqlite3_collation_needed16"] = createExportWrapper("sqlite3_collation_needed16");

var _sqlite3_global_recover = Module["_sqlite3_global_recover"] = createExportWrapper("sqlite3_global_recover");

var _sqlite3_get_autocommit = Module["_sqlite3_get_autocommit"] = createExportWrapper("sqlite3_get_autocommit");

var _sqlite3_thread_cleanup = Module["_sqlite3_thread_cleanup"] = createExportWrapper("sqlite3_thread_cleanup");

var _sqlite3_table_column_metadata = Module["_sqlite3_table_column_metadata"] = createExportWrapper("sqlite3_table_column_metadata");

var _sqlite3_sleep = Module["_sqlite3_sleep"] = createExportWrapper("sqlite3_sleep");

var _sqlite3_test_control = Module["_sqlite3_test_control"] = createExportWrapper("sqlite3_test_control");

var _sqlite3_create_filename = Module["_sqlite3_create_filename"] = createExportWrapper("sqlite3_create_filename");

var _sqlite3_uri_parameter = Module["_sqlite3_uri_parameter"] = createExportWrapper("sqlite3_uri_parameter");

var _sqlite3_uri_key = Module["_sqlite3_uri_key"] = createExportWrapper("sqlite3_uri_key");

var _sqlite3_uri_boolean = Module["_sqlite3_uri_boolean"] = createExportWrapper("sqlite3_uri_boolean");

var _sqlite3_uri_int64 = Module["_sqlite3_uri_int64"] = createExportWrapper("sqlite3_uri_int64");

var _sqlite3_filename_database = Module["_sqlite3_filename_database"] = createExportWrapper("sqlite3_filename_database");

var _sqlite3_filename_journal = Module["_sqlite3_filename_journal"] = createExportWrapper("sqlite3_filename_journal");

var _sqlite3_filename_wal = Module["_sqlite3_filename_wal"] = createExportWrapper("sqlite3_filename_wal");

var _sqlite3_db_name = Module["_sqlite3_db_name"] = createExportWrapper("sqlite3_db_name");

var _sqlite3_db_filename = Module["_sqlite3_db_filename"] = createExportWrapper("sqlite3_db_filename");

var _sqlite3_db_readonly = Module["_sqlite3_db_readonly"] = createExportWrapper("sqlite3_db_readonly");

var _sqlite3_compileoption_used = Module["_sqlite3_compileoption_used"] = createExportWrapper("sqlite3_compileoption_used");

var _sqlite3_compileoption_get = Module["_sqlite3_compileoption_get"] = createExportWrapper("sqlite3_compileoption_get");

var _sqlite3_rtree_geometry_callback = Module["_sqlite3_rtree_geometry_callback"] = createExportWrapper("sqlite3_rtree_geometry_callback");

var _sqlite3_rtree_query_callback = Module["_sqlite3_rtree_query_callback"] = createExportWrapper("sqlite3_rtree_query_callback");

var _sqlite3_sourceid = Module["_sqlite3_sourceid"] = createExportWrapper("sqlite3_sourceid");

var _pthread_mutexattr_init = Module["_pthread_mutexattr_init"] = createExportWrapper("pthread_mutexattr_init");

var _pthread_mutexattr_settype = Module["_pthread_mutexattr_settype"] = createExportWrapper("pthread_mutexattr_settype");

var _pthread_mutex_init = Module["_pthread_mutex_init"] = createExportWrapper("pthread_mutex_init");

var _pthread_mutexattr_destroy = Module["_pthread_mutexattr_destroy"] = createExportWrapper("pthread_mutexattr_destroy");

var _pthread_mutex_destroy = Module["_pthread_mutex_destroy"] = createExportWrapper("pthread_mutex_destroy");

var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = createExportWrapper("pthread_mutex_lock");

var _pthread_mutex_trylock = Module["_pthread_mutex_trylock"] = createExportWrapper("pthread_mutex_trylock");

var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = createExportWrapper("pthread_mutex_unlock");

var _utimes = Module["_utimes"] = createExportWrapper("utimes");

var _pthread_join = Module["_pthread_join"] = createExportWrapper("pthread_join");

var ___floatditf = Module["___floatditf"] = createExportWrapper("__floatditf");

var _pthread_create = Module["_pthread_create"] = createExportWrapper("pthread_create");

var _posix_fallocate = Module["_posix_fallocate"] = createExportWrapper("posix_fallocate");

var _fchown = Module["_fchown"] = createExportWrapper("fchown");

var _trunc = Module["_trunc"] = createExportWrapper("trunc");

var _sqrt = Module["_sqrt"] = createExportWrapper("sqrt");

var _adler32_z = Module["_adler32_z"] = createExportWrapper("adler32_z");

var _adler32 = Module["_adler32"] = createExportWrapper("adler32");

var _adler32_combine = Module["_adler32_combine"] = createExportWrapper("adler32_combine");

var _adler32_combine64 = Module["_adler32_combine64"] = createExportWrapper("adler32_combine64");

var _get_crc_table = Module["_get_crc_table"] = createExportWrapper("get_crc_table");

var _crc32_z = Module["_crc32_z"] = createExportWrapper("crc32_z");

var _crc32_combine64 = Module["_crc32_combine64"] = createExportWrapper("crc32_combine64");

var _crc32_combine = Module["_crc32_combine"] = createExportWrapper("crc32_combine");

var _crc32_combine_gen64 = Module["_crc32_combine_gen64"] = createExportWrapper("crc32_combine_gen64");

var _crc32_combine_gen = Module["_crc32_combine_gen"] = createExportWrapper("crc32_combine_gen");

var _crc32_combine_op = Module["_crc32_combine_op"] = createExportWrapper("crc32_combine_op");

var _deflateInit_ = Module["_deflateInit_"] = createExportWrapper("deflateInit_");

var _zcalloc = Module["_zcalloc"] = createExportWrapper("zcalloc");

var _zcfree = Module["_zcfree"] = createExportWrapper("zcfree");

var _deflateReset = Module["_deflateReset"] = createExportWrapper("deflateReset");

var _deflateResetKeep = Module["_deflateResetKeep"] = createExportWrapper("deflateResetKeep");

var _deflateSetDictionary = Module["_deflateSetDictionary"] = createExportWrapper("deflateSetDictionary");

var _deflateGetDictionary = Module["_deflateGetDictionary"] = createExportWrapper("deflateGetDictionary");

var __tr_init = Module["__tr_init"] = createExportWrapper("_tr_init");

var _deflateSetHeader = Module["_deflateSetHeader"] = createExportWrapper("deflateSetHeader");

var _deflatePending = Module["_deflatePending"] = createExportWrapper("deflatePending");

var _deflatePrime = Module["_deflatePrime"] = createExportWrapper("deflatePrime");

var __tr_flush_bits = Module["__tr_flush_bits"] = createExportWrapper("_tr_flush_bits");

var _deflateParams = Module["_deflateParams"] = createExportWrapper("deflateParams");

var __tr_align = Module["__tr_align"] = createExportWrapper("_tr_align");

var __tr_stored_block = Module["__tr_stored_block"] = createExportWrapper("_tr_stored_block");

var _deflateTune = Module["_deflateTune"] = createExportWrapper("deflateTune");

var _deflateBound = Module["_deflateBound"] = createExportWrapper("deflateBound");

var __tr_flush_block = Module["__tr_flush_block"] = createExportWrapper("_tr_flush_block");

var _deflateCopy = Module["_deflateCopy"] = createExportWrapper("deflateCopy");

var _inflate_fast = Module["_inflate_fast"] = createExportWrapper("inflate_fast");

var _inflateResetKeep = Module["_inflateResetKeep"] = createExportWrapper("inflateResetKeep");

var _inflateReset = Module["_inflateReset"] = createExportWrapper("inflateReset");

var _inflateReset2 = Module["_inflateReset2"] = createExportWrapper("inflateReset2");

var _inflateInit_ = Module["_inflateInit_"] = createExportWrapper("inflateInit_");

var _inflatePrime = Module["_inflatePrime"] = createExportWrapper("inflatePrime");

var _inflate_table = Module["_inflate_table"] = createExportWrapper("inflate_table");

var _inflateGetDictionary = Module["_inflateGetDictionary"] = createExportWrapper("inflateGetDictionary");

var _inflateSetDictionary = Module["_inflateSetDictionary"] = createExportWrapper("inflateSetDictionary");

var _inflateGetHeader = Module["_inflateGetHeader"] = createExportWrapper("inflateGetHeader");

var _inflateSync = Module["_inflateSync"] = createExportWrapper("inflateSync");

var _inflateSyncPoint = Module["_inflateSyncPoint"] = createExportWrapper("inflateSyncPoint");

var _inflateCopy = Module["_inflateCopy"] = createExportWrapper("inflateCopy");

var _inflateUndermine = Module["_inflateUndermine"] = createExportWrapper("inflateUndermine");

var _inflateValidate = Module["_inflateValidate"] = createExportWrapper("inflateValidate");

var _inflateMark = Module["_inflateMark"] = createExportWrapper("inflateMark");

var _inflateCodesUsed = Module["_inflateCodesUsed"] = createExportWrapper("inflateCodesUsed");

var __tr_tally = Module["__tr_tally"] = createExportWrapper("_tr_tally");

var _zlibVersion = Module["_zlibVersion"] = createExportWrapper("zlibVersion");

var _zlibCompileFlags = Module["_zlibCompileFlags"] = createExportWrapper("zlibCompileFlags");

var _waitid = Module["_waitid"] = createExportWrapper("waitid");

var _times = Module["_times"] = createExportWrapper("times");

var _getdate = Module["_getdate"] = createExportWrapper("getdate");

var _stime = Module["_stime"] = createExportWrapper("stime");

var _clock_getcpuclockid = Module["_clock_getcpuclockid"] = createExportWrapper("clock_getcpuclockid");

var _getpwnam_r = Module["_getpwnam_r"] = createExportWrapper("getpwnam_r");

var _getpwuid_r = Module["_getpwuid_r"] = createExportWrapper("getpwuid_r");

var _setpwent = Module["_setpwent"] = createExportWrapper("setpwent");

var _endpwent = Module["_endpwent"] = createExportWrapper("endpwent");

var _getpwent = Module["_getpwent"] = createExportWrapper("getpwent");

var _getgrgid = Module["_getgrgid"] = createExportWrapper("getgrgid");

var _getgrnam_r = Module["_getgrnam_r"] = createExportWrapper("getgrnam_r");

var _getgrgid_r = Module["_getgrgid_r"] = createExportWrapper("getgrgid_r");

var _getgrent = Module["_getgrent"] = createExportWrapper("getgrent");

var _endgrent = Module["_endgrent"] = createExportWrapper("endgrent");

var _setgrent = Module["_setgrent"] = createExportWrapper("setgrent");

var _execve = Module["_execve"] = createExportWrapper("execve");

var _vfork = Module["_vfork"] = createExportWrapper("vfork");

var _posix_spawn = Module["_posix_spawn"] = createExportWrapper("posix_spawn");

var _setgroups = Module["_setgroups"] = createExportWrapper("setgroups");

var _sigaltstack = Module["_sigaltstack"] = createExportWrapper("sigaltstack");

var ___dlsym = Module["___dlsym"] = createExportWrapper("__dlsym");

var ___syscall_uname = Module["___syscall_uname"] = createExportWrapper("__syscall_uname");

var ___syscall_setpgid = Module["___syscall_setpgid"] = createExportWrapper("__syscall_setpgid");

var ___syscall_sync = Module["___syscall_sync"] = createExportWrapper("__syscall_sync");

var ___syscall_getsid = Module["___syscall_getsid"] = createExportWrapper("__syscall_getsid");

var ___syscall_getpgid = Module["___syscall_getpgid"] = createExportWrapper("__syscall_getpgid");

var ___syscall_getpid = Module["___syscall_getpid"] = createExportWrapper("__syscall_getpid");

var ___syscall_getppid = Module["___syscall_getppid"] = createExportWrapper("__syscall_getppid");

var ___syscall_linkat = Module["___syscall_linkat"] = createExportWrapper("__syscall_linkat");

var ___syscall_getgroups32 = Module["___syscall_getgroups32"] = createExportWrapper("__syscall_getgroups32");

var ___syscall_setsid = Module["___syscall_setsid"] = createExportWrapper("__syscall_setsid");

var ___syscall_umask = Module["___syscall_umask"] = createExportWrapper("__syscall_umask");

var ___syscall_setrlimit = Module["___syscall_setrlimit"] = createExportWrapper("__syscall_setrlimit");

var ___syscall_getrusage = Module["___syscall_getrusage"] = createExportWrapper("__syscall_getrusage");

var ___syscall_getpriority = Module["___syscall_getpriority"] = createExportWrapper("__syscall_getpriority");

var ___syscall_setpriority = Module["___syscall_setpriority"] = createExportWrapper("__syscall_setpriority");

var ___syscall_setdomainname = Module["___syscall_setdomainname"] = createExportWrapper("__syscall_setdomainname");

var ___syscall_getuid32 = Module["___syscall_getuid32"] = createExportWrapper("__syscall_getuid32");

var ___syscall_getgid32 = Module["___syscall_getgid32"] = createExportWrapper("__syscall_getgid32");

var ___syscall_geteuid32 = Module["___syscall_geteuid32"] = createExportWrapper("__syscall_geteuid32");

var ___syscall_getegid32 = Module["___syscall_getegid32"] = createExportWrapper("__syscall_getegid32");

var ___syscall_getresuid32 = Module["___syscall_getresuid32"] = createExportWrapper("__syscall_getresuid32");

var ___syscall_getresgid32 = Module["___syscall_getresgid32"] = createExportWrapper("__syscall_getresgid32");

var ___syscall_pause = Module["___syscall_pause"] = createExportWrapper("__syscall_pause");

var ___syscall_madvise = Module["___syscall_madvise"] = createExportWrapper("__syscall_madvise");

var ___syscall_mlock = Module["___syscall_mlock"] = createExportWrapper("__syscall_mlock");

var ___syscall_munlock = Module["___syscall_munlock"] = createExportWrapper("__syscall_munlock");

var ___syscall_mprotect = Module["___syscall_mprotect"] = createExportWrapper("__syscall_mprotect");

var ___syscall_mremap = Module["___syscall_mremap"] = createExportWrapper("__syscall_mremap");

var ___syscall_mlockall = Module["___syscall_mlockall"] = createExportWrapper("__syscall_mlockall");

var ___syscall_munlockall = Module["___syscall_munlockall"] = createExportWrapper("__syscall_munlockall");

var ___syscall_prlimit64 = Module["___syscall_prlimit64"] = createExportWrapper("__syscall_prlimit64");

var ___syscall_ugetrlimit = Module["___syscall_ugetrlimit"] = createExportWrapper("__syscall_ugetrlimit");

var ___syscall_setsockopt = Module["___syscall_setsockopt"] = createExportWrapper("__syscall_setsockopt");

var ___syscall_acct = Module["___syscall_acct"] = createExportWrapper("__syscall_acct");

var ___syscall_mincore = Module["___syscall_mincore"] = createExportWrapper("__syscall_mincore");

var ___syscall_pipe2 = Module["___syscall_pipe2"] = createExportWrapper("__syscall_pipe2");

var ___syscall_pselect6 = Module["___syscall_pselect6"] = createExportWrapper("__syscall_pselect6");

var ___syscall_recvmmsg = Module["___syscall_recvmmsg"] = createExportWrapper("__syscall_recvmmsg");

var ___syscall_sendmmsg = Module["___syscall_sendmmsg"] = createExportWrapper("__syscall_sendmmsg");

var ___syscall_shutdown = Module["___syscall_shutdown"] = createExportWrapper("__syscall_shutdown");

var ___syscall_socketpair = Module["___syscall_socketpair"] = createExportWrapper("__syscall_socketpair");

var ___syscall_wait4 = Module["___syscall_wait4"] = createExportWrapper("__syscall_wait4");

var __Exit = Module["__Exit"] = createExportWrapper("_Exit");

var ___get_tp = Module["___get_tp"] = createExportWrapper("__get_tp");

var ___emscripten_environ_constructor = Module["___emscripten_environ_constructor"] = createExportWrapper("__emscripten_environ_constructor");

var _emscripten_builtin_malloc = Module["_emscripten_builtin_malloc"] = createExportWrapper("emscripten_builtin_malloc");

var ___fmodeflags = Module["___fmodeflags"] = createExportWrapper("__fmodeflags");

var ___mo_lookup = Module["___mo_lookup"] = createExportWrapper("__mo_lookup");

var ___overflow = Module["___overflow"] = createExportWrapper("__overflow");

var ___randname = Module["___randname"] = createExportWrapper("__randname");

var ___wasi_syscall_ret = Module["___wasi_syscall_ret"] = createExportWrapper("__wasi_syscall_ret");

var ___uflow = Module["___uflow"] = createExportWrapper("__uflow");

var _alphasort64 = Module["_alphasort64"] = createExportWrapper("alphasort64");

var ___nl_langinfo_l = Module["___nl_langinfo_l"] = createExportWrapper("__nl_langinfo_l");

var _fabs = Module["_fabs"] = createExportWrapper("fabs");

var ___funcs_on_exit = createExportWrapper("__funcs_on_exit");

var ____cxa_finalize = Module["____cxa_finalize"] = createExportWrapper("___cxa_finalize");

var ____cxa_atexit = Module["____cxa_atexit"] = createExportWrapper("___cxa_atexit");

var ___atexit = Module["___atexit"] = createExportWrapper("__atexit");

var ___lock = Module["___lock"] = createExportWrapper("__lock");

var ___unlock = Module["___unlock"] = createExportWrapper("__unlock");

var ___libc_calloc = Module["___libc_calloc"] = createExportWrapper("__libc_calloc");

var ___cxa_atexit = Module["___cxa_atexit"] = createExportWrapper("__cxa_atexit");

var ___cxa_finalize = Module["___cxa_finalize"] = createExportWrapper("__cxa_finalize");

var _clearerr_unlocked = Module["_clearerr_unlocked"] = createExportWrapper("clearerr_unlocked");

var _clock_nanosleep = Module["_clock_nanosleep"] = createExportWrapper("clock_nanosleep");

var _copysignl = Module["_copysignl"] = createExportWrapper("copysignl");

var _scalbn = Module["_scalbn"] = createExportWrapper("scalbn");

var _floor = Module["_floor"] = createExportWrapper("floor");

var _creat64 = Module["_creat64"] = createExportWrapper("creat64");

var ___libc_free = Module["___libc_free"] = createExportWrapper("__libc_free");

var ___libc_malloc = Module["___libc_malloc"] = createExportWrapper("__libc_malloc");

var _dprintf = Module["_dprintf"] = createExportWrapper("dprintf");

var ___wasi_fd_is_valid = Module["___wasi_fd_is_valid"] = createExportWrapper("__wasi_fd_is_valid");

var _emscripten_get_heap_size = Module["_emscripten_get_heap_size"] = createExportWrapper("emscripten_get_heap_size");

var _emscripten_builtin_memcpy = Module["_emscripten_builtin_memcpy"] = createExportWrapper("emscripten_builtin_memcpy");

var ___memset = Module["___memset"] = createExportWrapper("__memset");

var _emscripten_builtin_memset = Module["_emscripten_builtin_memset"] = createExportWrapper("emscripten_builtin_memset");

var ___syscall_munmap = Module["___syscall_munmap"] = createExportWrapper("__syscall_munmap");

var ___syscall_msync = Module["___syscall_msync"] = createExportWrapper("__syscall_msync");

var ___syscall_mmap2 = Module["___syscall_mmap2"] = createExportWrapper("__syscall_mmap2");

var ___clock = Module["___clock"] = createExportWrapper("__clock");

var ___time = Module["___time"] = createExportWrapper("__time");

var ___clock_getres = Module["___clock_getres"] = createExportWrapper("__clock_getres");

var ___gettimeofday = Module["___gettimeofday"] = createExportWrapper("__gettimeofday");

var _dysize = Module["_dysize"] = createExportWrapper("dysize");

var _clock = Module["_clock"] = createExportWrapper("clock");

var _clock_getres = Module["_clock_getres"] = createExportWrapper("clock_getres");

var _execv = Module["_execv"] = createExportWrapper("execv");

var _execvpe = Module["_execvpe"] = createExportWrapper("execvpe");

var _fabsl = Module["_fabsl"] = createExportWrapper("fabsl");

var _feof_unlocked = Module["_feof_unlocked"] = createExportWrapper("feof_unlocked");

var __IO_feof_unlocked = Module["__IO_feof_unlocked"] = createExportWrapper("_IO_feof_unlocked");

var _ferror_unlocked = Module["_ferror_unlocked"] = createExportWrapper("ferror_unlocked");

var __IO_ferror_unlocked = Module["__IO_ferror_unlocked"] = createExportWrapper("_IO_ferror_unlocked");

var _fflush_unlocked = Module["_fflush_unlocked"] = createExportWrapper("fflush_unlocked");

var _emscripten_futex_wake = Module["_emscripten_futex_wake"] = createExportWrapper("emscripten_futex_wake");

var _fgets = Module["_fgets"] = createExportWrapper("fgets");

var _fgets_unlocked = Module["_fgets_unlocked"] = createExportWrapper("fgets_unlocked");

var _fileno_unlocked = Module["_fileno_unlocked"] = createExportWrapper("fileno_unlocked");

var _fmodl = Module["_fmodl"] = createExportWrapper("fmodl");

var _mbtowc = Module["_mbtowc"] = createExportWrapper("mbtowc");

var _towupper = Module["_towupper"] = createExportWrapper("towupper");

var _towlower = Module["_towlower"] = createExportWrapper("towlower");

var _wctype = Module["_wctype"] = createExportWrapper("wctype");

var _iswctype = Module["_iswctype"] = createExportWrapper("iswctype");

var _fopen64 = Module["_fopen64"] = createExportWrapper("fopen64");

var _vfiprintf = Module["_vfiprintf"] = createExportWrapper("vfiprintf");

var ___small_vfprintf = Module["___small_vfprintf"] = createExportWrapper("__small_vfprintf");

var _fputs_unlocked = Module["_fputs_unlocked"] = createExportWrapper("fputs_unlocked");

var _fread_unlocked = Module["_fread_unlocked"] = createExportWrapper("fread_unlocked");

var _frexp = Module["_frexp"] = createExportWrapper("frexp");

var _fseeko64 = Module["_fseeko64"] = createExportWrapper("fseeko64");

var _fstatat = Module["_fstatat"] = createExportWrapper("fstatat");

var _fstat64 = Module["_fstat64"] = createExportWrapper("fstat64");

var _fstatat64 = Module["_fstatat64"] = createExportWrapper("fstatat64");

var _ftello64 = Module["_ftello64"] = createExportWrapper("ftello64");

var _ftruncate64 = Module["_ftruncate64"] = createExportWrapper("ftruncate64");

var _futimesat = Module["_futimesat"] = createExportWrapper("futimesat");

var _fwrite_unlocked = Module["_fwrite_unlocked"] = createExportWrapper("fwrite_unlocked");

var __IO_getc = Module["__IO_getc"] = createExportWrapper("_IO_getc");

var _getpriority = Module["_getpriority"] = createExportWrapper("getpriority");

var _getservbyname_r = Module["_getservbyname_r"] = createExportWrapper("getservbyname_r");

var _getservbyport_r = Module["_getservbyport_r"] = createExportWrapper("getservbyport_r");

var _glob64 = Module["_glob64"] = createExportWrapper("glob64");

var _globfree64 = Module["_globfree64"] = createExportWrapper("globfree64");

var _wctomb = Module["_wctomb"] = createExportWrapper("wctomb");

var ___intscan = Module["___intscan"] = createExportWrapper("__intscan");

var ___isalnum_l = Module["___isalnum_l"] = createExportWrapper("__isalnum_l");

var _isalnum_l = Module["_isalnum_l"] = createExportWrapper("isalnum_l");

var ___isalpha_l = Module["___isalpha_l"] = createExportWrapper("__isalpha_l");

var _isalpha_l = Module["_isalpha_l"] = createExportWrapper("isalpha_l");

var _isblank = Module["_isblank"] = createExportWrapper("isblank");

var ___isblank_l = Module["___isblank_l"] = createExportWrapper("__isblank_l");

var _isblank_l = Module["_isblank_l"] = createExportWrapper("isblank_l");

var ___iscntrl_l = Module["___iscntrl_l"] = createExportWrapper("__iscntrl_l");

var _iscntrl_l = Module["_iscntrl_l"] = createExportWrapper("iscntrl_l");

var ___isdigit_l = Module["___isdigit_l"] = createExportWrapper("__isdigit_l");

var _isdigit_l = Module["_isdigit_l"] = createExportWrapper("isdigit_l");

var ___isgraph_l = Module["___isgraph_l"] = createExportWrapper("__isgraph_l");

var _isgraph_l = Module["_isgraph_l"] = createExportWrapper("isgraph_l");

var ___islower_l = Module["___islower_l"] = createExportWrapper("__islower_l");

var _islower_l = Module["_islower_l"] = createExportWrapper("islower_l");

var ___isprint_l = Module["___isprint_l"] = createExportWrapper("__isprint_l");

var _isprint_l = Module["_isprint_l"] = createExportWrapper("isprint_l");

var ___ispunct_l = Module["___ispunct_l"] = createExportWrapper("__ispunct_l");

var _ispunct_l = Module["_ispunct_l"] = createExportWrapper("ispunct_l");

var ___isspace_l = Module["___isspace_l"] = createExportWrapper("__isspace_l");

var _isspace_l = Module["_isspace_l"] = createExportWrapper("isspace_l");

var ___isupper_l = Module["___isupper_l"] = createExportWrapper("__isupper_l");

var _isupper_l = Module["_isupper_l"] = createExportWrapper("isupper_l");

var _iswalnum = Module["_iswalnum"] = createExportWrapper("iswalnum");

var ___iswalnum_l = Module["___iswalnum_l"] = createExportWrapper("__iswalnum_l");

var _iswalnum_l = Module["_iswalnum_l"] = createExportWrapper("iswalnum_l");

var _iswalpha = Module["_iswalpha"] = createExportWrapper("iswalpha");

var ___iswalpha_l = Module["___iswalpha_l"] = createExportWrapper("__iswalpha_l");

var _iswalpha_l = Module["_iswalpha_l"] = createExportWrapper("iswalpha_l");

var _iswblank = Module["_iswblank"] = createExportWrapper("iswblank");

var ___iswblank_l = Module["___iswblank_l"] = createExportWrapper("__iswblank_l");

var _iswblank_l = Module["_iswblank_l"] = createExportWrapper("iswblank_l");

var _iswcntrl = Module["_iswcntrl"] = createExportWrapper("iswcntrl");

var ___iswcntrl_l = Module["___iswcntrl_l"] = createExportWrapper("__iswcntrl_l");

var _iswcntrl_l = Module["_iswcntrl_l"] = createExportWrapper("iswcntrl_l");

var _iswdigit = Module["_iswdigit"] = createExportWrapper("iswdigit");

var _iswgraph = Module["_iswgraph"] = createExportWrapper("iswgraph");

var _iswlower = Module["_iswlower"] = createExportWrapper("iswlower");

var _iswprint = Module["_iswprint"] = createExportWrapper("iswprint");

var _iswpunct = Module["_iswpunct"] = createExportWrapper("iswpunct");

var _iswspace = Module["_iswspace"] = createExportWrapper("iswspace");

var _iswupper = Module["_iswupper"] = createExportWrapper("iswupper");

var _iswxdigit = Module["_iswxdigit"] = createExportWrapper("iswxdigit");

var ___iswctype_l = Module["___iswctype_l"] = createExportWrapper("__iswctype_l");

var ___wctype_l = Module["___wctype_l"] = createExportWrapper("__wctype_l");

var _iswctype_l = Module["_iswctype_l"] = createExportWrapper("iswctype_l");

var _wctype_l = Module["_wctype_l"] = createExportWrapper("wctype_l");

var ___iswdigit_l = Module["___iswdigit_l"] = createExportWrapper("__iswdigit_l");

var _iswdigit_l = Module["_iswdigit_l"] = createExportWrapper("iswdigit_l");

var ___iswgraph_l = Module["___iswgraph_l"] = createExportWrapper("__iswgraph_l");

var _iswgraph_l = Module["_iswgraph_l"] = createExportWrapper("iswgraph_l");

var ___iswlower_l = Module["___iswlower_l"] = createExportWrapper("__iswlower_l");

var _iswlower_l = Module["_iswlower_l"] = createExportWrapper("iswlower_l");

var ___iswprint_l = Module["___iswprint_l"] = createExportWrapper("__iswprint_l");

var _iswprint_l = Module["_iswprint_l"] = createExportWrapper("iswprint_l");

var ___iswpunct_l = Module["___iswpunct_l"] = createExportWrapper("__iswpunct_l");

var _iswpunct_l = Module["_iswpunct_l"] = createExportWrapper("iswpunct_l");

var _wcschr = Module["_wcschr"] = createExportWrapper("wcschr");

var ___iswspace_l = Module["___iswspace_l"] = createExportWrapper("__iswspace_l");

var _iswspace_l = Module["_iswspace_l"] = createExportWrapper("iswspace_l");

var ___iswupper_l = Module["___iswupper_l"] = createExportWrapper("__iswupper_l");

var _iswupper_l = Module["_iswupper_l"] = createExportWrapper("iswupper_l");

var ___iswxdigit_l = Module["___iswxdigit_l"] = createExportWrapper("__iswxdigit_l");

var _iswxdigit_l = Module["_iswxdigit_l"] = createExportWrapper("iswxdigit_l");

var ___isxdigit_l = Module["___isxdigit_l"] = createExportWrapper("__isxdigit_l");

var _isxdigit_l = Module["_isxdigit_l"] = createExportWrapper("isxdigit_l");

var _raise = Module["_raise"] = createExportWrapper("raise");

var ___nl_langinfo = Module["___nl_langinfo"] = createExportWrapper("__nl_langinfo");

var _nl_langinfo_l = Module["_nl_langinfo_l"] = createExportWrapper("nl_langinfo_l");

var _emscripten_has_threading_support = Module["_emscripten_has_threading_support"] = createExportWrapper("emscripten_has_threading_support");

var _emscripten_num_logical_cores = Module["_emscripten_num_logical_cores"] = createExportWrapper("emscripten_num_logical_cores");

var _emscripten_force_num_logical_cores = Module["_emscripten_force_num_logical_cores"] = createExportWrapper("emscripten_force_num_logical_cores");

var _emscripten_futex_wait = Module["_emscripten_futex_wait"] = createExportWrapper("emscripten_futex_wait");

var _emscripten_is_main_runtime_thread = Module["_emscripten_is_main_runtime_thread"] = createExportWrapper("emscripten_is_main_runtime_thread");

var _emscripten_main_thread_process_queued_calls = Module["_emscripten_main_thread_process_queued_calls"] = createExportWrapper("emscripten_main_thread_process_queued_calls");

var _emscripten_current_thread_process_queued_calls = Module["_emscripten_current_thread_process_queued_calls"] = createExportWrapper("emscripten_current_thread_process_queued_calls");

var __emscripten_yield = Module["__emscripten_yield"] = createExportWrapper("_emscripten_yield");

var __emscripten_check_timers = Module["__emscripten_check_timers"] = createExportWrapper("_emscripten_check_timers");

var _pthread_mutex_consistent = Module["_pthread_mutex_consistent"] = createExportWrapper("pthread_mutex_consistent");

var _pthread_barrier_init = Module["_pthread_barrier_init"] = createExportWrapper("pthread_barrier_init");

var _pthread_barrier_destroy = Module["_pthread_barrier_destroy"] = createExportWrapper("pthread_barrier_destroy");

var _pthread_barrier_wait = Module["_pthread_barrier_wait"] = createExportWrapper("pthread_barrier_wait");

var _pthread_getspecific = Module["_pthread_getspecific"] = createExportWrapper("pthread_getspecific");

var _pthread_setspecific = Module["_pthread_setspecific"] = createExportWrapper("pthread_setspecific");

var _pthread_cond_wait = Module["_pthread_cond_wait"] = createExportWrapper("pthread_cond_wait");

var _pthread_cond_signal = Module["_pthread_cond_signal"] = createExportWrapper("pthread_cond_signal");

var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = createExportWrapper("pthread_cond_broadcast");

var _pthread_cond_init = Module["_pthread_cond_init"] = createExportWrapper("pthread_cond_init");

var _pthread_cond_destroy = Module["_pthread_cond_destroy"] = createExportWrapper("pthread_cond_destroy");

var _pthread_atfork = Module["_pthread_atfork"] = createExportWrapper("pthread_atfork");

var _pthread_cancel = Module["_pthread_cancel"] = createExportWrapper("pthread_cancel");

var _pthread_testcancel = Module["_pthread_testcancel"] = createExportWrapper("pthread_testcancel");

var ___pthread_detach = Module["___pthread_detach"] = createExportWrapper("__pthread_detach");

var _pthread_equal = Module["_pthread_equal"] = createExportWrapper("pthread_equal");

var _pthread_mutexattr_setprotocol = Module["_pthread_mutexattr_setprotocol"] = createExportWrapper("pthread_mutexattr_setprotocol");

var _pthread_mutexattr_setpshared = Module["_pthread_mutexattr_setpshared"] = createExportWrapper("pthread_mutexattr_setpshared");

var _pthread_condattr_init = Module["_pthread_condattr_init"] = createExportWrapper("pthread_condattr_init");

var _pthread_condattr_destroy = Module["_pthread_condattr_destroy"] = createExportWrapper("pthread_condattr_destroy");

var _pthread_condattr_setclock = Module["_pthread_condattr_setclock"] = createExportWrapper("pthread_condattr_setclock");

var _pthread_condattr_setpshared = Module["_pthread_condattr_setpshared"] = createExportWrapper("pthread_condattr_setpshared");

var _pthread_getattr_np = Module["_pthread_getattr_np"] = createExportWrapper("pthread_getattr_np");

var _pthread_setcancelstate = Module["_pthread_setcancelstate"] = createExportWrapper("pthread_setcancelstate");

var _pthread_setcanceltype = Module["_pthread_setcanceltype"] = createExportWrapper("pthread_setcanceltype");

var _pthread_rwlock_init = Module["_pthread_rwlock_init"] = createExportWrapper("pthread_rwlock_init");

var _pthread_rwlock_destroy = Module["_pthread_rwlock_destroy"] = createExportWrapper("pthread_rwlock_destroy");

var _pthread_rwlock_rdlock = Module["_pthread_rwlock_rdlock"] = createExportWrapper("pthread_rwlock_rdlock");

var _pthread_rwlock_tryrdlock = Module["_pthread_rwlock_tryrdlock"] = createExportWrapper("pthread_rwlock_tryrdlock");

var _pthread_rwlock_timedrdlock = Module["_pthread_rwlock_timedrdlock"] = createExportWrapper("pthread_rwlock_timedrdlock");

var _pthread_rwlock_wrlock = Module["_pthread_rwlock_wrlock"] = createExportWrapper("pthread_rwlock_wrlock");

var _pthread_rwlock_trywrlock = Module["_pthread_rwlock_trywrlock"] = createExportWrapper("pthread_rwlock_trywrlock");

var _pthread_rwlock_timedwrlock = Module["_pthread_rwlock_timedwrlock"] = createExportWrapper("pthread_rwlock_timedwrlock");

var _pthread_rwlock_unlock = Module["_pthread_rwlock_unlock"] = createExportWrapper("pthread_rwlock_unlock");

var _pthread_rwlockattr_init = Module["_pthread_rwlockattr_init"] = createExportWrapper("pthread_rwlockattr_init");

var _pthread_rwlockattr_destroy = Module["_pthread_rwlockattr_destroy"] = createExportWrapper("pthread_rwlockattr_destroy");

var _pthread_rwlockattr_setpshared = Module["_pthread_rwlockattr_setpshared"] = createExportWrapper("pthread_rwlockattr_setpshared");

var _pthread_spin_init = Module["_pthread_spin_init"] = createExportWrapper("pthread_spin_init");

var _pthread_spin_destroy = Module["_pthread_spin_destroy"] = createExportWrapper("pthread_spin_destroy");

var _pthread_spin_lock = Module["_pthread_spin_lock"] = createExportWrapper("pthread_spin_lock");

var _pthread_spin_trylock = Module["_pthread_spin_trylock"] = createExportWrapper("pthread_spin_trylock");

var _pthread_spin_unlock = Module["_pthread_spin_unlock"] = createExportWrapper("pthread_spin_unlock");

var _sem_init = Module["_sem_init"] = createExportWrapper("sem_init");

var _sem_post = Module["_sem_post"] = createExportWrapper("sem_post");

var _sem_wait = Module["_sem_wait"] = createExportWrapper("sem_wait");

var _sem_trywait = Module["_sem_trywait"] = createExportWrapper("sem_trywait");

var _sem_destroy = Module["_sem_destroy"] = createExportWrapper("sem_destroy");

var _emscripten_thread_sleep = Module["_emscripten_thread_sleep"] = createExportWrapper("emscripten_thread_sleep");

var _pthread_mutex_timedlock = Module["_pthread_mutex_timedlock"] = createExportWrapper("pthread_mutex_timedlock");

var _emscripten_builtin_pthread_create = Module["_emscripten_builtin_pthread_create"] = createExportWrapper("emscripten_builtin_pthread_create");

var _emscripten_builtin_pthread_join = Module["_emscripten_builtin_pthread_join"] = createExportWrapper("emscripten_builtin_pthread_join");

var _pthread_key_delete = Module["_pthread_key_delete"] = createExportWrapper("pthread_key_delete");

var _pthread_key_create = Module["_pthread_key_create"] = createExportWrapper("pthread_key_create");

var _pthread_once = Module["_pthread_once"] = createExportWrapper("pthread_once");

var _pthread_cond_timedwait = Module["_pthread_cond_timedwait"] = createExportWrapper("pthread_cond_timedwait");

var _pthread_exit = Module["_pthread_exit"] = createExportWrapper("pthread_exit");

var _emscripten_builtin_pthread_detach = Module["_emscripten_builtin_pthread_detach"] = createExportWrapper("emscripten_builtin_pthread_detach");

var _pthread_detach = Module["_pthread_detach"] = createExportWrapper("pthread_detach");

var _thrd_detach = Module["_thrd_detach"] = createExportWrapper("thrd_detach");

var _lseek64 = Module["_lseek64"] = createExportWrapper("lseek64");

var _lstat64 = Module["_lstat64"] = createExportWrapper("lstat64");

var _mbsinit = Module["_mbsinit"] = createExportWrapper("mbsinit");

var _mkostemps = Module["_mkostemps"] = createExportWrapper("mkostemps");

var _mkostemps64 = Module["_mkostemps64"] = createExportWrapper("mkostemps64");

var _mkstemp64 = Module["_mkstemp64"] = createExportWrapper("mkstemp64");

var _timegm = Module["_timegm"] = createExportWrapper("timegm");

var _emscripten_builtin_free = Module["_emscripten_builtin_free"] = createExportWrapper("emscripten_builtin_free");

var _emscripten_builtin_memalign = createExportWrapper("emscripten_builtin_memalign");

var _emscripten_builtin_mmap = Module["_emscripten_builtin_mmap"] = createExportWrapper("emscripten_builtin_mmap");

var _mmap64 = Module["_mmap64"] = createExportWrapper("mmap64");

var _emscripten_builtin_munmap = Module["_emscripten_builtin_munmap"] = createExportWrapper("emscripten_builtin_munmap");

var _setpriority = Module["_setpriority"] = createExportWrapper("setpriority");

var _open64 = Module["_open64"] = createExportWrapper("open64");

var _tcsetattr = Module["_tcsetattr"] = createExportWrapper("tcsetattr");

var _posix_fallocate64 = Module["_posix_fallocate64"] = createExportWrapper("posix_fallocate64");

var _iprintf = Module["_iprintf"] = createExportWrapper("iprintf");

var ___small_printf = Module["___small_printf"] = createExportWrapper("__small_printf");

var _emscripten_main_runtime_thread_id = Module["_emscripten_main_runtime_thread_id"] = createExportWrapper("emscripten_main_runtime_thread_id");

var ___sig_is_blocked = Module["___sig_is_blocked"] = createExportWrapper("__sig_is_blocked");

var _pthread_sigmask = Module["_pthread_sigmask"] = createExportWrapper("pthread_sigmask");

var _sigpending = Module["_sigpending"] = createExportWrapper("sigpending");

var _qsort_r = Module["_qsort_r"] = createExportWrapper("qsort_r");

var _sigismember = Module["_sigismember"] = createExportWrapper("sigismember");

var _sigorset = Module["_sigorset"] = createExportWrapper("sigorset");

var _sigandset = Module["_sigandset"] = createExportWrapper("sigandset");

var _readdir64 = Module["_readdir64"] = createExportWrapper("readdir64");

var _emscripten_get_sbrk_ptr = Module["_emscripten_get_sbrk_ptr"] = createExportWrapper("emscripten_get_sbrk_ptr");

var _sbrk = Module["_sbrk"] = createExportWrapper("sbrk");

var _brk = Module["_brk"] = createExportWrapper("brk");

var _scalbnl = Module["_scalbnl"] = createExportWrapper("scalbnl");

var _scandir64 = Module["_scandir64"] = createExportWrapper("scandir64");

var ___getitimer = Module["___getitimer"] = createExportWrapper("__getitimer");

var __emscripten_timeout = createExportWrapper("_emscripten_timeout");

var _bsd_signal = Module["_bsd_signal"] = createExportWrapper("bsd_signal");

var ___sysv_signal = Module["___sysv_signal"] = createExportWrapper("__sysv_signal");

var _vsprintf = Module["_vsprintf"] = createExportWrapper("vsprintf");

var _vsiprintf = Module["_vsiprintf"] = createExportWrapper("vsiprintf");

var ___small_sprintf = Module["___small_sprintf"] = createExportWrapper("__small_sprintf");

var ___small_vsprintf = Module["___small_vsprintf"] = createExportWrapper("__small_vsprintf");

var _vsscanf = Module["_vsscanf"] = createExportWrapper("vsscanf");

var ___isoc99_sscanf = Module["___isoc99_sscanf"] = createExportWrapper("__isoc99_sscanf");

var _stat64 = Module["_stat64"] = createExportWrapper("stat64");

var _fstatvfs = Module["_fstatvfs"] = createExportWrapper("fstatvfs");

var _statfs = Module["_statfs"] = createExportWrapper("statfs");

var _fstatfs = Module["_fstatfs"] = createExportWrapper("fstatfs");

var _statvfs64 = Module["_statvfs64"] = createExportWrapper("statvfs64");

var _statfs64 = Module["_statfs64"] = createExportWrapper("statfs64");

var _fstatvfs64 = Module["_fstatvfs64"] = createExportWrapper("fstatvfs64");

var _fstatfs64 = Module["_fstatfs64"] = createExportWrapper("fstatfs64");

var _stpcpy = Module["_stpcpy"] = createExportWrapper("stpcpy");

var _stpncpy = Module["_stpncpy"] = createExportWrapper("stpncpy");

var ___strcasecmp_l = Module["___strcasecmp_l"] = createExportWrapper("__strcasecmp_l");

var _strcasecmp_l = Module["_strcasecmp_l"] = createExportWrapper("strcasecmp_l");

var _strchrnul = Module["_strchrnul"] = createExportWrapper("strchrnul");

var ___strcoll_l = Module["___strcoll_l"] = createExportWrapper("__strcoll_l");

var _strcoll_l = Module["_strcoll_l"] = createExportWrapper("strcoll_l");

var ___strerror_l = Module["___strerror_l"] = createExportWrapper("__strerror_l");

var _strerror_l = Module["_strerror_l"] = createExportWrapper("strerror_l");

var ___xpg_strerror_r = Module["___xpg_strerror_r"] = createExportWrapper("__xpg_strerror_r");

var ___strncasecmp_l = Module["___strncasecmp_l"] = createExportWrapper("__strncasecmp_l");

var _strncasecmp_l = Module["_strncasecmp_l"] = createExportWrapper("strncasecmp_l");

var _strtof = Module["_strtof"] = createExportWrapper("strtof");

var ___trunctfsf2 = Module["___trunctfsf2"] = createExportWrapper("__trunctfsf2");

var ___extendsftf2 = Module["___extendsftf2"] = createExportWrapper("__extendsftf2");

var ___netf2 = Module["___netf2"] = createExportWrapper("__netf2");

var ___floatunsitf = Module["___floatunsitf"] = createExportWrapper("__floatunsitf");

var ___eqtf2 = Module["___eqtf2"] = createExportWrapper("__eqtf2");

var ___letf2 = Module["___letf2"] = createExportWrapper("__letf2");

var _strtold = Module["_strtold"] = createExportWrapper("strtold");

var _strtoull = Module["_strtoull"] = createExportWrapper("strtoull");

var _strtoimax = Module["_strtoimax"] = createExportWrapper("strtoimax");

var _strtoumax = Module["_strtoumax"] = createExportWrapper("strtoumax");

var ___strtol_internal = Module["___strtol_internal"] = createExportWrapper("__strtol_internal");

var ___strtoul_internal = Module["___strtoul_internal"] = createExportWrapper("__strtoul_internal");

var ___strtoll_internal = Module["___strtoll_internal"] = createExportWrapper("__strtoll_internal");

var ___strtoull_internal = Module["___strtoull_internal"] = createExportWrapper("__strtoull_internal");

var ___strtoimax_internal = Module["___strtoimax_internal"] = createExportWrapper("__strtoimax_internal");

var ___strtoumax_internal = Module["___strtoumax_internal"] = createExportWrapper("__strtoumax_internal");

var _setlogmask = Module["_setlogmask"] = createExportWrapper("setlogmask");

var _vdprintf = Module["_vdprintf"] = createExportWrapper("vdprintf");

var _vsyslog = Module["_vsyslog"] = createExportWrapper("vsyslog");

var ___tolower_l = Module["___tolower_l"] = createExportWrapper("__tolower_l");

var _tolower_l = Module["_tolower_l"] = createExportWrapper("tolower_l");

var ___toupper_l = Module["___toupper_l"] = createExportWrapper("__toupper_l");

var _toupper_l = Module["_toupper_l"] = createExportWrapper("toupper_l");

var ___towupper_l = Module["___towupper_l"] = createExportWrapper("__towupper_l");

var ___towlower_l = Module["___towlower_l"] = createExportWrapper("__towlower_l");

var _towupper_l = Module["_towupper_l"] = createExportWrapper("towupper_l");

var _towlower_l = Module["_towlower_l"] = createExportWrapper("towlower_l");

var _utimensat = Module["_utimensat"] = createExportWrapper("utimensat");

var ___vfprintf_internal = Module["___vfprintf_internal"] = createExportWrapper("__vfprintf_internal");

var _vfscanf = Module["_vfscanf"] = createExportWrapper("vfscanf");

var ___isoc99_vfscanf = Module["___isoc99_vfscanf"] = createExportWrapper("__isoc99_vfscanf");

var _vsniprintf = Module["_vsniprintf"] = createExportWrapper("vsniprintf");

var ___small_vsnprintf = Module["___small_vsnprintf"] = createExportWrapper("__small_vsnprintf");

var ___isoc99_vsscanf = Module["___isoc99_vsscanf"] = createExportWrapper("__isoc99_vsscanf");

var _wcslen = Module["_wcslen"] = createExportWrapper("wcslen");

var ___libc_realloc = Module["___libc_realloc"] = createExportWrapper("__libc_realloc");

var _realloc_in_place = Module["_realloc_in_place"] = createExportWrapper("realloc_in_place");

var _memalign = Module["_memalign"] = createExportWrapper("memalign");

var _posix_memalign = Module["_posix_memalign"] = createExportWrapper("posix_memalign");

var _valloc = Module["_valloc"] = createExportWrapper("valloc");

var _pvalloc = Module["_pvalloc"] = createExportWrapper("pvalloc");

var _mallinfo = Module["_mallinfo"] = createExportWrapper("mallinfo");

var _mallopt = Module["_mallopt"] = createExportWrapper("mallopt");

var _malloc_trim = Module["_malloc_trim"] = createExportWrapper("malloc_trim");

var _malloc_usable_size = Module["_malloc_usable_size"] = createExportWrapper("malloc_usable_size");

var _malloc_footprint = Module["_malloc_footprint"] = createExportWrapper("malloc_footprint");

var _malloc_max_footprint = Module["_malloc_max_footprint"] = createExportWrapper("malloc_max_footprint");

var _malloc_footprint_limit = Module["_malloc_footprint_limit"] = createExportWrapper("malloc_footprint_limit");

var _malloc_set_footprint_limit = Module["_malloc_set_footprint_limit"] = createExportWrapper("malloc_set_footprint_limit");

var _independent_calloc = Module["_independent_calloc"] = createExportWrapper("independent_calloc");

var _independent_comalloc = Module["_independent_comalloc"] = createExportWrapper("independent_comalloc");

var _bulk_free = Module["_bulk_free"] = createExportWrapper("bulk_free");

var ___ashlti3 = Module["___ashlti3"] = createExportWrapper("__ashlti3");

var ___lshrti3 = Module["___lshrti3"] = createExportWrapper("__lshrti3");

var ___fe_getround = Module["___fe_getround"] = createExportWrapper("__fe_getround");

var ___fe_raise_inexact = Module["___fe_raise_inexact"] = createExportWrapper("__fe_raise_inexact");

var ___unordtf2 = Module["___unordtf2"] = createExportWrapper("__unordtf2");

var _setThrew = createExportWrapper("setThrew");

var _emscripten_stack_init = function() {
 return (_emscripten_stack_init = Module["asm"]["emscripten_stack_init"]).apply(null, arguments);
};

var _emscripten_stack_set_limits = function() {
 return (_emscripten_stack_set_limits = Module["asm"]["emscripten_stack_set_limits"]).apply(null, arguments);
};

var _emscripten_stack_get_free = function() {
 return (_emscripten_stack_get_free = Module["asm"]["emscripten_stack_get_free"]).apply(null, arguments);
};

var _emscripten_stack_get_base = function() {
 return (_emscripten_stack_get_base = Module["asm"]["emscripten_stack_get_base"]).apply(null, arguments);
};

var _emscripten_stack_get_end = function() {
 return (_emscripten_stack_get_end = Module["asm"]["emscripten_stack_get_end"]).apply(null, arguments);
};

var stackSave = createExportWrapper("stackSave");

var stackRestore = createExportWrapper("stackRestore");

var stackAlloc = createExportWrapper("stackAlloc");

var _emscripten_stack_get_current = function() {
 return (_emscripten_stack_get_current = Module["asm"]["emscripten_stack_get_current"]).apply(null, arguments);
};

var dynCall_iii = Module["dynCall_iii"] = createExportWrapper("dynCall_iii");

var dynCall_ii = Module["dynCall_ii"] = createExportWrapper("dynCall_ii");

var dynCall_vi = Module["dynCall_vi"] = createExportWrapper("dynCall_vi");

var dynCall_iiii = Module["dynCall_iiii"] = createExportWrapper("dynCall_iiii");

var dynCall_iiiii = Module["dynCall_iiiii"] = createExportWrapper("dynCall_iiiii");

var dynCall_iiiiii = Module["dynCall_iiiiii"] = createExportWrapper("dynCall_iiiiii");

var dynCall_vii = Module["dynCall_vii"] = createExportWrapper("dynCall_vii");

var dynCall_i = Module["dynCall_i"] = createExportWrapper("dynCall_i");

var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = createExportWrapper("dynCall_iiiiiii");

var dynCall_viii = Module["dynCall_viii"] = createExportWrapper("dynCall_viii");

var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiiii");

var dynCall_viiii = Module["dynCall_viiii"] = createExportWrapper("dynCall_viiii");

var dynCall_iij = Module["dynCall_iij"] = createExportWrapper("dynCall_iij");

var dynCall_jiijii = Module["dynCall_jiijii"] = createExportWrapper("dynCall_jiijii");

var dynCall_viiijii = Module["dynCall_viiijii"] = createExportWrapper("dynCall_viiijii");

var dynCall_vij = Module["dynCall_vij"] = createExportWrapper("dynCall_vij");

var dynCall_v = Module["dynCall_v"] = createExportWrapper("dynCall_v");

var dynCall_ji = Module["dynCall_ji"] = createExportWrapper("dynCall_ji");

var dynCall_viiiii = Module["dynCall_viiiii"] = createExportWrapper("dynCall_viiiii");

var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = createExportWrapper("dynCall_viiiiiiii");

var dynCall_viiiiii = Module["dynCall_viiiiii"] = createExportWrapper("dynCall_viiiiii");

var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = createExportWrapper("dynCall_viiiiiiiii");

var dynCall_viidii = Module["dynCall_viidii"] = createExportWrapper("dynCall_viidii");

var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = createExportWrapper("dynCall_iiiiiiii");

var dynCall_vidi = Module["dynCall_vidi"] = createExportWrapper("dynCall_vidi");

var dynCall_jiiji = Module["dynCall_jiiji"] = createExportWrapper("dynCall_jiiji");

var dynCall_jj = Module["dynCall_jj"] = createExportWrapper("dynCall_jj");

var dynCall_iiij = Module["dynCall_iiij"] = createExportWrapper("dynCall_iiij");

var dynCall_jiiiji = Module["dynCall_jiiiji"] = createExportWrapper("dynCall_jiiiji");

var dynCall_jiij = Module["dynCall_jiij"] = createExportWrapper("dynCall_jiij");

var dynCall_iiiji = Module["dynCall_iiiji"] = createExportWrapper("dynCall_iiiji");

var dynCall_jii = Module["dynCall_jii"] = createExportWrapper("dynCall_jii");

var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiii");

var dynCall_jiiii = Module["dynCall_jiiii"] = createExportWrapper("dynCall_jiiii");

var dynCall_iiid = Module["dynCall_iiid"] = createExportWrapper("dynCall_iiid");

var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = createExportWrapper("dynCall_viiiiiii");

var dynCall_ij = Module["dynCall_ij"] = createExportWrapper("dynCall_ij");

var dynCall_iiiij = Module["dynCall_iiiij"] = createExportWrapper("dynCall_iiiij");

var dynCall_vijii = Module["dynCall_vijii"] = createExportWrapper("dynCall_vijii");

var dynCall_iijj = Module["dynCall_iijj"] = createExportWrapper("dynCall_iijj");

var dynCall_iijii = Module["dynCall_iijii"] = createExportWrapper("dynCall_iijii");

var dynCall_iiji = Module["dynCall_iiji"] = createExportWrapper("dynCall_iiji");

var dynCall_iiiiiij = Module["dynCall_iiiiiij"] = createExportWrapper("dynCall_iiiiiij");

var dynCall_dii = Module["dynCall_dii"] = createExportWrapper("dynCall_dii");

var dynCall_vid = Module["dynCall_vid"] = createExportWrapper("dynCall_vid");

var dynCall_di = Module["dynCall_di"] = createExportWrapper("dynCall_di");

var dynCall_iiiiijii = Module["dynCall_iiiiijii"] = createExportWrapper("dynCall_iiiiijii");

var dynCall_j = Module["dynCall_j"] = createExportWrapper("dynCall_j");

var dynCall_iiiiji = Module["dynCall_iiiiji"] = createExportWrapper("dynCall_iiiiji");

var dynCall_iiiijii = Module["dynCall_iiiijii"] = createExportWrapper("dynCall_iiiijii");

var dynCall_viiji = Module["dynCall_viiji"] = createExportWrapper("dynCall_viiji");

var dynCall_viijii = Module["dynCall_viijii"] = createExportWrapper("dynCall_viijii");

var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = createExportWrapper("dynCall_iiiiiiiiiii");

var dynCall_iiiijji = Module["dynCall_iiiijji"] = createExportWrapper("dynCall_iiiijji");

var dynCall_dd = Module["dynCall_dd"] = createExportWrapper("dynCall_dd");

var dynCall_ddd = Module["dynCall_ddd"] = createExportWrapper("dynCall_ddd");

var dynCall_jiji = Module["dynCall_jiji"] = createExportWrapper("dynCall_jiji");

var dynCall_iidiiii = Module["dynCall_iidiiii"] = createExportWrapper("dynCall_iidiiii");

var _asyncify_start_unwind = createExportWrapper("asyncify_start_unwind");

var _asyncify_stop_unwind = createExportWrapper("asyncify_stop_unwind");

var _asyncify_start_rewind = createExportWrapper("asyncify_start_rewind");

var _asyncify_stop_rewind = createExportWrapper("asyncify_stop_rewind");

var _std_object_handlers = Module["_std_object_handlers"] = 2302192;

var _zend_ce_aggregate = Module["_zend_ce_aggregate"] = 4058640;

var _zend_empty_string = Module["_zend_empty_string"] = 4059940;

var _executor_globals = Module["_executor_globals"] = 4055672;

var _zend_string_init_interned = Module["_zend_string_init_interned"] = 4059996;

var _sapi_module = Module["_sapi_module"] = 4054256;

var _xmlParserVersion = Module["_xmlParserVersion"] = 3932436;

var _xmlFree = Module["_xmlFree"] = 3932416;

var _xmlGenericError = Module["_xmlGenericError"] = 3932456;

var _core_globals = Module["_core_globals"] = 4053704;

var _xmlStructuredError = Module["_xmlStructuredError"] = 4074668;

var _zend_empty_array = Module["_zend_empty_array"] = 2280140;

var _file_globals = Module["_file_globals"] = 4052704;

var _php_stream_http_wrapper = Module["_php_stream_http_wrapper"] = 2210280;

var _php_stream_ftp_wrapper = Module["_php_stream_ftp_wrapper"] = 2210224;

var _zend_ce_value_error = Module["_zend_ce_value_error"] = 4058900;

var _compiler_globals = Module["_compiler_globals"] = 4055320;

var _zend_known_strings = Module["_zend_known_strings"] = 4059944;

var _zend_ce_exception = Module["_zend_ce_exception"] = 4058780;

var _php_stream_socket_ops = Module["_php_stream_socket_ops"] = 2224256;

var _basic_globals = Module["_basic_globals"] = 4043512;

var _pcre_globals = Module["_pcre_globals"] = 3968528;

var _zend_one_char_string = Module["_zend_one_char_string"] = 4060016;

var _empty_fcall_info = Module["_empty_fcall_info"] = 2278880;

var _empty_fcall_info_cache = Module["_empty_fcall_info_cache"] = 2278928;

var _zend_ce_division_by_zero_error = Module["_zend_ce_division_by_zero_error"] = 4058908;

var _dom_node_class_entry = Module["_dom_node_class_entry"] = 3969040;

var _dom_document_class_entry = Module["_dom_document_class_entry"] = 3969644;

var _dom_documenttype_class_entry = Module["_dom_documenttype_class_entry"] = 3969988;

var _dom_element_class_entry = Module["_dom_element_class_entry"] = 3969884;

var _dom_attr_class_entry = Module["_dom_attr_class_entry"] = 3969836;

var _dom_text_class_entry = Module["_dom_text_class_entry"] = 3969932;

var _dom_comment_class_entry = Module["_dom_comment_class_entry"] = 3969980;

var _dom_processinginstruction_class_entry = Module["_dom_processinginstruction_class_entry"] = 3970136;

var _dom_entityreference_class_entry = Module["_dom_entityreference_class_entry"] = 3970132;

var _dom_entity_class_entry = Module["_dom_entity_class_entry"] = 3970084;

var _dom_cdatasection_class_entry = Module["_dom_cdatasection_class_entry"] = 3969984;

var _dom_documentfragment_class_entry = Module["_dom_documentfragment_class_entry"] = 3969596;

var _dom_notation_class_entry = Module["_dom_notation_class_entry"] = 3970036;

var _dom_namespace_node_class_entry = Module["_dom_namespace_node_class_entry"] = 3969548;

var _dom_domexception_class_entry = Module["_dom_domexception_class_entry"] = 3969488;

var _dom_parentnode_class_entry = Module["_dom_parentnode_class_entry"] = 3969492;

var _dom_childnode_class_entry = Module["_dom_childnode_class_entry"] = 3969496;

var _dom_domimplementation_class_entry = Module["_dom_domimplementation_class_entry"] = 3969500;

var _zend_ce_countable = Module["_zend_ce_countable"] = 4058656;

var _dom_nodelist_class_entry = Module["_dom_nodelist_class_entry"] = 3969692;

var _dom_namednodemap_class_entry = Module["_dom_namednodemap_class_entry"] = 3969740;

var _dom_characterdata_class_entry = Module["_dom_characterdata_class_entry"] = 3969788;

var _dom_xpath_class_entry = Module["_dom_xpath_class_entry"] = 3970284;

var _xmlMalloc = Module["_xmlMalloc"] = 3932420;

var _xmlSaveNoEmptyTags = Module["_xmlSaveNoEmptyTags"] = 4074680;

var _xmlLoadExtDtdDefaultValue = Module["_xmlLoadExtDtdDefaultValue"] = 4074636;

var _xmlDoValidityCheckingDefaultValue = Module["_xmlDoValidityCheckingDefaultValue"] = 4074632;

var _xmlGenericErrorContext = Module["_xmlGenericErrorContext"] = 4074672;

var _php_hashcontext_ce = Module["_php_hashcontext_ce"] = 3970468;

var _zend_ce_error = Module["_zend_ce_error"] = 4058896;

var __libiconv_version = Module["__libiconv_version"] = 3916836;

var _sapi_globals = Module["_sapi_globals"] = 4054400;

var _php_json_serializable_ce = Module["_php_json_serializable_ce"] = 3970620;

var _php_json_exception_ce = Module["_php_json_exception_ce"] = 3970616;

var _json_globals = Module["_json_globals"] = 3970604;

var _php_internal_encoding_changed = Module["_php_internal_encoding_changed"] = 4054120;

var _mbfl_encoding_pass = Module["_mbfl_encoding_pass"] = 1983548;

var _vtbl_pass = Module["_vtbl_pass"] = 1983592;

var _spl_ce_RuntimeException = Module["_spl_ce_RuntimeException"] = 3973156;

var _module_registry = Module["_module_registry"] = 4056904;

var _zend_observer_fcall_op_array_extension = Module["_zend_observer_fcall_op_array_extension"] = 4067732;

var _zend_standard_class_def = Module["_zend_standard_class_def"] = 4056816;

var ___THREW__ = Module["___THREW__"] = 4089600;

var ___threwValue = Module["___threwValue"] = 4089604;

var _ps_globals = Module["_ps_globals"] = 3971952;

var _random_ce_Random_BrokenRandomEngineError = Module["_random_ce_Random_BrokenRandomEngineError"] = 3971208;

var _php_random_algo_mt19937 = Module["_php_random_algo_mt19937"] = 1991436;

var _random_globals = Module["_random_globals"] = 3971172;

var _php_random_algo_combinedlcg = Module["_php_random_algo_combinedlcg"] = 1991408;

var _random_ce_Random_RandomException = Module["_random_ce_Random_RandomException"] = 3971192;

var _random_ce_Random_Engine = Module["_random_ce_Random_Engine"] = 3971196;

var _random_ce_Random_CryptoSafeEngine = Module["_random_ce_Random_CryptoSafeEngine"] = 3971200;

var _random_ce_Random_RandomError = Module["_random_ce_Random_RandomError"] = 3971204;

var _random_ce_Random_Engine_Mt19937 = Module["_random_ce_Random_Engine_Mt19937"] = 3971212;

var _random_ce_Random_Engine_PcgOneseq128XslRr64 = Module["_random_ce_Random_Engine_PcgOneseq128XslRr64"] = 3971316;

var _random_ce_Random_Engine_Xoshiro256StarStar = Module["_random_ce_Random_Engine_Xoshiro256StarStar"] = 3971420;

var _random_ce_Random_Engine_Secure = Module["_random_ce_Random_Engine_Secure"] = 3971524;

var _random_ce_Random_Randomizer = Module["_random_ce_Random_Randomizer"] = 3971628;

var _php_random_algo_pcgoneseq128xslrr64 = Module["_php_random_algo_pcgoneseq128xslrr64"] = 1991464;

var _php_random_algo_xoshiro256starstar = Module["_php_random_algo_xoshiro256starstar"] = 1991492;

var _php_random_algo_secure = Module["_php_random_algo_secure"] = 1991584;

var _php_random_algo_user = Module["_php_random_algo_user"] = 1991612;

var _reflection_enum_ptr = Module["_reflection_enum_ptr"] = 3971732;

var _reflection_class_ptr = Module["_reflection_class_ptr"] = 3971736;

var _reflection_exception_ptr = Module["_reflection_exception_ptr"] = 3971740;

var _zend_ce_closure = Module["_zend_ce_closure"] = 4059628;

var _reflection_parameter_ptr = Module["_reflection_parameter_ptr"] = 3971888;

var _reflection_extension_ptr = Module["_reflection_extension_ptr"] = 3971924;

var _zend_ce_generator = Module["_zend_ce_generator"] = 4063272;

var _reflection_function_ptr = Module["_reflection_function_ptr"] = 3971880;

var _reflection_method_ptr = Module["_reflection_method_ptr"] = 3971908;

var _reflection_intersection_type_ptr = Module["_reflection_intersection_type_ptr"] = 3971904;

var _reflection_union_type_ptr = Module["_reflection_union_type_ptr"] = 3971900;

var _reflection_named_type_ptr = Module["_reflection_named_type_ptr"] = 3971896;

var _reflection_property_ptr = Module["_reflection_property_ptr"] = 3971916;

var _reflection_class_constant_ptr = Module["_reflection_class_constant_ptr"] = 3971920;

var _zend_ce_traversable = Module["_zend_ce_traversable"] = 4058636;

var _reflection_reference_ptr = Module["_reflection_reference_ptr"] = 3971744;

var _reflection_enum_unit_case_ptr = Module["_reflection_enum_unit_case_ptr"] = 3971936;

var _reflection_enum_backed_case_ptr = Module["_reflection_enum_backed_case_ptr"] = 3971940;

var _zend_ce_fiber = Module["_zend_ce_fiber"] = 4068056;

var _reflection_ptr = Module["_reflection_ptr"] = 3971868;

var _zend_ce_stringable = Module["_zend_ce_stringable"] = 4058660;

var _reflector_ptr = Module["_reflector_ptr"] = 3971872;

var _reflection_function_abstract_ptr = Module["_reflection_function_abstract_ptr"] = 3971876;

var _reflection_generator_ptr = Module["_reflection_generator_ptr"] = 3971884;

var _reflection_type_ptr = Module["_reflection_type_ptr"] = 3971892;

var _reflection_object_ptr = Module["_reflection_object_ptr"] = 3971912;

var _reflection_zend_extension_ptr = Module["_reflection_zend_extension_ptr"] = 3971928;

var _reflection_attribute_ptr = Module["_reflection_attribute_ptr"] = 3971932;

var _reflection_fiber_ptr = Module["_reflection_fiber_ptr"] = 3971944;

var _php_session_iface_entry = Module["_php_session_iface_entry"] = 3972264;

var _php_session_id_iface_entry = Module["_php_session_id_iface_entry"] = 3972268;

var _php_session_update_timestamp_iface_entry = Module["_php_session_update_timestamp_iface_entry"] = 3972272;

var _php_rfc1867_callback = Module["_php_rfc1867_callback"] = 4054752;

var _php_session_class_entry = Module["_php_session_class_entry"] = 3972276;

var _spl_ce_RecursiveIterator = Module["_spl_ce_RecursiveIterator"] = 3972428;

var _ce_SimpleXMLElement = Module["_ce_SimpleXMLElement"] = 3972392;

var _ce_SimpleXMLIterator = Module["_ce_SimpleXMLIterator"] = 3972396;

var _spl_ce_AppendIterator = Module["_spl_ce_AppendIterator"] = 3972472;

var _spl_ce_ArrayIterator = Module["_spl_ce_ArrayIterator"] = 3972688;

var _spl_ce_ArrayObject = Module["_spl_ce_ArrayObject"] = 3972692;

var _spl_ce_BadFunctionCallException = Module["_spl_ce_BadFunctionCallException"] = 3973132;

var _spl_ce_BadMethodCallException = Module["_spl_ce_BadMethodCallException"] = 3973136;

var _spl_ce_CachingIterator = Module["_spl_ce_CachingIterator"] = 3972452;

var _spl_ce_CallbackFilterIterator = Module["_spl_ce_CallbackFilterIterator"] = 3972420;

var _spl_ce_DirectoryIterator = Module["_spl_ce_DirectoryIterator"] = 3973012;

var _spl_ce_DomainException = Module["_spl_ce_DomainException"] = 3973140;

var _spl_ce_EmptyIterator = Module["_spl_ce_EmptyIterator"] = 3972684;

var _spl_ce_FilesystemIterator = Module["_spl_ce_FilesystemIterator"] = 3973016;

var _spl_ce_FilterIterator = Module["_spl_ce_FilterIterator"] = 3972416;

var _spl_ce_GlobIterator = Module["_spl_ce_GlobIterator"] = 3973120;

var _spl_ce_InfiniteIterator = Module["_spl_ce_InfiniteIterator"] = 3972468;

var _spl_ce_InvalidArgumentException = Module["_spl_ce_InvalidArgumentException"] = 3973144;

var _spl_ce_IteratorIterator = Module["_spl_ce_IteratorIterator"] = 3972460;

var _spl_ce_LengthException = Module["_spl_ce_LengthException"] = 3973148;

var _spl_ce_LimitIterator = Module["_spl_ce_LimitIterator"] = 3972448;

var _spl_ce_LogicException = Module["_spl_ce_LogicException"] = 3973128;

var _spl_ce_MultipleIterator = Module["_spl_ce_MultipleIterator"] = 3973292;

var _spl_ce_NoRewindIterator = Module["_spl_ce_NoRewindIterator"] = 3972464;

var _spl_ce_OuterIterator = Module["_spl_ce_OuterIterator"] = 3972476;

var _spl_ce_OutOfBoundsException = Module["_spl_ce_OutOfBoundsException"] = 3973160;

var _spl_ce_OutOfRangeException = Module["_spl_ce_OutOfRangeException"] = 3973152;

var _spl_ce_OverflowException = Module["_spl_ce_OverflowException"] = 3973164;

var _spl_ce_ParentIterator = Module["_spl_ce_ParentIterator"] = 3972436;

var _spl_ce_RangeException = Module["_spl_ce_RangeException"] = 3973168;

var _spl_ce_RecursiveArrayIterator = Module["_spl_ce_RecursiveArrayIterator"] = 3972896;

var _spl_ce_RecursiveCachingIterator = Module["_spl_ce_RecursiveCachingIterator"] = 3972456;

var _spl_ce_RecursiveCallbackFilterIterator = Module["_spl_ce_RecursiveCallbackFilterIterator"] = 3972424;

var _spl_ce_RecursiveDirectoryIterator = Module["_spl_ce_RecursiveDirectoryIterator"] = 3972900;

var _spl_ce_RecursiveFilterIterator = Module["_spl_ce_RecursiveFilterIterator"] = 3972432;

var _spl_ce_RecursiveIteratorIterator = Module["_spl_ce_RecursiveIteratorIterator"] = 3972408;

var _spl_ce_RecursiveRegexIterator = Module["_spl_ce_RecursiveRegexIterator"] = 3972444;

var _spl_ce_RecursiveTreeIterator = Module["_spl_ce_RecursiveTreeIterator"] = 3972412;

var _spl_ce_RegexIterator = Module["_spl_ce_RegexIterator"] = 3972440;

var _spl_ce_SeekableIterator = Module["_spl_ce_SeekableIterator"] = 3972680;

var _spl_ce_SplDoublyLinkedList = Module["_spl_ce_SplDoublyLinkedList"] = 3973296;

var _spl_ce_SplFileInfo = Module["_spl_ce_SplFileInfo"] = 3972908;

var _spl_ce_SplFileObject = Module["_spl_ce_SplFileObject"] = 3972904;

var _spl_ce_SplFixedArray = Module["_spl_ce_SplFixedArray"] = 3973624;

var _spl_ce_SplHeap = Module["_spl_ce_SplHeap"] = 3973408;

var _spl_ce_SplMinHeap = Module["_spl_ce_SplMinHeap"] = 3973516;

var _spl_ce_SplMaxHeap = Module["_spl_ce_SplMaxHeap"] = 3973520;

var _spl_ce_SplObjectStorage = Module["_spl_ce_SplObjectStorage"] = 3973180;

var _spl_ce_SplObserver = Module["_spl_ce_SplObserver"] = 3973184;

var _spl_ce_SplPriorityQueue = Module["_spl_ce_SplPriorityQueue"] = 3973412;

var _spl_ce_SplQueue = Module["_spl_ce_SplQueue"] = 3973400;

var _spl_ce_SplStack = Module["_spl_ce_SplStack"] = 3973404;

var _spl_ce_SplSubject = Module["_spl_ce_SplSubject"] = 3973188;

var _spl_ce_SplTempFileObject = Module["_spl_ce_SplTempFileObject"] = 3973124;

var _spl_ce_UnderflowException = Module["_spl_ce_UnderflowException"] = 3973172;

var _spl_ce_UnexpectedValueException = Module["_spl_ce_UnexpectedValueException"] = 3973176;

var _zend_compile_file = Module["_zend_compile_file"] = 4056784;

var _zend_autoload = Module["_zend_autoload"] = 4056812;

var _zend_ce_iterator = Module["_zend_ce_iterator"] = 4058644;

var _zend_ce_arrayaccess = Module["_zend_ce_arrayaccess"] = 4058652;

var _zend_ce_serializable = Module["_zend_ce_serializable"] = 4058648;

var _php_glob_stream_ops = Module["_php_glob_stream_ops"] = 2224412;

var _spl_handler_SplObjectStorage = Module["_spl_handler_SplObjectStorage"] = 3973192;

var _php_ce_incomplete_class = Module["_php_ce_incomplete_class"] = 4053024;

var _assertion_error_ce = Module["_assertion_error_ce"] = 4052920;

var _php_stream_php_wrapper = Module["_php_stream_php_wrapper"] = 2210408;

var _php_plain_files_wrapper = Module["_php_plain_files_wrapper"] = 3713520;

var _php_glob_stream_wrapper = Module["_php_glob_stream_wrapper"] = 2224492;

var _php_stream_rfc2397_wrapper = Module["_php_stream_rfc2397_wrapper"] = 2224012;

var _php_import_environment_variables = Module["_php_import_environment_variables"] = 3713456;

var _environ = Module["_environ"] = 4076044;

var _php_optidx = Module["_php_optidx"] = 3713468;

var _zend_new_interned_string = Module["_zend_new_interned_string"] = 4059992;

var _php_stream_stdio_ops = Module["_php_stream_stdio_ops"] = 3713532;

var _php_sig_gif = Module["_php_sig_gif"] = 2207120;

var _php_sig_jpg = Module["_php_sig_jpg"] = 2207135;

var _php_sig_png = Module["_php_sig_png"] = 2207138;

var _php_sig_swf = Module["_php_sig_swf"] = 2207129;

var _php_sig_swc = Module["_php_sig_swc"] = 2207132;

var _php_sig_psd = Module["_php_sig_psd"] = 2207123;

var _php_sig_jpc = Module["_php_sig_jpc"] = 2207154;

var _php_sig_riff = Module["_php_sig_riff"] = 2207177;

var _php_sig_jp2 = Module["_php_sig_jp2"] = 2207157;

var _php_sig_bmp = Module["_php_sig_bmp"] = 2207127;

var _php_sig_tif_ii = Module["_php_sig_tif_ii"] = 2207146;

var _php_sig_tif_mm = Module["_php_sig_tif_mm"] = 2207150;

var _php_sig_iff = Module["_php_sig_iff"] = 2207169;

var _php_sig_ico = Module["_php_sig_ico"] = 2207173;

var _php_sig_webp = Module["_php_sig_webp"] = 2207181;

var _php_tiff_bytes_per_format = Module["_php_tiff_bytes_per_format"] = 2207200;

var _php_ini_opened_path = Module["_php_ini_opened_path"] = 4054128;

var _php_ini_scanned_path = Module["_php_ini_scanned_path"] = 4054132;

var _php_ini_scanned_files = Module["_php_ini_scanned_files"] = 4054136;

var _zend_ce_arithmetic_error = Module["_zend_ce_arithmetic_error"] = 4058904;

var _zend_tolower_map = Module["_zend_tolower_map"] = 2278976;

var _zend_toupper_map = Module["_zend_toupper_map"] = 2279232;

var _zend_write = Module["_zend_write"] = 4056836;

var _zend_ce_throwable = Module["_zend_ce_throwable"] = 4058764;

var _stdin = Module["_stdin"] = 3681820;

var _stdout = Module["_stdout"] = 3681824;

var _stderr = Module["_stderr"] = 3681816;

var _zend_string_init_existing_interned = Module["_zend_string_init_existing_interned"] = 406e4;

var _zend_resolve_path = Module["_zend_resolve_path"] = 4056876;

var _language_scanner_globals = Module["_language_scanner_globals"] = 4055088;

var _le_index_ptr = Module["_le_index_ptr"] = 4057048;

var _php_register_internal_extensions_func = Module["_php_register_internal_extensions_func"] = 3713436;

var _zend_post_shutdown_cb = Module["_zend_post_shutdown_cb"] = 4056824;

var _zend_printf = Module["_zend_printf"] = 4056844;

var _in6addr_any = Module["_in6addr_any"] = 3690108;

var _output_globals = Module["_output_globals"] = 4054768;

var _php_stream_memory_ops = Module["_php_stream_memory_ops"] = 2223860;

var _php_stream_temp_ops = Module["_php_stream_temp_ops"] = 2223896;

var _php_stream_rfc2397_ops = Module["_php_stream_rfc2397_ops"] = 2223932;

var _php_stream_rfc2397_wops = Module["_php_stream_rfc2397_wops"] = 2223968;

var _php_stream_userspace_ops = Module["_php_stream_userspace_ops"] = 2224148;

var _php_stream_userspace_dir_ops = Module["_php_stream_userspace_dir_ops"] = 2224184;

var _zend_ce_compile_error = Module["_zend_ce_compile_error"] = 4058772;

var _zend_ce_parse_error = Module["_zend_ce_parse_error"] = 4058768;

var _zend_multibyte_encoding_utf8 = Module["_zend_multibyte_encoding_utf8"] = 3715632;

var _zend_ast_process = Module["_zend_ast_process"] = 4067504;

var _zend_multibyte_encoding_utf32be = Module["_zend_multibyte_encoding_utf32be"] = 3715616;

var _zend_multibyte_encoding_utf32le = Module["_zend_multibyte_encoding_utf32le"] = 3715620;

var _zend_multibyte_encoding_utf16be = Module["_zend_multibyte_encoding_utf16be"] = 3715624;

var _zend_multibyte_encoding_utf16le = Module["_zend_multibyte_encoding_utf16le"] = 3715628;

var _zend_getenv = Module["_zend_getenv"] = 4056872;

var _ini_scanner_globals = Module["_ini_scanner_globals"] = 4055248;

var _zend_observer_function_declared_observed = Module["_zend_observer_function_declared_observed"] = 4067740;

var _zend_observer_class_linked_observed = Module["_zend_observer_class_linked_observed"] = 4067741;

var _zend_execute_internal = Module["_zend_execute_internal"] = 4056808;

var _zend_execute_ex = Module["_zend_execute_ex"] = 4056804;

var _zend_compile_string = Module["_zend_compile_string"] = 4056788;

var _zend_extensions = Module["_zend_extensions"] = 4056972;

var _zend_interrupt_function = Module["_zend_interrupt_function"] = 4056880;

var _zend_on_timeout = Module["_zend_on_timeout"] = 4056868;

var _zend_op_array_extension_handles = Module["_zend_op_array_extension_handles"] = 4056968;

var _zend_extension_flags = Module["_zend_extension_flags"] = 4056964;

var _zend_error_cb = Module["_zend_error_cb"] = 4056840;

var _zend_fopen = Module["_zend_fopen"] = 4056848;

var _zend_stream_open_function = Module["_zend_stream_open_function"] = 4056852;

var _zend_ticks_function = Module["_zend_ticks_function"] = 4056864;

var _zend_throw_exception_hook = Module["_zend_throw_exception_hook"] = 4058776;

var _gc_collect_cycles = Module["_gc_collect_cycles"] = 4059624;

var _zend_post_startup_cb = Module["_zend_post_startup_cb"] = 4056820;

var _zend_uv = Module["_zend_uv"] = 4056900;

var _zend_observer_errors_observed = Module["_zend_observer_errors_observed"] = 4067742;

var _zend_ce_type_error = Module["_zend_ce_type_error"] = 4058784;

var _zend_ce_argument_count_error = Module["_zend_ce_argument_count_error"] = 4058788;

var _zend_signal_globals = Module["_zend_signal_globals"] = 4061040;

var _zend_dtrace_enabled = Module["_zend_dtrace_enabled"] = 4056901;

var _zend_ce_sensitive_parameter_value = Module["_zend_ce_sensitive_parameter_value"] = 4057052;

var _zend_ce_attribute = Module["_zend_ce_attribute"] = 4057056;

var _zend_ce_return_type_will_change_attribute = Module["_zend_ce_return_type_will_change_attribute"] = 4057104;

var _zend_ce_allow_dynamic_properties = Module["_zend_ce_allow_dynamic_properties"] = 4057108;

var _zend_ce_sensitive_parameter = Module["_zend_ce_sensitive_parameter"] = 4057112;

var _zend_ce_unhandled_match_error = Module["_zend_ce_unhandled_match_error"] = 4058912;

var _zend_pass_function = Module["_zend_pass_function"] = 2283344;

var _zend_touch_vm_stack_data = Module["_zend_touch_vm_stack_data"] = 4057216;

var _zend_ce_internal_iterator = Module["_zend_ce_internal_iterator"] = 4058632;

var _zend_ce_error_exception = Module["_zend_ce_error_exception"] = 4058892;

var _zend_ce_weakref = Module["_zend_ce_weakref"] = 4059732;

var _zend_ce_ClosedGeneratorException = Module["_zend_ce_ClosedGeneratorException"] = 4063276;

var _zend_inheritance_cache_get = Module["_zend_inheritance_cache_get"] = 4067508;

var _zend_inheritance_cache_add = Module["_zend_inheritance_cache_add"] = 4067512;

var ___jit_debug_descriptor = Module["___jit_debug_descriptor"] = 3716016;

var _zend_system_id = Module["_zend_system_id"] = 4067904;

var _zend_ce_unit_enum = Module["_zend_ce_unit_enum"] = 4068036;

var _zend_ce_backed_enum = Module["_zend_ce_backed_enum"] = 4068040;

var _zend_func_info_rid = Module["_zend_func_info_rid"] = 3716180;

var _php_embed_module = Module["_php_embed_module"] = 3716184;

var _DTLSv1_enc_data = Module["_DTLSv1_enc_data"] = 3716968;

var _DTLSv1_2_enc_data = Module["_DTLSv1_2_enc_data"] = 3717032;

var _TLSv1_2_enc_data = Module["_TLSv1_2_enc_data"] = 3739060;

var _TLSv1_3_enc_data = Module["_TLSv1_3_enc_data"] = 3739124;

var _TLSv1_1_enc_data = Module["_TLSv1_1_enc_data"] = 3738996;

var _TLSv1_enc_data = Module["_TLSv1_enc_data"] = 3738932;

var _tls11downgrade = Module["_tls11downgrade"] = 2312992;

var _tls12downgrade = Module["_tls12downgrade"] = 2313e3;

var _SSLv3_enc_data = Module["_SSLv3_enc_data"] = 3730976;

var _SSL_version_str = Module["_SSL_version_str"] = 2313552;

var _ssl3_undef_enc_method = Module["_ssl3_undef_enc_method"] = 3735968;

var _UINT32_it = Module["_UINT32_it"] = 3741392;

var _INT32_it = Module["_INT32_it"] = 3741364;

var _ASN1_OCTET_STRING_it = Module["_ASN1_OCTET_STRING_it"] = 3740420;

var _ZINT64_it = Module["_ZINT64_it"] = 3741564;

var _X509_it = Module["_X509_it"] = 3802052;

var _ZINT32_it = Module["_ZINT32_it"] = 3741508;

var _ZUINT64_it = Module["_ZUINT64_it"] = 3741592;

var _ZUINT32_it = Module["_ZUINT32_it"] = 3741536;

var _hrrrandom = Module["_hrrrandom"] = 2313904;

var _GOST_KX_MESSAGE_it = Module["_GOST_KX_MESSAGE_it"] = 3738904;

var _ASN1_ANY_it = Module["_ASN1_ANY_it"] = 3740868;

var _ASN1_TIME_it = Module["_ASN1_TIME_it"] = 3746204;

var _rsa_asn1_meths = Module["_rsa_asn1_meths"] = 3796864;

var _dh_asn1_meth = Module["_dh_asn1_meth"] = 3746620;

var _dsa_asn1_meths = Module["_dsa_asn1_meths"] = 3747392;

var _eckey_asn1_meth = Module["_eckey_asn1_meth"] = 3748712;

var _hmac_asn1_meth = Module["_hmac_asn1_meth"] = 3762888;

var _cmac_asn1_meth = Module["_cmac_asn1_meth"] = 3742064;

var _rsa_pss_asn1_meth = Module["_rsa_pss_asn1_meth"] = 3797152;

var _dhx_asn1_meth = Module["_dhx_asn1_meth"] = 3746764;

var _ecx25519_asn1_meth = Module["_ecx25519_asn1_meth"] = 3752472;

var _ecx448_asn1_meth = Module["_ecx448_asn1_meth"] = 3752616;

var _poly1305_asn1_meth = Module["_poly1305_asn1_meth"] = 3796484;

var _siphash_asn1_meth = Module["_siphash_asn1_meth"] = 3798328;

var _ed25519_asn1_meth = Module["_ed25519_asn1_meth"] = 3752760;

var _ed448_asn1_meth = Module["_ed448_asn1_meth"] = 3752904;

var _sm2_asn1_meth = Module["_sm2_asn1_meth"] = 2333504;

var _NETSCAPE_CERT_SEQUENCE_it = Module["_NETSCAPE_CERT_SEQUENCE_it"] = 3794048;

var _PBEPARAM_it = Module["_PBEPARAM_it"] = 3761816;

var _PBE2PARAM_it = Module["_PBE2PARAM_it"] = 3746344;

var _PBKDF2PARAM_it = Module["_PBKDF2PARAM_it"] = 3746464;

var _SCRYPT_PARAMS_it = Module["_SCRYPT_PARAMS_it"] = 3760292;

var _PKCS8_PRIV_KEY_INFO_it = Module["_PKCS8_PRIV_KEY_INFO_it"] = 3740392;

var _ASN1_INTEGER_it = Module["_ASN1_INTEGER_it"] = 3740448;

var _X509_ALGOR_it = Module["_X509_ALGOR_it"] = 3741256;

var _X509_ATTRIBUTE_it = Module["_X509_ATTRIBUTE_it"] = 3800472;

var _ASN1_ENUMERATED_it = Module["_ASN1_ENUMERATED_it"] = 3740476;

var _ASN1_BIT_STRING_it = Module["_ASN1_BIT_STRING_it"] = 3740504;

var _ASN1_UTF8STRING_it = Module["_ASN1_UTF8STRING_it"] = 3740532;

var _ASN1_PRINTABLESTRING_it = Module["_ASN1_PRINTABLESTRING_it"] = 3740560;

var _ASN1_T61STRING_it = Module["_ASN1_T61STRING_it"] = 3740588;

var _ASN1_IA5STRING_it = Module["_ASN1_IA5STRING_it"] = 3740616;

var _ASN1_GENERALSTRING_it = Module["_ASN1_GENERALSTRING_it"] = 3740644;

var _ASN1_UTCTIME_it = Module["_ASN1_UTCTIME_it"] = 3740672;

var _ASN1_GENERALIZEDTIME_it = Module["_ASN1_GENERALIZEDTIME_it"] = 3740700;

var _ASN1_VISIBLESTRING_it = Module["_ASN1_VISIBLESTRING_it"] = 3740728;

var _ASN1_UNIVERSALSTRING_it = Module["_ASN1_UNIVERSALSTRING_it"] = 3740756;

var _ASN1_BMPSTRING_it = Module["_ASN1_BMPSTRING_it"] = 3740784;

var _ASN1_NULL_it = Module["_ASN1_NULL_it"] = 3740812;

var _ASN1_PRINTABLE_it = Module["_ASN1_PRINTABLE_it"] = 3740924;

var _DISPLAYTEXT_it = Module["_DISPLAYTEXT_it"] = 3740952;

var _DIRECTORYSTRING_it = Module["_DIRECTORYSTRING_it"] = 3740980;

var _ASN1_SEQUENCE_ANY_it = Module["_ASN1_SEQUENCE_ANY_it"] = 3741140;

var _ASN1_SET_ANY_it = Module["_ASN1_SET_ANY_it"] = 3741188;

var _ASN1_OBJECT_it = Module["_ASN1_OBJECT_it"] = 3740840;

var _ASN1_SEQUENCE_it = Module["_ASN1_SEQUENCE_it"] = 3740896;

var _ASN1_BOOLEAN_it = Module["_ASN1_BOOLEAN_it"] = 3741008;

var _ASN1_TBOOLEAN_it = Module["_ASN1_TBOOLEAN_it"] = 3741036;

var _ASN1_FBOOLEAN_it = Module["_ASN1_FBOOLEAN_it"] = 3741064;

var _ASN1_OCTET_STRING_NDEF_it = Module["_ASN1_OCTET_STRING_NDEF_it"] = 3741092;

var _X509_ALGORS_it = Module["_X509_ALGORS_it"] = 3741304;

var _BIGNUM_it = Module["_BIGNUM_it"] = 3746940;

var _CBIGNUM_it = Module["_CBIGNUM_it"] = 3747e3;

var _INT64_it = Module["_INT64_it"] = 3741452;

var _UINT64_it = Module["_UINT64_it"] = 3741480;

var _X509_SIG_it = Module["_X509_SIG_it"] = 3794120;

var _NETSCAPE_SPKAC_it = Module["_NETSCAPE_SPKAC_it"] = 3741672;

var _NETSCAPE_SPKI_it = Module["_NETSCAPE_SPKI_it"] = 3741772;

var _X509_PUBKEY_it = Module["_X509_PUBKEY_it"] = 3801376;

var _X509_VAL_it = Module["_X509_VAL_it"] = 3801688;

var _bio_lookup_lock = Module["_bio_lookup_lock"] = 4068620;

var _bio_type_lock = Module["_bio_type_lock"] = 4068624;

var __bignum_const_2 = Module["__bignum_const_2"] = 3761844;

var __bignum_dh1024_160_p = Module["__bignum_dh1024_160_p"] = 3761864;

var __bignum_dh1024_160_g = Module["__bignum_dh1024_160_g"] = 3761884;

var __bignum_dh1024_160_q = Module["__bignum_dh1024_160_q"] = 3761904;

var __bignum_dh2048_224_p = Module["__bignum_dh2048_224_p"] = 3761924;

var __bignum_dh2048_224_g = Module["__bignum_dh2048_224_g"] = 3761944;

var __bignum_dh2048_224_q = Module["__bignum_dh2048_224_q"] = 3761964;

var __bignum_dh2048_256_p = Module["__bignum_dh2048_256_p"] = 3761984;

var __bignum_dh2048_256_g = Module["__bignum_dh2048_256_g"] = 3762004;

var __bignum_dh2048_256_q = Module["__bignum_dh2048_256_q"] = 3762024;

var __bignum_ffdhe2048_p = Module["__bignum_ffdhe2048_p"] = 3762044;

var __bignum_ffdhe3072_p = Module["__bignum_ffdhe3072_p"] = 3762064;

var __bignum_ffdhe4096_p = Module["__bignum_ffdhe4096_p"] = 3762084;

var __bignum_ffdhe6144_p = Module["__bignum_ffdhe6144_p"] = 3762104;

var __bignum_ffdhe8192_p = Module["__bignum_ffdhe8192_p"] = 3762124;

var _bn_group_1024 = Module["_bn_group_1024"] = 3798896;

var _bn_group_1536 = Module["_bn_group_1536"] = 3798916;

var _bn_group_2048 = Module["_bn_group_2048"] = 3798936;

var _bn_group_3072 = Module["_bn_group_3072"] = 3798956;

var _bn_group_4096 = Module["_bn_group_4096"] = 3798976;

var _bn_group_6144 = Module["_bn_group_6144"] = 3798996;

var _bn_group_8192 = Module["_bn_group_8192"] = 3799016;

var _bn_generator_19 = Module["_bn_generator_19"] = 3799036;

var _bn_generator_5 = Module["_bn_generator_5"] = 3799056;

var _bn_generator_2 = Module["_bn_generator_2"] = 3799076;

var _CAST_S_table5 = Module["_CAST_S_table5"] = 2431536;

var _CAST_S_table6 = Module["_CAST_S_table6"] = 2432560;

var _CAST_S_table4 = Module["_CAST_S_table4"] = 2430512;

var _CAST_S_table7 = Module["_CAST_S_table7"] = 2433584;

var _CAST_S_table0 = Module["_CAST_S_table0"] = 2426416;

var _CAST_S_table1 = Module["_CAST_S_table1"] = 2427440;

var _CAST_S_table2 = Module["_CAST_S_table2"] = 2428464;

var _CAST_S_table3 = Module["_CAST_S_table3"] = 2429488;

var _cmac_pkey_meth = Module["_cmac_pkey_meth"] = 3762676;

var _CMS_IssuerAndSerialNumber_it = Module["_CMS_IssuerAndSerialNumber_it"] = 3742248;

var _CMS_CertificateChoices_it = Module["_CMS_CertificateChoices_it"] = 3742388;

var _CMS_SignerInfo_it = Module["_CMS_SignerInfo_it"] = 3742580;

var _CMS_RevocationInfoChoice_it = Module["_CMS_RevocationInfoChoice_it"] = 3742648;

var _CMS_SignedData_it = Module["_CMS_SignedData_it"] = 3742808;

var _CMS_EncryptedContentInfo_it = Module["_CMS_EncryptedContentInfo_it"] = 3742932;

var _CMS_KeyTransRecipientInfo_it = Module["_CMS_KeyTransRecipientInfo_it"] = 3743040;

var _CMS_OtherKeyAttribute_it = Module["_CMS_OtherKeyAttribute_it"] = 3743112;

var _CMS_RecipientKeyIdentifier_it = Module["_CMS_RecipientKeyIdentifier_it"] = 3743212;

var _CMS_RecipientEncryptedKey_it = Module["_CMS_RecipientEncryptedKey_it"] = 3743312;

var _CMS_OriginatorPublicKey_it = Module["_CMS_OriginatorPublicKey_it"] = 3743384;

var _CMS_KeyAgreeRecipientInfo_it = Module["_CMS_KeyAgreeRecipientInfo_it"] = 3743548;

var _CMS_KEKRecipientInfo_it = Module["_CMS_KEKRecipientInfo_it"] = 3743664;

var _CMS_PasswordRecipientInfo_it = Module["_CMS_PasswordRecipientInfo_it"] = 3743776;

var _CMS_RecipientInfo_it = Module["_CMS_RecipientInfo_it"] = 3743932;

var _CMS_EnvelopedData_it = Module["_CMS_EnvelopedData_it"] = 3744068;

var _CMS_DigestedData_it = Module["_CMS_DigestedData_it"] = 3744176;

var _CMS_EncryptedData_it = Module["_CMS_EncryptedData_it"] = 3744268;

var _CMS_CompressedData_it = Module["_CMS_CompressedData_it"] = 3744364;

var _CMS_ContentInfo_it = Module["_CMS_ContentInfo_it"] = 3744464;

var _CMS_Attributes_Sign_it = Module["_CMS_Attributes_Sign_it"] = 3744512;

var _CMS_Attributes_Verify_it = Module["_CMS_Attributes_Verify_it"] = 3744560;

var _CMS_ReceiptRequest_it = Module["_CMS_ReceiptRequest_it"] = 3744652;

var _CMS_Receipt_it = Module["_CMS_Receipt_it"] = 3744768;

var _X509_NAME_it = Module["_X509_NAME_it"] = 3801184;

var _X509_CRL_it = Module["_X509_CRL_it"] = 3800884;

var _GENERAL_NAMES_it = Module["_GENERAL_NAMES_it"] = 3804884;

var _v3_ct_scts = Module["_v3_ct_scts"] = 3806688;

var _DES_SPtrans = Module["_DES_SPtrans"] = 2415456;

var __shadow_DES_check_key = Module["__shadow_DES_check_key"] = 4068992;

var _DHparams_it = Module["_DHparams_it"] = 3747124;

var _dh_pkey_meth = Module["_dh_pkey_meth"] = 3762148;

var _dhx_pkey_meth = Module["_dhx_pkey_meth"] = 3762280;

var _dsa_pkey_meth = Module["_dsa_pkey_meth"] = 3762412;

var _curve448_point_identity = Module["_curve448_point_identity"] = 2404240;

var _curve448_precomputed_base = Module["_curve448_precomputed_base"] = 3752464;

var _curve448_wnaf_base = Module["_curve448_wnaf_base"] = 3752468;

var _curve448_scalar_one = Module["_curve448_scalar_one"] = 2382480;

var _curve448_scalar_zero = Module["_curve448_scalar_zero"] = 2382544;

var _ECPARAMETERS_it = Module["_ECPARAMETERS_it"] = 3749032;

var _ECPKPARAMETERS_it = Module["_ECPKPARAMETERS_it"] = 3749132;

var _ec_pkey_meth = Module["_ec_pkey_meth"] = 3762544;

var _ecx25519_pkey_meth = Module["_ecx25519_pkey_meth"] = 3753048;

var _ecx448_pkey_meth = Module["_ecx448_pkey_meth"] = 3753180;

var _ed25519_pkey_meth = Module["_ed25519_pkey_meth"] = 3753312;

var _ed448_pkey_meth = Module["_ed448_pkey_meth"] = 3753444;

var _rsa_pkey_meth = Module["_rsa_pkey_meth"] = 3798064;

var _hmac_pkey_meth = Module["_hmac_pkey_meth"] = 3763032;

var _rsa_pss_pkey_meth = Module["_rsa_pss_pkey_meth"] = 3798196;

var _scrypt_pkey_meth = Module["_scrypt_pkey_meth"] = 3764820;

var _tls1_prf_pkey_meth = Module["_tls1_prf_pkey_meth"] = 3764952;

var _hkdf_pkey_meth = Module["_hkdf_pkey_meth"] = 3764688;

var _poly1305_pkey_meth = Module["_poly1305_pkey_meth"] = 3796628;

var _siphash_pkey_meth = Module["_siphash_pkey_meth"] = 3798472;

var _sm2_pkey_meth = Module["_sm2_pkey_meth"] = 3798716;

var _PKCS12_it = Module["_PKCS12_it"] = 3794220;

var _PKCS12_MAC_DATA_it = Module["_PKCS12_MAC_DATA_it"] = 3794316;

var _PKCS12_BAGS_it = Module["_PKCS12_BAGS_it"] = 3794392;

var _PKCS12_SAFEBAG_it = Module["_PKCS12_SAFEBAG_it"] = 3794492;

var _PKCS7_it = Module["_PKCS7_it"] = 3795024;

var _PKCS12_SAFEBAGS_it = Module["_PKCS12_SAFEBAGS_it"] = 3794540;

var _PKCS12_AUTHSAFES_it = Module["_PKCS12_AUTHSAFES_it"] = 3794588;

var _PKCS7_SIGNED_it = Module["_PKCS7_SIGNED_it"] = 3795176;

var _PKCS7_SIGNER_INFO_it = Module["_PKCS7_SIGNER_INFO_it"] = 3795380;

var _PKCS7_ISSUER_AND_SERIAL_it = Module["_PKCS7_ISSUER_AND_SERIAL_it"] = 3795448;

var _PKCS7_ENVELOPE_it = Module["_PKCS7_ENVELOPE_it"] = 3795548;

var _PKCS7_RECIP_INFO_it = Module["_PKCS7_RECIP_INFO_it"] = 3795688;

var _PKCS7_ENC_CONTENT_it = Module["_PKCS7_ENC_CONTENT_it"] = 3795788;

var _PKCS7_SIGN_ENVELOPE_it = Module["_PKCS7_SIGN_ENVELOPE_it"] = 3795964;

var _PKCS7_ENCRYPT_it = Module["_PKCS7_ENCRYPT_it"] = 3796040;

var _PKCS7_DIGEST_it = Module["_PKCS7_DIGEST_it"] = 3796160;

var _PKCS7_ATTR_SIGN_it = Module["_PKCS7_ATTR_SIGN_it"] = 3796208;

var _PKCS7_ATTR_VERIFY_it = Module["_PKCS7_ATTR_VERIFY_it"] = 3796256;

var _rand_meth = Module["_rand_meth"] = 3796808;

var _RSA_PSS_PARAMS_it = Module["_RSA_PSS_PARAMS_it"] = 3797848;

var _RSA_OAEP_PARAMS_it = Module["_RSA_OAEP_PARAMS_it"] = 3797972;

var _RSAPrivateKey_it = Module["_RSAPrivateKey_it"] = 3797616;

var _RSAPublicKey_it = Module["_RSAPublicKey_it"] = 3797712;

var _RSA_PRIME_INFO_it = Module["_RSA_PRIME_INFO_it"] = 3797356;

var _SM2_Ciphertext_it = Module["_SM2_Ciphertext_it"] = 3798688;

var _X509_EXTENSIONS_it = Module["_X509_EXTENSIONS_it"] = 3801052;

var _X509_CINF_it = Module["_X509_CINF_it"] = 3801928;

var _X509_REQ_INFO_it = Module["_X509_REQ_INFO_it"] = 3801512;

var _X509_CRL_INFO_it = Module["_X509_CRL_INFO_it"] = 3800772;

var _X509_REQ_it = Module["_X509_REQ_it"] = 3801612;

var _X509_REVOKED_it = Module["_X509_REVOKED_it"] = 3800572;

var _X509_EXTENSION_it = Module["_X509_EXTENSION_it"] = 3801004;

var _X509_NAME_ENTRY_it = Module["_X509_NAME_ENTRY_it"] = 3801128;

var _X509_CERT_AUX_it = Module["_X509_CERT_AUX_it"] = 3802180;

var _IPAddressRange_it = Module["_IPAddressRange_it"] = 3802248;

var _IPAddressOrRange_it = Module["_IPAddressOrRange_it"] = 3802328;

var _IPAddressChoice_it = Module["_IPAddressChoice_it"] = 3802408;

var _IPAddressFamily_it = Module["_IPAddressFamily_it"] = 3802488;

var _v3_addr = Module["_v3_addr"] = 3802544;

var _NAMING_AUTHORITY_it = Module["_NAMING_AUTHORITY_it"] = 3806924;

var _PROFESSION_INFO_it = Module["_PROFESSION_INFO_it"] = 3807060;

var _ADMISSIONS_it = Module["_ADMISSIONS_it"] = 3807148;

var _ADMISSION_SYNTAX_it = Module["_ADMISSION_SYNTAX_it"] = 3807224;

var _v3_ext_admission = Module["_v3_ext_admission"] = 3807252;

var _v3_akey_id = Module["_v3_akey_id"] = 3806016;

var _AUTHORITY_KEYID_it = Module["_AUTHORITY_KEYID_it"] = 3802684;

var _GENERAL_NAME_it = Module["_GENERAL_NAME_it"] = 3804836;

var _v3_alt = Module["_v3_alt"] = 3802720;

var _ASRange_it = Module["_ASRange_it"] = 3802936;

var _ASIdOrRange_it = Module["_ASIdOrRange_it"] = 3803016;

var _ASIdentifierChoice_it = Module["_ASIdentifierChoice_it"] = 3803096;

var _ASIdentifiers_it = Module["_ASIdentifiers_it"] = 3803176;

var _v3_asid = Module["_v3_asid"] = 3803204;

var _BASIC_CONSTRAINTS_it = Module["_BASIC_CONSTRAINTS_it"] = 3805712;

var _v3_bcons = Module["_v3_bcons"] = 3805740;

var _v3_nscert = Module["_v3_nscert"] = 3805020;

var _v3_key_usage = Module["_v3_key_usage"] = 3805208;

var _POLICYINFO_it = Module["_POLICYINFO_it"] = 3803448;

var _POLICYQUALINFO_it = Module["_POLICYQUALINFO_it"] = 3803528;

var _USERNOTICE_it = Module["_USERNOTICE_it"] = 3803608;

var _NOTICEREF_it = Module["_NOTICEREF_it"] = 3803688;

var _CERTIFICATEPOLICIES_it = Module["_CERTIFICATEPOLICIES_it"] = 3803292;

var _v3_cpols = Module["_v3_cpols"] = 3803320;

var _DIST_POINT_it = Module["_DIST_POINT_it"] = 3804108;

var _DIST_POINT_NAME_it = Module["_DIST_POINT_NAME_it"] = 3804016;

var _CRL_DIST_POINTS_it = Module["_CRL_DIST_POINTS_it"] = 3803812;

var _ISSUING_DIST_POINT_it = Module["_ISSUING_DIST_POINT_it"] = 3804280;

var _v3_crld = Module["_v3_crld"] = 3803840;

var _v3_freshest_crl = Module["_v3_freshest_crl"] = 3803896;

var _v3_idp = Module["_v3_idp"] = 3804308;

var _v3_crl_reason = Module["_v3_crl_reason"] = 3806372;

var _EXTENDED_KEY_USAGE_it = Module["_EXTENDED_KEY_USAGE_it"] = 3806072;

var _v3_ext_ku = Module["_v3_ext_ku"] = 3806100;

var _v3_ocsp_accresp = Module["_v3_ocsp_accresp"] = 3806156;

var _OTHERNAME_it = Module["_OTHERNAME_it"] = 3804536;

var _EDIPARTYNAME_it = Module["_EDIPARTYNAME_it"] = 3804616;

var _v3_ns_ia5_list = Module["_v3_ns_ia5_list"] = 3805264;

var _ACCESS_DESCRIPTION_it = Module["_ACCESS_DESCRIPTION_it"] = 3806616;

var _AUTHORITY_INFO_ACCESS_it = Module["_AUTHORITY_INFO_ACCESS_it"] = 3806428;

var _v3_info = Module["_v3_info"] = 3806456;

var _v3_sinfo = Module["_v3_sinfo"] = 3806512;

var _v3_crl_num = Module["_v3_crl_num"] = 3805848;

var _v3_delta_crl = Module["_v3_delta_crl"] = 3805904;

var _v3_inhibit_anyp = Module["_v3_inhibit_anyp"] = 3805960;

var _v3_skey_id = Module["_v3_skey_id"] = 3808588;

var _v3_pkey_usage_period = Module["_v3_pkey_usage_period"] = 3808052;

var _v3_sxnet = Module["_v3_sxnet"] = 3808672;

var _v3_policy_constraints = Module["_v3_policy_constraints"] = 3807920;

var _v3_pci = Module["_v3_pci"] = 3807688;

var _v3_name_constraints = Module["_v3_name_constraints"] = 3807496;

var _v3_policy_mappings = Module["_v3_policy_mappings"] = 3808180;

var _v3_tls_feature = Module["_v3_tls_feature"] = 3808884;

var _NAME_CONSTRAINTS_it = Module["_NAME_CONSTRAINTS_it"] = 3807468;

var _GENERAL_SUBTREE_it = Module["_GENERAL_SUBTREE_it"] = 3807612;

var _PROXY_CERT_INFO_EXTENSION_it = Module["_PROXY_CERT_INFO_EXTENSION_it"] = 3807864;

var _PROXY_POLICY_it = Module["_PROXY_POLICY_it"] = 3807784;

var _POLICY_CONSTRAINTS_it = Module["_POLICY_CONSTRAINTS_it"] = 3807892;

var _PKEY_USAGE_PERIOD_it = Module["_PKEY_USAGE_PERIOD_it"] = 3808024;

var _POLICY_MAPPING_it = Module["_POLICY_MAPPING_it"] = 3808280;

var _POLICY_MAPPINGS_it = Module["_POLICY_MAPPINGS_it"] = 3808152;

var _SXNETID_it = Module["_SXNETID_it"] = 3808776;

var _SXNET_it = Module["_SXNET_it"] = 3808644;

var _prvTidyg_default_allocator = Module["_prvTidyg_default_allocator"] = 3808992;

var _prvTidyW3CAttrsFor_A = Module["_prvTidyW3CAttrsFor_A"] = 2487712;

var _prvTidyW3CAttrsFor_ABBR = Module["_prvTidyW3CAttrsFor_ABBR"] = 2489008;

var _prvTidyW3CAttrsFor_ACRONYM = Module["_prvTidyW3CAttrsFor_ACRONYM"] = 2490160;

var _prvTidyW3CAttrsFor_ADDRESS = Module["_prvTidyW3CAttrsFor_ADDRESS"] = 2491312;

var _prvTidyW3CAttrsFor_APPLET = Module["_prvTidyW3CAttrsFor_APPLET"] = 2492480;

var _prvTidyW3CAttrsFor_AREA = Module["_prvTidyW3CAttrsFor_AREA"] = 2493600;

var _prvTidyW3CAttrsFor_ARTICLE = Module["_prvTidyW3CAttrsFor_ARTICLE"] = 2494864;

var _prvTidyW3CAttrsFor_ASIDE = Module["_prvTidyW3CAttrsFor_ASIDE"] = 2495872;

var _prvTidyW3CAttrsFor_AUDIO = Module["_prvTidyW3CAttrsFor_AUDIO"] = 2496880;

var _prvTidyW3CAttrsFor_B = Module["_prvTidyW3CAttrsFor_B"] = 2497936;

var _prvTidyW3CAttrsFor_BASE = Module["_prvTidyW3CAttrsFor_BASE"] = 2499088;

var _prvTidyW3CAttrsFor_BASEFONT = Module["_prvTidyW3CAttrsFor_BASEFONT"] = 2500128;

var _prvTidyW3CAttrsFor_BDI = Module["_prvTidyW3CAttrsFor_BDI"] = 2501168;

var _prvTidyW3CAttrsFor_BDO = Module["_prvTidyW3CAttrsFor_BDO"] = 2502176;

var _prvTidyW3CAttrsFor_BIG = Module["_prvTidyW3CAttrsFor_BIG"] = 2503328;

var _prvTidyW3CAttrsFor_BLOCKQUOTE = Module["_prvTidyW3CAttrsFor_BLOCKQUOTE"] = 2504480;

var _prvTidyW3CAttrsFor_BODY = Module["_prvTidyW3CAttrsFor_BODY"] = 2505648;

var _prvTidyW3CAttrsFor_BR = Module["_prvTidyW3CAttrsFor_BR"] = 2506976;

var _prvTidyW3CAttrsFor_BUTTON = Module["_prvTidyW3CAttrsFor_BUTTON"] = 2508032;

var _prvTidyW3CAttrsFor_CANVAS = Module["_prvTidyW3CAttrsFor_CANVAS"] = 2509296;

var _prvTidyW3CAttrsFor_CAPTION = Module["_prvTidyW3CAttrsFor_CAPTION"] = 2510320;

var _prvTidyW3CAttrsFor_CENTER = Module["_prvTidyW3CAttrsFor_CENTER"] = 2511472;

var _prvTidyW3CAttrsFor_CITE = Module["_prvTidyW3CAttrsFor_CITE"] = 2512608;

var _prvTidyW3CAttrsFor_CODE = Module["_prvTidyW3CAttrsFor_CODE"] = 2513760;

var _prvTidyW3CAttrsFor_COL = Module["_prvTidyW3CAttrsFor_COL"] = 2514912;

var _prvTidyW3CAttrsFor_COLGROUP = Module["_prvTidyW3CAttrsFor_COLGROUP"] = 2516112;

var _prvTidyW3CAttrsFor_COMMAND = Module["_prvTidyW3CAttrsFor_COMMAND"] = 2517312;

var _prvTidyW3CAttrsFor_DATALIST = Module["_prvTidyW3CAttrsFor_DATALIST"] = 2518368;

var _prvTidyW3CAttrsFor_DD = Module["_prvTidyW3CAttrsFor_DD"] = 2519376;

var _prvTidyW3CAttrsFor_DEL = Module["_prvTidyW3CAttrsFor_DEL"] = 2520528;

var _prvTidyW3CAttrsFor_DETAILS = Module["_prvTidyW3CAttrsFor_DETAILS"] = 2521696;

var _prvTidyW3CAttrsFor_DFN = Module["_prvTidyW3CAttrsFor_DFN"] = 2522704;

var _prvTidyW3CAttrsFor_DIALOG = Module["_prvTidyW3CAttrsFor_DIALOG"] = 2523856;

var _prvTidyW3CAttrsFor_DIR = Module["_prvTidyW3CAttrsFor_DIR"] = 2524864;

var _prvTidyW3CAttrsFor_DIV = Module["_prvTidyW3CAttrsFor_DIV"] = 2526032;

var _prvTidyW3CAttrsFor_DL = Module["_prvTidyW3CAttrsFor_DL"] = 2527184;

var _prvTidyW3CAttrsFor_DT = Module["_prvTidyW3CAttrsFor_DT"] = 2528352;

var _prvTidyW3CAttrsFor_EM = Module["_prvTidyW3CAttrsFor_EM"] = 2529504;

var _prvTidyW3CAttrsFor_EMBED = Module["_prvTidyW3CAttrsFor_EMBED"] = 2530656;

var _prvTidyW3CAttrsFor_FIELDSET = Module["_prvTidyW3CAttrsFor_FIELDSET"] = 2531696;

var _prvTidyW3CAttrsFor_FIGCAPTION = Module["_prvTidyW3CAttrsFor_FIGCAPTION"] = 2532864;

var _prvTidyW3CAttrsFor_FIGURE = Module["_prvTidyW3CAttrsFor_FIGURE"] = 2533872;

var _prvTidyW3CAttrsFor_FONT = Module["_prvTidyW3CAttrsFor_FONT"] = 2534880;

var _prvTidyW3CAttrsFor_FOOTER = Module["_prvTidyW3CAttrsFor_FOOTER"] = 2535968;

var _prvTidyW3CAttrsFor_FORM = Module["_prvTidyW3CAttrsFor_FORM"] = 2536976;

var _prvTidyW3CAttrsFor_FRAME = Module["_prvTidyW3CAttrsFor_FRAME"] = 2538224;

var _prvTidyW3CAttrsFor_FRAMESET = Module["_prvTidyW3CAttrsFor_FRAMESET"] = 2539328;

var _prvTidyW3CAttrsFor_H1 = Module["_prvTidyW3CAttrsFor_H1"] = 2540400;

var _prvTidyW3CAttrsFor_H2 = Module["_prvTidyW3CAttrsFor_H2"] = 2541568;

var _prvTidyW3CAttrsFor_H3 = Module["_prvTidyW3CAttrsFor_H3"] = 2542736;

var _prvTidyW3CAttrsFor_H4 = Module["_prvTidyW3CAttrsFor_H4"] = 2543904;

var _prvTidyW3CAttrsFor_H5 = Module["_prvTidyW3CAttrsFor_H5"] = 2545072;

var _prvTidyW3CAttrsFor_H6 = Module["_prvTidyW3CAttrsFor_H6"] = 2546240;

var _prvTidyW3CAttrsFor_HEAD = Module["_prvTidyW3CAttrsFor_HEAD"] = 2547408;

var _prvTidyW3CAttrsFor_HEADER = Module["_prvTidyW3CAttrsFor_HEADER"] = 2548464;

var _prvTidyW3CAttrsFor_HGROUP = Module["_prvTidyW3CAttrsFor_HGROUP"] = 2549472;

var _prvTidyW3CAttrsFor_HR = Module["_prvTidyW3CAttrsFor_HR"] = 2550480;

var _prvTidyW3CAttrsFor_HTML = Module["_prvTidyW3CAttrsFor_HTML"] = 2551664;

var _prvTidyW3CAttrsFor_I = Module["_prvTidyW3CAttrsFor_I"] = 2552736;

var _prvTidyW3CAttrsFor_IFRAME = Module["_prvTidyW3CAttrsFor_IFRAME"] = 2553888;

var _prvTidyW3CAttrsFor_IMG = Module["_prvTidyW3CAttrsFor_IMG"] = 2555040;

var _prvTidyW3CAttrsFor_INPUT = Module["_prvTidyW3CAttrsFor_INPUT"] = 2556320;

var _prvTidyW3CAttrsFor_INS = Module["_prvTidyW3CAttrsFor_INS"] = 2557792;

var _prvTidyW3CAttrsFor_ISINDEX = Module["_prvTidyW3CAttrsFor_ISINDEX"] = 2558960;

var _prvTidyW3CAttrsFor_KBD = Module["_prvTidyW3CAttrsFor_KBD"] = 2560032;

var _prvTidyW3CAttrsFor_KEYGEN = Module["_prvTidyW3CAttrsFor_KEYGEN"] = 2561184;

var _prvTidyW3CAttrsFor_LABEL = Module["_prvTidyW3CAttrsFor_LABEL"] = 2562240;

var _prvTidyW3CAttrsFor_LEGEND = Module["_prvTidyW3CAttrsFor_LEGEND"] = 2563424;

var _prvTidyW3CAttrsFor_LI = Module["_prvTidyW3CAttrsFor_LI"] = 2564592;

var _prvTidyW3CAttrsFor_LINK = Module["_prvTidyW3CAttrsFor_LINK"] = 2565760;

var _prvTidyW3CAttrsFor_LISTING = Module["_prvTidyW3CAttrsFor_LISTING"] = 2567024;

var _prvTidyW3CAttrsFor_MAIN = Module["_prvTidyW3CAttrsFor_MAIN"] = 2568048;

var _prvTidyW3CAttrsFor_MAP = Module["_prvTidyW3CAttrsFor_MAP"] = 2569056;

var _prvTidyW3CAttrsFor_MATHML = Module["_prvTidyW3CAttrsFor_MATHML"] = 2570208;

var _prvTidyW3CAttrsFor_MARK = Module["_prvTidyW3CAttrsFor_MARK"] = 2571392;

var _prvTidyW3CAttrsFor_MENU = Module["_prvTidyW3CAttrsFor_MENU"] = 2572400;

var _prvTidyW3CAttrsFor_MENUITEM = Module["_prvTidyW3CAttrsFor_MENUITEM"] = 2573584;

var _prvTidyW3CAttrsFor_META = Module["_prvTidyW3CAttrsFor_META"] = 2574656;

var _prvTidyW3CAttrsFor_METER = Module["_prvTidyW3CAttrsFor_METER"] = 2575744;

var _prvTidyW3CAttrsFor_NAV = Module["_prvTidyW3CAttrsFor_NAV"] = 2576800;

var _prvTidyW3CAttrsFor_NEXTID = Module["_prvTidyW3CAttrsFor_NEXTID"] = 2577808;

var _prvTidyW3CAttrsFor_NOFRAMES = Module["_prvTidyW3CAttrsFor_NOFRAMES"] = 2578816;

var _prvTidyW3CAttrsFor_NOSCRIPT = Module["_prvTidyW3CAttrsFor_NOSCRIPT"] = 2579952;

var _prvTidyW3CAttrsFor_OBJECT = Module["_prvTidyW3CAttrsFor_OBJECT"] = 2581104;

var _prvTidyW3CAttrsFor_OL = Module["_prvTidyW3CAttrsFor_OL"] = 2582400;

var _prvTidyW3CAttrsFor_OPTGROUP = Module["_prvTidyW3CAttrsFor_OPTGROUP"] = 2583584;

var _prvTidyW3CAttrsFor_OPTION = Module["_prvTidyW3CAttrsFor_OPTION"] = 2584752;

var _prvTidyW3CAttrsFor_OUTPUT = Module["_prvTidyW3CAttrsFor_OUTPUT"] = 2585952;

var _prvTidyW3CAttrsFor_P = Module["_prvTidyW3CAttrsFor_P"] = 2586976;

var _prvTidyW3CAttrsFor_PARAM = Module["_prvTidyW3CAttrsFor_PARAM"] = 2588144;

var _prvTidyW3CAttrsFor_PICTURE = Module["_prvTidyW3CAttrsFor_PICTURE"] = 2589200;

var _prvTidyW3CAttrsFor_PLAINTEXT = Module["_prvTidyW3CAttrsFor_PLAINTEXT"] = 2590320;

var _prvTidyW3CAttrsFor_PRE = Module["_prvTidyW3CAttrsFor_PRE"] = 2591328;

var _prvTidyW3CAttrsFor_PROGRESS = Module["_prvTidyW3CAttrsFor_PROGRESS"] = 2592496;

var _prvTidyW3CAttrsFor_Q = Module["_prvTidyW3CAttrsFor_Q"] = 2593520;

var _prvTidyW3CAttrsFor_RB = Module["_prvTidyW3CAttrsFor_RB"] = 2594672;

var _prvTidyW3CAttrsFor_RBC = Module["_prvTidyW3CAttrsFor_RBC"] = 2595808;

var _prvTidyW3CAttrsFor_RP = Module["_prvTidyW3CAttrsFor_RP"] = 2596944;

var _prvTidyW3CAttrsFor_RT = Module["_prvTidyW3CAttrsFor_RT"] = 2598080;

var _prvTidyW3CAttrsFor_RTC = Module["_prvTidyW3CAttrsFor_RTC"] = 2599232;

var _prvTidyW3CAttrsFor_RUBY = Module["_prvTidyW3CAttrsFor_RUBY"] = 2600368;

var _prvTidyW3CAttrsFor_S = Module["_prvTidyW3CAttrsFor_S"] = 2601504;

var _prvTidyW3CAttrsFor_SAMP = Module["_prvTidyW3CAttrsFor_SAMP"] = 2602640;

var _prvTidyW3CAttrsFor_SCRIPT = Module["_prvTidyW3CAttrsFor_SCRIPT"] = 2603792;

var _prvTidyW3CAttrsFor_SECTION = Module["_prvTidyW3CAttrsFor_SECTION"] = 2604896;

var _prvTidyW3CAttrsFor_SELECT = Module["_prvTidyW3CAttrsFor_SELECT"] = 2605904;

var _prvTidyW3CAttrsFor_SMALL = Module["_prvTidyW3CAttrsFor_SMALL"] = 2607152;

var _prvTidyW3CAttrsFor_SOURCE = Module["_prvTidyW3CAttrsFor_SOURCE"] = 2608304;

var _prvTidyW3CAttrsFor_SPAN = Module["_prvTidyW3CAttrsFor_SPAN"] = 2609344;

var _prvTidyW3CAttrsFor_STRIKE = Module["_prvTidyW3CAttrsFor_STRIKE"] = 2610496;

var _prvTidyW3CAttrsFor_STRONG = Module["_prvTidyW3CAttrsFor_STRONG"] = 2611632;

var _prvTidyW3CAttrsFor_STYLE = Module["_prvTidyW3CAttrsFor_STYLE"] = 2612784;

var _prvTidyW3CAttrsFor_SUB = Module["_prvTidyW3CAttrsFor_SUB"] = 2613872;

var _prvTidyW3CAttrsFor_SUMMARY = Module["_prvTidyW3CAttrsFor_SUMMARY"] = 2615024;

var _prvTidyW3CAttrsFor_SUP = Module["_prvTidyW3CAttrsFor_SUP"] = 2616032;

var _prvTidyW3CAttrsFor_SVG = Module["_prvTidyW3CAttrsFor_SVG"] = 2617184;

var _prvTidyW3CAttrsFor_TABLE = Module["_prvTidyW3CAttrsFor_TABLE"] = 2618432;

var _prvTidyW3CAttrsFor_TBODY = Module["_prvTidyW3CAttrsFor_TBODY"] = 2619664;

var _prvTidyW3CAttrsFor_TD = Module["_prvTidyW3CAttrsFor_TD"] = 2620848;

var _prvTidyW3CAttrsFor_TEXTAREA = Module["_prvTidyW3CAttrsFor_TEXTAREA"] = 2622112;

var _prvTidyW3CAttrsFor_TFOOT = Module["_prvTidyW3CAttrsFor_TFOOT"] = 2623408;

var _prvTidyW3CAttrsFor_TH = Module["_prvTidyW3CAttrsFor_TH"] = 2624592;

var _prvTidyW3CAttrsFor_THEAD = Module["_prvTidyW3CAttrsFor_THEAD"] = 2625856;

var _prvTidyW3CAttrsFor_TEMPLATE = Module["_prvTidyW3CAttrsFor_TEMPLATE"] = 2627040;

var _prvTidyW3CAttrsFor_TIME = Module["_prvTidyW3CAttrsFor_TIME"] = 2628048;

var _prvTidyW3CAttrsFor_TITLE = Module["_prvTidyW3CAttrsFor_TITLE"] = 2629072;

var _prvTidyW3CAttrsFor_TR = Module["_prvTidyW3CAttrsFor_TR"] = 2630128;

var _prvTidyW3CAttrsFor_TRACK = Module["_prvTidyW3CAttrsFor_TRACK"] = 2631312;

var _prvTidyW3CAttrsFor_TT = Module["_prvTidyW3CAttrsFor_TT"] = 2632352;

var _prvTidyW3CAttrsFor_U = Module["_prvTidyW3CAttrsFor_U"] = 2633504;

var _prvTidyW3CAttrsFor_UL = Module["_prvTidyW3CAttrsFor_UL"] = 2634640;

var _prvTidyW3CAttrsFor_VAR = Module["_prvTidyW3CAttrsFor_VAR"] = 2635808;

var _prvTidyW3CAttrsFor_VIDEO = Module["_prvTidyW3CAttrsFor_VIDEO"] = 2636960;

var _prvTidyW3CAttrsFor_WBR = Module["_prvTidyW3CAttrsFor_WBR"] = 2638048;

var _prvTidyW3CAttrsFor_XMP = Module["_prvTidyW3CAttrsFor_XMP"] = 2639056;

var _xmlRealloc = Module["_xmlRealloc"] = 3932428;

var _xmlMemStrdup = Module["_xmlMemStrdup"] = 3932432;

var _xmlStructuredErrorContext = Module["_xmlStructuredErrorContext"] = 4074676;

var _xmlGetWarningsDefaultValue = Module["_xmlGetWarningsDefaultValue"] = 3932448;

var _xmlLastError = Module["_xmlLastError"] = 4074740;

var _xmlIsBaseCharGroup = Module["_xmlIsBaseCharGroup"] = 3934704;

var _xmlParserDebugEntities = Module["_xmlParserDebugEntities"] = 4074628;

var _xmlPedanticParserDefaultValue = Module["_xmlPedanticParserDefaultValue"] = 4074640;

var _xmlLineNumbersDefaultValue = Module["_xmlLineNumbersDefaultValue"] = 4074644;

var _xmlKeepBlanksDefaultValue = Module["_xmlKeepBlanksDefaultValue"] = 3932452;

var _xmlSubstituteEntitiesDefaultValue = Module["_xmlSubstituteEntitiesDefaultValue"] = 4074648;

var _xmlDefaultSAXHandler = Module["_xmlDefaultSAXHandler"] = 3932468;

var _xmlIndentTreeOutput = Module["_xmlIndentTreeOutput"] = 3932460;

var _xmlParserMaxDepth = Module["_xmlParserMaxDepth"] = 3917440;

var _xmlMallocAtomic = Module["_xmlMallocAtomic"] = 3932424;

var _xmlIsDigitGroup = Module["_xmlIsDigitGroup"] = 3934752;

var _xmlIsCombiningGroup = Module["_xmlIsCombiningGroup"] = 3934736;

var _xmlIsExtenderGroup = Module["_xmlIsExtenderGroup"] = 3934768;

var _xmlIsPubidChar_tab = Module["_xmlIsPubidChar_tab"] = 3475840;

var _xmlDefaultSAXLocator = Module["_xmlDefaultSAXLocator"] = 3932580;

var _xmlBufferAllocScheme = Module["_xmlBufferAllocScheme"] = 3932440;

var _xmlRegisterNodeDefaultValue = Module["_xmlRegisterNodeDefaultValue"] = 4074652;

var ___xmlRegisterCallbacks = Module["___xmlRegisterCallbacks"] = 4071572;

var _xmlDeregisterNodeDefaultValue = Module["_xmlDeregisterNodeDefaultValue"] = 4074656;

var _xmlStringText = Module["_xmlStringText"] = 3463884;

var _xmlStringComment = Module["_xmlStringComment"] = 3463899;

var _xmlStringTextNoenc = Module["_xmlStringTextNoenc"] = 3463889;

var _xmlDefaultBufferSize = Module["_xmlDefaultBufferSize"] = 3932444;

var _xmlParserInputBufferCreateFilenameValue = Module["_xmlParserInputBufferCreateFilenameValue"] = 4074660;

var _xmlOutputBufferCreateFilenameValue = Module["_xmlOutputBufferCreateFilenameValue"] = 4074664;

var _htmlDefaultSAXHandler = Module["_htmlDefaultSAXHandler"] = 3932596;

var _xmlXPathPINF = Module["_xmlXPathPINF"] = 4072552;

var _xmlXPathNAN = Module["_xmlXPathNAN"] = 4072544;

var _xmlXPathNINF = Module["_xmlXPathNINF"] = 4072560;

var _docbDefaultSAXHandler = Module["_docbDefaultSAXHandler"] = 3932708;

var _oldXMLWDcompatibility = Module["_oldXMLWDcompatibility"] = 4074624;

var _xmlTreeIndentString = Module["_xmlTreeIndentString"] = 3932464;

var _xmlIsCharGroup = Module["_xmlIsCharGroup"] = 3934720;

var _xmlIsIdeographicGroup = Module["_xmlIsIdeographicGroup"] = 3934784;

var _sqlite3one = Module["_sqlite3one"] = 3477436;

var _sqlite3_version = Module["_sqlite3_version"] = 3477428;

var _sqlite3_data_directory = Module["_sqlite3_data_directory"] = 4075340;

var _sqlite3_temp_directory = Module["_sqlite3_temp_directory"] = 4075336;

var _z_errmsg = Module["_z_errmsg"] = 3517504;

var __length_code = Module["__length_code"] = 3515280;

var __dist_code = Module["__dist_code"] = 3514768;

var _deflate_copyright = Module["_deflate_copyright"] = 3512032;

var _inflate_copyright = Module["_inflate_copyright"] = 3514464;

var ___environ = Module["___environ"] = 4076044;

var ____environ = Module["____environ"] = 4076044;

var __environ = Module["__environ"] = 4076044;

var _timezone = Module["_timezone"] = 4076332;

var _daylight = Module["_daylight"] = 4076336;

var _tzname = Module["_tzname"] = 4076340;

var ___sig_pending = Module["___sig_pending"] = 4077488;

var ___sig_actions = Module["___sig_actions"] = 4077840;

var ___start_em_js = Module["___start_em_js"] = 3962730;

var ___stop_em_js = Module["___stop_em_js"] = 3963372;

function invoke_iiii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return dynCall_iiii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_vi(index, a1) {
 var sp = stackSave();
 try {
  dynCall_vi(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_v(index) {
 var sp = stackSave();
 try {
  dynCall_v(index);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_i(index) {
 var sp = stackSave();
 try {
  return dynCall_i(index);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iii(index, a1, a2) {
 var sp = stackSave();
 try {
  return dynCall_iii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  dynCall_viii(index, a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_vii(index, a1, a2) {
 var sp = stackSave();
 try {
  dynCall_vii(index, a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  dynCall_viiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_ii(index, a1) {
 var sp = stackSave();
 try {
  return dynCall_ii(index, a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  return dynCall_iiiii(index, a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 var sp = stackSave();
 try {
  dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 var sp = stackSave();
 try {
  dynCall_viiiii(index, a1, a2, a3, a4, a5);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viidii(index, a1, a2, a3, a4, a5) {
 var sp = stackSave();
 try {
  dynCall_viidii(index, a1, a2, a3, a4, a5);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 var sp = stackSave();
 try {
  return dynCall_iiiiii(index, a1, a2, a3, a4, a5);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 var sp = stackSave();
 try {
  return dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function applySignatureConversions(exports) {
 exports = Object.assign({}, exports);
 var makeWrapper_p = f => () => f() >>> 0;
 var makeWrapper_pp = f => a0 => f(a0) >>> 0;
 var makeWrapper_ppp = f => (a0, a1) => f(a0, a1) >>> 0;
 var makeWrapper_pP = f => a0 => f(a0) >>> 0;
 exports["__errno_location"] = makeWrapper_p(exports["__errno_location"]);
 exports["malloc"] = makeWrapper_pp(exports["malloc"]);
 exports["emscripten_builtin_malloc"] = makeWrapper_pp(exports["emscripten_builtin_malloc"]);
 exports["emscripten_builtin_memalign"] = makeWrapper_ppp(exports["emscripten_builtin_memalign"]);
 exports["sbrk"] = makeWrapper_pP(exports["sbrk"]);
 exports["emscripten_stack_get_base"] = makeWrapper_p(exports["emscripten_stack_get_base"]);
 exports["emscripten_stack_get_end"] = makeWrapper_p(exports["emscripten_stack_get_end"]);
 exports["stackSave"] = makeWrapper_p(exports["stackSave"]);
 exports["stackAlloc"] = makeWrapper_pp(exports["stackAlloc"]);
 exports["emscripten_stack_get_current"] = makeWrapper_p(exports["emscripten_stack_get_current"]);
 return exports;
}

function intArrayFromBase64(s) {
 try {
  var decoded = atob(s);
  var bytes = new Uint8Array(decoded.length);
  for (var i = 0; i < decoded.length; ++i) {
   bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
 } catch (_) {
  throw new Error("Converting base64 string to bytes failed.");
 }
}

function tryParseAsDataURI(filename) {
 if (!isDataURI(filename)) {
  return;
 }
 return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}

Module["addRunDependency"] = addRunDependency;

Module["removeRunDependency"] = removeRunDependency;

Module["FS_createPath"] = FS.createPath;

Module["FS_createDataFile"] = FS.createDataFile;

Module["FS_createLazyFile"] = FS.createLazyFile;

Module["FS_createDevice"] = FS.createDevice;

Module["FS_unlink"] = FS.unlink;

Module["ccall"] = ccall;

Module["getValue"] = getValue;

Module["UTF8ToString"] = UTF8ToString;

Module["lengthBytesUTF8"] = lengthBytesUTF8;

Module["FS_createPreloadedFile"] = FS.createPreloadedFile;

Module["FS"] = FS;

var missingLibrarySymbols = [ "writeI53ToI64", "writeI53ToI64Clamped", "writeI53ToI64Signaling", "writeI53ToU64Clamped", "writeI53ToU64Signaling", "readI53FromU64", "convertI32PairToI53", "convertU32PairToI53", "traverseStack", "getCallstack", "emscriptenLog", "convertPCtoSourceLocation", "runMainThreadEmAsm", "jstoi_s", "listenOnce", "autoResumeAudioContext", "dynCallLegacy", "getDynCaller", "dynCall", "safeSetTimeout", "asmjsMangle", "handleAllocatorInit", "HandleAllocator", "getNativeTypeSize", "STACK_SIZE", "STACK_ALIGN", "POINTER_SIZE", "ASSERTIONS", "cwrap", "uleb128Encode", "generateFuncType", "convertJsFunctionToWasm", "getEmptyTableSlot", "updateTableMap", "getFunctionAddress", "addFunction", "removeFunction", "reallyNegative", "unSign", "strLen", "reSign", "formatString", "intArrayToString", "AsciiToString", "UTF16ToString", "stringToUTF16", "lengthBytesUTF16", "UTF32ToString", "stringToUTF32", "lengthBytesUTF32", "registerKeyEventCallback", "maybeCStringToJsString", "findEventTarget", "findCanvasEventTarget", "getBoundingClientRect", "fillMouseEventData", "registerMouseEventCallback", "registerWheelEventCallback", "registerUiEventCallback", "registerFocusEventCallback", "fillDeviceOrientationEventData", "registerDeviceOrientationEventCallback", "fillDeviceMotionEventData", "registerDeviceMotionEventCallback", "screenOrientation", "fillOrientationChangeEventData", "registerOrientationChangeEventCallback", "fillFullscreenChangeEventData", "registerFullscreenChangeEventCallback", "JSEvents_requestFullscreen", "JSEvents_resizeCanvasForFullscreen", "registerRestoreOldStyle", "hideEverythingExceptGivenElement", "restoreHiddenElements", "setLetterbox", "softFullscreenResizeWebGLRenderTarget", "doRequestFullscreen", "fillPointerlockChangeEventData", "registerPointerlockChangeEventCallback", "registerPointerlockErrorEventCallback", "requestPointerLock", "fillVisibilityChangeEventData", "registerVisibilityChangeEventCallback", "registerTouchEventCallback", "fillGamepadEventData", "registerGamepadEventCallback", "registerBeforeUnloadEventCallback", "fillBatteryEventData", "battery", "registerBatteryEventCallback", "setCanvasElementSize", "getCanvasElementSize", "jsStackTrace", "stackTrace", "checkWasiClock", "wasiRightsToMuslOFlags", "wasiOFlagsToMuslOFlags", "createDyncallWrapper", "setImmediateWrapped", "clearImmediateWrapped", "polyfillSetImmediate", "getPromise", "makePromise", "idsToPromises", "makePromiseCallback", "ExceptionInfo", "setMainLoop", "_setNetworkCallback", "heapObjectForWebGLType", "heapAccessShiftForWebGLHeap", "webgl_enable_ANGLE_instanced_arrays", "webgl_enable_OES_vertex_array_object", "webgl_enable_WEBGL_draw_buffers", "webgl_enable_WEBGL_multi_draw", "emscriptenWebGLGet", "computeUnpackAlignedImageSize", "colorChannelsInGlTextureFormat", "emscriptenWebGLGetTexPixelData", "__glGenObject", "emscriptenWebGLGetUniform", "webglGetUniformLocation", "webglPrepareUniformLocationsBeforeFirstUse", "webglGetLeftBracePos", "emscriptenWebGLGetVertexAttrib", "__glGetActiveAttribOrUniform", "writeGLArray", "registerWebGlEventCallback", "SDL_unicode", "SDL_ttfContext", "SDL_audio", "GLFW_Window", "ALLOC_NORMAL", "ALLOC_STACK", "allocate", "writeStringToMemory", "writeAsciiToMemory" ];

missingLibrarySymbols.forEach(missingLibrarySymbol);

var unexportedSymbols = [ "run", "addOnPreRun", "addOnInit", "addOnPreMain", "addOnExit", "addOnPostRun", "FS_createFolder", "FS_createLink", "out", "err", "callMain", "abort", "keepRuntimeAlive", "wasmMemory", "stackAlloc", "stackSave", "stackRestore", "getTempRet0", "setTempRet0", "writeStackCookie", "checkStackCookie", "readI53FromI64", "convertI32PairToI53Checked", "ptrToString", "zeroMemory", "exitJS", "getHeapMax", "growMemory", "ENV", "MONTH_DAYS_REGULAR", "MONTH_DAYS_LEAP", "MONTH_DAYS_REGULAR_CUMULATIVE", "MONTH_DAYS_LEAP_CUMULATIVE", "isLeapYear", "ydayFromDate", "arraySum", "addDays", "ERRNO_CODES", "ERRNO_MESSAGES", "setErrNo", "inetPton4", "inetNtop4", "inetPton6", "inetNtop6", "readSockaddr", "writeSockaddr", "DNS", "getHostByName", "Protocols", "Sockets", "initRandomFill", "randomFill", "timers", "warnOnce", "UNWIND_CACHE", "readEmAsmArgsArray", "readEmAsmArgs", "runEmAsmFunction", "jstoi_q", "getExecutableName", "handleException", "runtimeKeepalivePush", "runtimeKeepalivePop", "callUserCallback", "maybeExit", "asyncLoad", "alignMemory", "mmapAlloc", "getCFunc", "sigToWasmTypes", "freeTableIndexes", "functionsInTableMap", "setValue", "PATH", "PATH_FS", "UTF8Decoder", "UTF8ArrayToString", "stringToUTF8Array", "stringToUTF8", "intArrayFromString", "stringToAscii", "UTF16Decoder", "stringToNewUTF8", "stringToUTF8OnStack", "writeArrayToMemory", "JSEvents", "specialHTMLTargets", "currentFullscreenStrategy", "restoreOldWindowedStyle", "demangle", "demangleAll", "ExitStatus", "getEnvStrings", "doReadv", "doWritev", "promiseMap", "uncaughtExceptionCount", "exceptionLast", "exceptionCaught", "Browser", "wget", "SYSCALLS", "getSocketFromFD", "getSocketAddress", "preloadPlugins", "FS_modeStringToFlags", "FS_getMode", "FS_stdin_getChar_buffer", "FS_stdin_getChar", "MEMFS", "TTY", "PIPEFS", "SOCKFS", "tempFixedLengthArray", "miniTempWebGLFloatBuffers", "miniTempWebGLIntBuffers", "GL", "emscripten_webgl_power_preferences", "AL", "GLUT", "EGL", "GLEW", "IDBStore", "runAndAbortIfError", "Asyncify", "Fibers", "SDL", "SDL_gfx", "GLFW", "allocateUTF8", "allocateUTF8OnStack", "IDBFS" ];

unexportedSymbols.forEach(unexportedRuntimeSymbol);

var calledRun;

dependenciesFulfilled = function runCaller() {
 if (!calledRun) run();
 if (!calledRun) dependenciesFulfilled = runCaller;
};

function callMain() {
 assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module["onRuntimeInitialized"])');
 assert(__ATPRERUN__.length == 0, "cannot call main when preRun functions remain to be called");
 var entryFunction = _main;
 var argc = 0;
 var argv = 0;
 try {
  var ret = entryFunction(argc, argv);
  exitJS(ret, true);
  return ret;
 } catch (e) {
  return handleException(e);
 }
}

function stackCheckInit() {
 _emscripten_stack_init();
 writeStackCookie();
}

function run() {
 if (runDependencies > 0) {
  return;
 }
 stackCheckInit();
 preRun();
 if (runDependencies > 0) {
  return;
 }
 function doRun() {
  if (calledRun) return;
  calledRun = true;
  Module["calledRun"] = true;
  if (ABORT) return;
  initRuntime();
  preMain();
  readyPromiseResolve(Module);
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  if (shouldRunNow) callMain();
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
 checkStackCookie();
}

if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}

var shouldRunNow = false;

if (Module["noInitialRun"]) shouldRunNow = false;

run();


  return moduleArg.ready
}

);
})();
export default PHP;